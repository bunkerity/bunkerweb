# ------------------------------------------------------------------------
# OWASP CRS ver.4.19.0
# Copyright (c) 2006-2020 Trustwave and contributors. All rights reserved.
# Copyright (c) 2021-2025 CRS project. All rights reserved.
#
# The OWASP CRS is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

# We reused paranoia level skip rules 950010, 950011, and 950018.
# These rule identifiers were in use in CRSv2, so we used different
# identifiers in CRSv3 to avoid conflicts (950020, 950021 and 950022).
# In CRSv4, for the sake of a consistent structure, we use these
# identifiers again, so that the skip rules of PL can be defined in the
# same way for all files.
# Rule id 950130 has been kept - this ID also was introduced at first
# rule to avoid the collision.

#
# -= Paranoia Level 0 (empty) =- (apply unconditionally)
#

# Skip all rules if TX:crs_skip_response_analysis is set.
SecRule TX:crs_skip_response_analysis "@eq 1" \
    "id:950021,\
    phase:3,\
    pass,\
    nolog,\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/DATA-LEAKAGES',\
    ver:'OWASP_CRS/4.19.0',\
    skipAfter:END-RESPONSE-959-BLOCKING-EVALUATION"

# Skip all rules if RESPONSE_BODY is compressed.
SecRule RESPONSE_HEADERS:Content-Encoding "@pm gzip compress deflate br zstd" \
    "id:950010,\
    phase:4,\
    pass,\
    nolog,\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/DATA-LEAKAGES',\
    ver:'OWASP_CRS/4.19.0',\
    skipAfter:END-RESPONSE-950-DATA-LEAKAGES"

SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:950011,phase:3,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:950012,phase:4,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
#
# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)
#

#
# -=[ Directory Listing ]=-
#
SecRule RESPONSE_BODY "@rx (?:<(?:TITLE>Index of.*?<H|title>Index of.*?<h)1>Index of|>\[To Parent Directory\]</[Aa]><br>)" \
    "id:950130,\
    phase:4,\
    block,\
    capture,\
    t:none,\
    msg:'Directory Listing',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-disclosure',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/DATA-LEAKAGES',\
    tag:'capec/1000/118/116/54/127',\
    ver:'OWASP_CRS/4.19.0',\
    severity:'ERROR',\
    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}',setvar:'tx.bunkerweb_rules=%{tx.bunkerweb_rules} %{rule.id}',setvar:'tx.bunkerweb_msgs=%{tx.bunkerweb_msgs}|%{unique_id}|%{rule.msg}',setvar:'tx.bunkerweb_matched_vars=%{tx.bunkerweb_matched_vars}|%{unique_id}|%{matched_var}',setvar:'tx.bunkerweb_matched_var_names=%{tx.bunkerweb_matched_var_names}|%{unique_id}|%{matched_var_name}',setvar:'tx.bunkerweb_anomaly_score=+%{tx.error_anomaly_score}'"

#
# -=[ CGI Source Code Leakage ]=-
#
# A CGI script begins normally with #! and the interpreter,
# for example:
#
# #!/usr/bin/perl
# #!/usr/bin/python
# #!/usr/bin/ruby
#
# If the CGI script processors or MIME type handlers are misconfigured,
# the script's source code could be erroneously returned to the client.
SecRule RESPONSE_BODY "@rx ^#\!\s?/" \
    "id:950140,\
    phase:4,\
    block,\
    capture,\
    t:none,\
    msg:'CGI source code leakage',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-disclosure',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/DATA-LEAKAGES',\
    tag:'capec/1000/118/116',\
    ver:'OWASP_CRS/4.19.0',\
    severity:'ERROR',\
    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}',setvar:'tx.bunkerweb_rules=%{tx.bunkerweb_rules} %{rule.id}',setvar:'tx.bunkerweb_msgs=%{tx.bunkerweb_msgs}|%{unique_id}|%{rule.msg}',setvar:'tx.bunkerweb_matched_vars=%{tx.bunkerweb_matched_vars}|%{unique_id}|%{matched_var}',setvar:'tx.bunkerweb_matched_var_names=%{tx.bunkerweb_matched_var_names}|%{unique_id}|%{matched_var_name}',setvar:'tx.bunkerweb_anomaly_score=+%{tx.error_anomaly_score}'"

#
# -=[ ASP.NET Errors ]=-
#
SecRule RESPONSE_BODY "@pmFromFile asp-dotnet-errors.data" \
    "id:950150,\
    phase:4,\
    block,\
    capture,\
    t:none,\
    msg:'ASP.NET exception leakage',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-aspnet',\
    tag:'platform-multi',\
    tag:'attack-disclosure',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/DATA-LEAKAGES',\
    tag:'capec/1000/118/116/54/127',\
    ver:'OWASP_CRS/4.19.0',\
    severity:'ERROR',\
    setvar:'tx.outbound_anomaly_score_pl1=+%{tx.error_anomaly_score}',setvar:'tx.bunkerweb_rules=%{tx.bunkerweb_rules} %{rule.id}',setvar:'tx.bunkerweb_msgs=%{tx.bunkerweb_msgs}|%{unique_id}|%{rule.msg}',setvar:'tx.bunkerweb_matched_vars=%{tx.bunkerweb_matched_vars}|%{unique_id}|%{matched_var}',setvar:'tx.bunkerweb_matched_var_names=%{tx.bunkerweb_matched_var_names}|%{unique_id}|%{matched_var_name}',setvar:'tx.bunkerweb_anomaly_score=+%{tx.error_anomaly_score}'"


SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:950013,phase:3,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:950014,phase:4,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
#
# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)
#

#
# -=[ The application is not available - 5xx level status code ]=-
#
SecRule RESPONSE_STATUS "@rx ^5\d{2}$" \
    "id:950100,\
    phase:3,\
    block,\
    capture,\
    t:none,\
    msg:'The Application Returned a 500-Level Status Code',\
    logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-disclosure',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/DATA-LEAKAGES',\
    tag:'capec/1000/152',\
    ver:'OWASP_CRS/4.19.0',\
    severity:'ERROR',\
    setvar:'tx.outbound_anomaly_score_pl2=+%{tx.error_anomaly_score}',setvar:'tx.bunkerweb_rules=%{tx.bunkerweb_rules} %{rule.id}',setvar:'tx.bunkerweb_msgs=%{tx.bunkerweb_msgs}|%{unique_id}|%{rule.msg}',setvar:'tx.bunkerweb_matched_vars=%{tx.bunkerweb_matched_vars}|%{unique_id}|%{matched_var}',setvar:'tx.bunkerweb_matched_var_names=%{tx.bunkerweb_matched_var_names}|%{unique_id}|%{matched_var_name}',setvar:'tx.bunkerweb_anomaly_score=+%{tx.error_anomaly_score}'"



SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:950015,phase:3,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:950016,phase:4,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
#
# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)
#



SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 4" "id:950017,phase:3,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 4" "id:950018,phase:4,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.19.0',skipAfter:END-RESPONSE-950-DATA-LEAKAGES"
#
# -= Paranoia Level 4 =- (apply only when tx.detection_paranoia_level is sufficiently high: 4 or higher)
#



#
# -= Paranoia Levels Finished =-
#
SecMarker "END-RESPONSE-950-DATA-LEAKAGES"
