# /etc/nginx/nginx.conf

# load dynamic modules
{% set os = import("os") %}
{% if os.path.isfile("/usr/lib64/nginx/modules/ngx_stream_module.so") +%}
load_module /usr/lib64/nginx/modules/ngx_stream_module.so;
{% endif %}
load_module /usr/share/bunkerweb/modules/ndk_http_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_cookie_flag_filter_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_lua_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_modsecurity_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_brotli_filter_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_brotli_static_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_zstd_filter_module.so;
load_module /usr/share/bunkerweb/modules/ngx_http_zstd_static_module.so;
load_module /usr/share/bunkerweb/modules/ngx_stream_lua_module.so;

# PID file
pid /var/run/bunkerweb/nginx.pid;

# worker number (default = auto)
worker_processes {{ WORKER_PROCESSES }};

# faster regexp
pcre_jit on;

# max open files for each worker
worker_rlimit_nofile {{ WORKER_RLIMIT_NOFILE }};

# error log level
error_log /var/log/bunkerweb/error.log {{ LOG_LEVEL }};

# reason env var
env REASON;

events {
	# max connections per worker
	worker_connections {{ WORKER_CONNECTIONS }};

	# epoll seems to be the best on Linux
	use epoll;
}

http {
	# include base http configuration
	include /etc/nginx/http.conf;

	# include core and plugins http configurations
	include /etc/nginx/http/*.conf;

	# include custom http configurations
	include /etc/bunkerweb/configs/http/*.conf;
}

stream {
	# include base stream configuration
	include /etc/nginx/stream.conf;

	# include core and plugins stream configurations
	include /etc/nginx/stream/*.conf;

	# include custom stream configurations
	include /etc/bunkerweb/configs/stream/*.conf;
}
