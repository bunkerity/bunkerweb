name: Push packagecloud (REUSABLE)

on:
  workflow_call:
    inputs:
      SEPARATOR:
        required: true
        type: string
      SUFFIX:
        required: true
        type: string
      REPO:
        required: true
        type: string
      LINUX:
        required: true
        type: string
      VERSION:
        required: true
        type: string
      PACKAGE:
        required: true
        type: string
      BW_VERSION:
        required: true
        type: string
      ARCH:
        required: true
        type: string
      PACKAGE_ARCH:
        required: true
        type: string
    secrets:
      PACKAGECLOUD_TOKEN:
        required: true

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      # Prepare
      - name: Check out repository code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install ruby
        uses: ruby/setup-ruby@0481980f17b760ef6bca5e8c55809102a0af1e5a # v1.263.0
        with:
          ruby-version: "3.0"
      - name: Install packagecloud
        run: gem install package_cloud
      # Compute dynamic variables to remove per-distro duplication
      - name: Compute distribution & artifact names
        id: compute
        shell: bash
        run: |
          LINUX="${{ inputs.LINUX }}"
          VERSION="${{ inputs.VERSION }}"
          if [[ "$LINUX" =~ ^el-([0-9]+)$ ]]; then
            DIST="el/${BASH_REMATCH[1]}"
            ARTIFACT_NAME="package-rh${LINUX}-${{ inputs.PACKAGE_ARCH }}"
          elif [[ "$LINUX" == ubuntu-* ]]; then
            # Expect format ubuntu-<codename>
            CODENAME=${LINUX#ubuntu-}
            DIST="ubuntu/${CODENAME}"
            ARTIFACT_NAME="package-${LINUX}-${{ inputs.PACKAGE_ARCH }}"
          elif [[ "$LINUX" == fedora-* ]]; then
            FEDVER=${LINUX#fedora-}
            DIST="fedora/${FEDVER}"
            ARTIFACT_NAME="package-${LINUX}-${{ inputs.PACKAGE_ARCH }}"
          elif [[ "$LINUX" == debian-* ]]; then
            # Expect format debian-<codename>
            CODENAME=${LINUX#debian-}
            DIST="debian/${CODENAME}"
            ARTIFACT_NAME="package-${LINUX}-${{ inputs.PACKAGE_ARCH }}"
          else
            DIST="${LINUX}/${VERSION}"
            ARTIFACT_NAME="package-${LINUX}-${{ inputs.PACKAGE_ARCH }}"
          fi
          echo "DIST=$DIST" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
          echo "dist=$DIST" >> $GITHUB_OUTPUT
          echo "artifact=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
      # Download packages (single generic step)
      - name: Download package artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp/${{ inputs.LINUX }}
      # Yank existing package (generic)
      - name: Yank existing package
        run: package_cloud yank bunkerity/${{ inputs.REPO }}/${{ env.DIST }} bunkerweb${{ inputs.SEPARATOR }}${{ inputs.BW_VERSION }}${{ inputs.SEPARATOR }}${{ inputs.SUFFIX }}${{ inputs.PACKAGE_ARCH }}.${{ inputs.PACKAGE }}
        continue-on-error: true
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
      # Update name
      - name: Rename package
        if: inputs.BW_VERSION == '1.5'
        run: sudo apt update && sudo apt install -y rename && rename 's/dev/1.5-dev/' /tmp/${{ inputs.LINUX }}/*.${{ inputs.PACKAGE }}
      # Push package (single generic step)
      - name: Push package to packagecloud
        uses: danielmundi/upload-packagecloud@46cd0e61152bf952dbc0d1759e609d3d22649030 # v1
        with:
          PACKAGE-NAME: /tmp/${{ inputs.LINUX }}/*.${{ inputs.PACKAGE }}
          PACKAGECLOUD-USERNAME: bunkerity
          PACKAGECLOUD-REPO: ${{ inputs.REPO }}
          PACKAGECLOUD-DISTRIB: ${{ env.DIST }}
          PACKAGECLOUD-TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
