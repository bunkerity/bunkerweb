name: Automatic tests (STAGING)

permissions: read-all

on:
  push:
    branches: [staging]

jobs:
  # Build Docker images
  build-containers:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [bunkerweb, scheduler, autoconf, ui, api, all-in-one]
        include:
          - image: bunkerweb
            dockerfile: src/bw/Dockerfile
          - image: scheduler
            dockerfile: src/scheduler/Dockerfile
          - image: autoconf
            dockerfile: src/autoconf/Dockerfile
          - image: ui
            dockerfile: src/ui/Dockerfile
          - image: api
            dockerfile: src/api/Dockerfile
          - image: all-in-one
            dockerfile: src/all-in-one/Dockerfile
    uses: ./.github/workflows/container-build.yml
    with:
      RELEASE: testing
      ARCH: linux/amd64
      CACHE: true
      PUSH: true
      IMAGE: ${{ matrix.image }}
      DOCKERFILE: ${{ matrix.dockerfile }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  # Build Linux packages
  build-packages:
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        linux:
          [
            ubuntu,
            debian-bookworm,
            debian-trixie,
            fedora-41,
            fedora-42,
            rhel-8,
            rhel-9,
            rhel-10,
            ubuntu-jammy,
          ]
        include:
          - linux: ubuntu
            package: deb
          - linux: debian-bookworm
            package: deb
          - linux: debian-trixie
            package: deb
          - linux: fedora-41
            package: rpm
          - linux: fedora-42
            package: rpm
          - linux: rhel-8
            package: rpm
          - linux: rhel-9
            package: rpm
          - linux: rhel-10
            package: rpm
          - linux: ubuntu-jammy
            package: deb
    uses: ./.github/workflows/linux-build.yml
    with:
      RELEASE: testing
      LINUX: ${{ matrix.linux }}
      PACKAGE: ${{ matrix.package }}
      TEST: true
      PLATFORMS: linux/amd64
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  codeql:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      contents: read
      security-events: write

  # Create infrastructures and prepare tests
  create-infras:
    needs: [codeql, build-containers, build-packages]
    strategy:
      matrix:
        type: [docker, autoconf, k8s, linux]
    uses: ./.github/workflows/staging-create-infra.yml
    with:
      TYPE: ${{ matrix.type }}
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

  staging-tests:
    needs: [create-infras]
    strategy:
      matrix:
        type: [docker, autoconf, k8s, linux]
        include:
          - type: docker
            runs_on: "['self-hosted', 'bw-docker']"
          - type: autoconf
            runs_on: "['self-hosted', 'bw-autoconf']"
          - type: k8s
            runs_on: "['ubuntu-latest']"
          - type: linux
            runs_on: "['self-hosted', 'bw-linux']"
    uses: ./.github/workflows/staging-tests.yml
    with:
      TYPE: ${{ matrix.type }}
      RUNS_ON: ${{ matrix.runs_on }}
    secrets: inherit

  # Delete infrastructures
  delete-infras:
    if: ${{ always() }}
    needs: [staging-tests]
    strategy:
      matrix:
        type: [docker, autoconf, k8s, linux]
    uses: ./.github/workflows/staging-delete-infra.yml
    with:
      TYPE: ${{ matrix.type }}
    secrets:
      CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

  # Push Docker images
  push-images:
    needs: [staging-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Login to ghcr
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push BW image
        run: docker pull ghcr.io/bunkerity/bunkerweb-tests:testing && docker tag ghcr.io/bunkerity/bunkerweb-tests:testing bunkerity/bunkerweb:testing && docker push bunkerity/bunkerweb:testing && docker tag bunkerity/bunkerweb:testing ghcr.io/bunkerity/bunkerweb:testing && docker push ghcr.io/bunkerity/bunkerweb:testing
      - name: Push scheduler image
        run: docker pull ghcr.io/bunkerity/scheduler-tests:testing && docker tag ghcr.io/bunkerity/scheduler-tests:testing bunkerity/bunkerweb-scheduler:testing && docker push bunkerity/bunkerweb-scheduler:testing && docker tag bunkerity/bunkerweb-scheduler:testing ghcr.io/bunkerity/bunkerweb-scheduler:testing && docker push ghcr.io/bunkerity/bunkerweb-scheduler:testing
      - name: Push autoconf image
        run: docker pull ghcr.io/bunkerity/autoconf-tests:testing && docker tag ghcr.io/bunkerity/autoconf-tests:testing bunkerity/bunkerweb-autoconf:testing && docker push bunkerity/bunkerweb-autoconf:testing && docker tag bunkerity/bunkerweb-autoconf:testing ghcr.io/bunkerity/bunkerweb-autoconf:testing && docker push ghcr.io/bunkerity/bunkerweb-autoconf:testing
      - name: Push UI image
        run: docker pull ghcr.io/bunkerity/ui-tests:testing && docker tag ghcr.io/bunkerity/ui-tests:testing bunkerity/bunkerweb-ui:testing && docker push bunkerity/bunkerweb-ui:testing && docker tag bunkerity/bunkerweb-ui:testing ghcr.io/bunkerity/bunkerweb-ui:testing && docker push ghcr.io/bunkerity/bunkerweb-ui:testing
      - name: Push API image
        run: docker pull ghcr.io/bunkerity/api-tests:testing && docker tag ghcr.io/bunkerity/api-tests:testing bunkerity/bunkerweb-api:testing && docker push bunkerity/bunkerweb-api:testing && docker tag bunkerity/bunkerweb-api:testing ghcr.io/bunkerity/bunkerweb-api:testing && docker push ghcr.io/bunkerity/bunkerweb-api:testing
      - name: Push all-in-one image
        run: docker pull ghcr.io/bunkerity/all-in-one-tests:testing && docker tag ghcr.io/bunkerity/all-in-one-tests:testing bunkerity/bunkerweb-all-in-one:testing && docker push bunkerity/bunkerweb-all-in-one:testing && docker tag bunkerity/bunkerweb-all-in-one:testing ghcr.io/bunkerity/bunkerweb-all-in-one:testing && docker push ghcr.io/bunkerity/bunkerweb-all-in-one:testing

  # Push Linux packages
  push-packages:
    needs: [staging-tests]
    strategy:
      matrix:
        linux:
          [
            ubuntu,
            debian-bookworm,
            debian-trixie,
            fedora-41,
            fedora-42,
            el-8,
            el-9,
            el-10,
            ubuntu-jammy,
          ]
        arch: [amd64]
        include:
          - release: testing
            repo: bunkerweb
          - linux: ubuntu
            package_arch: amd64
            separator: _
            suffix: ""
            version: noble
            package: deb
          - linux: debian-bookworm
            package_arch: amd64
            separator: _
            suffix: ""
            version: bookworm
            package: deb
          - linux: debian-trixie
            package_arch: amd64
            separator: _
            suffix: ""
            version: trixie
            package: deb
          - linux: fedora-41
            package_arch: x86_64
            separator: "-"
            suffix: "1."
            version: 41
            package: rpm
          - linux: fedora-42
            package_arch: x86_64
            separator: "-"
            suffix: "1."
            version: 42
            package: rpm
          - linux: el-8
            package_arch: x86_64
            separator: "-"
            suffix: "1."
            version: 8
            package: rpm
          - linux: el-9
            package_arch: x86_64
            separator: "-"
            suffix: "1."
            version: 9
            package: rpm
          - linux: el-10
            package_arch: x86_64
            separator: "-"
            suffix: "1."
            version: 10
            package: rpm
          - linux: ubuntu-jammy
            package_arch: amd64
            separator: _
            suffix: ""
            version: jammy
            package: deb
    uses: ./.github/workflows/push-packagecloud.yml
    with:
      SEPARATOR: ${{ matrix.separator }}
      SUFFIX: ${{ matrix.suffix }}
      REPO: ${{ matrix.repo }}
      LINUX: ${{ matrix.linux }}
      VERSION: ${{ matrix.version }}
      PACKAGE: ${{ matrix.package }}
      BW_VERSION: ${{ matrix.release }}
      PACKAGE_ARCH: ${{ matrix.package_arch }}
      ARCH: ${{ matrix.arch }}
    secrets:
      PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

  # Push doc
  push-doc:
    needs: [push-images, push-packages]
    permissions:
      contents: write
    uses: ./.github/workflows/push-doc.yml
    with:
      VERSION: testing
      ALIAS: unstable
    secrets:
      BUNKERBOT_TOKEN: ${{ secrets.BUNKERBOT_TOKEN }}

  # Push on GH
  push-gh:
    needs: [push-doc]
    permissions:
      contents: write
      discussions: write
    uses: ./.github/workflows/push-github.yml
    with:
      VERSION: testing
      PRERELEASE: true
