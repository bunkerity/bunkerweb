name: Create staging infra (REUSABLE)

on:
  workflow_call:
    inputs:
      TYPE:
        required: true
        type: string
    secrets:
      CICD_SECRETS:
        required: true
      SECRET_KEY:
        required: true

jobs:
  create:
    runs-on: ubuntu-latest
    steps:
      # Prepare
      - name: Generate SSH keypair
        run: ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N "" && ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub && echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/ssh_config
        if: inputs.TYPE != 'k8s'
      - name: Checkout source code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Install terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      - name: Install kubectl
        uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0
        if: inputs.TYPE == 'k8s'
        with:
          version: "v1.29.1"
      - name: Set up Python 3.12
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        if: inputs.TYPE != 'k8s'
        with:
          python-version: "3.12"
      - name: Install ansible
        run: pip install --no-cache-dir --require-hashes -r misc/requirements-ansible.txt
        if: inputs.TYPE != 'k8s'
      - name: Install ansible libs
        run: ansible-galaxy install --timeout 120 monolithprojects.github_actions_runner,1.18.7 && ansible-galaxy collection install --timeout 120 community.general && ansible-galaxy collection install --timeout 120 community.docker
        if: inputs.TYPE != 'k8s'
      # Create infra
      - run: chmod +x ./tests/create.sh && ./tests/create.sh ${{ inputs.TYPE }}
        env:
          CICD_SECRETS: ${{ secrets.CICD_SECRETS }}
      - run: |
          tar -cf terraform.tar /tmp/${{ inputs.TYPE }}
          echo "$SECRET_KEY" > /tmp/.secret_key
          openssl enc -in terraform.tar -aes-256-cbc -pbkdf2 -iter 100000 -md sha256 -pass file:/tmp/.secret_key -out terraform.tar.enc
          rm -f /tmp/.secret_key
        if: always()
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: tf-${{ inputs.TYPE }}
          path: terraform.tar.enc
