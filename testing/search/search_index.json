{"config":{"lang":["en","fr","de","es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#overview","title":"Overview","text":"Make your web services secure by default! <p>BunkerWeb is a next-generation, open-source Web Application Firewall (WAF).</p> <p>As a full-featured web server (based on NGINX under the hood), it protects your web services to make them \"secure by default.\" BunkerWeb integrates seamlessly into your existing environments (Linux, Docker, Swarm, Kubernetes, \u2026) as a reverse proxy and is fully configurable (don't panic, there is an awesome web UI if you don't like the CLI) to meet your specific use cases. In other words, cybersecurity is no longer a hassle.</p> <p>BunkerWeb includes primary security features as part of the core but can be easily extended with additional ones thanks to a plugin system.</p>"},{"location":"#why-bunkerweb","title":"Why BunkerWeb?","text":"<ul> <li> <p>Easy integration into existing environments: Seamlessly integrate BunkerWeb into various environments such as Linux, Docker, Swarm, Kubernetes, and more. Enjoy a smooth transition and hassle-free implementation.</p> </li> <li> <p>Highly customizable: Tailor BunkerWeb to your specific requirements with ease. Enable, disable, and configure features effortlessly, allowing you to customize the security settings according to your unique use case.</p> </li> <li> <p>Secure by default: BunkerWeb provides out-of-the-box, hassle-free minimal security for your web services. Experience peace of mind and enhanced protection right from the start.</p> </li> <li> <p>Awesome web UI: Take control of BunkerWeb more efficiently with the exceptional web user interface (UI). Navigate settings and configurations effortlessly through a user-friendly graphical interface, eliminating the need for the command-line interface (CLI).</p> </li> <li> <p>Plugin system: Extend the capabilities of BunkerWeb to meet your own use cases. Seamlessly integrate additional security measures and customize the functionality of BunkerWeb according to your specific requirements.</p> </li> <li> <p>Free as in \"freedom\": BunkerWeb is licensed under the free AGPLv3 license, embracing the principles of freedom and openness. Enjoy the freedom to use, modify, and distribute the software, backed by a supportive community.</p> </li> <li> <p>Professional services: Get technical support, tailored consulting, and custom development directly from the maintainers of BunkerWeb. Visit the BunkerWeb Panel for more information.</p> </li> </ul>"},{"location":"#security-features","title":"Security features","text":"<p>Explore the impressive array of security features offered by BunkerWeb. While not exhaustive, here are some notable highlights:</p> <ul> <li> <p>HTTPS support with transparent Let's Encrypt automation: Easily secure your web services with automated Let's Encrypt integration, ensuring encrypted communication between clients and your server.</p> </li> <li> <p>State-of-the-art web security: Benefit from cutting-edge web security measures, including comprehensive HTTP security headers, prevention of data leaks, and TLS hardening techniques.</p> </li> <li> <p>Integrated ModSecurity WAF with the OWASP Core Rule Set: Enjoy enhanced protection against web application attacks with the integration of ModSecurity, fortified by the renowned OWASP Core Rule Set.</p> </li> <li> <p>Automatic ban of strange behaviors based on HTTP status codes: BunkerWeb intelligently identifies and blocks suspicious activities by automatically banning behaviors that trigger abnormal HTTP status codes.</p> </li> <li> <p>Apply connection and request limits for clients: Set limits on the number of connections and requests from clients, preventing resource exhaustion and ensuring fair usage of server resources.</p> </li> <li> <p>Block bots with challenge-based verification: Keep malicious bots at bay by challenging them to solve puzzles such as cookies, JavaScript tests, captchas, hCaptcha, reCAPTCHA, or Turnstile, effectively blocking unauthorized access.</p> </li> <li> <p>Block known bad IPs with external blacklists and DNSBL: Utilize external blacklists and DNS-based blackhole lists (DNSBL) to proactively block known malicious IP addresses, bolstering your defense against potential threats.</p> </li> <li> <p>And much more...: BunkerWeb is packed with a plethora of additional security features that go beyond this list, providing you with comprehensive protection and peace of mind.</p> </li> </ul> <p>To delve deeper into the core security features, we invite you to explore the security tuning section of the documentation. Discover how BunkerWeb empowers you to fine-tune and optimize security measures according to your specific needs.</p>"},{"location":"#demo","title":"Demo","text":"<p>A demo website protected with BunkerWeb is available at demo.bunkerweb.io. Feel free to visit it and perform some security tests.</p>"},{"location":"#web-ui","title":"Web UI","text":"<p>BunkerWeb offers an optional user interface to manage your instances and their configurations. An online read-only demo is available at demo-ui.bunkerweb.io. Feel free to test it yourself.</p>"},{"location":"#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>Don't want to self-host and manage your own BunkerWeb instance(s)? You might be interested in BunkerWeb Cloud, our fully managed SaaS offering for BunkerWeb.</p> <p>Try our BunkerWeb Cloud offer and get access to:</p> <ul> <li>A fully managed BunkerWeb instance hosted in our cloud</li> <li>All BunkerWeb features, including PRO ones</li> <li>A monitoring platform with dashboards and alerts</li> <li>Technical support to assist you with configuration</li> </ul> <p>If you are interested in the BunkerWeb Cloud offering, don't hesitate to contact us so we can discuss your needs.</p>"},{"location":"#pro-version","title":"PRO version","text":"<p>BunkerWeb PRO free trial</p> <p>Want to quickly test BunkerWeb PRO for one month? Use the code <code>freetrial</code> when placing your order on the BunkerWeb Panel or by clicking here to directly to apply the promo code (will be effective at checkout).</p> <p>When using BunkerWeb, you have the choice of the version you want to use: open-source or PRO.</p> <p>Whether it's enhanced security, an enriched user experience, or technical monitoring, the BunkerWeb PRO version allows you to fully benefit from BunkerWeb and meet your professional needs.</p> <p>In the documentation or the user interface, PRO features are annotated with a crown  to distinguish them from those integrated into the open-source version.</p> <p>You can upgrade from the open-source version to the PRO one easily and at any time. The process is straightforward:</p> <ul> <li>Claim your free trial on the BunkerWeb panel by using the <code>freetrial</code> promo code at checkout</li> <li>Once connected to the client area, copy your PRO license key</li> <li>Paste your private key into BunkerWeb using the web UI or specific setting</li> </ul> <p>Do not hesitate to visit the BunkerWeb panel or contact us if you have any questions regarding the PRO version.</p>"},{"location":"#professional-services","title":"Professional services","text":"<p>Get the most out of BunkerWeb by accessing professional services directly from the maintainers of the project. From technical support to tailored consulting and development, we are here to assist you in securing your web services.</p> <p>You will find more information by visiting the BunkerWeb Panel, our dedicated platform for professional services.</p> <p>Don't hesitate to contact us if you have any questions. We will be more than happy to respond to your needs.</p>"},{"location":"#ecosystem-community-and-resources","title":"Ecosystem, community, and resources","text":"<p>Official websites, tools, and resources about BunkerWeb:</p> <ul> <li>Website: Get more information, news, and articles about BunkerWeb.</li> <li>Panel: A dedicated platform to order and manage professional services (e.g., technical support) around BunkerWeb.</li> <li>Documentation: Technical documentation of the BunkerWeb solution.</li> <li>Demo: Demonstration website of BunkerWeb. Don't hesitate to attempt attacks to test the robustness of the solution.</li> <li>Web UI: Online read-only demo of the web UI of BunkerWeb.</li> <li>Threatmap: Live cyberattacks blocked by BunkerWeb instances all around the world.</li> </ul> <p>Community and social networks:</p> <ul> <li>Discord</li> <li>LinkedIn</li> <li>X (Formerly Twitter)</li> <li>Reddit</li> </ul>"},{"location":"about/","title":"About","text":""},{"location":"about/#who-maintains-bunkerweb","title":"Who maintains BunkerWeb?","text":"<p>BunkerWeb is maintained by Bunkerity, a French \ud83c\uddeb\ud83c\uddf7 company specialized in Cybersecurity \ud83d\udee1\ufe0f.</p>"},{"location":"about/#do-you-have-a-professional-version","title":"Do you have a professional version?","text":"<p>BunkerWeb PRO free trial</p> <p>Want to quickly test BunkerWeb PRO for one month? Use the code <code>freetrial</code> when placing your order on the BunkerWeb panel or by clicking here to directly to apply the promo code (will be effective at checkout).</p> <p>Yes, we do offer a professional version of BunkerWeb called \"BunkerWeb PRO\" with additional features and (optional) technical support.</p> <p>Don't hesitate to contact us if you have any questions, we will be more than happy to respond to your needs.</p>"},{"location":"about/#do-you-offer-professional-services","title":"Do you offer professional services?","text":"<p>Yes, we offer professional services related to BunkerWeb.</p> <p>You can get in touch with us about any of the following:</p> <ul> <li>Consulting</li> <li>Support</li> <li>Custom development</li> <li>Partnerships</li> </ul> <p>We have a dedicated panel to centralize all professional requests.</p> <p>You can also contact us if you are interested.</p>"},{"location":"about/#where-to-get-community-support","title":"Where to get community support?","text":"<p>To get free community support, you can use the following media:</p> <ul> <li>The #help channel of BunkerWeb in the Discord server</li> <li>The help category of GitHub discussions</li> <li>The /r/BunkerWeb subreddit</li> <li>The Server Fault and Super User forums</li> </ul> <p>Please don't use GitHub issues to ask for help, use it only for bug reports and feature requests.</p>"},{"location":"about/#how-can-i-contribute","title":"How can I contribute?","text":"<p>Here is a non-exhaustive list of what you can do:</p> <ul> <li>Join the Discord server, /r/BunkerWeb subreddit and GitHub discussions to talk about the project and help others</li> <li>Follow us on LinkedIn, X (Formerly Twitter) and GitHub</li> <li>Report bugs and propose new features using issues</li> <li>Contribute to the code using pull requests</li> <li>Write an awesome plugin</li> <li>Talk about BunkerWeb to your friends/colleagues, on social media, on your blog, ...</li> </ul>"},{"location":"about/#how-to-report-security-issues","title":"How to report security issues?","text":"<p>Please contact us at security@bunkerity.com.</p>"},{"location":"advanced/","title":"Advanced usages","text":"<p>Many real-world use case examples are available in the examples folder of the GitHub repository.</p> <p>We also provide numerous boilerplates, such as YAML files for various integrations and database types. These are available in the misc/integrations folder.</p> <p>This section only focuses on advanced usages and security tuning, see the features section of the documentation to see all the available settings.</p>"},{"location":"advanced/#use-cases","title":"Use cases","text":"<p>Testing</p> <p>To perform quick tests when multisite mode is enabled (and if you don't have the proper DNS entries set up for the domains) you can use curl with the HTTP Host header of your choice : <pre><code>curl -H \"Host: app1.example.com\" http://ip-or-fqdn-of-server\n</code></pre></p> <p>If you are using HTTPS, you will need to play with SNI : <pre><code>curl -H \"Host: app1.example.com\" --resolve example.com:443:ip-of-server https://example.com\n</code></pre></p>"},{"location":"advanced/#behind-load-balancer-or-reverse-proxy","title":"Behind load balancer or reverse proxy","text":"<p>Real IP</p> <p>When BunkerWeb is itself behind a load balancer or a reverse proxy, you need to configure it so it can get the real IP address of the clients. If you don't, the security features will block the IP address of the load balancer or reverse proxy instead of the client's one.</p> <p>BunkerWeb actually supports two methods to retrieve the real IP address of the client :</p> <ul> <li>Using the <code>PROXY protocol</code></li> <li>Using a HTTP header like <code>X-Forwarded-For</code></li> </ul> <p>The following settings can be used :</p> <ul> <li><code>USE_REAL_IP</code> : enable/disable real IP retrieval</li> <li><code>USE_PROXY_PROTOCOL</code> : enable/disable PROXY protocol support.</li> <li><code>REAL_IP_FROM</code> : list of trusted IP/network address allowed to send us the \"real IP\"</li> <li><code>REAL_IP_HEADER</code> : the HTTP header containing the real IP or special value <code>proxy_protocol</code> when using PROXY protocol</li> </ul> <p>You will find more settings about real IP in the features section of the documentation.</p> HTTP headerProxy protocol <p>We will assume the following regarding the load balancers or reverse proxies (you will need to update the settings depending on your configuration) :</p> <ul> <li>They use the <code>X-Forwarded-For</code> header to set the real IP</li> <li>They have IPs in the <code>1.2.3.0/24</code> and <code>100.64.0.0/10</code> networks</li> </ul> Web UILinuxAll-in-oneDockerDocker autoconfKubernetesSwarm <p>Navigate to the Global config page, select the Real IP plugin and fill out the following settings :</p> <p>Real IP settings (header) using web UI</p> <p>Please note that it's recommended to restart BunkerWeb when you change settings related to real IP.</p> <p>You will need to add the settings to the <code>/etc/bunkerweb/variables.env</code> file :</p> <pre><code>...\nUSE_REAL_IP=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=X-Forwarded-For\n...\n</code></pre> <p>Please note that it's recommended to issue a restart instead of reload when configuring settings related to real IP :</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>You will need to add the settings to the environment variables when running the All-in-one container :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler containers:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler containers:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler pods.</p> <p>Here is the corresponding part of your <code>values.yaml</code> file that you can use :</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler services:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Please note that if your service is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>Read carefully</p> <p>Only use the PROXY protocol if you are sure that your load balancer or reverse proxy is sending it. If you enable it and it's not used, you will get errors.</p> <p>We will assume the following regarding the load balancers or reverse proxies (you will need to update the settings depending on your configuration) :</p> <ul> <li>They use the <code>PROXY protocol</code> v1 or v2 to set the real IP</li> <li>They have IPs in the <code>1.2.3.0/24</code> and <code>100.64.0.0/10</code> networks</li> </ul> Web UILinuxAll-in-oneDockerDocker autoconfKubernetesSwarm <p>Navigate to the Global config page, select the Real IP plugin and fill out the following settings :</p> <p>Real IP settings (PROXY protocol) using web UI</p> <p>Please note that it's recommended to restart BunkerWeb when you change settings related to real IP.</p> <p>You will need to add the settings to the <code>/etc/bunkerweb/variables.env</code> file :</p> <pre><code>...\nUSE_REAL_IP=yes\nUSE_PROXY_PROTOCOL=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=proxy_protocol\n...\n</code></pre> <p>Please note that it's recommended to issue a restart instead of reload when configuring settings related to proxy protocols :</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>You will need to add the settings to the environment variables when running the All-in-one container :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e USE_PROXY_PROTOCOL=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler containers:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler containers:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler pods.</p> <p>Here is the corresponding part of your <code>values.yaml</code> file that you can use:</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>You will need to add the settings to the environment variables of both the BunkerWeb and scheduler services.</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Please note that if your service is already created, you will need to delete it and recreate it so the new environment variables will be updated.</p>"},{"location":"advanced/#using-custom-dns-resolution-mechanisms","title":"Using custom DNS resolution mechanisms","text":"<p>BunkerWeb's NGINX configuration can be customized to use different DNS resolvers depending on your needs. This can be particularly useful in various scenarios:</p> <ol> <li>To respect entries in your local <code>/etc/hosts</code> file</li> <li>When you need to use custom DNS servers for certain domains</li> <li>To integrate with local DNS caching solutions</li> </ol>"},{"location":"advanced/#using-systemd-resolved","title":"Using systemd-resolved","text":"<p>Many modern Linux systems use <code>systemd-resolved</code> for DNS resolution. If you want BunkerWeb to respect the content of your <code>/etc/hosts</code> file and use the system's DNS resolution mechanism, you can configure it to use the local systemd-resolved DNS service.</p> <p>To verify that systemd-resolved is running on your system, you can use:</p> <pre><code>systemctl status systemd-resolved\n</code></pre> <p>To enable systemd-resolved as your DNS resolver in BunkerWeb, set the <code>DNS_RESOLVERS</code> setting to <code>127.0.0.53</code>, which is the default listening address for systemd-resolved:</p> Web UILinux <p>Navigate to the Global config page and set the DNS resolvers to <code>127.0.0.53</code></p> <p>DNS resolvers setting using web UI</p> <p>You will need to modify the <code>/etc/bunkerweb/variables.env</code> file:</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.53\n...\n</code></pre> <p>After making this change, reload the Scheduler to apply the configuration:</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre>"},{"location":"advanced/#using-dnsmasq","title":"Using dnsmasq","text":"<p>dnsmasq is a lightweight DNS, DHCP, and TFTP server that's commonly used for local DNS caching and customization. It's particularly useful when you need more control over your DNS resolution than systemd-resolved provides.</p> LinuxAll-in-oneDocker <p>First, install and configure dnsmasq on your Linux system:</p> Debian/UbuntuRHEL/Fedora <pre><code># Install dnsmasq\nsudo apt-get update &amp;&amp; sudo apt-get install dnsmasq\n\n# Configure dnsmasq to listen only on localhost\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Add custom DNS entries if needed\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# Restart dnsmasq\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <pre><code># Install dnsmasq\nsudo dnf install dnsmasq\n\n# Configure dnsmasq to listen only on localhost\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Add custom DNS entries if needed\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# Restart dnsmasq\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <p>Then configure BunkerWeb to use dnsmasq by setting <code>DNS_RESOLVERS</code> to <code>127.0.0.1</code>:</p> Web UILinux <p>Navigate to the Global config page, select the NGINX plugin and set the DNS resolvers to <code>127.0.0.1</code>.</p> <p>DNS resolvers setting using web UI</p> <p>You will need to modify the <code>/etc/bunkerweb/variables.env</code> file:</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.1\n...\n</code></pre> <p>After making this change, reload the Scheduler:</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre> <p>When using the All-in-one container, run dnsmasq in a separate container and configure BunkerWeb to use it:</p> <pre><code># Create a custom network for DNS communication\ndocker network create bw-dns\n\n# Run dnsmasq container using dockurr/dnsmasq with Quad9 DNS\n# Quad9 provides security-focused DNS resolution with malware blocking\ndocker run -d \\\n    --name dnsmasq \\\n    --network bw-dns \\\n    -e DNS1=\"9.9.9.9\" \\\n    -e DNS2=\"149.112.112.112\" \\\n    -p 53:53/udp \\\n    -p 53:53/tcp \\\n    --cap-add=NET_ADMIN \\\n    --restart=always \\\n    dockurr/dnsmasq\n\n# Run BunkerWeb All-in-one with dnsmasq DNS resolver\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network bw-dns \\\n    -v bw-storage:/data \\\n    -e DNS_RESOLVERS=\"dnsmasq\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Add a dnsmasq service to your docker-compose file and configure BunkerWeb to use it:</p> <pre><code>services:\n  dnsmasq:\n    image: dockurr/dnsmasq\n    container_name: dnsmasq\n    environment:\n      # Using Quad9 DNS servers for enhanced security and privacy\n      # Primary: 9.9.9.9 (Quad9 with malware blocking)\n      # Secondary: 149.112.112.112 (Quad9 backup server)\n      DNS1: \"9.9.9.9\"\n      DNS2: \"149.112.112.112\"\n    ports:\n      - 53:53/udp\n      - 53:53/tcp\n    cap_add:\n      - NET_ADMIN\n    restart: always\n    networks:\n      - bw-dns\n\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-services\n      - bw-dns\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-dns\n\nnetworks:\n  # ...existing networks...\n  bw-dns:\n    name: bw-dns\n</code></pre>"},{"location":"advanced/#custom-configurations","title":"Custom configurations","text":"<p>To customize and add custom configurations to BunkerWeb, you can take advantage of its NGINX foundation. Custom NGINX configurations can be added in different NGINX contexts, including configurations for the ModSecurity Web Application Firewall (WAF), which is a core component of BunkerWeb. More details about ModSecurity configurations can be found here.</p> <p>Here are the available types of custom configurations:</p> <ul> <li>http: Configurations at the HTTP level of NGINX.</li> <li>server-http: Configurations at the HTTP/Server level of NGINX.</li> <li>default-server-http: Configurations at the Server level of NGINX, specifically for the \"default server\" when the supplied client name doesn't match any server name in <code>SERVER_NAME</code>.</li> <li>modsec-crs: Configurations applied before the OWASP Core Rule Set is loaded.</li> <li>modsec: Configurations applied after the OWASP Core Rule Set is loaded, or used when the Core Rule Set is not loaded.</li> <li>crs-plugins-before: Configurations for the CRS plugins, applied before the CRS plugins are loaded.</li> <li>crs-plugins-after: Configurations for the CRS plugins, applied after the CRS plugins are loaded.</li> <li>stream: Configurations at the Stream level of NGINX.</li> <li>server-stream: Configurations at the Stream/Server level of NGINX.</li> </ul> <p>Custom configurations can be applied globally or specifically for a particular server, depending on the applicable context and whether the multisite mode is enabled.</p> <p>The method for applying custom configurations depends on the integration being used. However, the underlying process involves adding files with the <code>.conf</code> suffix to specific folders. To apply a custom configuration for a specific server, the file should be placed in a subfolder named after the primary server name.</p> <p>Some integrations provide more convenient ways to apply configurations, such as using Configs in Docker Swarm or ConfigMap in Kubernetes. These options offer simpler approaches for managing and applying configurations.</p> Web UILinuxAll-in-oneDockerDocker autoconfKubernetesSwarm <p>Navigate to the Configs page, click on Create new custom config, you can then choose if it's a global one or specific to a service, the configuration type and the configuration name :</p> <p>Custom configurations using web UI</p> <p>Don't forget to click on the <code>\ud83d\udcbe Save</code> button.</p> <p>When using the Linux integration, custom configurations must be written to the <code>/etc/bunkerweb/configs</code> folder.</p> <p>Here is an example for server-http/hello-world.conf :</p> <pre><code>location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\n</code></pre> <p>Because BunkerWeb runs as an unprivileged user (nginx:nginx), you will need to edit the permissions :</p> <pre><code>chown -R root:nginx /etc/bunkerweb/configs &amp;&amp; \\\nchmod -R 770 /etc/bunkerweb/configs\n</code></pre> <p>Now let's check the status of the Scheduler :</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>If they are already running, we can reload it :</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Otherwise, we will need to start it :</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>When using the All-in-one image, you have two choices for adding custom configurations:</p> <ul> <li>Using specific settings <code>*_CUSTOM_CONF_*</code> as environment variables when running the container (recommended).</li> <li>Writing <code>.conf</code> files to the <code>/data/configs/</code> directory within the volume mounted to <code>/data</code>.</li> </ul> <p>Using settings (Environment Variables)</p> <p>The settings to use must follow the pattern <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code>:</p> <ul> <li><code>&lt;SITE&gt;</code> : Optional primary server name if multisite mode is enabled and the config must be applied to a specific service.</li> <li><code>&lt;TYPE&gt;</code> : The type of config, accepted values are <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> and <code>SERVER_STREAM</code>.</li> <li><code>&lt;NAME&gt;</code> : The name of config without the <code>.conf</code> suffix.</li> </ul> <p>Here is a dummy example when running the All-in-one container:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e \"CUSTOM_CONF_SERVER_HTTP_hello-world=location /hello { \\\n        default_type 'text/plain'; \\\n        content_by_lua_block { \\\n          ngx.say('world'); \\\n        } \\\n      }\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it for the new environment variables to be applied.</p> <p>Using files</p> <p>The first thing to do is to create the folders :</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>You can now write your configurations :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Because the scheduler runs as an unprivileged user with UID and GID 101, you will need to edit the permissions :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>When starting the scheduler container, you will need to mount the folder on /data :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v ./bw-data:/data \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>When using the Docker integration, you have two choices for the addition of custom configurations :</p> <ul> <li>Using specific settings <code>*_CUSTOM_CONF_*</code> as environment variables (recommended)</li> <li>Writing .conf files to the volume mounted on /data of the scheduler</li> </ul> <p>Using settings</p> <p>The settings to use must follow the pattern <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> :</p> <ul> <li><code>&lt;SITE&gt;</code> : optional primary server name if multisite mode is enabled and the config must be applied to a specific service</li> <li><code>&lt;TYPE&gt;</code> : the type of config, accepted values are <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> and <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code> : the name of config without the .conf suffix</li> </ul> <p>Here is a dummy example using a docker-compose file :</p> <pre><code>...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  environment:\n    - |\n      CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n          ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Using files</p> <p>The first thing to do is to create the folders :</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>You can now write your configurations :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Because the scheduler runs as an unprivileged user with UID and GID 101, you will need to edit the permissions :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>When starting the scheduler container, you will need to mount the folder on /data :</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>When using the Docker autoconf integration, you have two choices for adding custom configurations :</p> <ul> <li>Using specific settings <code>*_CUSTOM_CONF_*</code> as labels (easiest)</li> <li>Writing .conf files to the volume mounted on /data of the scheduler</li> </ul> <p>Using labels</p> <p>Limitations using labels</p> <p>When using labels with the Docker autoconf integration, you can only apply custom configurations for the corresponding web service. Applying http, default-server-http, stream or any global configurations (like server-http or server-stream for all services) is not possible : you will need to mount files for that purpose.</p> <p>The labels to use must follow the pattern <code>bunkerweb.CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> :</p> <ul> <li><code>&lt;TYPE&gt;</code> : the type of config, accepted values are <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code> and <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code> : the name of config without the .conf suffix</li> </ul> <p>Here is a dummy example using a docker-compose file :</p> <pre><code>myapp:\n  image: nginxdemos/nginx-hello\n  labels:\n    - |\n      bunkerweb.CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n            ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Using files</p> <p>The first thing to do is to create the folders :</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>You can now write your configurations :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Because the scheduler runs as an unprivileged user with UID and GID 101, you will need to edit the permissions :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>When starting the scheduler container, you will need to mount the folder on /data :</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>When using the Kubernetes integration, custom configurations are managed using ConfigMap.</p> <p>To keep it simple, you don't even need to use the ConfigMap with a Pod (e.g. as environment variable or volume) : the autoconf Pod is listening for ConfigMap events and will update the custom configurations when needed.</p> <p>When creating a ConfigMap, you will need to add special labels :</p> <ul> <li>bunkerweb.io/CONFIG_TYPE : must be set to a valid custom configuration type (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream or server-stream)</li> <li>bunkerweb.io/CONFIG_SITE : set to a server name to apply configuration to that specific server (optional, will be applied globally if unset)</li> </ul> <p>Here is the example :</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-all-server-http\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"server-http\"\ndata:\n  myconf: |\n  location /hello {\n    default_type 'text/plain';\n    content_by_lua_block {\n      ngx.say('world')\n    }\n  }\n</code></pre> <p>Custom Extra Config</p> <p>Since the <code>1.6.0</code> version, you can add/override settings using the <code>bunkerweb.io/CONFIG_TYPE=settings</code> annotation. Here is an example :</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-extra-settings\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"settings\"\ndata:\n  USE_ANTIBOT: \"captcha\" # multisite setting that will be applied to all services that do not override it\n  USE_REDIS: \"yes\" # global setting that will be applied globally\n  ...\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>When using the Swarm integration, custom configurations are managed using Docker Configs.</p> <p>To keep it simple, you don't even need to attach the Config to a service : the autoconf service is listening for Config events and will update the custom configurations when needed.</p> <p>When creating a Config, you will need to add special labels :</p> <ul> <li>bunkerweb.CONFIG_TYPE : must be set to a valid custom configuration type (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream or server-stream)</li> <li>bunkerweb.CONFIG_SITE : set to a server name to apply configuration to that specific server (optional, will be applied globally if unset)</li> </ul> <p>Here is the example :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" | docker config create -l bunkerweb.CONFIG_TYPE=server-http my-config -\n</code></pre> <p>There is no update mechanism : the alternative is to remove an existing config using <code>docker config rm</code> and then recreate it.</p>"},{"location":"advanced/#running-many-services-in-production","title":"Running many services in production","text":""},{"location":"advanced/#global-crs","title":"Global CRS","text":"<p>CRS plugins</p> <p>When the CRS is loaded globally, CRS plugins are not supported. If you need to use them, you will need to load the CRS per service.</p> <p>If you use BunkerWeb in production with a large number of services, and you enable the ModSecurity feature globally with CRS rules, the time required to load BunkerWeb configurations may become too long, potentially resulting in a timeout.</p> <p>The workaround is to load the CRS rules globally rather than per service. This behavior is not enabled by default for backward compatibility reasons and because it has a drawback: if you enable global CRS rule loading, it will no longer be possible to define modsec-crs rules (executed before the CRS rules) on a per-service basis. However, this limitation can be bypassed by writing global <code>modsec-crs</code> exclusion rules like this:</p> <pre><code>SecRule REQUEST_FILENAME \"@rx ^/somewhere$\" \"nolog,phase:4,allow,id:1010,chain\"\nSecRule REQUEST_HEADERS:Host \"@rx ^app1\\.example\\.com$\" \"nolog\"\n</code></pre> <p>You can enable the global CRS loading by setting <code>USE_MODSECURITY_GLOBAL_CRS</code> to <code>yes</code>.</p>"},{"location":"advanced/#adjust-max_allowed_packet-for-mariadbmysql","title":"Adjust max_allowed_packet for MariaDB/MySQL","text":"<p>It appears that the default value for the <code>max_allowed_packet</code> parameter in MariaDB and MySQL database servers is not sufficient when using BunkerWeb with a large number of services.</p> <p>If you encounter errors like this, especially on the scheduler:</p> <pre><code>[Warning] Aborted connection 5 to db: 'db' user: 'bunkerweb' host: '172.20.0.4' (Got a packet bigger than 'max_allowed_packet' bytes)\n</code></pre> <p>You will need to increase the <code>max_allowed_packet</code> on your database server.</p>"},{"location":"advanced/#persistence-of-bans-and-reports","title":"Persistence of bans and reports","text":"<p>By default, BunkerWeb stores bans and reports in a local Lua datastore. While simple and efficient, this setup means that data is lost when the instance is restarted. To ensure that bans and reports persist across restarts, you can configure BunkerWeb to use a remote Redis or Valkey server.</p> <p>Why Use Redis/Valkey?</p> <p>Redis and Valkey are powerful, in-memory data stores commonly used as databases, caches, and message brokers. They are highly scalable and support a variety of data structures, including:</p> <ul> <li>Strings: Basic key-value pairs.</li> <li>Hashes: Field-value pairs within a single key.</li> <li>Lists: Ordered collections of strings.</li> <li>Sets: Unordered collections of unique strings.</li> <li>Sorted Sets: Ordered collections with scores.</li> </ul> <p>By leveraging Redis or Valkey, BunkerWeb can persistently store bans, reports, and cache data, ensuring durability and scalability.</p> <p>Enabling Redis/Valkey Support</p> <p>To enable Redis or Valkey support, configure the following settings in your BunkerWeb configuration file:</p> <pre><code># Enable Redis/Valkey support\nUSE_REDIS=yes\n\n# Redis/Valkey server hostname or IP address\nREDIS_HOST=&lt;hostname&gt;\n\n# Redis/Valkey server port number (default: 6379)\nREDIS_PORT=6379\n\n# Redis/Valkey database number (default: 0)\nREDIS_DATABASE=0\n</code></pre> <ul> <li><code>USE_REDIS</code>: Set to <code>yes</code> to enable Redis/Valkey integration.</li> <li><code>REDIS_HOST</code>: Specify the hostname or IP address of the Redis/Valkey server.</li> <li><code>REDIS_PORT</code>: Specify the port number for the Redis/Valkey server. Defaults to <code>6379</code>.</li> <li><code>REDIS_DATABASE</code>: Specify the Redis/Valkey database number to use. Defaults to <code>0</code>.</li> </ul> <p>If you require more advanced settings, such as authentication, SSL/TLS support, or Sentinel mode, refer to the Redis plugin settings documentation for detailed guidance.</p>"},{"location":"advanced/#protect-udptcp-applications","title":"Protect UDP/TCP applications","text":"<p>Experimental feature</p> <p>This feature is not production-ready. Feel free to test it and report us any bug using issues in the GitHub repository.</p> <p>BunkerWeb offers the capability to function as a generic UDP/TCP reverse proxy, allowing you to protect any network-based applications operating at least on layer 4 of the OSI model. Instead of utilizing the \"classical\" HTTP module, BunkerWeb leverages the stream module of NGINX.</p> <p>It's important to note that not all settings and security features are available when using the stream module. Additional information on this can be found in the features sections of the documentation.</p> <p>Configuring a basic reverse proxy is quite similar to the HTTP setup, as it involves using the same settings: <code>USE_REVERSE_PROXY=yes</code> and <code>REVERSE_PROXY_HOST=myapp:9000</code>. Even when BunkerWeb is positioned behind a Load Balancer, the settings remain the same (with PROXY protocol being the supported option due to evident reasons).</p> <p>On top of that, the following specific settings are used :</p> <ul> <li><code>SERVER_TYPE=stream</code> : activate <code>stream</code> mode (generic UDP/TCP) instead of <code>http</code> one (which is the default)</li> <li><code>LISTEN_STREAM_PORT=4242</code> : the listening \"plain\" (without SSL/TLS) port that BunkerWeb will listen on</li> <li><code>LISTEN_STREAM_PORT_SSL=4343</code> : the listening \"ssl/tls\" port that BunkerWeb will listen on</li> <li><code>USE_UDP=no</code> : listen for and forward UDP packets instead of TCP</li> </ul> <p>For complete list of settings regarding <code>stream</code> mode, please refer to the features section of the documentation.</p> <p>multiple listening ports</p> <p>Since the <code>1.6.0</code> version, BunkerWeb supports multiple listening ports for the <code>stream</code> mode. You can specify them using the <code>LISTEN_STREAM_PORT</code> and <code>LISTEN_STREAM_PORT_SSL</code> settings.</p> <p>Here is an example :</p> <pre><code>...\nLISTEN_STREAM_PORT=4242\nLISTEN_STREAM_PORT_SSL=4343\nLISTEN_STREAM_PORT_1=4244\nLISTEN_STREAM_PORT_SSL_1=4344\n...\n</code></pre> All-in-oneDockerDocker autoconfKubernetesLinuxSwarm <p>You will need to add the settings to the environment variables when running the All-in-one container. You will also need to expose the stream ports.</p> <p>This example configures BunkerWeb to proxy two stream-based applications, <code>app1.example.com</code> and <code>app2.example.com</code>.</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e SERVICE_UI=\"no\" \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e USE_REVERSE_PROXY=\"yes\" \\\n    -e SERVER_TYPE=\"stream\" \\\n    -e app1.example.com_REVERSE_PROXY_HOST=\"myapp1:9000\" \\\n    -e app1.example.com_LISTEN_STREAM_PORT=\"10000\" \\\n    -e app2.example.com_REVERSE_PROXY_HOST=\"myapp2:9000\" \\\n    -e app2.example.com_LISTEN_STREAM_PORT=\"20000\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    -p 10000:10000/tcp \\\n    -p 20000:20000/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it for the new environment variables to be applied.</p> <p>Your applications (<code>myapp1</code>, <code>myapp2</code>) should be running in separate containers (or be otherwise accessible) and their hostnames/IPs (e.g., <code>myapp1</code>, <code>myapp2</code> used in <code>_REVERSE_PROXY_HOST</code>) must be resolvable and reachable from the <code>bunkerweb-aio</code> container. This typically involves connecting them to a shared Docker network.</p> <p>Deactivate UI Service</p> <p>Deactivating the UI service (e.g., by setting <code>SERVICE_UI=no</code> as an environment variable) is recommended as the Web UI is not compatible with <code>SERVER_TYPE=stream</code>.</p> <p>When using Docker integration, the easiest way of protecting existing network applications is to add the services in the <code>bw-services</code> network :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for all services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n  # Optional API token for authenticated API calls\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      USE_REVERSE_PROXY: \"yes\" # Will be applied to all services\n      SERVER_TYPE: \"stream\" # Will be applied to all services\n      app1.example.com_REVERSE_PROXY_HOST: \"myapp1:9000\"\n      app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n      app2.example.com_REVERSE_PROXY_HOST: \"myapp2:9000\"\n      app2.example.com_LISTEN_STREAM_PORT: \"20000\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Before running the Docker autoconf integration stack on your machine, you will need to edit the ports :</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n...\n</code></pre> <p>Once the stack is running, you can connect your existing applications to the <code>bw-services</code> network and configure BunkerWeb with labels :</p> <pre><code>services:\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app1.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app2.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Experimental feature</p> <p>At the moment, Ingresses does not support the <code>stream</code> mode. What we are doing here is a workaround to make it work.</p> <p>Feel free to test it and report us any bug using issues in the GitHub repository.</p> <p>Before running the Kubernetes integration stack on your machine, you will need to open the ports on your load balancer :</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: lb\nspec:\n  type: LoadBalancer\n  ports:\n    - name: http # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      port: 80\n      targetPort: 8080\n    - name: app1\n      port: 10000\n      targetPort: 10000\n    - name: app2\n      port: 20000\n      targetPort: 20000\n  selector:\n    app: bunkerweb\n</code></pre> <p>Once the stack is running, you can create your ingress resources :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  namespace: services\n  annotations:\n    bunkerweb.io/SERVER_TYPE: \"stream\" # Will be applied to all services\n    bunkerweb.io/app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n    bunkerweb.io/app2.example.com_LISTEN_STREAM_PORT: \"20000\"\nspec:\n  rules:\n    - host: app1.example.com\n      http:\n        paths:\n          - path: / # This isn't used in stream mode but is required\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app1\n                port:\n                  number: 9000\n    - host: app2.example.com\n      http:\n        paths:\n          - path: / # This isn't used in stream mode but is required\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app2\n                port:\n                  number: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app1\n  namespace: services\n  labels:\n    app: app1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app1\n  template:\n    metadata:\n      labels:\n        app: app1\n    spec:\n      containers:\n        - name: app1\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app1\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app1\n  namespace: services\nspec:\n  selector:\n    app: app1\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app2\n  namespace: services\n  labels:\n    app: app2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app2\n  template:\n    metadata:\n      labels:\n        app: app2\n    spec:\n      containers:\n        - name: app2\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app2\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app2\n  namespace: services\nspec:\n  selector:\n    app: app2\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n</code></pre> <p>You will need to add the settings to the <code>/etc/bunkerweb/variables.env</code> file :</p> <pre><code>...\nSERVER_NAME=app1.example.com app2.example.com\nMULTISITE=yes\nUSE_REVERSE_PROXY=yes\nSERVER_TYPE=stream\napp1.example.com_REVERSE_PROXY_HOST=myapp1.domain.or.ip:9000\napp1.example.com_LISTEN_STREAM_PORT=10000\napp2.example.com_REVERSE_PROXY_HOST=myapp2.domain.or.ip:9000\napp2.example.com_LISTEN_STREAM_PORT=20000\n...\n</code></pre> <p>Now let's check the status of the Scheduler :</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>If they are already running, we can reload it :</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Otherwise, we will need to start it :</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>Before running the Swarm integration stack on your machine, you will need to edit the ports :</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      # app1\n      - published: 10000\n        target: 10000\n        mode: host\n        protocol: tcp\n      # app2\n      - published: 20000\n        target: 20000\n        mode: host\n        protocol: tcp\n...\n</code></pre> <p>Once the stack is running, you can connect your existing applications to the <code>bw-services</code> network and configure BunkerWeb with labels :</p> <pre><code>services:\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"advanced/#php","title":"PHP","text":"<p>Experimental feature</p> <p>At the moment, PHP support with BunkerWeb is still in beta and we recommend you use a reverse-proxy architecture if you can. By the way, PHP is not supported at all for some integrations like Kubernetes.</p> <p>BunkerWeb supports PHP using external or remote PHP-FPM instances. We will assume that you are already familiar with managing that kind of services.</p> <p>The following settings can be used :</p> <ul> <li><code>REMOTE_PHP</code> : Hostname of the remote PHP-FPM instance.</li> <li><code>REMOTE_PHP_PATH</code> : Root folder containing files in the remote PHP-FPM instance.</li> <li><code>REMOTE_PHP_PORT</code> : Port of the remote PHP-FPM instance (default is 9000).</li> <li><code>LOCAL_PHP</code> : Path to the local socket file of PHP-FPM instance.</li> <li><code>LOCAL_PHP_PATH</code> : Root folder containing files in the local PHP-FPM instance.</li> </ul> All-in-oneDockerDocker autoconfKubernetesLinuxSwarm <p>When using the All-in-one image, to support PHP applications, you will need to :</p> <ul> <li>Mount your PHP files into the <code>/var/www/html</code> folder of BunkerWeb.</li> <li>Set up a PHP-FPM container for your application and mount the folder containing PHP files.</li> <li>Use the specific settings <code>REMOTE_PHP</code> and <code>REMOTE_PHP_PATH</code> as environment variables when running BunkerWeb.</li> </ul> <p>If you enable the multisite mode, you will need to create separate directories for each of your applications. Each subdirectory should be named using the first value of <code>SERVER_NAME</code>. Here is a dummy example :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app2.example.com\n    \u2514\u2500\u2500 index.php\n\n2 directories, 2 files\n</code></pre> <p>We will assume that your PHP apps are located into a folder named <code>www</code>. Please note that you will need to fix the permissions so BunkerWeb (UID/GID 101) can at least read files and list folders and PHP-FPM (UID/GID 33 if you use the <code>php:fpm</code> image) is the owner of the files and folders :</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>You can now run BunkerWeb, configure it for your PHP application and also run the PHP apps. You will need to create a custom Docker network to allow BunkerWeb to communicate with your PHP-FPM containers.</p> <pre><code># Create a custom network\ndocker network create php-network\n\n# Run PHP-FPM containers\ndocker run -d --name myapp1-php --network php-network -v ./www/app1.example.com:/app php:fpm\ndocker run -d --name myapp2-php --network php-network -v ./www/app2.example.com:/app php:fpm\n\n# Run BunkerWeb All-in-one\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network php-network \\\n    -v ./www:/var/www/html \\\n    -v bw-storage:/data \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e REMOTE_PHP_PATH=\"/app\" \\\n    -e app1.example.com_REMOTE_PHP=\"myapp1-php\" \\\n    -e app2.example.com_REMOTE_PHP=\"myapp2-php\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Please note that if your container is already created, you will need to delete it and recreate it for the new environment variables to be applied.</p> <p>When using the Docker integration, to support PHP applications, you will need to :</p> <ul> <li>Mount your PHP files into the <code>/var/www/html</code> folder of BunkerWeb</li> <li>Set up a PHP-FPM container for your application and mount the folder containing PHP files</li> <li>Use the specific settings <code>REMOTE_PHP</code> and <code>REMOTE_PHP_PATH</code> as environment variables when starting BunkerWeb</li> </ul> <p>If you enable the multisite mode, you will need to create separate directories for each of your applications. Each subdirectory should be named using the first value of <code>SERVER_NAME</code>. Here is a dummy example :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>We will assume that your PHP apps are located into a folder named <code>www</code>. Please note that you will need to fix the permissions so BunkerWeb (UID/GID 101) can at least read files and list folders and PHP-FPM (UID/GID 33 if you use the <code>php:fpm</code> image) is the owner of the files and folders :</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>You can now run BunkerWeb, configure it for your PHP application and also run the PHP apps :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for all services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      REMOTE_PHP_PATH: \"/app\" # Will be applied to all services thanks to the MULTISITE setting\n      app1.example.com_REMOTE_PHP: \"myapp1\"\n      app2.example.com_REMOTE_PHP: \"myapp2\"\n      app3.example.com_REMOTE_PHP: \"myapp3\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: php:fpm\n    volumes:\n      - ./www/app1.example.com:/app\n    networks:\n      - bw-services\n\n  myapp2:\n    image: php:fpm\n    volumes:\n      - ./www/app2.example.com:/app\n    networks:\n      - bw-services\n\n  myapp3:\n    image: php:fpm\n    volumes:\n      - ./www/app3.example.com:/app\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Multisite mode enabled</p> <p>The Docker autoconf integration integration implies the use of multisite mode : protecting one PHP application is the same as protecting multiple ones.</p> <p>When using the Docker autoconf integration, to support PHP applications, you will need to :</p> <ul> <li>Mount your PHP files into the <code>/var/www/html</code> folder of BunkerWeb</li> <li>Set up a PHP-FPM containers for your applications and mount the folder containing PHP apps</li> <li>Use the specific settings <code>REMOTE_PHP</code> and <code>REMOTE_PHP_PATH</code> as labels for your PHP-FPM container</li> </ul> <p>Since the Docker autoconf implies using the multisite mode, you will need to create separate directories for each of your applications. Each subdirectory should be named using the first value of <code>SERVER_NAME</code>. Here is a dummy example :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>Once the folders are created, copy your files and fix the permissions so BunkerWeb (UID/GID 101) can at least read files and list folders and PHP-FPM (UID/GID 33 if you use the <code>php:fpm</code> image) is the owner of the files and folders :</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>When you start the BunkerWeb autoconf stack, mount the <code>www</code> folder into <code>/var/www/html</code> for the Scheduler container :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for all services\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # The Docker socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>You can now create your PHP-FPM containers, mount the correct subfolders and use labels to configure BunkerWeb :</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp1\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp2\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      labels:\n        - \"bunkerweb.SERVER_NAME=app3.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp3\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>PHP is not supported for Kubernetes</p> <p>Kubernetes integration allows configuration through Ingress and the BunkerWeb controller only supports HTTP applications at the moment.</p> <p>We will assume that you already have the Linux integration stack running on your machine.</p> <p>By default, BunkerWeb will search for web files inside the <code>/var/www/html</code> folder. You can use it to store your PHP applications. Please note that you will need to configure your PHP-FPM service to get or set the user/group of the running processes and the UNIX socket file used to communicate with BunkerWeb.</p> <p>First of all, you will need to make sure that your PHP-FPM instance can access the files inside the <code>/var/www/html</code> folder and also that BunkerWeb can access the UNIX socket file in order to communicate with PHP-FPM. We recommend to set a different user like <code>www-data</code> for the PHP-FPM service and to give the nginx group access to the UNIX socket file. Here is corresponding PHP-FPM configuration :</p> <pre><code>...\n[www]\nuser = www-data\ngroup = www-data\nlisten = /run/php/php-fpm.sock\nlisten.owner = www-data\nlisten.group = nginx\nlisten.mode = 0660\n...\n</code></pre> <p>Don't forget to restart your PHP-FPM service :</p> <pre><code>systemctl restart php-fpm\n</code></pre> <p>If you enable the multisite mode, you will need to create separate directories for each of your applications. Each subdirectory should be named using the first value of <code>SERVER_NAME</code>. Here is a dummy example :</p> <pre><code>/var/www/html\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>Please note that you will need to fix the permissions so BunkerWeb (group <code>nginx</code>) can at least read files and list folders and PHP-FPM (user <code>www-data</code> but it might be different depending on your system) is the owner of the files and folders :</p> <pre><code>chown -R www-data:nginx /var/www/html &amp;&amp; \\\nfind /var/www/html -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /var/www/html -type d -exec chmod 0750 {} \\;\n</code></pre> <p>You can now edit the <code>/etc/bunkerweb/variable.env</code> file :</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nMULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\napp1.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp1.example.com_LOCAL_PHP_PATH=/var/www/html/app1.example.com\napp2.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp2.example.com_LOCAL_PHP_PATH=/var/www/html/app2.example.com\napp3.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp3.example.com_LOCAL_PHP_PATH=/var/www/html/app3.example.com\n</code></pre> <p>Now let's check the status of the Scheduler :</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>If they are already running, we can reload it :</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Otherwise, we will need to start it :</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>Multisite mode enabled</p> <p>The Swarm integration integration implies the use of multisite mode : protecting one PHP application is the same as protecting multiple ones.</p> <p>Shared volume</p> <p>Using PHP with the Docker Swarm integration needs a shared volume between all BunkerWeb and PHP-FPM instances which is not covered in this documentation.</p> <p>When using the Swarm, to support PHP applications, you will need to :</p> <ul> <li>Mount your PHP files into the <code>/var/www/html</code> folder of BunkerWeb</li> <li>Set up a PHP-FPM containers for your applications and mount the folder containing PHP apps</li> <li>Use the specific settings <code>REMOTE_PHP</code> and <code>REMOTE_PHP_PATH</code> as labels for your PHP-FPM container</li> </ul> <p>Since the Swarm integration implies using the multisite mode, you will need to create separate directories for each of your applications. Each subdirectory should be named using the first value of <code>SERVER_NAME</code>. Here is a dummy example :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>As an example, we will consider that you have a shared folder mounted on your worker nodes on the <code>/shared</code> endpoint.</p> <p>Once the folders are created, copy your files and fix the permissions so BunkerWeb (UID/GID 101) can at least read files and list folders and PHP-FPM (UID/GID 33 if you use the <code>php:fpm</code> image) is the owner of the files and folders :</p> <pre><code>chown -R 33:101 /shared/www &amp;&amp; \\\nfind /shared/www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /shared/www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>When you start the BunkerWeb stack, mount the <code>/shared/www</code> folder into <code>/var/www/html</code> for the Scheduler container :</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    volumes:\n      - /shared/www:/var/www/html\n...\n</code></pre> <p>You can now create your PHP-FPM services, mount the correct subfolders and use labels to configure BunkerWeb :</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app1.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp1\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app2.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp2\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app3.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp3\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"advanced/#ipv6","title":"IPv6","text":"<p>Experimental feature</p> <p>This feature is not production-ready. Feel free to test it and report us any bug using issues in the GitHub repository.</p> <p>By default, BunkerWeb will only listen on IPv4 addresses and won't use IPv6 for network communications. If you want to enable IPv6 support, you need to set <code>USE_IPV6=yes</code>. Please note that IPv6 configuration of your network and environment is out-of-the-scope of this documentation.</p> Docker / Autoconf / SwarmLinux <p>First of all, you will need to configure your Docker daemon to enable IPv6 support for containers and use ip6tables if needed. Here is sample configuration for your <code>/etc/docker/daemon.json</code> file :</p> <pre><code>{\n  \"experimental\": true,\n  \"ipv6\": true,\n  \"ip6tables\": true,\n  \"fixed-cidr-v6\": \"fd00:dead:beef::/48\"\n}\n</code></pre> <p>You can now restart the Docker service to apply the changes :</p> <pre><code>systemctl restart docker\n</code></pre> <p>Once Docker is setup to support IPv6 you can add the <code>USE_IPV6</code> setting and configure the <code>bw-services</code> for IPv6 :</p> <pre><code>services:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      USE_IPv6: \"yes\"\n\n...\n\nnetworks:\n  bw-services:\n    name: bw-services\n    enable_ipv6: true\n    ipam:\n      config:\n        - subnet: fd00:13:37::/48\n          gateway: fd00:13:37::1\n\n...\n</code></pre> <p>You will need to add the settings to the <code>/etc/bunkerweb/variables.env</code> file :</p> <pre><code>...\nUSE_IPV6=yes\n...\n</code></pre> <p>Let's check the status of BunkerWeb :</p> <pre><code>systemctl status bunkerweb\n</code></pre> <p>If they are already running, we can restart it :</p> <pre><code>systemctl restart bunkerweb\n</code></pre> <p>Otherwise, we will need to start it :</p> <pre><code>systemctl start bunkerweb\n</code></pre>"},{"location":"advanced/#security-tuning","title":"Security tuning","text":"<p>BunkerWeb offers many security features that you can configure with features. Even if the default values of settings ensure a minimal \"security by default\", we strongly recommend you tune them. By doing so you will be able to ensure the security level of your choice but also manage false positives.</p> <p>Other features</p> <p>This section only focuses on security tuning, see the features section of the documentation for other settings.</p> <p> </p> Overview and order of the core security plugins"},{"location":"advanced/#crowdsec-console-integration","title":"CrowdSec Console integration","text":"<p>If you aren\u2019t already familiar with CrowdSec Console integration, CrowdSec leverages crowdsourced intelligence to combat cyber threats. Think of it as the \"Waze of cybersecurity\"\u2014when one server is attacked, other systems worldwide are alerted and protected from the same attackers. You can learn more about it here.</p> <p>Congratulations, your BunkerWeb instance is now enrolled in your CrowdSec Console!</p> <p>Pro tip: When viewing your alerts, click the \"columns\" option and check the \"context\" checkbox to access BunkerWeb-specific data.</p> <p> </p> BunkerWeb data shown in the context column"},{"location":"advanced/#monitoring-and-reporting","title":"Monitoring and reporting","text":""},{"location":"advanced/#monitoring-pro","title":"Monitoring  (PRO)","text":"<p>STREAM support </p> <p>The monitoring plugin lets you collect and retrieve metrics about BunkerWeb. By enabling it, your instance(s) will start collecting various data related to attacks, requests and performance. You can then retrieve them by calling the <code>/monitoring</code> API endpoint on regular basis or by using other plugins like the Prometheus exporter one.</p> <p>List of features</p> <ul> <li>Enable collection of various BunkerWeb metrics</li> <li>Retrieve metrics from the API</li> <li>Use in combination with other plugins (e.g. Prometheus exporter)</li> <li>Dedicate UI page to monitor your instance(s)</li> </ul> <p>List of settings</p> Setting Default Context Multiple Description <code>USE_MONITORING</code> <code>yes</code> global no Enable monitoring of BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global no Size of the dict to store monitoring metrics."},{"location":"advanced/#prometheus-exporter-pro","title":"Prometheus exporter  (PRO)","text":"<p>STREAM support </p> <p>The Prometheus exporter plugin adds a Prometheus exporter on your BunkerWeb instance(s). When enabled, you can configure your Prometheus instance(s) to scrape a specific endpoint on Bunkerweb and gather internal metrics.</p> <p>We also provide a Grafana dashboard that you can import into your own instance and connect to your own Prometheus datasource.</p> <p>Please note that the use of Prometheus exporter plugin requires to enable the Monitoring plugin (<code>USE_MONITORING=yes</code>)</p> <p>List of features</p> <ul> <li>Prometheus exporter providing internal BunkerWeb metrics</li> <li>Dedicated and configurable port, listen IP and URL</li> <li>Whitelist IP/network for maximum security</li> </ul> <p>List of settings</p> Setting Default Context Multiple Description <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global no Enable the Prometheus export. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global no Listening IP of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global no Listening port of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global no HTTP URL of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global no List of IP/networks allowed to contact the Prometheus exporter endpoint."},{"location":"advanced/#reporting-pro","title":"Reporting  (PRO)","text":"<p>STREAM support </p> <p>Monitoring plugin needed</p> <p>This plugins requires the Monitoring Pro plugin to be installed and enabled with the <code>USE_MONITORING</code> setting set to <code>yes</code>.</p> <p>The Reporting plugin provides a comprehensive solution for regular reporting of important data from BunkerWeb, including global statistics, attacks, bans, requests, reasons, and AS information. It offers a wide range of features, including automatic report creation, customization options, and seamless integration with monitoring pro plugin. With the Reporting plugin, you can easily generate and manage reports to monitor the performance and security of your application.</p> <p>List of features</p> <ul> <li>Regular reporting of important data from BunkerWeb, including global statistics, attacks, bans, requests, reasons, and AS information.</li> <li>Integration with Monitoring Pro plugin for seamless integration and enhanced reporting capabilities.</li> <li>Support for webhooks (classic, Discord, and Slack) for real-time notifications.</li> <li>Support for SMTP for email notifications.</li> <li>Configuration options for customization and flexibility.</li> </ul> <p>List of settings</p> Setting Default Context Description <code>USE_REPORTING_SMTP</code> <code>no</code> global Enable sending the report via email. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global Enable sending the report via webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global The frequency at which reports are sent. <code>REPORTING_WEBHOOK_URLS</code> global List of webhook URLs to receive the report in Markdown (separated by spaces). <code>REPORTING_SMTP_EMAILS</code> global List of email addresses to receive the report in HTML format (separated by spaces). <code>REPORTING_SMTP_HOST</code> global The host server used for SMTP sending. <code>REPORTING_SMTP_PORT</code> <code>465</code> global The port used for SMTP. Please note that there are different standards depending on the type of connection (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global The email address used as the sender. Note that 2FA must be disabled for this email address. <code>REPORTING_SMTP_FROM_USER</code> global The user authentication value for sending via the from email address. <code>REPORTING_SMTP_FROM_PASSWORD</code> global The password authentication value for sending via the from email address. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global Determine whether or not to use a secure connection for SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global The subject line of the email. <p>Information and behavior</p> <ul> <li>case <code>USE_REPORTING_SMTP</code> is set to <code>yes</code>, the setting <code>REPORTING_SMTP_EMAILS</code> must be set.</li> <li>case <code>USE_REPORTING_WEBHOOK</code> is set to <code>yes</code>, the setting <code>REPORTING_WEBHOOK_URLS</code> must be set.</li> <li>Accepted values for <code>REPORTING_SCHEDULE</code> are <code>daily</code>, <code>weekly</code>and <code>monthly</code>.</li> <li>case no <code>REPORTING_SMTP_FROM_USER</code> and <code>REPORTING_SMTP_FROM_PASSWORD</code> are set, the plugin will try to send the email without authentication.</li> <li>case <code>REPORTING_SMTP_FROM_USER</code> isn't set but <code>REPORTING_SMTP_FROM_PASSWORD</code> is set, the plugin will use the <code>REPORTING_SMTP_FROM_EMAIL</code> as the username.</li> <li>case the job fails, the plugin will retry sending the report in the next execution.</li> </ul>"},{"location":"advanced/#backup-and-restore","title":"Backup and restore","text":""},{"location":"advanced/#backup-s3-pro","title":"Backup S3  (PRO)","text":"<p>STREAM support </p> <p>The Backup S3 tool seamlessly automates data protection, similar to the community backup plugin. However, it stands out by securely storing backups directly in an S3 bucket.</p> <p>By activating this feature, you're proactively safeguarding your data's integrity. Storing backups remotely shields crucial information from threats like hardware failures, cyberattacks, or natural disasters. This ensures both security and availability, enabling swift recovery during unexpected events, preserving operational continuity, and ensuring peace of mind.</p> Information for Red Hat Enterprise Linux (RHEL) 8.9 users <p>If you are using RHEL 8.9 and plan on using an external database, you will need to install the <code>mysql-community-client</code> package to ensure the <code>mysqldump</code> command is available. You can install the package by executing the following commands:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Install the MySQL repository configuration package</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Enable the MySQL repository</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Install the MySQL client</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Install the PostgreSQL repository configuration package</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Install the PostgreSQL client</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <p>List of features</p> <ul> <li>Automatic data backup to an S3 bucket</li> <li>Flexible scheduling options: daily, weekly, or monthly</li> <li>Rotation management for controlling the number of backups to keep</li> <li>Customizable compression level for backup files</li> </ul> <p>List of settings</p> Setting Default Context Description <code>USE_BACKUP_S3</code> <code>no</code> global Enable or disable the S3 backup feature <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global The frequency of the backup <code>BACKUP_S3_ROTATION</code> <code>7</code> global The number of backups to keep <code>BACKUP_S3_ENDPOINT</code> global The S3 endpoint <code>BACKUP_S3_BUCKET</code> global The S3 bucket <code>BACKUP_S3_DIR</code> global The S3 directory <code>BACKUP_S3_REGION</code> global The S3 region <code>BACKUP_S3_ACCESS_KEY_ID</code> global The S3 access key ID <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global The S3 access key secret <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global The compression level of the backup zip file"},{"location":"advanced/#manual-backup","title":"Manual backup","text":"<p>To manually initiate a backup, execute the following command:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>This command will create a backup of your database and store it in the S3 bucket specified in the <code>BACKUP_S3_BUCKET</code> setting.</p> <p>You can also specify a custom S3 bucket for the backup by providing the <code>BACKUP_S3_BUCKET</code> environment variable when executing the command:</p> LinuxDocker <pre><code>BACKUP_S3_BUCKET=your-bucket-name bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it -e BACKUP_S3_BUCKET=your-bucket-name &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Specifications for MariaDB/MySQL</p> <p>In case you are using MariaDB/MySQL, you may encounter the following error when trying to backup your database:</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>To resolve this issue, you can execute the following command to change the authentication plugin to <code>mysql_native_password</code>:</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>If you're using the Docker integration, you can add the following command to the <code>docker-compose.yml</code> file to automatically change the authentication plugin:</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"advanced/#manual-restore","title":"Manual restore","text":"<p>To manually initiate a restore, execute the following command:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre> <p>This command will create a temporary backup of your database in the S3 bucket specified in the <code>BACKUP_S3_BUCKET</code> setting and restore your database to the latest backup available in the bucket.</p> <p>You can also specify a custom backup file for the restore by providing the path to it as an argument when executing the command:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore s3_backup_file.zip\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup restore s3_backup_file.zip\n</code></pre> <p>In case of failure</p> <p>Don't worry if the restore fails, you can always restore your database to the previous state by executing the command again as a backup is created before the restore:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre>"},{"location":"advanced/#migration-pro","title":"Migration  (PRO)","text":"<p>STREAM support </p> <p>The Migration plugin revolutionizes BunkerWeb configuration transfers between instances with its user-friendly web interface, simplifying the entire migration journey. Whether you're upgrading systems, scaling infrastructure, or transitioning environments, this tool empowers you to effortlessly transfer settings, preferences, and data with unmatched ease and confidence. Say goodbye to cumbersome manual processes and hello to a seamless, hassle-free migration experience.</p> <p>List of features</p> <ul> <li> <p>Effortless Migration: Easily transfer BunkerWeb configurations between instances without the complexities of manual procedures.</p> </li> <li> <p>Intuitive Web Interface: Navigate through the migration process effortlessly with a user-friendly web interface designed for intuitive operation.</p> </li> <li> <p>Cross-Database Compatibility: Enjoy seamless migration across various database platforms, including SQLite, MySQL, MariaDB, and PostgreSQL, ensuring compatibility with your preferred database environment.</p> </li> </ul>"},{"location":"advanced/#create-a-migration-file","title":"Create a migration file","text":"<p>To manually create a migration file, execute the following command:</p> LinuxDocker <pre><code>bwcli plugin migration create /path/to/migration/file\n</code></pre> <ol> <li> <p>Create a migration file:</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration create /path/to/migration/file\n</code></pre> </li> <li> <p>Copy the migration file to your local machine:</p> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/migration/file /path/to/migration/file\n</code></pre> </li> </ol> <p>This command will create a backup of your database and store it in the backup directory specified in the command.</p> <p>Specifications for MariaDB/MySQL</p> <p>In case you are using MariaDB/MySQL, you may encounter the following error when trying to backup your database:</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>To resolve this issue, you can execute the following command to change the authentication plugin to <code>mysql_native_password</code>:</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>If you're using the Docker integration, you can add the following command to the <code>docker-compose.yml</code> file to automatically change the authentication plugin:</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"advanced/#initialize-a-migration","title":"Initialize a migration","text":"<p>To manually initialize a migration, execute the following command:</p> LinuxDockerAll-in-one <pre><code>bwcli plugin migration migrate /path/to/migration/file\n</code></pre> <ol> <li> <p>Copy the migration file to the container:</p> <pre><code>docker cp /path/to/migration/file &lt;scheduler_container&gt;:/path/to/migration/file\n</code></pre> </li> <li> <p>Initialize the migration:</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration migrate /path/to/migration/file\n</code></pre> </li> </ol> <ol> <li> <p>Copy the migration file to the container:</p> <pre><code>docker cp /path/to/migration/file bunkerweb-aio:/path/to/migration/file\n</code></pre> </li> <li> <p>Initialize the migration:</p> <pre><code>docker exec -it bunkerweb-aio bwcli plugin migration migrate /path/to/migration/file\n</code></pre> </li> </ol> <p>This command seamlessly migrates your BunkerWeb data to precisely match the configuration outlined in the migration file.</p>"},{"location":"advanced/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>STREAM support </p> <p>The Anti DDoS Plugin provides advanced protection against Distributed Denial of Service (DDoS) attacks by monitoring, analyzing, and filtering suspicious traffic in real-time.</p> <p>By employing a sliding window mechanism, the plugin maintains an in-memory dictionary of request timestamps to detect abnormal traffic spikes from individual IP addresses. Based on the configured security mode, it can either block offending connections or log the suspicious activity for further review.</p>"},{"location":"advanced/#features","title":"Features","text":"<ul> <li>Real-Time Traffic Analysis: Continuously monitors incoming requests to detect potential DDoS attacks.</li> <li>Sliding Window Mechanism: Tracks recent request activity within a configurable time window.</li> <li>Configurable Thresholds: Allows you to define the maximum number of suspicious requests per IP.</li> <li>Advanced Blocking Logic: Evaluates both per-IP request counts and the number of distinct IPs exceeding the threshold.</li> <li>Flexible Security Modes: Choose between immediate connection blocking or detection-only (logging) mode.</li> <li>Optimized In-Memory Datastore: Ensures high-speed lookups and efficient metric tracking.</li> <li>Automatic Housekeeping: Periodically clears outdated data to maintain optimal performance.</li> </ul>"},{"location":"advanced/#configuration","title":"Configuration","text":"<p>Customize the plugin behavior using the following settings:</p> Setting Default Context Multiple Description <code>USE_ANTIDDOS</code> <code>no</code> global no Enable or disable the Anti DDoS protection. Set to <code>\"yes\"</code> to activate the plugin. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global no Size of the in-memory datastore for tracking DDoS metrics (e.g., <code>10M</code>, <code>500k</code>). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global no Maximum number of suspicious requests allowed per IP within the defined time window. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global no Time window in seconds during which suspicious requests are tallied. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global no HTTP status codes considered suspicious and used to trigger anti-DDoS actions. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global no Minimum number of distinct IPs that must exceed the threshold before enforcing the block mode."},{"location":"advanced/#best-practices","title":"Best Practices","text":"<ul> <li>Threshold Tuning: Adjust <code>ANTIDDOS_THRESHOLD</code> and <code>ANTIDDOS_WINDOW_TIME</code> based on your typical traffic patterns.</li> <li>Status Code Review: Regularly update <code>ANTIDDOS_STATUS_CODES</code> to capture new or evolving suspicious behaviors.</li> <li>Monitoring: Analyze logs and metrics periodically to fine-tune settings and improve overall protection.</li> </ul>"},{"location":"advanced/#user-manager-pro","title":"User Manager  (PRO)","text":"<p>The User Management Plugin offers a robust interface for administering user accounts within your system.</p> <p>With this plugin, administrators can effortlessly create, update, and disable user accounts, manage user roles, toggle two-factor authentication (2FA), and view detailed user information such as last login timestamps and account statuses (active or inactive). Designed with security and ease-of-use in mind, this plugin simplifies routine user management tasks while ensuring compliance and auditability.</p>"},{"location":"advanced/#features_1","title":"Features","text":"<ul> <li>User Account Operations: Import in CSV/XSLX format, Create, edit, and delete user accounts with ease.</li> <li>Role-Based Access Control: Assign and modify user roles to manage permissions and access levels.</li> <li>2FA Management: Disable two-factor authentication based on administrative decisions.</li> <li>Comprehensive User Insights: Monitor key user data including last login times, account creation dates, and active/inactive status.</li> <li>Audit Logging: Maintain an audit trail for all user management actions for enhanced security and compliance.</li> </ul> User Manager page User Manager - Create user form User Manager - Activities page"},{"location":"advanced/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>The Easy Resolve Plugin lets you quickly remediate false positives and recurring issues directly from the Reports page. It turns guided \"Resolve\" actions into safe, scoped configuration updates\u2014without manual editing.</p>"},{"location":"advanced/#features_2","title":"Features","text":"<ul> <li>One\u2011click actions from Reports and report details.</li> <li>Context\u2011aware suggestions for ModSecurity, blacklist, and DNSBL.</li> <li>Generates safe ModSecurity exclusions or updates ignore lists.</li> <li>Applies changes at service or global scope with permission checks.</li> <li>Optional auto\u2011open of the related configuration page after apply.</li> </ul> Reports page - with Easy Resolve ModSecurity resolve DNSBL resolve Blacklist - IP Blacklist - User\u2011Agent Blacklist - rDNS Blacklist - ASN Blacklist - URI"},{"location":"api/","title":"API","text":""},{"location":"api/#overview","title":"Overview","text":"<p>The BunkerWeb API is the control plane used to manage BunkerWeb instances programmatically: list and manage instances, reload/stop, handle bans, plugins, jobs, configs, and more. It exposes a documented FastAPI application with strong authentication, authorization and rate limiting.</p> <p>Open the interactive documentation at <code>/docs</code> (or <code>&lt;root_path&gt;/docs</code> if you set <code>API_ROOT_PATH</code>). The OpenAPI schema is available at <code>/openapi.json</code>.</p> <p>Security</p> <p>The API is a privileged control plane. Do not expose it on the public Internet without additional protections.</p> <p>At a minimum, restrict source IPs (<code>API_WHITELIST_IPS</code>), enable authentication (<code>API_TOKEN</code> or API users + Biscuit), and consider putting it behind BunkerWeb with an unguessable path and extra access controls.</p>"},{"location":"api/#prerequisites","title":"Prerequisites","text":"<p>The API service requires access to the BunkerWeb database (<code>DATABASE_URI</code>). It is usually deployed alongside the Scheduler and optionally the Web UI. The recommended setup is to run BunkerWeb in front as a reverse proxy and isolate the API on an internal network.</p> <p>See the quickstart wizard and architecture guidance in the quickstart guide.</p>"},{"location":"api/#highlights","title":"Highlights","text":"<ul> <li>Instance\u2011aware: broadcasts operational actions to discovered instances.</li> <li>Strong auth: Basic for admins, Bearer admin override, or Biscuit ACL for fine\u2011grained permissions.</li> <li>IP allowlist and flexible per\u2011route rate limiting.</li> <li>Standard health/readiness signals and startup safety checks.</li> </ul>"},{"location":"api/#compose-boilerplates","title":"Compose boilerplates","text":"DockerDocker Autoconf <p>Reverse proxy the API under <code>/api</code> with BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # Shared instance control-plane allowlist for BunkerWeb/Scheduler\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\"  # Match the instance service name\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      # Reverse-proxy the API on /api\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/api\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-api:8888\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Use a strong password\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"                      # API allowlist\n      API_TOKEN: \"secret\"                                                 # Optional admin override token\n      API_ROOT_PATH: \"/api\"                                               # Match reverse-proxy path\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"  # Use a strong password\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Same as above but leveraging the Autoconf service to discover and configure services automatically. The API is exposed under <code>/api</code> using labels on the API container.</p> <pre><code>x-api-env: &amp;api-env\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Use a strong password\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *api-env\n      BUNKERWEB_INSTANCES: \"\"    # Discovered by Autoconf\n      SERVER_NAME: \"\"            # Filled via labels\n      MULTISITE: \"yes\"           # Mandatory with Autoconf\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *api-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      &lt;&lt;: *api-env\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      API_TOKEN: \"secret\"\n      API_ROOT_PATH: \"/api\"\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/api\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-api:8888\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: unless-stopped\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Reverse proxy path</p> <p>Keep the API path unguessable and combine with the API allowlist and authentication.</p> <p>If you already expose another app on the same server name with a template (e.g. <code>USE_TEMPLATE</code>), prefer a separate hostname for the API to avoid conflicts.</p>"},{"location":"api/#allinone","title":"All\u2011In\u2011One","text":"<p>If you use the All\u2011In\u2011One image, the API can be enabled by setting <code>SERVICE_API=yes</code>:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre>"},{"location":"api/#authentication","title":"Authentication","text":"<p>Supported ways to authenticate requests:</p> <ul> <li>Basic admin: When credentials belong to an admin API user, protected endpoints accept <code>Authorization: Basic &lt;base64(username:password)&gt;</code>.</li> <li>Admin Bearer override: If <code>API_TOKEN</code> is configured, <code>Authorization: Bearer &lt;API_TOKEN&gt;</code> grants full access.</li> <li>Biscuit token (recommended): Obtain a token from <code>POST /auth</code> using Basic credentials or a JSON/form body containing <code>username</code> and <code>password</code>. Use the returned token as <code>Authorization: Bearer &lt;token&gt;</code> on subsequent calls.</li> </ul> <p>Example: get a Biscuit, list instances, then reload all instances.</p> <pre><code># 1) Get a Biscuit token with admin credentials\nTOKEN=$(curl -s -X POST -u admin:changeme http://api.example.com/auth | jq -r .token)\n\n# 2) List instances\ncurl -H \"Authorization: Bearer $TOKEN\" http://api.example.com/instances\n\n# 3) Reload configuration across all instances (no test)\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n     \"http://api.example.com/instances/reload?test=no\"\n</code></pre>"},{"location":"api/#biscuit-facts-and-checks","title":"Biscuit facts and checks","text":"<p>Tokens embed facts like <code>user(&lt;username&gt;)</code>, <code>client_ip(&lt;ip&gt;)</code>, <code>domain(&lt;host&gt;)</code>, and a coarse role <code>role(\"api_user\", [\"read\", \"write\"])</code> derived from DB permissions. Admins include <code>admin(true)</code> while non\u2011admins carry fine\u2011grained facts such as <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code>.</p> <p>Authorization maps the route/method to required permissions; <code>admin(true)</code> always passes. When fine\u2011grained facts are absent, the guard falls back to the coarse role: GET/HEAD/OPTIONS require <code>read</code>; write verbs require <code>write</code>.</p> <p>Keys are stored at <code>/var/lib/bunkerweb/.api_biscuit_private_key</code> and <code>/var/lib/bunkerweb/.api_biscuit_public_key</code>. You can also provide <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> via environment variables; if neither files nor env are set, the API generates a key pair at startup and persists it securely.</p>"},{"location":"api/#permissions-acl","title":"Permissions (ACL)","text":"<p>This API supports two authorization layers:</p> <ul> <li>Coarse role: Tokens carry <code>role(\"api_user\", [\"read\"[, \"write\"]])</code> for endpoints without a fine\u2011grained mapping. Read maps to GET/HEAD/OPTIONS; write maps to POST/PUT/PATCH/DELETE.</li> <li>Fine\u2011grained ACL: Tokens embed <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code> and routes declare what they require. <code>admin(true)</code> bypasses all checks.</li> </ul> <p>Supported resource types: <code>instances</code>, <code>global_config</code>, <code>services</code>, <code>configs</code>, <code>plugins</code>, <code>cache</code>, <code>bans</code>, <code>jobs</code>.</p> <p>Permission names by resource type:</p> <ul> <li>instances: <code>instances_read</code>, <code>instances_update</code>, <code>instances_delete</code>, <code>instances_create</code>, <code>instances_execute</code></li> <li>global_config: <code>global_config_read</code>, <code>global_config_update</code></li> <li>services: <code>service_read</code>, <code>service_create</code>, <code>service_update</code>, <code>service_delete</code>, <code>service_convert</code>, <code>service_export</code></li> <li>configs: <code>configs_read</code>, <code>config_read</code>, <code>config_create</code>, <code>config_update</code>, <code>config_delete</code></li> <li>plugins: <code>plugin_read</code>, <code>plugin_create</code>, <code>plugin_delete</code></li> <li>cache: <code>cache_read</code>, <code>cache_delete</code></li> <li>bans: <code>ban_read</code>, <code>ban_update</code>, <code>ban_delete</code>, <code>ban_created</code></li> <li>jobs: <code>job_read</code>, <code>job_run</code></li> </ul> <p>Resource IDs: For fine\u2011grained checks, the second path segment is treated as <code>resource_id</code> when meaningful. Examples: <code>/services/{service}</code> -&gt; <code>{service}</code>; <code>/configs/{service}/...</code> -&gt; <code>{service}</code>. Use <code>\"*\"</code> (or omit) to grant globally for a resource type.</p> <p>User and ACL configuration:</p> <ul> <li>Admin user: Set <code>API_USERNAME</code> and <code>API_PASSWORD</code> to create the first admin at startup. To rotate creds later, set <code>OVERRIDE_API_CREDS=yes</code> (or ensure the admin was created with method <code>manual</code>). Only one admin exists; additional attempts fall back to non\u2011admin creation.</li> <li>Non\u2011admin users and grants: Provide <code>API_ACL_BOOTSTRAP_FILE</code> pointing to a JSON file, or mount <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>. The API reads it at startup to create/update users and permissions.</li> <li>ACL cache file: A read\u2011only summary is written at <code>/var/lib/bunkerweb/api_acl.json</code> at startup for introspection; authorization evaluates DB\u2011backed grants baked into the Biscuit token.</li> </ul> <p>Bootstrap JSON examples (both forms supported):</p> <pre><code>{\n  \"users\": {\n    \"ci\": {\n      \"admin\": false,\n      \"password\": \"Str0ng&amp;P@ss!\",\n      \"permissions\": {\n        \"services\": {\n          \"*\": { \"service_read\": true },\n          \"app-frontend\": { \"service_update\": true, \"service_delete\": false }\n        },\n        \"configs\": {\n          \"app-frontend\": { \"config_read\": true, \"config_update\": true }\n        }\n      }\n    },\n    \"ops\": {\n      \"admin\": false,\n      \"password_hash\": \"$2b$13$...bcrypt-hash...\",\n      \"permissions\": {\n        \"instances\": { \"*\": { \"instances_execute\": true } },\n        \"jobs\": { \"*\": { \"job_run\": true } }\n      }\n    }\n  }\n}\n</code></pre> <p>Or list form:</p> <pre><code>{\n  \"users\": [\n    {\n      \"username\": \"ci\",\n      \"password\": \"Str0ng&amp;P@ss!\",\n      \"permissions\": [\n        { \"resource_type\": \"services\", \"resource_id\": \"*\", \"permission\": \"service_read\" },\n        { \"resource_type\": \"services\", \"resource_id\": \"app-frontend\", \"permission\": \"service_update\" }\n      ]\n    }\n  ]\n}\n</code></pre> <p>Notes:</p> <ul> <li>Passwords may be plaintext (<code>password</code>) or bcrypt (<code>password_hash</code> / <code>password_bcrypt</code>). Weak plaintext passwords are rejected in non\u2011debug builds; if missing, a random one is generated and a warning is logged.</li> <li><code>resource_id: \"*\"</code> (or null/empty) grants globally on that resource type.</li> <li>Existing users can have passwords updated and additional grants applied via bootstrap.</li> </ul>"},{"location":"api/#feature-reference","title":"Feature reference","text":"<p>The API is organised by resource-focused routers. Use the sections below as a capability map; the interactive schema at <code>/docs</code> documents request/response models in detail.</p>"},{"location":"api/#core-and-authentication","title":"Core and authentication","text":"<ul> <li><code>GET /ping</code>, <code>GET /health</code>: lightweight liveness probes for the API service itself.</li> <li><code>POST /auth</code>: exchange Basic credentials (or the admin override token) for a Biscuit. Accepts JSON, form, or <code>Authorization</code> headers. Admins may also continue using HTTP Basic directly on protected routes when desired.</li> </ul>"},{"location":"api/#instances-control-plane","title":"Instances control plane","text":"<ul> <li><code>GET /instances</code>: list registered instances, including creation/last-seen timestamps, registration method, and metadata.</li> <li><code>POST /instances</code>: register a new API-managed instance (hostname, optional port, server name, friendly name, method).</li> <li><code>GET /instances/{hostname}</code> / <code>PATCH /instances/{hostname}</code> / <code>DELETE /instances/{hostname}</code>: inspect, update mutable fields, or remove API-managed instances.</li> <li><code>DELETE /instances</code>: bulk removal; skips non-API instances and reports them in <code>skipped</code>.</li> <li><code>GET /instances/ping</code> and <code>GET /instances/{hostname}/ping</code>: health checks across all or individual instances.</li> <li><code>POST /instances/reload?test=yes|no</code>, <code>POST /instances/{hostname}/reload</code>: trigger configuration reloads (test mode performs dry-run validation).</li> <li><code>POST /instances/stop</code>, <code>POST /instances/{hostname}/stop</code>: relay stop commands to instances.</li> </ul>"},{"location":"api/#global-configuration","title":"Global configuration","text":"<ul> <li><code>GET /global_config</code>: fetch non-default settings (use <code>full=true</code> for the entire config, <code>methods=true</code> to include provenance).</li> <li><code>PATCH /global_config</code>: upsert API-owned (<code>method=\"api\"</code>) global settings; validation errors call out unknown or read-only keys.</li> </ul>"},{"location":"api/#service-lifecycle","title":"Service lifecycle","text":"<ul> <li><code>GET /services</code>: enumerate services with metadata, including draft status and timestamps.</li> <li><code>GET /services/{service}</code>: retrieve non-default overlays (<code>full=false</code>) or the full config snapshot (<code>full=true</code>) for a service.</li> <li><code>POST /services</code>: create services, optionally as draft, and seed prefixed variables (<code>{service}_{KEY}</code>). Updates the <code>SERVER_NAME</code> roster atomically.</li> <li><code>PATCH /services/{service}</code>: rename services, toggle draft flags, and update prefixed variables. Ignores direct edits to <code>SERVER_NAME</code> within <code>variables</code> for safety.</li> <li><code>DELETE /services/{service}</code>: remove a service and its derived configuration keys.</li> <li><code>POST /services/{service}/convert?convert_to=online|draft</code>: quickly switch draft/online state without altering other variables.</li> </ul>"},{"location":"api/#custom-configuration-snippets","title":"Custom configuration snippets","text":"<ul> <li><code>GET /configs</code>: list custom config fragments (HTTP/server/stream/ModSecurity/CRS hooks) for a service (<code>service=global</code> by default). <code>with_data=true</code> embeds UTF-8 content when printable.</li> <li><code>POST /configs</code> and <code>POST /configs/upload</code>: create new snippets from JSON payloads or uploaded files. Accepted types include <code>http</code>, <code>server_http</code>, <code>default_server_http</code>, <code>modsec</code>, <code>modsec_crs</code>, <code>stream</code>, <code>server_stream</code>, and CRS plugin hooks. Names must match <code>^[\\w_-]{1,64}$</code>.</li> <li><code>GET /configs/{service}/{type}/{name}</code>: retrieve a snippet with optional content (<code>with_data=true</code>).</li> <li><code>PATCH /configs/{service}/{type}/{name}</code> and <code>PATCH .../upload</code>: update or move API-managed snippets; template- or file-managed entries stay read-only.</li> <li><code>DELETE /configs</code> and <code>DELETE /configs/{service}/{type}/{name}</code>: prune API-managed snippets while preserving template-managed ones, returning a <code>skipped</code> list for ignored entries.</li> </ul>"},{"location":"api/#ban-orchestration","title":"Ban orchestration","text":"<ul> <li><code>GET /bans</code>: aggregate active bans reported by all instances.</li> <li><code>POST /bans</code> or <code>POST /bans/ban</code>: apply one or multiple bans. Payloads may be JSON objects, arrays, or stringified JSON. <code>service</code> is optional; when omitted the ban is global.</li> <li><code>POST /bans/unban</code> or <code>DELETE /bans</code>: remove bans globally or per service using the same flexible payloads.</li> </ul>"},{"location":"api/#plugin-management","title":"Plugin management","text":"<ul> <li><code>GET /plugins?type=all|external|ui|pro</code>: list plugins with metadata; <code>with_data=true</code> includes packaged bytes when available.</li> <li><code>POST /plugins/upload</code>: install UI plugins from <code>.zip</code>, <code>.tar.gz</code>, or <code>.tar.xz</code> archives. Archives may bundle multiple plugins as long as each contains a <code>plugin.json</code>.</li> <li><code>DELETE /plugins/{id}</code>: remove a UI plugin by ID (<code>^[\\w.-]{4,64}$</code>).</li> </ul>"},{"location":"api/#job-cache-and-execution","title":"Job cache and execution","text":"<ul> <li><code>GET /cache</code>: list cached artifacts produced by scheduler jobs, filtered by service, plugin ID, or job name. <code>with_data=true</code> includes printable file content.</li> <li><code>GET /cache/{service}/{plugin}/{job}/{file}</code>: fetch a specific cache file (<code>download=true</code> streams an attachment).</li> <li><code>DELETE /cache</code> or <code>DELETE /cache/{service}/{plugin}/{job}/{file}</code>: delete cache files and notify the scheduler about affected plugins.</li> <li><code>GET /jobs</code>: inspect known jobs, their schedule metadata, and cache summaries.</li> <li><code>POST /jobs/run</code>: request job execution by flagging the associated plugin(s) as changed.</li> </ul>"},{"location":"api/#operational-notes","title":"Operational notes","text":"<ul> <li>Write endpoints persist to the shared database; instances pick up changes via scheduler sync or after a <code>/instances/reload</code>.</li> <li>Errors are normalised to <code>{ \"status\": \"error\", \"message\": \"...\" }</code> with appropriate HTTP status codes (422 validation, 404 not found, 403 ACL, 5xx upstream failures).</li> </ul>"},{"location":"api/#rate-limiting","title":"Rate limiting","text":"<p>Per\u2011client rate limiting is handled by SlowAPI. Enable/disable it and shape limits via environment variables or <code>/etc/bunkerweb/api.yml</code>.</p> <ul> <li><code>API_RATE_LIMIT_ENABLED</code> (default: <code>yes</code>)</li> <li>Default limit: <code>API_RATE_LIMIT_TIMES</code> per <code>API_RATE_LIMIT_SECONDS</code> (e.g. <code>100</code> per <code>60</code>)</li> <li><code>API_RATE_LIMIT_RULES</code>: inline JSON/CSV, or a path to a YAML/JSON file with per\u2011route rules</li> <li>Storage backend: in\u2011memory or Redis/Valkey when <code>USE_REDIS=yes</code> and <code>REDIS_*</code> variables are provided (Sentinel supported)</li> <li>Headers: <code>API_RATE_LIMIT_HEADERS_ENABLED</code> (default: <code>yes</code>)</li> </ul> <p>Example YAML (mounted at <code>/etc/bunkerweb/api.yml</code>):</p> <pre><code>API_RATE_LIMIT_ENABLED: yes\nAPI_RATE_LIMIT_DEFAULTS: [\"200/minute\"]\nAPI_RATE_LIMIT_RULES:\n  - path: \"/auth\"\n    methods: \"POST\"\n    times: 10\n    seconds: 60\n  - path: \"/instances*\"\n    methods: \"GET|POST\"\n    times: 100\n    seconds: 60\n</code></pre>"},{"location":"api/#configuration","title":"Configuration","text":"<p>You can configure the API via environment variables, Docker secrets, and the optional <code>/etc/bunkerweb/api.yml</code> or <code>/etc/bunkerweb/api.env</code> files. Key settings:</p> <ul> <li>Docs &amp; schema: <code>API_DOCS_URL</code>, <code>API_REDOC_URL</code>, <code>API_OPENAPI_URL</code>, <code>API_ROOT_PATH</code>.</li> <li>Auth basics: <code>API_TOKEN</code> (admin override Bearer), <code>API_USERNAME</code>/<code>API_PASSWORD</code> (create/update admin), <code>OVERRIDE_API_CREDS</code>.</li> <li>ACL and users: <code>API_ACL_BOOTSTRAP_FILE</code> (JSON path).</li> <li>Biscuit policy: <code>API_BISCUIT_TTL_SECONDS</code> (0/off disables TTL), <code>CHECK_PRIVATE_IP</code> (bind token to client IP unless private).</li> <li>IP allowlist: <code>API_WHITELIST_ENABLED</code>, <code>API_WHITELIST_IPS</code>.</li> <li>Rate limiting (core): <code>API_RATE_LIMIT_ENABLED</code>, <code>API_RATE_LIMIT_TIMES</code>, <code>API_RATE_LIMIT_SECONDS</code>, <code>API_RATE_LIMIT_HEADERS_ENABLED</code>.</li> <li>Rate limiting (advanced): <code>API_RATE_LIMIT_AUTH_TIMES</code>, <code>API_RATE_LIMIT_AUTH_SECONDS</code>, <code>API_RATE_LIMIT_RULES</code>, <code>API_RATE_LIMIT_DEFAULTS</code>, <code>API_RATE_LIMIT_APPLICATION_LIMITS</code>, <code>API_RATE_LIMIT_STRATEGY</code>, <code>API_RATE_LIMIT_KEY</code>, <code>API_RATE_LIMIT_EXEMPT_IPS</code>, <code>API_RATE_LIMIT_STORAGE_OPTIONS</code>.</li> <li>Rate limiting storage: in\u2011memory or Redis/Valkey when <code>USE_REDIS=yes</code> and Redis settings like <code>REDIS_HOST</code>, <code>REDIS_PORT</code>, <code>REDIS_PASSWORD</code>, <code>REDIS_DATABASE</code>, <code>REDIS_SSL</code>, or Sentinel variables are set. See the Redis settings table in <code>docs/features.md</code>.</li> <li>Network/TLS: <code>API_LISTEN_ADDR</code>, <code>API_LISTEN_PORT</code>, <code>API_FORWARDED_ALLOW_IPS</code>, <code>API_SSL_ENABLED</code>, <code>API_SSL_CERTFILE</code>, <code>API_SSL_KEYFILE</code>, <code>API_SSL_CA_CERTS</code>.</li> </ul>"},{"location":"api/#how-configuration-is-loaded","title":"How configuration is loaded","text":"<p>Precedence from highest to lowest:</p> <ul> <li>Environment variables (e.g. container <code>environment:</code> or exported shell vars)</li> <li>Secrets files under <code>/run/secrets</code> (Docker/K8s secrets; filenames match variable names)</li> <li>YAML file at <code>/etc/bunkerweb/api.yml</code></li> <li>Env file at <code>/etc/bunkerweb/api.env</code> (key=value lines)</li> <li>Built\u2011in defaults</li> </ul> <p>Notes:</p> <ul> <li>YAML supports inlining secret files with <code>&lt;file:relative/path&gt;</code>; the path is resolved against <code>/run/secrets</code>.</li> <li>Set doc URLs to <code>off</code>/<code>disabled</code>/<code>none</code> to disable endpoints (e.g. <code>API_DOCS_URL=off</code>).</li> <li>If <code>API_SSL_ENABLED=yes</code>, you must also set <code>API_SSL_CERTFILE</code> and <code>API_SSL_KEYFILE</code>.</li> <li>If Redis is enabled (<code>USE_REDIS=yes</code>), provide Redis details; see Redis section in <code>docs/features.md</code>.</li> </ul>"},{"location":"api/#authentication-and-users","title":"Authentication and users","text":"<ul> <li>Admin bootstrap: set <code>API_USERNAME</code> and <code>API_PASSWORD</code> to create the first admin. To re\u2011apply later, set <code>OVERRIDE_API_CREDS=yes</code>.</li> <li>Non\u2011admins and permissions: provide <code>API_ACL_BOOTSTRAP_FILE</code> with a JSON path (or mount to <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>). The file may list users and fine\u2011grained grants.</li> <li>Biscuit keys: either set <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> or mount files at <code>/var/lib/bunkerweb/.api_biscuit_public_key</code> and <code>/var/lib/bunkerweb/.api_biscuit_private_key</code>. If none are provided, the API generates and persists a key pair at startup.</li> </ul>"},{"location":"api/#tls-and-networking","title":"TLS and networking","text":"<ul> <li>Bind address/port: <code>API_LISTEN_ADDR</code> (default <code>0.0.0.0</code>), <code>API_LISTEN_PORT</code> (default <code>8888</code>).</li> <li>Reverse proxies: set <code>API_FORWARDED_ALLOW_IPS</code> to the proxy IPs so Gunicorn trusts <code>X\u2011Forwarded\u2011*</code> headers.</li> <li>TLS termination in the API: <code>API_SSL_ENABLED=yes</code> plus <code>API_SSL_CERTFILE</code> and <code>API_SSL_KEYFILE</code>; optional <code>API_SSL_CA_CERTS</code></li> </ul>"},{"location":"api/#rate-limiting-quick-recipes","title":"Rate limiting quick recipes","text":"<ul> <li>Disable globally: <code>API_RATE_LIMIT_ENABLED=no</code></li> <li>Set a simple global limit: <code>API_RATE_LIMIT_TIMES=100</code>, <code>API_RATE_LIMIT_SECONDS=60</code></li> <li>Per\u2011route rules: set <code>API_RATE_LIMIT_RULES</code> to a JSON/YAML file path or inline YAML in <code>/etc/bunkerweb/api.yml</code>.</li> </ul> <p>Startup safety</p> <p>The API exits if there is no authentication path configured (no Biscuit keys, no admin user, and no <code>API_TOKEN</code>). Ensure at least one method is set before starting.</p> <p>Startup safety: The API exits if no authentication path is available (no Biscuit keys, no admin API user, and no <code>API_TOKEN</code>). Ensure at least one is configured.</p> <p>Root path and proxies</p> <p>If you deploy the API behind BunkerWeb on a sub\u2011path, set <code>API_ROOT_PATH</code> to that path so <code>/docs</code> and relative routes work correctly when proxied.</p>"},{"location":"api/#operations","title":"Operations","text":"<ul> <li>Health: <code>GET /health</code> returns <code>{\"status\":\"ok\"}</code> when the service is up.</li> <li>Linux service: a <code>systemd</code> unit named <code>bunkerweb-api.service</code> is packaged. Customize via <code>/etc/bunkerweb/api.env</code> and manage with <code>systemctl</code>.</li> <li>Startup safety: the API fails fast when no authentication path is available (no Biscuit keys, no admin user, no <code>API_TOKEN</code>). Errors are written to <code>/var/tmp/bunkerweb/api.error</code>.</li> </ul>"},{"location":"concepts/","title":"Concepts","text":""},{"location":"concepts/#architecture","title":"Architecture","text":"<p>Within your infrastructure, BunkerWeb acts as a reverse proxy in front of your web services. The typical architecture involves accessing BunkerWeb from the Internet, which then forwards requests to the appropriate application service on a secure network.</p> <p>Using BunkerWeb in this way (classical reverse proxy architecture) with TLS offloading and centralized security policies enhances performance by reducing encryption overhead on backend servers while ensuring consistent access control, threat mitigation, and compliance enforcement across all services.</p>"},{"location":"concepts/#integrations","title":"Integrations","text":"<p>The first concept is the integration of BunkerWeb into the target environment. We prefer to use the word \"integration\" instead of \"installation\" because one of BunkerWeb's goals is to integrate seamlessly into existing environments.</p> <p>The following integrations are officially supported:</p> <ul> <li>Docker</li> <li>Linux</li> <li>Docker autoconf</li> <li>Kubernetes</li> <li>Swarm</li> </ul> <p>If you think a new integration should be supported, do not hesitate to open a new issue on the GitHub repository.</p> <p>Going further</p> <p>The technical details of all BunkerWeb integrations are available in the integrations section of the documentation.</p>"},{"location":"concepts/#settings","title":"Settings","text":"<p>BunkerWeb PRO settings</p> <p>Some plugins are reserved for the PRO version. Want to quickly test BunkerWeb PRO for one month? Use the code <code>freetrial</code> when placing your order on the BunkerWeb panel or by clicking here to directly to apply the promo code (will be effective at checkout).</p> <p>Once BunkerWeb is integrated into your environment, you will need to configure it to serve and protect your web applications.</p> <p>The configuration of BunkerWeb is done using what we call \"settings\" or \"variables.\" Each setting is identified by a name such as <code>AUTO_LETS_ENCRYPT</code> or <code>USE_ANTIBOT</code>. You can assign values to these settings to configure BunkerWeb.</p> <p>Here is a dummy example of a BunkerWeb configuration:</p> <pre><code>SERVER_NAME=www.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_ANTIBOT=captcha\nREFERRER_POLICY=no-referrer\nUSE_MODSECURITY=no\nUSE_GZIP=yes\nUSE_BROTLI=no\n</code></pre> <p>Please note that if you are using the web User Interface, the setting names are also displayed in addition to a \"human-friendly\" label:</p> <p> </p> Settings name in the web UI <p>You can also use the search bar and directly specify a setting name:</p> <p> </p> Settings search in the web UI <p>Going further</p> <p>The complete list of available settings with descriptions and possible values is available in the feature section of the documentation.</p>"},{"location":"concepts/#multisite-mode","title":"Multisite mode","text":"<p>Understanding the multisite mode is essential when utilizing BunkerWeb. As our primary focus is safeguarding web applications, our solution is intricately linked to the concept of \"virtual hosts\" or \"vhosts\" (more info here). These virtual hosts enable the serving of multiple web applications from a single instance or cluster.</p> <p>By default, BunkerWeb has the multisite mode disabled. This means that only one web application will be served, and all settings will be applied to it. This setup is ideal when you have a single application to protect, as you don't need to concern yourself with multisite configurations.</p> <p>However, when the multisite mode is enabled, BunkerWeb becomes capable of serving and protecting multiple web applications. Each web application is identified by a unique server name and has its own set of settings. This mode proves beneficial when you have multiple applications to secure, and you prefer to utilize a single instance (or a cluster) of BunkerWeb.</p> <p>The activation of the multisite mode is controlled by the <code>MULTISITE</code> setting, which can be set to <code>yes</code> to enable it or <code>no</code> to keep it disabled (the default value).</p> <p>Each setting within BunkerWeb has a specific context that determines where it can be applied. If the context is set to \"global,\" the setting can't be applied per server or site but is instead applied to the entire configuration as a whole. On the other hand, if the context is \"multisite,\" the setting can be applied globally and per server. To define a multisite setting for a specific server, simply add the server name as a prefix to the setting name. For example, <code>app1.example.com_AUTO_LETS_ENCRYPT</code> or <code>app2.example.com_USE_ANTIBOT</code> are examples of setting names with server name prefixes. When a multisite setting is defined globally without a server prefix, all servers inherit that setting. However, individual servers can still override the setting if the same setting is defined with a server name prefix.</p> <p>Understanding the intricacies of multisite mode and its associated settings allows you to tailor BunkerWeb's behavior to suit your specific requirements, ensuring optimal protection for your web applications.</p> <p>Here's a dummy example of a multisite BunkerWeb configuration:</p> <pre><code>MULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_GZIP=yes\nUSE_BROTLI=yes\napp1.example.com_USE_ANTIBOT=javascript\napp1.example.com_USE_MODSECURITY=no\napp2.example.com_USE_ANTIBOT=cookie\napp2.example.com_WHITELIST_COUNTRY=FR\napp3.example.com_USE_BAD_BEHAVIOR=no\n</code></pre> <p>Please note that multisite mode is implicit when using the web User Interface. You have the option to apply configurations directly to your services or to set a global configuration that will be applied to all your services (you can still apply exceptions directly to specific services):</p> <p> </p> Apply a setting to all services from the web UI <p>Going further</p> <p>You will find concrete examples of multisite mode in the advanced usages of the documentation and the examples directory of the repository.</p>"},{"location":"concepts/#custom-configurations","title":"Custom configurations","text":"<p>To address unique challenges and cater to specific use cases, BunkerWeb offers the flexibility of custom configurations. While the provided settings and external plugins cover a wide range of scenarios, there may be situations that require additional customization.</p> <p>BunkerWeb is built on the renowned NGINX web server, which provides a powerful configuration system. This means you can leverage NGINX's configuration capabilities to meet your specific needs. Custom NGINX configurations can be included in various contexts such as HTTP or server, allowing you to fine-tune the behavior of BunkerWeb according to your requirements. Whether you need to customize global settings or apply configurations to specific server blocks, BunkerWeb empowers you to optimize its behavior to align perfectly with your use case.</p> <p>Another integral component of BunkerWeb is the ModSecurity Web Application Firewall. With custom configurations, you have the flexibility to address false positives or add custom rules to further enhance the protection provided by ModSecurity. These custom configurations allow you to fine-tune the behavior of the firewall and ensure that it aligns with the specific requirements of your web applications.</p> <p>By leveraging custom configurations, you unlock a world of possibilities to tailor BunkerWeb's behavior and security measures precisely to your needs. Whether it's adjusting NGINX configurations or fine-tuning ModSecurity, BunkerWeb provides the flexibility to meet your unique challenges effectively.</p> <p>Managing custom configurations from the web User Interface is done through the Configs menu:</p> <p> </p> Manage custom configurations from the web UI <p>Going further</p> <p>You will find concrete examples of custom configurations in the advanced usages of the documentation and the examples directory of the repository.</p>"},{"location":"concepts/#database","title":"Database","text":"<p>BunkerWeb securely stores its current configuration in a backend database, which contains essential data for smooth operation. The following information is stored in the database:</p> <ul> <li> <p>Settings for all services: The database holds the defined settings for all the services provided by BunkerWeb. This ensures that your configurations and preferences are preserved and readily accessible.</p> </li> <li> <p>Custom configurations: Any custom configurations you create are also stored in the backend database. This includes personalized settings and modifications tailored to your specific requirements.</p> </li> <li> <p>BunkerWeb instances: Information about BunkerWeb instances, including their setup and relevant details, is stored in the database. This allows for easy management and monitoring of multiple instances if applicable.</p> </li> <li> <p>Metadata about job execution: The database stores metadata related to the execution of various jobs within BunkerWeb. This includes information about scheduled tasks, maintenance processes, and other automated activities.</p> </li> <li> <p>Cached files: BunkerWeb utilizes caching mechanisms for improved performance. The database holds cached files, ensuring efficient retrieval and delivery of frequently accessed resources.</p> </li> </ul> <p>Under the hood, whenever you edit a setting or add a new configuration, BunkerWeb automatically stores the changes in the database, ensuring data persistence and consistency. BunkerWeb supports multiple backend database options, including SQLite, MariaDB, MySQL, and PostgreSQL.</p> <p>Configuring the database is straightforward using the <code>DATABASE_URI</code> setting, which follows the specified formats for each supported database:</p> <p>Warning</p> <p>When using the Docker Integration, you must set the <code>DATABASE_URI</code> environment variable in all BunkerWeb containers (except the BunkerWeb container itself), to ensure that all components can access the database correctly. This is crucial for maintaining the integrity and functionality of the system.</p> <p>In all cases, ensure that <code>DATABASE_URI</code> is set before starting BunkerWeb, as it is required for proper operation.</p> <ul> <li>SQLite: <code>sqlite:///var/lib/bunkerweb/db.sqlite3</code></li> <li>MariaDB: <code>mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>MySQL: <code>mysql+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>PostgreSQL: <code>postgresql://bunkerweb:changeme@bw-db:5432/db</code></li> </ul> <p>By specifying the appropriate database URI in the configuration, you can seamlessly integrate BunkerWeb with your preferred database backend, ensuring efficient and reliable storage of your configuration data.</p> <p> </p> Database Schema"},{"location":"concepts/#scheduler","title":"Scheduler","text":"<p>For seamless coordination and automation, BunkerWeb employs a specialized service known as the scheduler. The scheduler plays a vital role in ensuring smooth operation by performing the following tasks:</p> <ul> <li> <p>Storing settings and custom configurations: The scheduler is responsible for storing all the settings and custom configurations within the backend database. This centralizes the configuration data, making it easily accessible and manageable.</p> </li> <li> <p>Executing various tasks (jobs): The scheduler handles the execution of various tasks, referred to as jobs. These jobs encompass a range of activities, such as periodic maintenance, scheduled updates, or any other automated tasks required by BunkerWeb.</p> </li> <li> <p>Generating BunkerWeb configuration: The scheduler generates a configuration that is readily understood by BunkerWeb. This configuration is derived from the stored settings and custom configurations, ensuring that the entire system operates cohesively.</p> </li> <li> <p>Acting as an intermediary for other services: The scheduler acts as an intermediary, facilitating communication and coordination between different components of BunkerWeb. It interfaces with services such as the web UI or autoconf, ensuring a seamless flow of information and data exchange.</p> </li> </ul> <p>In essence, the scheduler serves as the brain of BunkerWeb, orchestrating various operations and ensuring the smooth functioning of the system.</p> <p>Depending on the integration approach, the execution environment of the scheduler may differ. In container-based integrations, the scheduler is executed within its dedicated container, providing isolation and flexibility. On the other hand, for Linux-based integrations, the scheduler is self-contained within the bunkerweb service, simplifying the deployment and management process.</p> <p>By employing the scheduler, BunkerWeb streamlines the automation and coordination of essential tasks, enabling efficient and reliable operation of the entire system.</p> <p>If you are using the web User Interface, you can manage scheduler jobs by clicking on Jobs from the menu:</p> <p> </p> Manage jobs from the web UI"},{"location":"concepts/#instances-health-check","title":"Instances health check","text":"<p>Since version 1.6.0, the scheduler possesses a built-in health check system that monitors the health of instances. If an instance becomes unhealthy, the scheduler will stop sending the configuration to it. If the instance becomes healthy again, the scheduler will resume sending the configuration.</p> <p>The health check interval is set by the <code>HEALTHCHECK_INTERVAL</code> environment variable, with a default value of <code>30</code>, meaning the scheduler will check the health of the instances every 30 seconds.</p>"},{"location":"concepts/#templates","title":"Templates","text":"<p>BunkerWeb leverages the power of templates to simplify the configuration process and enhance flexibility. Templates provide a structured and standardized approach to defining settings and custom configurations, ensuring consistency and ease of use.</p> <ul> <li> <p>Predefined templates: The community version offers three predefined templates that encapsulate common custom configurations and settings. These templates serve as a starting point for configuring BunkerWeb, enabling quick setup and deployment. The predefined templates are the following:</p> <ul> <li>low: A basic template that provides essential settings for web application protection.</li> <li>medium: A balanced template that offers a mix of security features and performance optimizations.</li> <li>high: An advanced template that focuses on robust security measures and comprehensive protection.</li> </ul> </li> <li> <p>Custom templates: In addition to predefined templates, BunkerWeb allows users to create custom templates tailored to their specific requirements. Custom templates enable fine-tuning of settings and custom configurations, ensuring that BunkerWeb aligns perfectly with the user's needs.</p> </li> </ul> <p>With the web User Interface, templates are available through easy mode when you add or edit a service:</p> <p> </p> Templates usage from the web UI <p>Creating custom templates</p> <p>Creating a custom template is a straightforward process that involves defining the desired settings, custom configurations, and steps in a structured format.</p> <ul> <li>Template structure: A custom template consists of a name, a series of settings, custom configurations, and optional steps. The template structure is defined in a JSON file that adheres to the specified format. The key components of a custom template include:<ul> <li>Settings: A setting is defined with a name and corresponding value. This value will override the default value of the setting. Only multisite settings are supported.</li> <li>Configs: A custom configuration is a path to an NGINX configuration file that will be included as a custom configuration. To know where to place the custom configuration file, refer to the example of a plugin's tree below. Only multisite configuration types are supported.</li> <li>Steps: A step contains a title, subtitle, settings, and custom configurations. Each step represents a configuration step that the user can follow to set up BunkerWeb according to the custom template in the web UI.</li> </ul> </li> </ul> <p>Specifications about steps</p> <p>If steps are declared, it is not mandatory to include all the settings and custom configurations in the settings and configs sections. Keep in mind that when a setting or a custom configuration is declared in a step, the user will be allowed to make edits to it in the web UI.</p> <ul> <li> <p>Template file: The custom template is defined in a JSON file in a <code>templates</code> folder inside the plugin directory that adheres to the specified structure. The template file contains a name, the settings, custom configurations, and steps required to configure BunkerWeb according to the user's preferences.</p> </li> <li> <p>Selecting a template: Once the custom template is defined, users can select it during the easy-mode configuration process of a service in the web UI. A template can also be selected with the <code>USE_TEMPLATE</code> setting in the configuration. The name of the template file (without the <code>.json</code> extension) should be specified as the value of the <code>USE_TEMPLATE</code> setting.</p> </li> </ul> <p>Example of a custom template file: <pre><code>{\n    \"name\": \"template name\",\n    // optional\n    \"settings\": {\n        \"SETTING_1\": \"value\",\n        \"SETTING_2\": \"value\"\n    },\n    // optional\n    \"configs\": [\n        \"modsec/false_positives.conf\",\n        \"modsec/non_editable.conf\",\n        \"modsec-crs/custom_rules.conf\"\n    ],\n    // optional\n    \"steps\": [\n        {\n            \"title\": \"Title 1\",\n            \"subtitle\": \"subtitle 1\",\n            \"settings\": [\n                \"SETTING_1\"\n            ],\n            \"configs\": [\n                \"modsec-crs/custom_rules.conf\"\n            ]\n        },\n        {\n            \"title\": \"Title 2\",\n            \"subtitle\": \"subtitle 2\",\n            \"settings\": [\n                \"SETTING_2\"\n            ],\n            \"configs\": [\n                \"modsec/false_positives.conf\"\n            ]\n        }\n    ]\n}\n</code></pre></p> <p>Example of a plugin's tree including custom templates: <pre><code>.\n\u251c\u2500\u2500 plugin.json\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 my_other_template.json\n    \u251c\u2500\u2500 my_template\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 configs\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 modsec\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 false_positives.conf\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 non_editable.conf\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 modsec-crs\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 custom_rules.conf\n    \u2514\u2500\u2500 my_template.json\n</code></pre></p>"},{"location":"features/","title":"Features","text":"<p>This section contains the full list of settings supported by BunkerWeb. If you are not yet familiar with BunkerWeb, you should first read the concepts section of the documentation. Please follow the instructions for your own integration on how to apply the settings.</p>"},{"location":"features/#global-settings","title":"Global settings","text":"<p>STREAM support </p> <p>The General plugin provides the core configuration framework for BunkerWeb, allowing you to define essential settings that control how your web services are protected and delivered. This foundational plugin manages fundamental aspects like security modes, server defaults, logging behavior, and critical operational parameters for the entire BunkerWeb ecosystem.</p> <p>How it works:</p> <ol> <li>When BunkerWeb starts, the General plugin loads and applies your core configuration settings.</li> <li>Security modes are set either globally or per-site, determining the level of protection applied.</li> <li>Default server settings establish fallback values for any unspecified multisite configurations.</li> <li>Logging parameters control what information is recorded and how it's formatted.</li> <li>These settings create the foundation upon which all other BunkerWeb plugins and functionality operate.</li> </ol>"},{"location":"features/#multisite-mode","title":"Multisite Mode","text":"<p>When <code>MULTISITE</code> is set to <code>yes</code>, BunkerWeb can host and protect multiple websites, each with its own unique configuration. This feature is particularly useful for scenarios such as:</p> <ul> <li>Hosting multiple domains with distinct configurations</li> <li>Running multiple applications with varying security requirements</li> <li>Applying tailored security policies to different services</li> </ul> <p>In multisite mode, each site is identified by a unique <code>SERVER_NAME</code>. To apply settings specific to a site, prepend the primary <code>SERVER_NAME</code> to the setting name. For example:</p> <ul> <li><code>www.example.com_USE_ANTIBOT=captcha</code> enables CAPTCHA for <code>www.example.com</code>.</li> <li><code>myapp.example.com_USE_GZIP=yes</code> enables GZIP compression for <code>myapp.example.com</code>.</li> </ul> <p>This approach ensures that settings are applied to the correct site in a multisite environment.</p>"},{"location":"features/#multiple-settings","title":"Multiple Settings","text":"<p>Some settings in BunkerWeb support multiple configurations for the same feature. To define multiple groups of settings, append a numeric suffix to the setting name. For example:</p> <ul> <li><code>REVERSE_PROXY_URL_1=/subdir</code> and <code>REVERSE_PROXY_HOST_1=http://myhost1</code> configure the first reverse proxy.</li> <li><code>REVERSE_PROXY_URL_2=/anotherdir</code> and <code>REVERSE_PROXY_HOST_2=http://myhost2</code> configure the second reverse proxy.</li> </ul> <p>This pattern allows you to manage multiple configurations for features like reverse proxies, ports, or other settings that require distinct values for different use cases.</p>"},{"location":"features/#security-modes","title":"Security Modes","text":"<p>The <code>SECURITY_MODE</code> setting determines how BunkerWeb handles detected threats. This flexible feature allows you to choose between monitoring or actively blocking suspicious activity, depending on your specific needs:</p> <ul> <li><code>detect</code>: Logs potential threats without blocking access. This mode is useful for identifying and analyzing false positives in a safe, non-disruptive manner.</li> <li><code>block</code> (default): Actively blocks detected threats while logging incidents to prevent unauthorized access and protect your application.</li> </ul> <p>Switching to <code>detect</code> mode can help you identify and resolve potential false positives without disrupting legitimate clients. Once these issues are addressed, you can confidently switch back to <code>block</code> mode for full protection.</p>"},{"location":"features/#configuration-settings","title":"Configuration Settings","text":"Core SettingsAPI SettingsNetwork &amp; Port SettingsStream Server SettingsWorker SettingsMemory SettingsLogging SettingsIntegration SettingsNginx Settings Setting Default Context Multiple Description <code>SERVER_NAME</code> <code>www.example.com</code> multisite No Primary Domain: The main domain name for this site. Required in multisite mode. <code>BUNKERWEB_INSTANCES</code> <code>127.0.0.1</code> global No BunkerWeb Instances: List of BunkerWeb instances separated with spaces. <code>MULTISITE</code> <code>no</code> global No Multiple Sites: Set to <code>yes</code> to enable hosting multiple websites with different configurations. <code>SECURITY_MODE</code> <code>block</code> multisite No Security Level: Controls the level of security enforcement. Options: <code>detect</code> or <code>block</code>. <code>SERVER_TYPE</code> <code>http</code> multisite No Server Type: Defines if the server is <code>http</code> or <code>stream</code> type. Setting Default Context Multiple Description <code>USE_API</code> <code>yes</code> global No Activate API: Activate the API to control BunkerWeb. <code>API_HTTP_PORT</code> <code>5000</code> global No API Port: Listen port number for the API. <code>API_HTTPS_PORT</code> <code>6000</code> global No API HTTPS Port: Listen port number (TLS) for the API. <code>API_LISTEN_HTTP</code> <code>yes</code> global No API Listen HTTP: Enable HTTP listener for the API. <code>API_LISTEN_HTTPS</code> <code>no</code> global No API Listen HTTPS: Enable HTTPS (TLS) listener for the API. <code>API_LISTEN_IP</code> <code>0.0.0.0</code> global No API Listen IP: Listen IP address for the API. <code>API_SERVER_NAME</code> <code>bwapi</code> global No API Server Name: Server name (virtual host) for the API. <code>API_WHITELIST_IP</code> <code>127.0.0.0/8</code> global No API Whitelist IP: List of IP/network allowed to contact the API. <code>API_TOKEN</code> global No API Access Token (optional): If set, all API requests must include <code>Authorization: Bearer &lt;token&gt;</code>. <p>Note: for bootstrap reasons, if you enable <code>API_TOKEN</code> you must set it in the environment of BOTH the BunkerWeb instance and the Scheduler. The Scheduler automatically includes the <code>Authorization</code> header when <code>API_TOKEN</code> is present in its environment. If not set, no header is sent and BunkerWeb will not enforce token auth. You can expose the API over HTTPS by setting <code>API_LISTEN_HTTPS=yes</code> (port: <code>API_HTTPS_PORT</code>, default <code>6000</code>).</p> <p>Example test with curl (replace token and host):</p> <pre><code>curl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://&lt;bunkerweb-host&gt;:5000/ping\n\ncurl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     --insecure \\\n     https://&lt;bunkerweb-host&gt;:6000/ping\n</code></pre> Setting Default Context Multiple Description <code>HTTP_PORT</code> <code>8080</code> global Yes HTTP Port: Port number for HTTP traffic. <code>HTTPS_PORT</code> <code>8443</code> global Yes HTTPS Port: Port number for HTTPS traffic. <code>USE_IPV6</code> <code>no</code> global No IPv6 Support: Enable IPv6 connectivity. <code>DNS_RESOLVERS</code> <code>127.0.0.11</code> global No DNS Resolvers: DNS addresses of resolvers to use. Setting Default Context Multiple Description <code>LISTEN_STREAM</code> <code>yes</code> multisite No Listen Stream: Enable listening for non-ssl (passthrough). <code>LISTEN_STREAM_PORT</code> <code>1337</code> multisite Yes Stream Port: Listening port for non-ssl (passthrough). <code>LISTEN_STREAM_PORT_SSL</code> <code>4242</code> multisite Yes Stream SSL Port: Listening port for ssl (passthrough). <code>USE_TCP</code> <code>yes</code> multisite No TCP Listen: Enable TCP listening (stream). <code>USE_UDP</code> <code>no</code> multisite No UDP Listen: Enable UDP listening (stream). Setting Default Context Multiple Description <code>WORKER_PROCESSES</code> <code>auto</code> global No Worker Processes: Number of worker processes. Set to <code>auto</code> to use available cores. <code>WORKER_CONNECTIONS</code> <code>1024</code> global No Worker Connections: Maximum number of connections per worker. <code>WORKER_RLIMIT_NOFILE</code> <code>2048</code> global No File Descriptors Limit: Maximum number of open files per worker. Setting Default Context Multiple Description <code>WORKERLOCK_MEMORY_SIZE</code> <code>48k</code> global No Workerlock Memory Size: Size of lua_shared_dict for initialization workers. <code>DATASTORE_MEMORY_SIZE</code> <code>64m</code> global No Datastore Memory Size: Size of the internal datastore. <code>CACHESTORE_MEMORY_SIZE</code> <code>64m</code> global No Cachestore Memory Size: Size of the internal cachestore. <code>CACHESTORE_IPC_MEMORY_SIZE</code> <code>16m</code> global No Cachestore IPC Memory Size: Size of the internal cachestore (ipc). <code>CACHESTORE_MISS_MEMORY_SIZE</code> <code>16m</code> global No Cachestore Miss Memory Size: Size of the internal cachestore (miss). <code>CACHESTORE_LOCKS_MEMORY_SIZE</code> <code>16m</code> global No Cachestore Locks Memory Size: Size of the internal cachestore (locks). Setting Default Context Multiple Description <code>LOG_FORMAT</code> <code>$host $remote_addr - $request_id $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\"</code> global No Log Format: The format to use for access logs. <code>LOG_LEVEL</code> <code>notice</code> global No Log Level: Verbosity level for error logs. Options: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>error</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <code>TIMERS_LOG_LEVEL</code> <code>debug</code> global No Timers Log Level: Log level for timers. Options: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>err</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <p>Logging Best Practices</p> <ul> <li>For production environments, use the <code>notice</code>, <code>warn</code>, or <code>error</code> log levels to minimize log volume.</li> <li>For debugging issues, temporarily set the log level to <code>debug</code> to get more detailed information.</li> </ul> Setting Default Context Multiple Description <code>AUTOCONF_MODE</code> <code>no</code> global No Autoconf Mode: Enable Autoconf Docker integration. <code>SWARM_MODE</code> <code>no</code> global No Swarm Mode: Enable Docker Swarm integration. <code>KUBERNETES_MODE</code> <code>no</code> global No Kubernetes Mode: Enable Kubernetes integration. <code>USE_TEMPLATE</code> multisite No Use Template: Config template to use that will override the default values of specific settings. Setting Default Context Multiple Description <code>NGINX_PREFIX</code> <code>/etc/nginx/</code> global No Nginx Prefix: Where nginx will search for configurations. <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> global No Server Names Hash Bucket Size: Value for the server_names_hash_bucket_size directive."},{"location":"features/#example-configurations","title":"Example Configurations","text":"Basic Production SetupDevelopment ModeMultisite ConfigurationStream Server Configuration <p>A standard configuration for a production site with strict security:</p> <pre><code>SECURITY_MODE: \"block\"\nSERVER_NAME: \"example.com\"\nLOG_LEVEL: \"notice\"\n</code></pre> <p>Configuration for a development environment with extra logging:</p> <pre><code>SECURITY_MODE: \"detect\"\nSERVER_NAME: \"dev.example.com\"\nLOG_LEVEL: \"debug\"\n</code></pre> <p>Configuration for hosting multiple websites:</p> <pre><code>MULTISITE: \"yes\"\n\n# First site\nsite1.example.com_SERVER_NAME: \"site1.example.com\"\nsite1.example.com_SECURITY_MODE: \"block\"\n\n# Second site\nsite2.example.com_SERVER_NAME: \"site2.example.com\"\nsite2.example.com_SECURITY_MODE: \"detect\"\n</code></pre> <p>Configuration for a TCP/UDP server:</p> <pre><code>SERVER_TYPE: \"stream\"\nSERVER_NAME: \"stream.example.com\"\nLISTEN_STREAM: \"yes\"\nLISTEN_STREAM_PORT: \"1337\"\nUSE_TCP: \"yes\"\nUSE_UDP: \"no\"\n</code></pre>"},{"location":"features/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>STREAM support </p> <p>Provides enhanced protection against DDoS attacks by analyzing and filtering suspicious traffic.</p> Setting Default Context Multiple Description <code>USE_ANTIDDOS</code> <code>no</code> global no Enable or disable anti DDoS protection to mitigate high traffic spikes. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global no Size of in-memory storage for DDoS metrics (e.g., 10M, 500k). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global no Maximum suspicious requests allowed from a single IP before blocking. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global no Time window (seconds) to detect abnormal request patterns. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global no HTTP status codes treated as suspicious for DDoS analysis. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global no Minimum distinct IP count before enabling anti DDoS measures."},{"location":"features/#antibot","title":"Antibot","text":"<p>STREAM support </p> <p>Attackers often use automated tools (bots) to try and exploit your website. To protect against this, BunkerWeb includes an \"Antibot\" feature that challenges users to prove they are human. If a user successfully completes the challenge, they are granted access to your website. This feature is disabled by default.</p> <p>How it works:</p> <ol> <li>When a user visits your site, BunkerWeb checks if they've already passed the antibot challenge.</li> <li>If not, the user is redirected to a challenge page.</li> <li>The user must complete the challenge (e.g., solve a CAPTCHA, run JavaScript).</li> <li>If the challenge is successful, the user is redirected back to the page they were originally trying to visit and can browse your website normally.</li> </ol>"},{"location":"features/#how-to-use","title":"How to Use","text":"<p>Follow these steps to enable and configure the Antibot feature:</p> <ol> <li>Choose a challenge type: Decide which type of antibot challenge to use (e.g., captcha, hcaptcha, javascript).</li> <li>Enable the feature: Set the <code>USE_ANTIBOT</code> setting to your chosen challenge type in your BunkerWeb configuration.</li> <li>Configure the settings: Adjust the other <code>ANTIBOT_*</code> settings as needed. For reCAPTCHA, hCaptcha, Turnstile, and mCaptcha, you must create an account with the respective service and obtain API keys.</li> <li>Important: Ensure the <code>ANTIBOT_URI</code> is a unique URL on your site that is not in use.</li> </ol> <p>About the <code>ANTIBOT_URI</code> Setting</p> <p>Ensure the <code>ANTIBOT_URI</code> is a unique URL on your site that is not in use.</p> <p>Session Configuration in Clustered Environments</p> <p>The antibot feature uses cookies to track whether a user has completed the challenge. If you are running BunkerWeb in a clustered environment (multiple BunkerWeb instances), you must configure session management properly. This involves setting the <code>SESSIONS_SECRET</code> and <code>SESSIONS_NAME</code> settings to the same values across all BunkerWeb instances. If you don't do this, users may be repeatedly prompted to complete the antibot challenge. You can find more information about session configuration here.</p>"},{"location":"features/#common-settings","title":"Common Settings","text":"<p>The following settings are shared across all challenge mechanisms:</p> Setting Default Context Multiple Description <code>ANTIBOT_URI</code> <code>/challenge</code> multisite no Challenge URL: The URL where users will be redirected to complete the challenge. Make sure this URL is not used for anything else on your site. <code>ANTIBOT_TIME_RESOLVE</code> <code>60</code> multisite no Challenge Time Limit: The maximum time (in seconds) a user has to complete the challenge. After this time, a new challenge will be generated. <code>ANTIBOT_TIME_VALID</code> <code>86400</code> multisite no Challenge Validity: How long (in seconds) a completed challenge is valid. After this time, users will have to solve a new challenge."},{"location":"features/#excluding-traffic-from-challenges","title":"Excluding Traffic from Challenges","text":"<p>BunkerWeb allows you to specify certain users, IPs, or requests that should bypass the antibot challenge completely. This is useful for whitelisting trusted services, internal networks, or specific pages that should always be accessible without challenge:</p> Setting Default Context Multiple Description <code>ANTIBOT_IGNORE_URI</code> multisite no Excluded URLs: List of URI regex patterns separated by spaces that should bypass the challenge. <code>ANTIBOT_IGNORE_IP</code> multisite no Excluded IPs: List of IP addresses or CIDR ranges separated by spaces that should bypass the challenge. <code>ANTIBOT_IGNORE_RDNS</code> multisite no Excluded Reverse DNS: List of reverse DNS suffixes separated by spaces that should bypass the challenge. <code>ANTIBOT_RDNS_GLOBAL</code> <code>yes</code> multisite no Global IPs Only: If set to <code>yes</code>, only perform reverse DNS checks on public IP addresses. <code>ANTIBOT_IGNORE_ASN</code> multisite no Excluded ASNs: List of ASN numbers separated by spaces that should bypass the challenge. <code>ANTIBOT_IGNORE_USER_AGENT</code> multisite no Excluded User Agents: List of User-Agent regex patterns separated by spaces that should bypass the challenge. <p>Examples:</p> <ul> <li> <p><code>ANTIBOT_IGNORE_URI: \"^/api/ ^/webhook/ ^/assets/\"</code>   This will exclude all URIs starting with <code>/api/</code>, <code>/webhook/</code>, or <code>/assets/</code> from the antibot challenge.</p> </li> <li> <p><code>ANTIBOT_IGNORE_IP: \"192.168.1.0/24 10.0.0.1\"</code>   This will exclude the internal network <code>192.168.1.0/24</code> and the specific IP <code>10.0.0.1</code> from the antibot challenge.</p> </li> <li> <p><code>ANTIBOT_IGNORE_RDNS: \".googlebot.com .bingbot.com\"</code>   This will exclude requests from hosts with reverse DNS ending with <code>googlebot.com</code> or <code>bingbot.com</code> from the antibot challenge.</p> </li> <li> <p><code>ANTIBOT_IGNORE_ASN: \"15169 8075\"</code>   This will exclude requests from ASN 15169 (Google) and ASN 8075 (Microsoft) from the antibot challenge.</p> </li> <li> <p><code>ANTIBOT_IGNORE_USER_AGENT: \"^Mozilla.+Chrome.+Safari\"</code>   This will exclude requests with User-Agents matching the specified regex pattern from the antibot challenge.</p> </li> </ul>"},{"location":"features/#supported-challenge-mechanisms","title":"Supported Challenge Mechanisms","text":"CookieJavaScriptCaptchareCAPTCHAhCaptchaTurnstilemCaptcha <p>The Cookie challenge is a lightweight mechanism that relies on setting a cookie in the user's browser. When a user accesses the site, the server sends a cookie to the client. On subsequent requests, the server checks for the presence of this cookie to verify that the user is legitimate. This method is simple and effective for basic bot protection without requiring additional user interaction.</p> <p>How it works:</p> <ol> <li>The server generates a unique cookie and sends it to the client.</li> <li>The client must return the cookie in subsequent requests.</li> <li>If the cookie is missing or invalid, the user is redirected to the challenge page.</li> </ol> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable Antibot: Set to <code>cookie</code> to enable the Cookie challenge. <p>Refer to the Common Settings for additional configuration options.</p> <p>The JavaScript challenge requires the client to solve a computational task using JavaScript. This mechanism ensures that the client has JavaScript enabled and can execute the required code, which is typically beyond the capability of most bots.</p> <p>How it works:</p> <ol> <li>The server sends a JavaScript script to the client.</li> <li>The script performs a computational task (e.g., hashing) and submits the result back to the server.</li> <li>The server verifies the result to confirm the client's legitimacy.</li> </ol> <p>Key Features:</p> <ul> <li>The challenge dynamically generates a unique task for each client.</li> <li>The computational task involves hashing with specific conditions (e.g., finding a hash with a certain prefix).</li> </ul> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable Antibot: Set to <code>javascript</code> to enable the JavaScript challenge. <p>Refer to the Common Settings for additional configuration options.</p> <p>The Captcha challenge is a homemade mechanism that generates image-based challenges hosted entirely within your BunkerWeb environment. It tests users' ability to recognize and interpret randomized characters, ensuring automated bots are effectively blocked without relying on external services.</p> <p>How it works:</p> <ol> <li>The server generates a CAPTCHA image containing randomized characters.</li> <li>The user must enter the characters displayed in the image into a text field.</li> <li>The server validates the user's input against the generated CAPTCHA.</li> </ol> <p>Key Features:</p> <ul> <li>Fully self-hosted, eliminating the need for third-party APIs.</li> <li>Dynamically generated challenges ensure uniqueness for each user session.</li> <li>Uses a customizable character set for CAPTCHA generation.</li> </ul> <p>Supported Characters:</p> <p>The CAPTCHA system supports the following character types:</p> <ul> <li>Letters: All lowercase (a-z) and uppercase (A-Z) letters</li> <li>Numbers: 2, 3, 4, 5, 6, 7, 8, 9 (excludes 0 and 1 to avoid confusion)</li> <li>Special characters: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code></li> </ul> <p>To have the complete set of supported characters, refer to the Font charmap of the font used for the CAPTCHA.</p> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable Antibot: Set to <code>captcha</code> to enable the Captcha challenge. <code>ANTIBOT_CAPTCHA_ALPHABET</code> <code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code> multisite no Captcha Alphabet: A string of characters to use for generating the CAPTCHA. Supported characters: all letters (a-z, A-Z), numbers 2-9 (excludes 0 and 1), and special characters: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code> <p>Refer to the Common Settings for additional configuration options.</p> <p>When enabled, reCAPTCHA runs in the background (v3) to assign a score based on user behavior. A score lower than the configured threshold will prompt further verification or block the request. For visible challenges (v2), users must interact with the reCAPTCHA widget before continuing.</p> <p>There are now two ways to integrate reCAPTCHA: - The classic version (site/secret keys, v2/v3 verify endpoint) - The new version using Google Cloud (Project ID + API key). The classic version remains available and can be toggled with <code>ANTIBOT_RECAPTCHA_CLASSIC</code>.</p> <p>For the classic version, obtain your site and secret keys from the Google reCAPTCHA admin console. For the new version, create a reCAPTCHA key in your Google Cloud project and use the Project ID and an API key (see the Google Cloud reCAPTCHA console). A site key is still required.</p> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable antibot; set to <code>recaptcha</code> to enable reCAPTCHA. <code>ANTIBOT_RECAPTCHA_CLASSIC</code> <code>yes</code> multisite no Use classic reCAPTCHA. Set to <code>no</code> to use the new Google Cloud-based version. <code>ANTIBOT_RECAPTCHA_SITEKEY</code> multisite no reCAPTCHA site key. Required for both classic and new versions. <code>ANTIBOT_RECAPTCHA_SECRET</code> multisite no reCAPTCHA secret key. Required for the classic version only. <code>ANTIBOT_RECAPTCHA_PROJECT_ID</code> multisite no Google Cloud Project ID. Required for the new version only. <code>ANTIBOT_RECAPTCHA_API_KEY</code> multisite no Google Cloud API key used to call the reCAPTCHA Enterprise API. Required for the new version only. <code>ANTIBOT_RECAPTCHA_JA3</code> multisite no Optional JA3 TLS fingerprint to include in Enterprise assessments. <code>ANTIBOT_RECAPTCHA_JA4</code> multisite no Optional JA4 TLS fingerprint to include in Enterprise assessments. <code>ANTIBOT_RECAPTCHA_SCORE</code> <code>0.7</code> multisite no Minimum score required to pass (applies to both classic v3 and the new version). <p>Refer to the Common Settings for additional configuration options.</p> <p>When enabled, hCaptcha provides an effective alternative to reCAPTCHA by verifying user interactions without relying on a scoring mechanism. It challenges users with a simple, interactive test to confirm their legitimacy.</p> <p>To integrate hCaptcha with BunkerWeb, you must obtain the necessary credentials from the hCaptcha dashboard at hCaptcha. These credentials include a site key and a secret key.</p> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable Antibot: Set to <code>hcaptcha</code> to enable the hCaptcha challenge. <code>ANTIBOT_HCAPTCHA_SITEKEY</code> multisite no hCaptcha Site Key: Your hCaptcha site key (get this from hCaptcha). <code>ANTIBOT_HCAPTCHA_SECRET</code> multisite no hCaptcha Secret Key: Your hCaptcha secret key (get this from hCaptcha). <p>Refer to the Common Settings for additional configuration options.</p> <p>Turnstile is a modern, privacy-friendly challenge mechanism that leverages Cloudflare\u2019s technology to detect and block automated traffic. It validates user interactions in a seamless, background manner, reducing friction for legitimate users while effectively discouraging bots.</p> <p>To integrate Turnstile with BunkerWeb, ensure you obtain the necessary credentials from Cloudflare Turnstile.</p> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable Antibot: Set to <code>turnstile</code> to enable the Turnstile challenge. <code>ANTIBOT_TURNSTILE_SITEKEY</code> multisite no Turnstile Site Key: Your Turnstile site key (get this from Cloudflare). <code>ANTIBOT_TURNSTILE_SECRET</code> multisite no Turnstile Secret Key: Your Turnstile secret key (get this from Cloudflare). <p>Refer to the Common Settings for additional configuration options.</p> <p>mCaptcha is an alternative CAPTCHA challenge mechanism that verifies the legitimacy of users by presenting an interactive test similar to other antibot solutions. When enabled, it challenges users with a CAPTCHA provided by mCaptcha, ensuring that only genuine users bypass the automated security checks.</p> <p>mCaptcha is designed with privacy in mind. It is fully GDPR compliant, ensuring that all user data involved in the challenge process adheres to strict data protection standards. Additionally, mCaptcha offers the flexibility to be self-hosted, allowing organizations to maintain full control over their data and infrastructure. This self-hosting capability not only enhances privacy but also optimizes performance and customization to suit specific deployment needs.</p> <p>To integrate mCaptcha with BunkerWeb, you must obtain the necessary credentials from the mCaptcha platform or your own provider. These credentials include a site key and a secret key for verification.</p> <p>Configuration Settings:</p> Setting Default Context Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite no Enable Antibot: Set to <code>mcaptcha</code> to enable the mCaptcha challenge. <code>ANTIBOT_MCAPTCHA_SITEKEY</code> multisite no mCaptcha Site Key: Your mCaptcha site key (get this from mCaptcha). <code>ANTIBOT_MCAPTCHA_SECRET</code> multisite no mCaptcha Secret Key: Your mCaptcha secret key (get this from mCaptcha). <code>ANTIBOT_MCAPTCHA_URL</code> <code>https://demo.mcaptcha.org</code> multisite no mCaptcha Domain: The domain to use for the mCaptcha challenge. <p>Refer to the Common Settings for additional configuration options.</p>"},{"location":"features/#example-configurations_1","title":"Example Configurations","text":"Cookie ChallengeJavaScript ChallengeCaptcha ChallengereCAPTCHA ClassicreCAPTCHA (new)hCaptcha ChallengeTurnstile ChallengemCaptcha Challenge <p>Example configuration for enabling the Cookie challenge:</p> <pre><code>USE_ANTIBOT: \"cookie\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Example configuration for enabling the JavaScript challenge:</p> <pre><code>USE_ANTIBOT: \"javascript\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Example configuration for enabling the Captcha challenge:</p> <pre><code>USE_ANTIBOT: \"captcha\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\nANTIBOT_CAPTCHA_ALPHABET: \"23456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n</code></pre> <p>Note: The example above uses numbers 2-9 and all letters, which are the most commonly used characters for CAPTCHA challenges. You can customize the alphabet to include special characters as needed.</p> <p>Example configuration for the classic reCAPTCHA (site/secret keys):</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"yes\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Example configuration for the new Google Cloud-based reCAPTCHA (Project ID + API key):</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"no\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_PROJECT_ID: \"your-gcp-project-id\"\nANTIBOT_RECAPTCHA_API_KEY: \"your-gcp-api-key\"\n# Optional fingerprints to improve Enterprise assessments\n# ANTIBOT_RECAPTCHA_JA3: \"&lt;ja3-fingerprint&gt;\"\n# ANTIBOT_RECAPTCHA_JA4: \"&lt;ja4-fingerprint&gt;\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Example configuration for enabling the hCaptcha challenge:</p> <pre><code>USE_ANTIBOT: \"hcaptcha\"\nANTIBOT_HCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_HCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Example configuration for enabling the Turnstile challenge:</p> <pre><code>USE_ANTIBOT: \"turnstile\"\nANTIBOT_TURNSTILE_SITEKEY: \"your-site-key\"\nANTIBOT_TURNSTILE_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Example configuration for enabling the mCaptcha challenge:</p> <pre><code>USE_ANTIBOT: \"mcaptcha\"\nANTIBOT_MCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_MCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_MCAPTCHA_URL: \"https://demo.mcaptcha.org\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre>"},{"location":"features/#auth-basic","title":"Auth basic","text":"<p>STREAM support </p> <p>The Auth Basic plugin provides HTTP basic authentication to protect your website or specific resources. This feature adds an extra layer of security by requiring users to enter a username and password before accessing protected content. This type of authentication is simple to implement and widely supported by browsers.</p> <p>How it works:</p> <ol> <li>When a user tries to access a protected area of your website, the server sends an authentication challenge.</li> <li>The browser displays a login dialog box prompting the user for a username and password.</li> <li>The user enters their credentials, which are sent to the server.</li> <li>If the credentials are valid, the user is granted access to the requested content.</li> <li>If the credentials are invalid, the user is served an error message with the 401 Unauthorized status code.</li> </ol>"},{"location":"features/#how-to-use_1","title":"How to Use","text":"<p>Follow these steps to enable and configure Auth Basic authentication:</p> <ol> <li>Enable the feature: Set the <code>USE_AUTH_BASIC</code> setting to <code>yes</code> in your BunkerWeb configuration.</li> <li>Choose protection scope: Decide whether to protect your entire site or just specific URLs by configuring the <code>AUTH_BASIC_LOCATION</code> setting.</li> <li>Define credentials: Set up at least one username and password pair using the <code>AUTH_BASIC_USER</code> and <code>AUTH_BASIC_PASSWORD</code> settings.</li> <li>Customize the message: Optionally change the <code>AUTH_BASIC_TEXT</code> to display a custom message in the login prompt.</li> </ol>"},{"location":"features/#configuration-settings_1","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_AUTH_BASIC</code> <code>no</code> multisite no Enable Auth Basic: Set to <code>yes</code> to enable basic authentication. <code>AUTH_BASIC_LOCATION</code> <code>sitewide</code> multisite no Protection Scope: Set to <code>sitewide</code> to protect the entire site, or specify a URL path (e.g., <code>/admin</code>) to protect only specific areas. <code>AUTH_BASIC_USER</code> <code>changeme</code> multisite yes Username: The username required for authentication. You can define multiple username/password pairs. <code>AUTH_BASIC_PASSWORD</code> <code>changeme</code> multisite yes Password: The password required for authentication. Each password corresponds to a username. <code>AUTH_BASIC_TEXT</code> <code>Restricted area</code> multisite no Prompt Text: The message displayed in the authentication prompt shown to users. <p>Security Considerations</p> <p>HTTP Basic Authentication transmits credentials encoded (not encrypted) in Base64. While this is acceptable when used over HTTPS, it should not be considered secure over plain HTTP. Always enable SSL/TLS when using basic authentication.</p> <p>Using Multiple Credentials</p> <p>You can configure multiple username/password pairs for access. Each <code>AUTH_BASIC_USER</code> setting should have a corresponding <code>AUTH_BASIC_PASSWORD</code> setting.</p>"},{"location":"features/#example-configurations_2","title":"Example Configurations","text":"Site-wide ProtectionProtecting Specific AreasMultiple Users <p>To protect your entire website with a single set of credentials:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> <p>To only protect a specific path, such as an admin panel:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"/admin/\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> <p>To set up multiple users with different credentials:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_TEXT: \"Staff Area\"\n\n# First user\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"admin_password\"\n\n# Second user\nAUTH_BASIC_USER_2: \"editor\"\nAUTH_BASIC_PASSWORD_2: \"editor_password\"\n\n# Third user\nAUTH_BASIC_USER_3: \"viewer\"\nAUTH_BASIC_PASSWORD_3: \"viewer_password\"\n</code></pre>"},{"location":"features/#backup","title":"Backup","text":"<p>STREAM support </p> <p>The Backup plugin provides an automated backup solution to protect your BunkerWeb data. This feature ensures the safety and availability of your important database by creating regular backups according to your preferred schedule. Backups are stored in a designated location and can be easily managed through both automated processes and manual commands.</p> <p>How it works:</p> <ol> <li>Your database is automatically backed up according to the schedule you set (daily, weekly, or monthly).</li> <li>Backups are stored in a specified directory on your system.</li> <li>Old backups are automatically rotated based on your retention settings.</li> <li>You can manually create backups, list existing backups, or restore from a backup at any time.</li> <li>Before any restore operation, the current state is automatically backed up as a safety measure.</li> </ol>"},{"location":"features/#how-to-use_2","title":"How to Use","text":"<p>Follow these steps to configure and use the Backup feature:</p> <ol> <li>Enable the feature: The backup feature is enabled by default. If needed, you can control this with the <code>USE_BACKUP</code> setting.</li> <li>Configure backup schedule: Choose how often backups should occur by setting the <code>BACKUP_SCHEDULE</code> parameter.</li> <li>Set retention policy: Specify how many backups to keep using the <code>BACKUP_ROTATION</code> setting.</li> <li>Define storage location: Choose where backups will be stored using the <code>BACKUP_DIRECTORY</code> setting.</li> <li>Use CLI commands: Manage backups manually with the <code>bwcli plugin backup</code> commands when needed.</li> </ol>"},{"location":"features/#configuration-settings_2","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_BACKUP</code> <code>yes</code> global no Enable Backup: Set to <code>yes</code> to enable automatic backups. <code>BACKUP_SCHEDULE</code> <code>daily</code> global no Backup Frequency: How often to perform backups. Options: <code>daily</code>, <code>weekly</code>, or <code>monthly</code>. <code>BACKUP_ROTATION</code> <code>7</code> global no Backup Retention: The number of backup files to keep. Older backups beyond this number will be automatically deleted. <code>BACKUP_DIRECTORY</code> <code>/var/lib/bunkerweb/backups</code> global no Backup Location: The directory where backup files will be stored."},{"location":"features/#command-line-interface","title":"Command Line Interface","text":"<p>The Backup plugin provides several CLI commands to manage your backups:</p> <pre><code># List all available backups\nbwcli plugin backup list\n\n# Create a manual backup\nbwcli plugin backup save\n\n# Create a backup in a custom location\nbwcli plugin backup save --directory /path/to/custom/location\n\n# Restore from the most recent backup\nbwcli plugin backup restore\n\n# Restore from a specific backup file\nbwcli plugin backup restore /path/to/backup/backup-sqlite-2023-08-15_12-34-56.zip\n</code></pre> <p>Safety First</p> <p>Before any restore operation, the Backup plugin automatically creates a backup of your current database state in a temporary location. This provides an extra safeguard in case you need to revert the restore operation.</p> <p>Database Compatibility</p> <p>The Backup plugin supports SQLite, MySQL/MariaDB, and PostgreSQL databases. Oracle databases are not currently supported for backup and restore operations.</p>"},{"location":"features/#example-configurations_3","title":"Example Configurations","text":"Daily Backups with 7-Day RetentionWeekly Backups with Extended RetentionMonthly Backups to Custom Location <p>Default configuration that creates daily backups and keeps the most recent 7 files:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"daily\"\nBACKUP_ROTATION: \"7\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> <p>Configuration for less frequent backups with longer retention:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"weekly\"\nBACKUP_ROTATION: \"12\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> <p>Configuration for monthly backups stored in a custom location:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"monthly\"\nBACKUP_ROTATION: \"24\"\nBACKUP_DIRECTORY: \"/mnt/backup-drive/bunkerweb-backups\"\n</code></pre>"},{"location":"features/#backup-s3-pro","title":"Backup S3  (PRO)","text":"<p>STREAM support </p> <p>Automatically backup your data to an S3 bucket</p> Setting Default Context Multiple Description <code>USE_BACKUP_S3</code> <code>no</code> global no Enable or disable the S3 backup feature <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global no The frequency of the backup <code>BACKUP_S3_ROTATION</code> <code>7</code> global no The number of backups to keep <code>BACKUP_S3_ENDPOINT</code> global no The S3 endpoint <code>BACKUP_S3_BUCKET</code> global no The S3 bucket <code>BACKUP_S3_DIR</code> global no The S3 directory <code>BACKUP_S3_REGION</code> global no The S3 region <code>BACKUP_S3_ACCESS_KEY_ID</code> global no The S3 access key ID <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global no The S3 access key secret <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global no The compression level of the backup zip file"},{"location":"features/#bad-behavior","title":"Bad behavior","text":"<p>STREAM support </p> <p>The Bad Behavior plugin protects your website by automatically detecting and banning IP addresses that generate too many errors or \"bad\" HTTP status codes within a specified period of time. This helps defend against brute force attacks, web scrapers, vulnerability scanners, and other malicious activities that might generate numerous error responses.</p> <p>Attackers often generate \"suspicious\" HTTP status codes when probing for or exploiting vulnerabilities\u2014codes that a typical user is unlikely to trigger within a given time frame. By detecting this behavior, BunkerWeb can automatically ban the offending IP address, forcing the attacker to use a new IP address to continue their attempts.</p> <p>How it works:</p> <ol> <li>The plugin monitors HTTP responses from your site.</li> <li>When a visitor receives a \"bad\" HTTP status code (like 400, 401, 403, 404, etc.), the counter for that IP address is incremented.</li> <li>If an IP address exceeds the configured threshold of bad status codes within the specified time period, the IP is automatically banned.</li> <li>Banned IPs can be blocked either at the service level (just for the specific site) or globally (across all sites), depending on your configuration.</li> <li>Bans automatically expire after the configured ban duration, or remain permanent if configured with <code>0</code>.</li> </ol> <p>Key benefits</p> <ol> <li>Automatic Protection: Detects and blocks potentially malicious clients without requiring manual intervention.</li> <li>Customizable Rules: Fine-tune what constitutes \"bad behavior\" based on your specific needs.</li> <li>Resource Conservation: Prevents malicious actors from consuming server resources with repeated invalid requests.</li> <li>Flexible Scope: Choose whether bans should apply just to the current service or globally across all services.</li> <li>Ban Duration Control: Set temporary bans that automatically expire after the configured duration, or permanent bans that remain until manually removed.</li> </ol>"},{"location":"features/#how-to-use_3","title":"How to Use","text":"<p>Follow these steps to configure and use the Bad Behavior feature:</p> <ol> <li>Enable the feature: The Bad Behavior feature is enabled by default. If needed, you can control this with the <code>USE_BAD_BEHAVIOR</code> setting.</li> <li>Configure status codes: Define which HTTP status codes should be considered \"bad\" using the <code>BAD_BEHAVIOR_STATUS_CODES</code> setting.</li> <li>Set threshold values: Determine how many \"bad\" responses should trigger a ban using the <code>BAD_BEHAVIOR_THRESHOLD</code> setting.</li> <li>Configure time periods: Specify the duration for counting bad responses and the ban duration using the <code>BAD_BEHAVIOR_COUNT_TIME</code> and <code>BAD_BEHAVIOR_BAN_TIME</code> settings.</li> <li>Choose ban scope: Decide whether the bans should apply only to the current service or globally across all services using the <code>BAD_BEHAVIOR_BAN_SCOPE</code> setting.</li> </ol> <p>Stream Mode</p> <p>In stream mode, only the <code>444</code> status code is considered \"bad\" and will trigger this behavior.</p>"},{"location":"features/#configuration-settings_3","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_BAD_BEHAVIOR</code> <code>yes</code> multisite no Enable Bad Behavior: Set to <code>yes</code> to enable the bad behavior detection and banning feature. <code>BAD_BEHAVIOR_STATUS_CODES</code> <code>400 401 403 404 405 429 444</code> multisite no Bad Status Codes: List of HTTP status codes that will be counted as \"bad\" behavior when returned to a client. <code>BAD_BEHAVIOR_THRESHOLD</code> <code>10</code> multisite no Threshold: The number of \"bad\" status codes an IP can generate within the counting period before being banned. <code>BAD_BEHAVIOR_COUNT_TIME</code> <code>60</code> multisite no Count Period: The time window (in seconds) during which bad status codes are counted toward the threshold. <code>BAD_BEHAVIOR_BAN_TIME</code> <code>86400</code> multisite no Ban Duration: How long (in seconds) an IP will remain banned after exceeding the threshold. Default is 24 hours (86400 seconds). Set to <code>0</code> for permanent bans that never expire. <code>BAD_BEHAVIOR_BAN_SCOPE</code> <code>service</code> global no Ban Scope: Determines whether bans apply only to the current service (<code>service</code>) or to all services (<code>global</code>). <p>False Positives</p> <p>Be careful when setting the threshold and count time. Setting these values too low may inadvertently ban legitimate users who encounter errors while browsing your site.</p> <p>Tuning Your Configuration</p> <p>Start with conservative settings (higher threshold, shorter ban time) and adjust based on your specific needs and traffic patterns. Monitor your logs to ensure that legitimate users are not mistakenly banned.</p>"},{"location":"features/#example-configurations_4","title":"Example Configurations","text":"Default ConfigurationStrict ConfigurationLenient ConfigurationPermanent Ban Configuration <p>The default configuration provides a balanced approach suitable for most websites:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"86400\"\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> <p>For high-security applications where you want to be more aggressive in banning potential threats:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444 500 502 503\"\nBAD_BEHAVIOR_THRESHOLD: \"5\"\nBAD_BEHAVIOR_COUNT_TIME: \"120\"\nBAD_BEHAVIOR_BAN_TIME: \"604800\"  # 7 days\nBAD_BEHAVIOR_BAN_SCOPE: \"global\" # Ban across all services\n</code></pre> <p>For sites with high legitimate traffic where you want to avoid false positives:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"401 403 429\"  # Only count unauthorized, forbidden, and rate limited\nBAD_BEHAVIOR_THRESHOLD: \"20\"\nBAD_BEHAVIOR_COUNT_TIME: \"30\"\nBAD_BEHAVIOR_BAN_TIME: \"3600\"  # 1 hour\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> <p>For scenarios where you want detected attackers permanently banned until manually unbanned:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"0\"  # Permanent ban (never expires)\nBAD_BEHAVIOR_BAN_SCOPE: \"global\" # Ban across all services\n</code></pre>"},{"location":"features/#blacklist","title":"Blacklist","text":"<p>STREAM support </p> <p>The Blacklist plugin provides robust protection for your website by blocking access based on various client attributes. This feature defends against known malicious entities, scanners, and suspicious visitors by denying access based on IP addresses, networks, reverse DNS entries, ASNs, user agents, and specific URI patterns.</p> <p>How it works:</p> <ol> <li>The plugin checks incoming requests against multiple blacklist criteria (IP addresses, networks, rDNS, ASN, User-Agent, or URI patterns).</li> <li>Blacklists can be specified directly in your configuration or loaded from external URLs.</li> <li>If a visitor matches any blacklist rule (and does not match any ignore rule), access is denied.</li> <li>Blacklists are automatically updated on a regular schedule from configured URLs.</li> <li>You can customize exactly which criteria are checked and ignored based on your specific security needs.</li> </ol>"},{"location":"features/#how-to-use_4","title":"How to Use","text":"<p>Follow these steps to configure and use the Blacklist feature:</p> <ol> <li>Enable the feature: The Blacklist feature is enabled by default. If needed, you can control this with the <code>USE_BLACKLIST</code> setting.</li> <li>Configure block rules: Define which IPs, networks, rDNS patterns, ASNs, User-Agents, or URIs should be blocked.</li> <li>Set up ignore rules: Specify any exceptions that should bypass the blacklist checks.</li> <li>Add external sources: Configure URLs for automatically downloading and updating blacklist data.</li> <li>Monitor effectiveness: Check the web UI to see statistics on blocked requests.</li> </ol> <p>stream mode</p> <p>When using stream mode, only IP, rDNS, and ASN checks will be performed.</p>"},{"location":"features/#configuration-settings_4","title":"Configuration Settings","text":"<p>General</p> Setting Default Context Multiple Description <code>USE_BLACKLIST</code> <code>yes</code> multisite no Enable Blacklist: Set to <code>yes</code> to enable the blacklist feature. <code>BLACKLIST_COMMUNITY_LISTS</code> <code>ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents</code> multisite no Community Blacklists: Select pre-configured community-maintained blacklists to include in blocking. Community BlacklistsIP AddressReverse DNSASNUser AgentURI <p>What this does: Enables you to quickly add well-maintained, community-sourced blacklists without having to manually configure URLs.</p> <p>The <code>BLACKLIST_COMMUNITY_LISTS</code> setting allows you to select from curated blacklist sources. Available options include:</p> ID Description Source <code>ip:laurent-minne-data-shield-aggressive</code> Data-Shield IPv4 Blocklist. DST = Europa <code>https://raw.githubusercontent.com/duggytuxy/Data-Shield_IPv4_Blocklist/refs/heads/main/prod_data-shield_ipv4_blocklist.txt</code> <code>ip:danmeuk-tor-exit</code> Tor Exit Nodes IPs (dan.me.uk) <code>https://www.dan.me.uk/torlist/?exit</code> <code>ua:mitchellkrogza-bad-user-agents</code> Nginx Block Bad Bots, Spam Referrer Blocker, Vulnerability Scanners, User-Agents, Malware, Adware, Ransomware, Malicious Sites, with anti-DDOS, Wordpress Theme Detector Blocking and Fail2Ban Jail for Repeat Offenders <code>https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list</code> <p>Configuration: Specify multiple lists separated by spaces. For example: <pre><code>BLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n</code></pre></p> <p>Community vs Manual Configuration</p> <p>Community blacklists provide a convenient way to get started with proven blacklist sources. You can use them alongside manual URL configurations for maximum flexibility.</p> <p>What this does: Blocks visitors based on their IP address or network.</p> Setting Default Context Multiple Description <code>BLACKLIST_IP</code> multisite no IP Blacklist: List of IP addresses or networks (CIDR notation) to block, separated by spaces. <code>BLACKLIST_IGNORE_IP</code> multisite no IP Ignore List: List of IP addresses or networks that should bypass IP blacklist checks. <code>BLACKLIST_IP_URLS</code> <code>https://www.dan.me.uk/torlist/?exit</code> multisite no IP Blacklist URLs: List of URLs containing IP addresses or networks to block, separated by spaces. <code>BLACKLIST_IGNORE_IP_URLS</code> multisite no IP Ignore List URLs: List of URLs containing IP addresses or networks to ignore. <p>The default <code>BLACKLIST_IP_URLS</code> setting includes a URL that provides a list of known Tor exit nodes. This is a common source of malicious traffic and is a good starting point for many sites.</p> <p>What this does: Blocks visitors based on their reverse domain name. This is useful for blocking known scanners and crawlers based on their organization domains.</p> Setting Default Context Multiple Description <code>BLACKLIST_RDNS</code> <code>.shodan.io .censys.io</code> multisite no rDNS Blacklist: List of reverse DNS suffixes to block, separated by spaces. <code>BLACKLIST_RDNS_GLOBAL</code> <code>yes</code> multisite no rDNS Global Only: Only perform rDNS checks on global IP addresses when set to <code>yes</code>. <code>BLACKLIST_IGNORE_RDNS</code> multisite no rDNS Ignore List: List of reverse DNS suffixes that should bypass rDNS blacklist checks. <code>BLACKLIST_RDNS_URLS</code> multisite no rDNS Blacklist URLs: List of URLs containing reverse DNS suffixes to block, separated by spaces. <code>BLACKLIST_IGNORE_RDNS_URLS</code> multisite no rDNS Ignore List URLs: List of URLs containing reverse DNS suffixes to ignore. <p>The default <code>BLACKLIST_RDNS</code> setting includes common scanner domains like Shodan and Censys. These are often used by security researchers and scanners to identify vulnerable sites.</p> <p>What this does: Blocks visitors from specific network providers. ASNs are like ZIP codes for the Internet\u2014they identify which provider or organization an IP belongs to.</p> Setting Default Context Multiple Description <code>BLACKLIST_ASN</code> multisite no ASN Blacklist: List of Autonomous System Numbers to block, separated by spaces. <code>BLACKLIST_IGNORE_ASN</code> multisite no ASN Ignore List: List of ASNs that should bypass ASN blacklist checks. <code>BLACKLIST_ASN_URLS</code> multisite no ASN Blacklist URLs: List of URLs containing ASNs to block, separated by spaces. <code>BLACKLIST_IGNORE_ASN_URLS</code> multisite no ASN Ignore List URLs: List of URLs containing ASNs to ignore. <p>What this does: Blocks visitors based on the browser or tool they claim to be using. This is effective against bots that honestly identify themselves (such as \"ScannerBot\" or \"WebHarvestTool\").</p> Setting Default Context Multiple Description <code>BLACKLIST_USER_AGENT</code> multisite no User-Agent Blacklist: List of User-Agent patterns (PCRE regex) to block, separated by spaces. <code>BLACKLIST_IGNORE_USER_AGENT</code> multisite no User-Agent Ignore List: List of User-Agent patterns that should bypass User-Agent blacklist checks. <code>BLACKLIST_USER_AGENT_URLS</code> <code>https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list</code> multisite no User-Agent Blacklist URLs: List of URLs containing User-Agent patterns to block. <code>BLACKLIST_IGNORE_USER_AGENT_URLS</code> multisite no User-Agent Ignore List URLs: List of URLs containing User-Agent patterns to ignore. <p>The default <code>BLACKLIST_USER_AGENT_URLS</code> setting includes a URL that provides a list of known bad user agents. These are often used by malicious bots and scanners to identify vulnerable sites.</p> <p>What this does: Blocks requests to specific URLs on your site. This is helpful for blocking attempts to access admin pages, login forms, or other sensitive areas that might be targeted.</p> Setting Default Context Multiple Description <code>BLACKLIST_URI</code> multisite no URI Blacklist: List of URI patterns (PCRE regex) to block, separated by spaces. <code>BLACKLIST_IGNORE_URI</code> multisite no URI Ignore List: List of URI patterns that should bypass URI blacklist checks. <code>BLACKLIST_URI_URLS</code> multisite no URI Blacklist URLs: List of URLs containing URI patterns to block, separated by spaces. <code>BLACKLIST_IGNORE_URI_URLS</code> multisite no URI Ignore List URLs: List of URLs containing URI patterns to ignore. <p>URL Format Support</p> <p>All <code>*_URLS</code> settings support HTTP/HTTPS URLs as well as local file paths using the <code>file:///</code> prefix. Basic authentication is supported using the <code>http://user:pass@url</code> format.</p> <p>Regular Updates</p> <p>Blacklists from URLs are automatically downloaded and updated hourly to ensure your protection remains current against the latest threats.</p>"},{"location":"features/#example-configurations_5","title":"Example Configurations","text":"Basic IP and User-Agent ProtectionAdvanced Protection with Custom RulesUsing Local Files <p>A simple configuration that blocks known Tor exit nodes and common bad user agents using community blacklists:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n</code></pre> <p>Alternatively, you can use manual URL configuration:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>A more comprehensive configuration with custom blacklist entries and exceptions:</p> <pre><code>USE_BLACKLIST: \"yes\"\n\n# Custom blacklist entries\nBLACKLIST_IP: \"192.168.1.100 203.0.113.0/24\"\nBLACKLIST_RDNS: \".shodan.io .censys.io .scanner.com\"\nBLACKLIST_ASN: \"16509 14618\"  # AWS and Amazon ASNs\nBLACKLIST_USER_AGENT: \"(?:\\b)SemrushBot(?:\\b) (?:\\b)AhrefsBot(?:\\b)\"\nBLACKLIST_URI: \"^/wp-login\\.php$ ^/administrator/\"\n\n# Custom ignore rules\nBLACKLIST_IGNORE_IP: \"192.168.1.200 203.0.113.42\"\n\n# External blacklist sources\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit https://www.spamhaus.org/drop/drop.txt\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Configuration using local files for blacklists:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"file:///path/to/ip-blacklist.txt\"\nBLACKLIST_RDNS_URLS: \"file:///path/to/rdns-blacklist.txt\"\nBLACKLIST_ASN_URLS: \"file:///path/to/asn-blacklist.txt\"\nBLACKLIST_USER_AGENT_URLS: \"file:///path/to/user-agent-blacklist.txt\"\nBLACKLIST_URI_URLS: \"file:///path/to/uri-blacklist.txt\"\n</code></pre>"},{"location":"features/#brotli","title":"Brotli","text":"<p>STREAM support </p> <p>The Brotli plugin enables efficient compression of HTTP responses using the Brotli algorithm. This feature helps reduce bandwidth usage and improve page load times by compressing web content before it is sent to the client's browser.</p> <p>Compared to other compression methods like gzip, Brotli typically achieves higher compression ratios, resulting in smaller file sizes and faster content delivery.</p> <p>How it works:</p> <ol> <li>When a client requests content from your website, BunkerWeb checks if the client supports Brotli compression.</li> <li>If supported, BunkerWeb compresses the response using the Brotli algorithm at your configured compression level.</li> <li>The compressed content is sent to the client with appropriate headers indicating Brotli compression.</li> <li>The client's browser decompresses the content before rendering it to the user.</li> <li>Both bandwidth usage and page load times are reduced, improving overall user experience.</li> </ol>"},{"location":"features/#how-to-use_5","title":"How to Use","text":"<p>Follow these steps to configure and use the Brotli compression feature:</p> <ol> <li>Enable the feature: The Brotli feature is disabled by default. Enable it by setting the <code>USE_BROTLI</code> setting to <code>yes</code>.</li> <li>Configure MIME types: Specify which content types should be compressed using the <code>BROTLI_TYPES</code> setting.</li> <li>Set minimum size: Define the minimum response size for compression with <code>BROTLI_MIN_LENGTH</code> to avoid compressing tiny files.</li> <li>Choose compression level: Select your preferred balance between speed and compression ratio with <code>BROTLI_COMP_LEVEL</code>.</li> <li>Let BunkerWeb handle the rest: Once configured, compression happens automatically for eligible responses.</li> </ol>"},{"location":"features/#configuration-settings_5","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_BROTLI</code> <code>no</code> multisite no Enable Brotli: Set to <code>yes</code> to enable Brotli compression. <code>BROTLI_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> multisite no MIME Types: List of content types that will be compressed with Brotli. <code>BROTLI_MIN_LENGTH</code> <code>1000</code> multisite no Minimum Size: The minimum response size (in bytes) for Brotli compression to be applied. <code>BROTLI_COMP_LEVEL</code> <code>6</code> multisite no Compression Level: Level of compression from 0 (no compression) to 11 (maximum compression). Higher values use more CPU. <p>Optimizing Compression Level</p> <p>The default compression level (6) offers a good balance between compression ratio and CPU usage. For static content or when server CPU resources are plentiful, consider increasing to 9-11 for maximum compression. For dynamic content or when CPU resources are limited, you might want to use 4-5 for faster compression with reasonable size reduction.</p> <p>Browser Support</p> <p>Brotli is supported by all modern browsers including Chrome, Firefox, Edge, Safari, and Opera. Older browsers will automatically receive uncompressed content, ensuring compatibility.</p>"},{"location":"features/#example-configurations_6","title":"Example Configurations","text":"Basic ConfigurationMaximum CompressionBalanced Performance <p>A standard configuration that enables Brotli with default settings:</p> <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json application/xml application/xhtml+xml text/css text/html text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"6\"\n</code></pre> <p>Configuration optimized for maximum compression savings:</p> <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"500\"\nBROTLI_COMP_LEVEL: \"11\"\n</code></pre> <p>Configuration that balances compression ratio with CPU usage:</p> <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"4\"\n</code></pre>"},{"location":"features/#bunkernet","title":"BunkerNet","text":"<p>STREAM support </p> <p>The BunkerNet plugin enables collective threat intelligence sharing between BunkerWeb instances, creating a powerful network of protection against malicious actors. By participating in BunkerNet, your instance both benefits from and contributes to a global database of known threats, enhancing security for the entire BunkerWeb community.</p> <p>How it works:</p> <ol> <li>Your BunkerWeb instance automatically registers with the BunkerNet API to receive a unique identifier.</li> <li>When your instance detects and blocks a malicious IP address or behavior, it anonymously reports the threat to BunkerNet.</li> <li>BunkerNet aggregates threat intelligence from all participating instances and distributes the consolidated database.</li> <li>Your instance regularly downloads an updated database of known threats from BunkerNet.</li> <li>This collective intelligence allows your instance to proactively block IP addresses that have exhibited malicious behavior on other BunkerWeb instances.</li> </ol> <p>Key benefits</p> <ol> <li>Collective Defense: Leverage the security findings from thousands of other BunkerWeb instances globally.</li> <li>Proactive Protection: Block malicious actors before they can target your site based on their behavior elsewhere.</li> <li>Community Contribution: Help protect other BunkerWeb users by sharing anonymized threat data about attackers.</li> <li>Zero Configuration: Works out of the box with sensible defaults, requiring minimal setup.</li> <li>Privacy Focused: Only shares necessary threat information without compromising your or your users' privacy.</li> </ol>"},{"location":"features/#how-to-use_6","title":"How to Use","text":"<p>Follow these steps to configure and use the BunkerNet feature:</p> <ol> <li>Enable the feature: The BunkerNet feature is enabled by default. If needed, you can control this with the <code>USE_BUNKERNET</code> setting.</li> <li>Initial registration: Upon first startup, your instance will automatically register with the BunkerNet API and receive a unique identifier.</li> <li>Automatic updates: Your instance will automatically download the latest threat database on a regular schedule.</li> <li>Automatic reporting: When your instance blocks a malicious IP address, it will automatically contribute this data to the community.</li> <li>Monitor protection: Check the web UI to see statistics on threats blocked by BunkerNet intelligence.</li> </ol>"},{"location":"features/#configuration-settings_6","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_BUNKERNET</code> <code>yes</code> multisite no Enable BunkerNet: Set to <code>yes</code> to enable the BunkerNet threat intelligence sharing. <code>BUNKERNET_SERVER</code> <code>https://api.bunkerweb.io</code> global no BunkerNet Server: The address of the BunkerNet API server for sharing threat intelligence. <p>Network Protection</p> <p>When BunkerNet detects that an IP address has been involved in malicious activity across multiple BunkerWeb instances, it adds that IP to a collective blacklist. This provides a proactive defense layer, protecting your site from threats before they can target you directly.</p> <p>Anonymous Reporting</p> <p>When reporting threat information to BunkerNet, your instance only shares the necessary data to identify the threat: the IP address, the reason for blocking, and minimal contextual data. No personal information about your users or sensitive details about your site is shared.</p>"},{"location":"features/#example-configurations_7","title":"Example Configurations","text":"Default Configuration (Recommended)Disabled ConfigurationCustom Server Configuration <p>The default configuration enables BunkerNet with the official BunkerWeb API server:</p> <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://api.bunkerweb.io\"\n</code></pre> <p>If you prefer not to participate in the BunkerNet threat intelligence network:</p> <pre><code>USE_BUNKERNET: \"no\"\n</code></pre> <p>For organizations running their own BunkerNet server (uncommon):</p> <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://bunkernet.example.com\"\n</code></pre>"},{"location":"features/#crowdsec-console-integration","title":"CrowdSec Console integration","text":"<p>If you aren\u2019t already familiar with CrowdSec Console integration, CrowdSec leverages crowdsourced intelligence to combat cyber threats. Think of it as the \"Waze of cybersecurity\"\u2014when one server is attacked, other systems worldwide are alerted and protected from the same attackers. You can learn more about it here.</p> <p>Through our partnership with CrowdSec, you can enroll your BunkerWeb instances into your CrowdSec Console. This means that attacks blocked by BunkerWeb will be visible in your CrowdSec Console alongside attacks blocked by CrowdSec Security Engines, giving you a unified view of threats.</p> <p>Importantly, CrowdSec does not need to be installed for this integration (though we highly recommend trying it out with the CrowdSec plugin for BunkerWeb to further enhance the security of your web services). Additionally, you can enroll your CrowdSec Security Engines into the same Console account for even greater synergy.</p> <p>Step #1: Create your CrowdSec Console account</p> <p>Go to the CrowdSec Console and register if you don\u2019t already have an account. Once done, note the enroll key found under \"Security Engines\" after clicking on \"Add Security Engine\":</p> <p> </p> Get your Crowdsec Console enroll key <p>Step #2: Get your BunkerNet ID</p> <p>Activating the BunkerNet feature (enabled by default) is mandatory if you want to enroll your BunkerWeb instance(s) in your CrowdSec Console. Enable it by setting <code>USE_BUNKERNET</code> to <code>yes</code>.</p> <p>For Docker, get your BunkerNet ID using:</p> <pre><code>docker exec my-bw-scheduler cat /var/cache/bunkerweb/bunkernet/instance.id\n</code></pre> <p>For Linux, use:</p> <pre><code>cat /var/cache/bunkerweb/bunkernet/instance.id\n</code></pre> <p>Step #3: Enroll your instance using the Panel</p> <p>Once you have your BunkerNet ID and CrowdSec Console enroll key, order the free product \"BunkerNet / CrowdSec\" on the Panel. You may be prompted to create an account if you haven\u2019t already.</p> <p>You can now select the \"BunkerNet / CrowdSec\" service and fill out the form by pasting your BunkerNet ID and CrowdSec Console enroll key:</p> <p> </p> Enroll your BunkerWeb instance into the CrowdSec Console <p>Step #4: Accept the new security engine on the Console</p> <p>Then, go back to your CrowdSec Console and accept the new Security Engine:</p> <p> </p> Accept enroll into the CrowdSec Console <p>Congratulations, your BunkerWeb instance is now enrolled in your CrowdSec Console!</p> <p>Pro tip: When viewing your alerts, click the \"columns\" option and check the \"context\" checkbox to access BunkerWeb-specific data.</p> <p> </p> BunkerWeb data shown in the context column"},{"location":"features/#cors","title":"CORS","text":"<p>STREAM support </p> <p>The CORS plugin enables Cross-Origin Resource Sharing for your website, allowing controlled access to your resources from different domains. This feature helps you safely share your content with trusted third-party websites while maintaining security by explicitly defining which origins, methods, and headers are permitted.</p> <p>How it works:</p> <ol> <li>When a browser makes a cross-origin request to your website, it first sends a preflight request with the <code>OPTIONS</code> method.</li> <li>BunkerWeb checks if the requesting origin is permitted based on your configuration.</li> <li>If allowed, BunkerWeb responds with the appropriate CORS headers that define what the requesting site can do.</li> <li>For non-permitted origins, the request can be either completely denied or served without CORS headers.</li> <li>Additional cross-origin policies, such as COEP, COOP, and CORP, can be configured to further enhance security.</li> </ol>"},{"location":"features/#how-to-use_7","title":"How to Use","text":"<p>Follow these steps to configure and use the CORS feature:</p> <ol> <li>Enable the feature: The CORS feature is disabled by default. Set the <code>USE_CORS</code> setting to <code>yes</code> to enable it.</li> <li>Configure allowed origins: Specify which domains can access your resources using the <code>CORS_ALLOW_ORIGIN</code> setting.</li> <li>Set permitted methods: Define which HTTP methods are allowed for cross-origin requests with <code>CORS_ALLOW_METHODS</code>.</li> <li>Configure allowed headers: Specify which headers can be used in requests with <code>CORS_ALLOW_HEADERS</code>.</li> <li>Control credentials: Decide whether cross-origin requests can include credentials using <code>CORS_ALLOW_CREDENTIALS</code>.</li> </ol>"},{"location":"features/#configuration-settings_7","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_CORS</code> <code>no</code> multisite no Enable CORS: Set to <code>yes</code> to enable Cross-Origin Resource Sharing. <code>CORS_ALLOW_ORIGIN</code> <code>self</code> multisite no Allowed Origins: PCRE regular expression representing allowed origins; use <code>*</code> for any origin, or <code>self</code> for same-origin only. <code>CORS_ALLOW_METHODS</code> <code>GET, POST, OPTIONS</code> multisite no Allowed Methods: HTTP methods that can be used in cross-origin requests. <code>CORS_ALLOW_HEADERS</code> <code>DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range</code> multisite no Allowed Headers: HTTP headers that can be used in cross-origin requests. <code>CORS_ALLOW_CREDENTIALS</code> <code>no</code> multisite no Allow Credentials: Set to <code>yes</code> to allow credentials (cookies, HTTP authentication) in CORS requests. <code>CORS_EXPOSE_HEADERS</code> <code>Content-Length,Content-Range</code> multisite no Exposed Headers: HTTP headers that browsers are permitted to access from cross-origin responses. <code>CROSS_ORIGIN_OPENER_POLICY</code> <code>same-origin</code> multisite no Cross-Origin-Opener-Policy: Controls communication between browsing contexts. <code>CROSS_ORIGIN_EMBEDDER_POLICY</code> <code>require-corp</code> multisite no Cross-Origin-Embedder-Policy: Controls whether a document can load resources from other origins. <code>CROSS_ORIGIN_RESOURCE_POLICY</code> <code>same-site</code> multisite no Cross-Origin-Resource-Policy: Controls which websites can embed your resources. <code>CORS_MAX_AGE</code> <code>86400</code> multisite no Preflight Cache Duration: How long (in seconds) browsers should cache the preflight response. <code>CORS_DENY_REQUEST</code> <code>yes</code> multisite no Deny Unauthorized Origins: When <code>yes</code>, requests from unauthorized origins are denied with an error code. <p>Optimizing Preflight Requests</p> <p>The <code>CORS_MAX_AGE</code> setting determines how long browsers will cache the results of a preflight request. Setting this to a higher value (like the default 86400 seconds/24 hours) reduces the number of preflight requests, improving performance for frequently accessed resources.</p> <p>Security Considerations</p> <p>Be cautious when setting <code>CORS_ALLOW_ORIGIN</code> to <code>*</code> (all origins) or <code>CORS_ALLOW_CREDENTIALS</code> to <code>yes</code> because these configurations may introduce security risks if not properly managed. It's generally safer to explicitly list trusted origins and limit the allowed methods and headers.</p>"},{"location":"features/#example-configurations_8","title":"Example Configurations","text":"<p>Here are examples of possible values for the <code>CORS_ALLOW_ORIGIN</code> setting, along with their behavior:</p> <ul> <li><code>*</code>: Allows requests from all origins.</li> <li><code>self</code>: Automatically allows requests from the same origin as the configured server_name.</li> <li><code>^https://www\\.example\\.com$</code>: Allows requests only from <code>https://www.example.com</code>.</li> <li><code>^https://.+\\.example\\.com$</code>: Allows requests from any subdomain ending with <code>.example.com</code>.</li> <li><code>^https://(www\\.example1\\.com|www\\.example2\\.com)$</code>: Allows requests from either <code>https://www.example1.com</code> or <code>https://www.example2.com</code>.</li> <li><code>^https?://www\\.example\\.com$</code>: Allows requests from both <code>https://www.example.com</code> and <code>http://www.example.com</code>.</li> </ul> Basic ConfigurationPublic API ConfigurationMultiple Trusted DomainsSubdomain WildcardMultiple Domain Patterns <p>A simple configuration allowing cross-origin requests from the same domain:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"self\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Configuration for a public API that needs to be accessible from any origin:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"*\"\nCORS_ALLOW_METHODS: \"GET, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, X-API-Key\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"3600\"\nCORS_DENY_REQUEST: \"no\"\n</code></pre> <p>Configuration for allowing multiple specific domains with a single PCRE regular expression pattern:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(app|api|dashboard)\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, DELETE, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Requested-With\"\nCORS_ALLOW_CREDENTIALS: \"yes\"\nCORS_EXPOSE_HEADERS: \"Content-Length, Content-Range, X-RateLimit-Remaining\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Configuration allowing all subdomains of a primary domain using a PCRE regular expression pattern:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://.*\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Configuration allowing requests from multiple domain patterns with alternation:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(.*\\\\.example\\\\.com|.*\\\\.trusted-partner\\\\.org|api\\\\.third-party\\\\.net)$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Custom-Header\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre>"},{"location":"features/#client-cache","title":"Client cache","text":"<p>STREAM support </p> <p>The Client Cache plugin optimizes website performance by controlling how browsers cache static content. It reduces bandwidth usage, lowers server load, and improves page load times by instructing browsers to store and reuse static assets\u2014such as images, CSS, and JavaScript files\u2014locally instead of requesting them on every page visit.</p> <p>How it works:</p> <ol> <li>When enabled, BunkerWeb adds Cache-Control headers to responses for static files.</li> <li>These headers tell browsers how long they should cache the content locally.</li> <li>For files with specified extensions (like images, CSS, JavaScript), BunkerWeb applies the configured caching policy.</li> <li>Optional ETag support provides an additional validation mechanism to determine whether cached content is still fresh.</li> <li>When visitors return to your site, their browsers can use locally cached files instead of downloading them again, resulting in faster page load times.</li> </ol>"},{"location":"features/#how-to-use_8","title":"How to Use","text":"<p>Follow these steps to configure and use the Client Cache feature:</p> <ol> <li>Enable the feature: The Client Cache feature is disabled by default; set the <code>USE_CLIENT_CACHE</code> setting to <code>yes</code> to enable it.</li> <li>Configure file extensions: Specify which file types should be cached using the <code>CLIENT_CACHE_EXTENSIONS</code> setting.</li> <li>Set cache control directives: Customize how clients should cache content using the <code>CLIENT_CACHE_CONTROL</code> setting.</li> <li>Configure ETag support: Decide whether to enable ETags for validating cache freshness with the <code>CLIENT_CACHE_ETAG</code> setting.</li> <li>Let BunkerWeb handle the rest: Once configured, caching headers are applied automatically to eligible responses.</li> </ol>"},{"location":"features/#configuration-settings_8","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_CLIENT_CACHE</code> <code>no</code> multisite no Enable Client Cache: Set to <code>yes</code> to enable client-side caching of static files. <code>CLIENT_CACHE_EXTENSIONS</code> <code>jpg                       | jpeg      | png      | bmp                                                                                            | ico | svg | tif | css | js | otf | ttf | eot | woff | woff2</code> global no Cacheable Extensions: List of file extensions (separated by pipes) that should be cached by the client. <code>CLIENT_CACHE_CONTROL</code> <code>public, max-age=15552000</code> multisite no Cache-Control Header: Value for the Cache-Control HTTP header to control caching behavior. <code>CLIENT_CACHE_ETAG</code> <code>yes</code> multisite no Enable ETags: Set to <code>yes</code> to send the HTTP ETag header for static resources. <p>Optimizing Cache Settings</p> <p>For frequently updated content, consider using shorter max-age values. For content that rarely changes (like versioned JavaScript libraries or logos), use longer cache times. The default value of 15552000 seconds (180 days) is appropriate for most static assets.</p> <p>Browser Behavior</p> <p>Different browsers implement caching slightly differently, but all modern browsers honor standard Cache-Control directives. ETags provide an additional validation mechanism that helps browsers determine if cached content is still valid.</p>"},{"location":"features/#example-configurations_9","title":"Example Configurations","text":"Basic ConfigurationAggressive CachingMixed Content Strategy <p>A simple configuration that enables caching for common static assets:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|gif|css|js|svg|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=86400\"  # 1 day\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> <p>Configuration optimized for maximum caching, suitable for sites with infrequently updated static content:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2|pdf|xml|txt\"\nCLIENT_CACHE_CONTROL: \"public, max-age=31536000, immutable\"  # 1 year\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> <p>For sites with a mix of frequently and infrequently updated content, consider using file versioning in your application and a configuration like this:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=604800\"  # 1 week\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre>"},{"location":"features/#country","title":"Country","text":"<p>STREAM support </p> <p>The Country plugin enables geo-blocking functionality for your website, allowing you to restrict access based on the geographic location of your visitors. This feature helps you comply with regional regulations, prevent fraudulent activities often associated with high-risk regions, and implement content restrictions based on geographic boundaries.</p> <p>How it works:</p> <ol> <li>When a visitor accesses your website, BunkerWeb determines their country based on their IP address.</li> <li>Your configuration specifies either a whitelist (allowed countries) or a blacklist (blocked countries).</li> <li>If you've set up a whitelist, only visitors from countries on that list will be granted access.</li> <li>If you've set up a blacklist, visitors from countries on that list will be denied access.</li> <li>The result is cached to improve performance for repeat visitors from the same IP address.</li> </ol>"},{"location":"features/#how-to-use_9","title":"How to Use","text":"<p>Follow these steps to configure and use the Country feature:</p> <ol> <li>Define your strategy: Decide whether you want to use a whitelist approach (allow only specific countries) or a blacklist approach (block specific countries).</li> <li>Configure country codes: Add the ISO 3166-1 alpha-2 country codes (two-letter codes like US, GB, FR) to either the <code>WHITELIST_COUNTRY</code> or <code>BLACKLIST_COUNTRY</code> setting.</li> <li>Apply settings: Once configured, the country-based restrictions will apply to all visitors to your site.</li> <li>Monitor effectiveness: Check the web UI to see statistics on blocked requests by country.</li> </ol>"},{"location":"features/#configuration-settings_9","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>WHITELIST_COUNTRY</code> multisite no Country Whitelist: List of country codes (ISO 3166-1 alpha-2 format) separated by spaces. Only these countries are allowed. <code>BLACKLIST_COUNTRY</code> multisite no Country Blacklist: List of country codes (ISO 3166-1 alpha-2 format) separated by spaces. These countries are blocked. <p>Whitelist vs. Blacklist</p> <p>Choose the approach that best fits your needs:</p> <ul> <li>Use the whitelist when you want to restrict access to a small number of countries.</li> <li>Use the blacklist when you want to block access from specific problematic regions while allowing everyone else.</li> </ul> <p>Precedence Rule</p> <p>If both whitelist and blacklist are configured, the whitelist takes precedence. This means the system first checks if a country is whitelisted; if not, access is denied regardless of the blacklist configuration.</p> <p>Country Detection</p> <p>BunkerWeb uses the lite db-ip mmdb database to determine the country of origin based on IP addresses.</p>"},{"location":"features/#example-configurations_10","title":"Example Configurations","text":"Whitelist OnlyBlacklist OnlyEU Access OnlyHigh-Risk Countries Blocked <p>Allow access only from the United States, Canada, and the United Kingdom:</p> <pre><code>WHITELIST_COUNTRY: \"US CA GB\"\n</code></pre> <p>Block access from specific countries while allowing all others:</p> <pre><code>BLACKLIST_COUNTRY: \"RU CN KP\"\n</code></pre> <p>Allow access only from European Union member states:</p> <pre><code>WHITELIST_COUNTRY: \"AT BE BG HR CY CZ DK EE FI FR DE GR HU IE IT LV LT LU MT NL PL PT RO SK SI ES SE\"\n</code></pre> <p>Block access from countries often associated with certain cyber threats:</p> <pre><code>BLACKLIST_COUNTRY: \"RU CN KP IR SY\"\n</code></pre>"},{"location":"features/#crowdsec","title":"CrowdSec","text":"<p>STREAM support </p> <p></p> <p>The CrowdSec plugin integrates BunkerWeb with the CrowdSec security engine, providing an additional layer of protection against various cyber threats. This plugin acts as a CrowdSec bouncer, denying requests based on decisions from the CrowdSec API.</p> <p>CrowdSec is a modern, open-source security engine that detects and blocks malicious IP addresses based on behavioral analysis and collective intelligence from its community. You can also configure scenarios to automatically ban IP addresses based on suspicious behavior, benefiting from a crowdsourced blacklist.</p> <p>How it works:</p> <ol> <li>The CrowdSec engine analyzes logs and detects suspicious activities on your infrastructure.</li> <li>When malicious activity is detected, CrowdSec creates a decision to block the offending IP address.</li> <li>BunkerWeb, acting as a bouncer, queries the CrowdSec Local API for decisions about incoming requests.</li> <li>If a client's IP address has an active block decision, BunkerWeb denies access to the protected services.</li> <li>Optionally, the Application Security Component can perform deep request inspection for enhanced security.</li> </ol> <p>Key benefits</p> <ol> <li>Community-Powered Security: Benefit from threat intelligence shared across the CrowdSec user community.</li> <li>Behavioral Analysis: Detect sophisticated attacks based on behavior patterns, not just signatures.</li> <li>Lightweight Integration: Minimal performance impact on your BunkerWeb instance.</li> <li>Multi-Level Protection: Combine perimeter defense (IP blocking) with application security for in-depth protection.</li> </ol>"},{"location":"features/#setup","title":"Setup","text":"DockerLinuxAll-in-one <p>Acquisition file</p> <p>You will need to run a CrowdSec instance and configure it to parse BunkerWeb logs. Since BunkerWeb is based on NGINX, you can use the <code>nginx</code> value for the <code>type</code> parameter in your acquisition file (assuming that BunkerWeb logs are stored as is without additional data):</p> <pre><code>filenames:\n  - /var/log/bunkerweb.log\nlabels:\n  type: nginx\n</code></pre> <p>Application Security Component (optional)</p> <p>CrowdSec also provides an Application Security Component that can be used to protect your application from attacks. If you want to use it, you must create another acquisition file for the AppSec Component:</p> <pre><code>appsec_config: crowdsecurity/appsec-default\nlabels:\n  type: appsec\nlisten_addr: 0.0.0.0:7422\nsource: appsec\n</code></pre> <p>Syslog</p> <p>For container-based integrations, we recommend redirecting the logs of the BunkerWeb container to a syslog service so CrowdSec can access them easily. Here is an example configuration for syslog-ng that will store raw logs coming from BunkerWeb to a local <code>/var/log/bunkerweb.log</code> file:</p> <pre><code>@version: 4.8\n\nsource s_net {\n    udp(\n        ip(\"0.0.0.0\")\n    );\n};\n\ntemplate t_imp {\n    template(\"$MSG\\n\");\n    template_escape(no);\n};\n\ndestination d_file {\n    file(\"/var/log/bunkerweb.log\" template(t_imp));\n};\n\nlog {\n    source(s_net);\n    destination(d_file);\n};\n</code></pre> <p>Docker Compose</p> <p>Here is the docker-compose boilerplate that you can use (don\u2019t forget to update the bouncer key):</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n\nservices:\n  bunkerweb:\n    # This is the name that will be used to identify the instance in the Scheduler\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    environment:\n      &lt;&lt;: *bw-env # We use the anchor to avoid repeating the same settings for all services\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog # Send logs to syslog\n      options:\n        syslog-address: \"udp://10.20.30.254:514\" # The IP address of the syslog service\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      USE_CROWDSEC: \"yes\"\n      CROWDSEC_API: \"http://crowdsec:8080\" # This is the address of the CrowdSec container API in the same network\n      CROWDSEC_APPSEC_URL: \"http://crowdsec:7422\" # Comment if you don't want to use the AppSec Component\n      CROWDSEC_API_KEY: \"s3cr3tb0unc3rk3y\" # Remember to set a stronger key for the bouncer\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  crowdsec:\n    image: crowdsecurity/crowdsec:v1.7.0 # Use the latest version but always pin the version for a better stability/security\n    volumes:\n      - cs-data:/var/lib/crowdsec/data # To persist the CrowdSec data\n      - bw-logs:/var/log:ro # The logs of BunkerWeb for CrowdSec to parse\n      - ./acquis.yaml:/etc/crowdsec/acquis.yaml # The acquisition file for BunkerWeb logs\n      - ./appsec.yaml:/etc/crowdsec/acquis.d/appsec.yaml # Comment if you don't want to use the AppSec Component\n    environment:\n      BOUNCER_KEY_bunkerweb: \"s3cr3tb0unc3rk3y\" # Remember to set a stronger key for the bouncer\n      COLLECTIONS: \"crowdsecurity/nginx crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules\"\n      #   COLLECTIONS: \"crowdsecurity/nginx\" # If you don't want to use the AppSec Component use this line instead\n    networks:\n      - bw-universe\n\n  syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Bind to low ports\n      - NET_BROADCAST  # Send broadcasts\n      - NET_RAW  # Use raw sockets\n      - DAC_READ_SEARCH  # Read files bypassing permissions\n      - DAC_OVERRIDE  # Override file permissions\n      - CHOWN  # Change ownership\n      - SYSLOG  # Write to system logs\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # This is the syslog-ng configuration file\n    networks:\n        bw-universe:\n          ipv4_address: 10.20.30.254\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n  cs-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>You need to install CrowdSec and configure it to parse BunkerWeb logs. Follow the official documentation.</p> <p>To enable CrowdSec to parse BunkerWeb logs, add the following lines to your acquisition file located at <code>/etc/crowdsec/acquis.yaml</code>:</p> <pre><code>filenames:\n  - /var/log/bunkerweb/access.log\n  - /var/log/bunkerweb/error.log\n  - /var/log/bunkerweb/modsec_audit.log\nlabels:\n    type: nginx\n</code></pre> <p>Now, add your custom bouncer to the CrowdSec API using the <code>cscli</code> tool:</p> <pre><code>sudo cscli bouncers add crowdsec-bunkerweb-bouncer/v1.6\n</code></pre> <p>API key</p> <p>Keep the key generated by the <code>cscli</code> command; you will need it later.</p> <p>Then restart the CrowdSec service:</p> <pre><code>sudo systemctl restart crowdsec\n</code></pre> <p>Application Security Component (optional)</p> <p>If you want to use the AppSec Component, you must create another acquisition file for it located at <code>/etc/crowdsec/acquis.d/appsec.yaml</code>:</p> <pre><code>appsec_config: crowdsecurity/appsec-default\nlabels:\n    type: appsec\nlisten_addr: 127.0.0.1:7422\nsource: appsec\n</code></pre> <p>You will also need to install the AppSec Component's collections:</p> <pre><code>sudo cscli collections install crowdsecurity/appsec-virtual-patching\nsudo cscli collections install crowdsecurity/appsec-generic-rules\n</code></pre> <p>Finally, restart the CrowdSec service:</p> <pre><code>sudo systemctl restart crowdsec\n</code></pre> <p>Settings</p> <p>Configure the plugin by adding the following settings to your BunkerWeb configuration file:</p> <pre><code>USE_CROWDSEC=yes\nCROWDSEC_API=http://127.0.0.1:8080\nCROWDSEC_API_KEY=&lt;The key provided by cscli&gt;\n# Comment if you don't want to use the AppSec Component\nCROWDSEC_APPSEC_URL=http://127.0.0.1:7422\n</code></pre> <p>Finally, reload the BunkerWeb service:</p> <pre><code>sudo systemctl reload bunkerweb\n</code></pre> <p>The BunkerWeb All-In-One (AIO) Docker image comes with CrowdSec fully integrated. You don't need to set up a separate CrowdSec instance or manually configure acquisition files for BunkerWeb logs when using the internal CrowdSec agent.</p> <p>Refer to the All-In-One (AIO) Image integration documentation.</p>"},{"location":"features/#configuration-settings_10","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_CROWDSEC</code> <code>no</code> multisite no Enable CrowdSec: Set to <code>yes</code> to enable the CrowdSec bouncer. <code>CROWDSEC_API</code> <code>http://crowdsec:8080</code> global no CrowdSec API URL: The address of the CrowdSec Local API service. <code>CROWDSEC_API_KEY</code> global no CrowdSec API Key: The API key for authenticating with the CrowdSec API, obtained using <code>cscli bouncers add</code>. <code>CROWDSEC_MODE</code> <code>live</code> global no Operation Mode: Either <code>live</code> (query API for each request) or <code>stream</code> (periodically cache all decisions). <code>CROWDSEC_ENABLE_INTERNAL</code> <code>no</code> global no Internal Traffic: Set to <code>yes</code> to check internal traffic against CrowdSec decisions. <code>CROWDSEC_REQUEST_TIMEOUT</code> <code>1000</code> global no Request Timeout: Timeout in milliseconds for HTTP requests to the CrowdSec Local API in live mode. <code>CROWDSEC_EXCLUDE_LOCATION</code> global no Excluded Locations: Comma-separated list of locations (URIs) to exclude from CrowdSec checks. <code>CROWDSEC_CACHE_EXPIRATION</code> <code>1</code> global no Cache Expiration: The cache expiration time in seconds for IP decisions in live mode. <code>CROWDSEC_UPDATE_FREQUENCY</code> <code>10</code> global no Update Frequency: How often (in seconds) to pull new/expired decisions from the CrowdSec API in stream mode."},{"location":"features/#application-security-component-settings","title":"Application Security Component Settings","text":"Setting Default Context Multiple Description <code>CROWDSEC_APPSEC_URL</code> global no AppSec URL: The URL of the CrowdSec Application Security Component. Leave empty to disable AppSec. <code>CROWDSEC_APPSEC_FAILURE_ACTION</code> <code>passthrough</code> global no Failure Action: Action to take when AppSec returns an error. Can be <code>passthrough</code> or <code>deny</code>. <code>CROWDSEC_APPSEC_CONNECT_TIMEOUT</code> <code>100</code> global no Connect Timeout: The timeout in milliseconds for connecting to the AppSec Component. <code>CROWDSEC_APPSEC_SEND_TIMEOUT</code> <code>100</code> global no Send Timeout: The timeout in milliseconds for sending data to the AppSec Component. <code>CROWDSEC_APPSEC_PROCESS_TIMEOUT</code> <code>500</code> global no Process Timeout: The timeout in milliseconds for processing the request in the AppSec Component. <code>CROWDSEC_ALWAYS_SEND_TO_APPSEC</code> <code>no</code> global no Always Send: Set to <code>yes</code> to always send requests to AppSec, even if there's an IP-level decision. <code>CROWDSEC_APPSEC_SSL_VERIFY</code> <code>no</code> global no SSL Verify: Set to <code>yes</code> to verify the AppSec Component's SSL certificate. <p>About Operation Modes</p> <ul> <li>Live mode queries the CrowdSec API for each incoming request, providing real-time protection at the cost of higher latency.</li> <li>Stream mode periodically downloads all decisions from the CrowdSec API and caches them locally, reducing latency with a slight delay in applying new decisions.</li> </ul>"},{"location":"features/#example-configurations_11","title":"Example Configurations","text":"Basic ConfigurationAdvanced Configuration with AppSec <p>This is a simple configuration for when CrowdSec runs on the same host:</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"your-api-key-here\"\nCROWDSEC_MODE: \"live\"\n</code></pre> <p>A more comprehensive configuration including the Application Security Component:</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"your-api-key-here\"\nCROWDSEC_MODE: \"stream\"\nCROWDSEC_UPDATE_FREQUENCY: \"30\"\nCROWDSEC_EXCLUDE_LOCATION: \"/health,/metrics\"\n\n# AppSec Configuration\nCROWDSEC_APPSEC_URL: \"http://crowdsec:7422\"\nCROWDSEC_APPSEC_FAILURE_ACTION: \"deny\"\nCROWDSEC_ALWAYS_SEND_TO_APPSEC: \"yes\"\nCROWDSEC_APPSEC_SSL_VERIFY: \"yes\"\n</code></pre>"},{"location":"features/#custom-ssl-certificate","title":"Custom SSL certificate","text":"<p>STREAM support </p> <p>The Custom SSL certificate plugin allows you to use your own SSL/TLS certificates with BunkerWeb instead of the automatically generated ones. This feature is particularly useful if you have existing certificates from a trusted Certificate Authority (CA), need to use certificates with specific configurations, or want to maintain consistent certificate management across your infrastructure.</p> <p>How it works:</p> <ol> <li>You provide BunkerWeb with your certificate and private key files, either by specifying file paths or by providing the data in base64-encoded or plaintext PEM format.</li> <li>BunkerWeb validates your certificate and key to ensure they are properly formatted and usable.</li> <li>When a secure connection is established, BunkerWeb serves your custom certificate instead of the auto-generated one.</li> <li>BunkerWeb automatically monitors your certificate's validity and displays warnings if it is approaching expiration.</li> <li>You have full control over certificate management, allowing you to use certificates from any issuer you prefer.</li> </ol> <p>Automatic Certificate Monitoring</p> <p>When you enable custom SSL/TLS by setting <code>USE_CUSTOM_SSL</code> to <code>yes</code>, BunkerWeb automatically monitors the custom certificate specified in <code>CUSTOM_SSL_CERT</code>. It checks for changes daily and reloads NGINX if any modifications are detected, ensuring the latest certificate is always in use.</p>"},{"location":"features/#how-to-use_10","title":"How to Use","text":"<p>Follow these steps to configure and use the Custom SSL certificate feature:</p> <ol> <li>Enable the feature: Set the <code>USE_CUSTOM_SSL</code> setting to <code>yes</code> to enable custom certificate support.</li> <li>Choose a method: Decide whether to provide certificates via file paths or as base64-encoded/plaintext data, and set the priority using <code>CUSTOM_SSL_CERT_PRIORITY</code>.</li> <li>Provide certificate files: If using file paths, specify the locations of your certificate and private key files.</li> <li>Or provide certificate data: If using data, provide your certificate and key as either base64-encoded strings or plaintext PEM format.</li> <li>Let BunkerWeb handle the rest: Once configured, BunkerWeb automatically uses your custom certificates for all HTTPS connections.</li> </ol> <p>Stream Mode Configuration</p> <p>For stream mode, you must configure the <code>LISTEN_STREAM_PORT_SSL</code> setting to specify the SSL/TLS listening port. This step is essential for proper operation in stream mode.</p>"},{"location":"features/#configuration-settings_11","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_CUSTOM_SSL</code> <code>no</code> multisite no Enable Custom SSL: Set to <code>yes</code> to use your own certificate instead of the auto-generated one. <code>CUSTOM_SSL_CERT_PRIORITY</code> <code>file</code> multisite no Certificate Priority: Choose whether to prioritize the certificate from file path or from base64 data (<code>file</code> or <code>data</code>). <code>CUSTOM_SSL_CERT</code> multisite no Certificate Path: Full path to your SSL certificate or certificate bundle file. <code>CUSTOM_SSL_KEY</code> multisite no Private Key Path: Full path to your SSL private key file. <code>CUSTOM_SSL_CERT_DATA</code> multisite no Certificate Data: Your certificate encoded in base64 format or as plaintext PEM. <code>CUSTOM_SSL_KEY_DATA</code> multisite no Private Key Data: Your private key encoded in base64 format or as plaintext PEM. <p>Security Considerations</p> <p>When using custom certificates, ensure your private key is properly secured and has appropriate permissions. The files must be readable by the BunkerWeb scheduler.</p> <p>Certificate Format</p> <p>BunkerWeb expects certificates in PEM format. If your certificate is in a different format, you may need to convert it first.</p> <p>Certificate Chains</p> <p>If your certificate includes a chain (intermediates), you should provide the full certificate chain in the correct order, with your certificate first, followed by any intermediate certificates.</p>"},{"location":"features/#example-configurations_12","title":"Example Configurations","text":"Using File PathsUsing Base64 DataUsing Plaintext PEM DataFallback Configuration <p>A configuration using certificate and key files on disk:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/path/to/your/certificate.pem\"\nCUSTOM_SSL_KEY: \"/path/to/your/private-key.pem\"\n</code></pre> <p>A configuration using base64-encoded certificate and key data:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...base64 encoded certificate...Cg==\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...base64 encoded key...Cg==\"\n</code></pre> <p>A configuration using plaintext certificate and key data in PEM format:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: |\n  -----BEGIN CERTIFICATE-----\n  MIIDdzCCAl+gAwIBAgIUJH...certificate content...AAAA\n  -----END CERTIFICATE-----\nCUSTOM_SSL_KEY_DATA: |\n  -----BEGIN PRIVATE KEY-----\n  MIIEvQIBADAN...key content...AAAA\n  -----END PRIVATE KEY-----\n</code></pre> <p>A configuration that prioritizes files but falls back to base64 data if files are unavailable:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/path/to/your/certificate.pem\"\nCUSTOM_SSL_KEY: \"/path/to/your/private-key.pem\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...base64 encoded certificate...Cg==\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...base64 encoded key...Cg==\"\n</code></pre>"},{"location":"features/#dnsbl","title":"DNSBL","text":"<p>STREAM support </p> <p>The DNSBL (Domain Name System Blacklist) plugin provides protection against known malicious IP addresses by checking client IP addresses against external DNSBL servers. This feature helps guard your website against spam, botnets, and various types of cyber threats by leveraging community-maintained lists of problematic IP addresses.</p> <p>How it works:</p> <ol> <li>When a client connects to your website, BunkerWeb queries the DNSBL servers you have chosen using the DNS protocol.</li> <li>The check is performed by sending a reverse DNS query to each DNSBL server with the client's IP address.</li> <li>If any DNSBL server confirms that the client's IP address is listed as malicious, BunkerWeb will automatically ban the client, preventing potential threats from reaching your application.</li> <li>Results are cached to improve performance for repeat visitors from the same IP address.</li> <li>Lookups are performed efficiently using asynchronous queries to minimize impact on page load times.</li> </ol>"},{"location":"features/#how-to-use_11","title":"How to Use","text":"<p>Follow these steps to configure and use the DNSBL feature:</p> <ol> <li>Enable the feature: The DNSBL feature is disabled by default. Set the <code>USE_DNSBL</code> setting to <code>yes</code> to enable it.</li> <li>Configure DNSBL servers: Add the domain names of the DNSBL services you want to use to the <code>DNSBL_LIST</code> setting.</li> <li>Apply settings: Once configured, BunkerWeb will automatically check incoming connections against the specified DNSBL servers.</li> <li>Monitor effectiveness: Check the web UI to see statistics on requests blocked by DNSBL checks.</li> </ol>"},{"location":"features/#configuration-settings_12","title":"Configuration Settings","text":"<p>General</p> Setting Default Context Multiple Description <code>USE_DNSBL</code> <code>no</code> multisite no Enable DNSBL: set to <code>yes</code> to enable DNSBL checks for incoming connections. <code>DNSBL_LIST</code> <code>bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org</code> global no DNSBL servers: list of DNSBL server domains to check, separated by spaces. <p>Ignore Lists</p> Setting Default Context Multiple Description <code>DNSBL_IGNORE_IP</code> `` multisite yes Space-separated IPs/CIDRs to skip DNSBL checks for (whitelist). <code>DNSBL_IGNORE_IP_URLS</code> `` multisite yes Space-separated URLs providing IPs/CIDRs to skip. Supports <code>http(s)://</code> and <code>file://</code> schemes. <p>Choosing DNSBL Servers</p> <p>Choose reputable DNSBL providers to minimize false positives. The default list includes well-established services that are suitable for most websites:</p> <ul> <li>bl.blocklist.de: Lists IPs that have been detected attacking other servers.</li> <li>sbl.spamhaus.org: Focuses on spam sources and other malicious activities.</li> <li>xbl.spamhaus.org: Targets infected systems, such as compromised machines or open proxies.</li> </ul> <p>How DNSBL Works</p> <p>DNSBL servers work by responding to specially formatted DNS queries. When BunkerWeb checks an IP address, it reverses the IP and appends the DNSBL domain name. If the resulting DNS query returns a \"success\" response, the IP is considered blacklisted.</p> <p>Performance Considerations</p> <p>While BunkerWeb optimizes DNSBL lookups for performance, adding a large number of DNSBL servers could potentially impact response times. Start with a few reputable DNSBL servers and monitor performance before adding more.</p>"},{"location":"features/#example-configurations_13","title":"Example Configurations","text":"Basic ConfigurationMinimal ConfigurationExcluding Trusted IPsUsing Remote URLsUsing Local Files <p>A simple configuration using the default DNSBL servers:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org\"\n</code></pre> <p>A minimal configuration focusing on the most reliable DNSBL services:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\n</code></pre> <p>This configuration uses only:</p> <ul> <li>zen.spamhaus.org: Spamhaus' combined list is often considered sufficient as a standalone solution due to its wide coverage and reputation for accuracy. It combines the SBL, XBL, and PBL lists in a single query, making it efficient and comprehensive.</li> </ul> <p>You can exclude specific clients from DNSBL checks using static values and/or remote files:</p> <ul> <li><code>DNSBL_IGNORE_IP</code>: Add space-separated IPs and CIDR ranges. Example: <code>192.0.2.10 203.0.113.0/24 2001:db8::/32</code>.</li> <li><code>DNSBL_IGNORE_IP_URLS</code>: Provide URLs whose contents list one IP/CIDR per line. Comments starting with <code>#</code> or <code>;</code> are ignored. Duplicate entries are de-duplicated.</li> </ul> <p>When an incoming client IP matches the ignore list, BunkerWeb skips DNSBL lookups and caches the result as \u201cok\u201d for faster subsequent requests.</p> <p>The <code>dnsbl-download</code> job downloads and caches ignore IPs hourly:</p> <ul> <li>Protocols: <code>https://</code>, <code>http://</code>, and local <code>file://</code> paths.</li> <li>Per-URL cache with checksum prevents redundant downloads (1-hour grace).</li> <li>Per-service merged file: <code>/var/cache/bunkerweb/dnsbl/&lt;service&gt;/IGNORE_IP.list</code>.</li> <li>Loaded at startup and merged with <code>DNSBL_IGNORE_IP</code>.</li> </ul> <p>Example combining static and URL sources:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP: \"10.0.0.0/8 192.168.0.0/16 2001:db8::/32\"\nDNSBL_IGNORE_IP_URLS: \"https://example.com/allow-cidrs.txt file:///etc/bunkerweb/dnsbl/ignore.txt\"\n</code></pre> <p>Load ignore IPs from local files using <code>file://</code> URLs:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP_URLS: \"file:///etc/bunkerweb/dnsbl/ignore.txt file:///opt/data/allow-cidrs.txt\"\n</code></pre>"},{"location":"features/#database","title":"Database","text":"<p>STREAM support </p> <p>The Database plugin provides a robust database integration for BunkerWeb by enabling centralized storage and management of configuration data, logs, and other essential information.</p> <p>This core component supports multiple database engines, including SQLite, PostgreSQL, MySQL/MariaDB, and Oracle, allowing you to choose the database solution that best fits your environment and requirements.</p> <p>How it works:</p> <ol> <li>BunkerWeb connects to your configured database using the provided URI in the SQLAlchemy format.</li> <li>Critical configuration data, runtime information, and job logs are stored securely in the database.</li> <li>Automatic maintenance processes optimize your database by managing data growth and cleaning up excess records.</li> <li>For high-availability scenarios, you can configure a read-only database URI that serves both as a failover and as a method to offload read operations.</li> <li>Database operations are logged according to your specified log level, providing appropriate visibility into database interactions.</li> </ol>"},{"location":"features/#how-to-use_12","title":"How to Use","text":"<p>Follow these steps to configure and use the Database feature:</p> <ol> <li>Choose a database engine: Select from SQLite (default), PostgreSQL, MySQL/MariaDB, or Oracle based on your requirements.</li> <li>Configure the database URI: Set the <code>DATABASE_URI</code> to connect to your primary database using the SQLAlchemy format.</li> <li>Optional read-only database: For high-availability setups, configure a <code>DATABASE_URI_READONLY</code> as a fallback or for read operations.</li> </ol>"},{"location":"features/#configuration-settings_13","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>DATABASE_URI</code> <code>sqlite:////var/lib/bunkerweb/db.sqlite3</code> global no Database URI: The primary database connection string in the SQLAlchemy format. <code>DATABASE_URI_READONLY</code> global no Read-Only Database URI: Optional database for read-only operations or as a failover if the main database is down. <code>DATABASE_LOG_LEVEL</code> <code>warning</code> global no Log Level: The verbosity level for database logs. Options: <code>debug</code>, <code>info</code>, <code>warn</code>, <code>warning</code>, or <code>error</code>. <code>DATABASE_MAX_JOBS_RUNS</code> <code>10000</code> global no Maximum Job Runs: The maximum number of job execution records to retain in the database before automatic cleanup. <p>Database Selection</p> <ul> <li>SQLite (default): Ideal for single-node deployments or testing environments due to its simplicity and file-based nature.</li> <li>PostgreSQL: Recommended for production environments with multiple BunkerWeb instances due to its robustness and concurrency support.</li> <li>MySQL/MariaDB: A good alternative to PostgreSQL with similar production-grade capabilities.</li> <li>Oracle: Suitable for enterprise environments where Oracle is already the standard database platform.</li> </ul> <p>SQLAlchemy URI Format</p> <p>The database URI follows the SQLAlchemy format:</p> <ul> <li>SQLite: <code>sqlite:////path/to/database.sqlite3</code></li> <li>PostgreSQL: <code>postgresql://username:password@hostname:port/database</code></li> <li>MySQL/MariaDB: <code>mysql://username:password@hostname:port/database</code> or <code>mariadb://username:password@hostname:port/database</code></li> <li>Oracle: <code>oracle://username:password@hostname:port/database</code></li> </ul> <p>Database Maintenance</p> <p>The plugin automatically runs a daily job that cleans up excess job runs based on the <code>DATABASE_MAX_JOBS_RUNS</code> setting. This prevents unbounded database growth while maintaining a useful history of job executions.</p>"},{"location":"features/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>STREAM support </p> <p>Provides a simpler way to fix false positives in reports.</p>"},{"location":"features/#errors","title":"Errors","text":"<p>STREAM support </p> <p>The Errors plugin provides customizable error handling for your website, letting you configure how HTTP error responses appear to users. This feature helps you present user-friendly, branded error pages that enhance the user experience during error scenarios, rather than displaying default server error pages, which can seem technical and confusing to visitors.</p> <p>How it works:</p> <ol> <li>When a client encounters an HTTP error (for example, 400, 404, or 500), BunkerWeb intercepts the error response.</li> <li>Instead of showing the default error page, BunkerWeb displays a custom, professionally designed error page.</li> <li>Error pages are fully customizable through your configuration, allowing you to specify custom pages for specific error codes. Custom error page files must be placed in the directory defined by the <code>ROOT_FOLDER</code> setting (see the Miscellaneous plugin documentation).</li> <li>By default, <code>ROOT_FOLDER</code> is <code>/var/www/html/{server_name}</code> (where <code>{server_name}</code> is replaced by the actual server name).</li> <li>In multisite mode, each site can have its own <code>ROOT_FOLDER</code>, so custom error pages must be placed in the corresponding directory for each site.</li> <li>The default error pages provide clear explanations, helping users understand what went wrong and what they can do next.</li> </ol>"},{"location":"features/#how-to-use_13","title":"How to Use","text":"<p>Follow these steps to configure and use the Errors feature:</p> <ol> <li>Define custom error pages: Specify which HTTP error codes should use custom error pages using the <code>ERRORS</code> setting. The custom error page files must be located in the folder specified by the <code>ROOT_FOLDER</code> setting for the site. In multisite mode, this means each site/server can have its own folder for custom error pages.</li> <li>Configure your error pages: For each error code, you can use the default BunkerWeb error page or provide your own custom HTML page (placed in the appropriate <code>ROOT_FOLDER</code>).</li> <li>Set intercepted error codes: Select which error codes should always be handled by BunkerWeb with the <code>INTERCEPTED_ERROR_CODES</code> setting.</li> <li>Let BunkerWeb handle the rest: Once configured, error handling occurs automatically for all specified error codes.</li> </ol>"},{"location":"features/#configuration-settings_14","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>ERRORS</code> multisite no Custom Error Pages: Map specific error codes to custom HTML files using the format <code>ERROR_CODE=/path/to/file.html</code>. <code>INTERCEPTED_ERROR_CODES</code> <code>400 401 403 404 405 413 429 500 501 502 503 504</code> multisite no Intercepted Errors: List of HTTP error codes that BunkerWeb should handle with its default error page when no custom page is specified. <p>Error Page Design</p> <p>The default BunkerWeb error pages are designed to be informative, user-friendly, and professional in appearance. They include:</p> <ul> <li>Clear error descriptions</li> <li>Information about what might have caused the error</li> <li>Suggested actions for users to resolve the issue</li> <li>Visual indicators that help users understand whether the issue is on the client or the server side</li> </ul> <p>Error Types</p> <p>Error codes are categorized by type:</p> <ul> <li>4xx errors (client-side): These indicate issues with the client's request, such as attempting to access non-existent pages or lacking proper authentication.</li> <li>5xx errors (server-side): These indicate issues with the server's ability to fulfill a valid request, such as internal server errors or temporary unavailability.</li> </ul>"},{"location":"features/#example-configurations_14","title":"Example Configurations","text":"Default Error HandlingCustom Error PagesSelective Error Handling <p>Let BunkerWeb handle common error codes with its default error pages:</p> <pre><code>INTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> <p>Use custom error pages for specific error codes:</p> <pre><code>ERRORS: \"404=/custom/404.html 500=/custom/500.html\"\nINTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> <p>Only handle specific error codes with BunkerWeb:</p> <pre><code>INTERCEPTED_ERROR_CODES: \"404 500\"\n</code></pre>"},{"location":"features/#greylist","title":"Greylist","text":"<p>STREAM support </p> <p>The Greylist plugin provides a flexible security approach that allows visitors access while still maintaining essential security features.</p> <p>Unlike traditional blacklist/whitelist approaches\u2014that completely block or allow access\u2014greylisting creates a middle ground by granting access to certain visitors while still subjecting them to security checks.</p> <p>How it works:</p> <ol> <li>You define criteria for visitors to be greylisted (IP addresses, networks, rDNS, ASN, User-Agent, or URI patterns).</li> <li>When a visitor matches any of these criteria, they are granted access to your site while the other security features remain active.</li> <li>If a visitor does not match any greylist criteria, their access is denied.</li> <li>Greylist data can be automatically updated from external sources on a regular schedule.</li> </ol>"},{"location":"features/#how-to-use_14","title":"How to Use","text":"<p>Follow these steps to configure and use the Greylist feature:</p> <ol> <li>Enable the feature: The Greylist feature is disabled by default. Set the <code>USE_GREYLIST</code> setting to <code>yes</code> to enable it.</li> <li>Configure greylist rules: Define which IPs, networks, rDNS patterns, ASNs, User-Agents, or URIs should be greylisted.</li> <li>Add external sources: Optionally, configure URLs for automatically downloading and updating greylist data.</li> <li>Monitor access: Check the web UI to see which visitors are being allowed or denied.</li> </ol> <p>Access Control Behavior</p> <p>When the greylist feature is enabled with the <code>USE_GREYLIST</code> setting set to <code>yes</code>:</p> <ol> <li>Greylisted visitors: Are allowed access but are still subject to all security checks.</li> <li>Non-greylisted visitors: Are completely denied access.</li> </ol> <p>stream mode</p> <p>When using stream mode, only IP, rDNS, and ASN checks are performed.</p>"},{"location":"features/#configuration-settings_15","title":"Configuration Settings","text":"<p>General</p> Setting Default Context Multiple Description <code>USE_GREYLIST</code> <code>no</code> multisite no Enable Greylist: Set to <code>yes</code> to enable greylisting. IP AddressReverse DNSASNUser AgentURI <p>What this does: Greylist visitors based on their IP address or network. These visitors gain access but remain subject to security checks.</p> Setting Default Context Multiple Description <code>GREYLIST_IP</code> multisite no IP Greylist: List of IP addresses or networks (in CIDR notation) to greylist, separated by spaces. <code>GREYLIST_IP_URLS</code> multisite no IP Greylist URLs: List of URLs containing IP addresses or networks to greylist, separated by spaces. <p>What this does: Greylist visitors based on their domain name (in reverse). Useful for allowing conditional access to visitors from specific organizations or networks.</p> Setting Default Context Multiple Description <code>GREYLIST_RDNS</code> multisite no rDNS Greylist: List of reverse DNS suffixes to greylist, separated by spaces. <code>GREYLIST_RDNS_GLOBAL</code> <code>yes</code> multisite no rDNS Global Only: Only perform rDNS greylist checks on global IP addresses when set to <code>yes</code>. <code>GREYLIST_RDNS_URLS</code> multisite no rDNS Greylist URLs: List of URLs containing reverse DNS suffixes to greylist, separated by spaces. <p>What this does: Greylist visitors from specific network providers using Autonomous System Numbers. ASNs identify which provider or organization an IP belongs to.</p> Setting Default Context Multiple Description <code>GREYLIST_ASN</code> multisite no ASN Greylist: List of Autonomous System Numbers to greylist, separated by spaces. <code>GREYLIST_ASN_URLS</code> multisite no ASN Greylist URLs: List of URLs containing ASNs to greylist, separated by spaces. <p>What this does: Greylist visitors based on the browser or tool they claim to be using. This allows controlled access for specific tools while maintaining security checks.</p> Setting Default Context Multiple Description <code>GREYLIST_USER_AGENT</code> multisite no User-Agent Greylist: List of User-Agent patterns (PCRE regex) to greylist, separated by spaces. <code>GREYLIST_USER_AGENT_URLS</code> multisite no User-Agent Greylist URLs: List of URLs containing User-Agent patterns to greylist. <p>What this does: Greylist requests to specific URLs on your site. This allows conditional access to certain endpoints while maintaining security checks.</p> Setting Default Context Multiple Description <code>GREYLIST_URI</code> multisite no URI Greylist: List of URI patterns (PCRE regex) to greylist, separated by spaces. <code>GREYLIST_URI_URLS</code> multisite no URI Greylist URLs: List of URLs containing URI patterns to greylist, separated by spaces. <p>URL Format Support</p> <p>All <code>*_URLS</code> settings support HTTP/HTTPS URLs as well as local file paths using the <code>file:///</code> prefix. Basic authentication is supported using the <code>http://user:pass@url</code> format.</p> <p>Regular Updates</p> <p>Greylists from URLs are automatically downloaded and updated hourly to ensure that your protection remains current with the latest trusted sources.</p>"},{"location":"features/#example-configurations_15","title":"Example Configurations","text":"Basic ConfigurationAdvanced ConfigurationUsing Local FilesSelective API Access <p>A simple configuration that applies greylisting to a company's internal network and crawler:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_IP: \"192.168.1.0/24 10.0.0.0/8\"\nGREYLIST_USER_AGENT: \"(?:\\b)CompanyCrawler(?:\\b)\"\n</code></pre> <p>A more comprehensive configuration with multiple greylist criteria:</p> <pre><code>USE_GREYLIST: \"yes\"\n\n# Company assets and approved crawlers\nGREYLIST_IP: \"192.168.1.0/24 203.0.113.0/24\"\nGREYLIST_RDNS: \".company.com .partner-company.org\"\nGREYLIST_ASN: \"12345 67890\"  # Company and partner ASNs\nGREYLIST_USER_AGENT: \"(?:\\b)GoodBot(?:\\b) (?:\\b)PartnerCrawler(?:\\b)\"\nGREYLIST_URI: \"^/api/v1/\"\n\n# External trusted sources\nGREYLIST_IP_URLS: \"https://example.com/trusted-networks.txt\"\nGREYLIST_USER_AGENT_URLS: \"https://example.com/trusted-crawlers.txt\"\n</code></pre> <p>Configuration using local files for greylists:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_IP_URLS: \"file:///path/to/ip-greylist.txt\"\nGREYLIST_RDNS_URLS: \"file:///path/to/rdns-greylist.txt\"\nGREYLIST_ASN_URLS: \"file:///path/to/asn-greylist.txt\"\nGREYLIST_USER_AGENT_URLS: \"file:///path/to/user-agent-greylist.txt\"\nGREYLIST_URI_URLS: \"file:///path/to/uri-greylist.txt\"\n</code></pre> <p>A configuration allowing access to specific API endpoints:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_URI: \"^/api/v1/public/ ^/api/v1/status\"\nGREYLIST_IP: \"203.0.113.0/24\"  # External partner network\n</code></pre>"},{"location":"features/#gzip","title":"Gzip","text":"<p>STREAM support </p> <p>The GZIP plugin enhances website performance by compressing HTTP responses using the GZIP algorithm. This feature reduces bandwidth usage and improves page load times by compressing web content before it is sent to the client's browser, resulting in faster delivery and an improved user experience.</p>"},{"location":"features/#how-it-works","title":"How It Works","text":"<ol> <li>When a client requests content from your website, BunkerWeb checks if the client supports GZIP compression.</li> <li>If supported, BunkerWeb compresses the response using the GZIP algorithm at your configured compression level.</li> <li>The compressed content is sent to the client with appropriate headers indicating GZIP compression.</li> <li>The client's browser decompresses the content before rendering it.</li> <li>Both bandwidth usage and page load times are reduced, enhancing overall site performance and user experience.</li> </ol>"},{"location":"features/#how-to-use_15","title":"How to Use","text":"<p>Follow these steps to configure and use the GZIP compression feature:</p> <ol> <li>Enable the feature: The GZIP feature is disabled by default. Enable it by setting the <code>USE_GZIP</code> setting to <code>yes</code>.</li> <li>Configure MIME types: Specify which content types should be compressed using the <code>GZIP_TYPES</code> setting.</li> <li>Set minimum size: Define the minimum response size required for compression with the <code>GZIP_MIN_LENGTH</code> setting to avoid compressing small files.</li> <li>Choose a compression level: Select your preferred balance between speed and compression ratio using the <code>GZIP_COMP_LEVEL</code> setting.</li> <li>Configure proxied requests: Specify which proxied requests should be compressed using the <code>GZIP_PROXIED</code> setting.</li> </ol>"},{"location":"features/#configuration-settings_16","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_GZIP</code> <code>no</code> multisite no Enable GZIP: Set to <code>yes</code> to enable GZIP compression. <code>GZIP_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> multisite no MIME Types: List of content types that will be compressed with GZIP. <code>GZIP_MIN_LENGTH</code> <code>1000</code> multisite no Minimum Size: The minimum response size (in bytes) for GZIP compression to be applied. <code>GZIP_COMP_LEVEL</code> <code>5</code> multisite no Compression Level: Level of compression from 1 (minimum compression) to 9 (maximum compression). Higher values use more CPU. <code>GZIP_PROXIED</code> <code>no-cache no-store private expired auth</code> multisite no Proxied Requests: Specifies which proxied requests should be compressed based on response headers. <p>Optimizing Compression Level</p> <p>The default compression level (5) offers a good balance between compression ratio and CPU usage. For static content or when server CPU resources are plentiful, consider increasing to 7-9 for maximum compression. For dynamic content or when CPU resources are limited, you might want to use 1-3 for faster compression with reasonable size reduction.</p> <p>Browser Support</p> <p>GZIP is supported by all modern browsers and has been the standard compression method for HTTP responses for many years, ensuring excellent compatibility across devices and browsers.</p> <p>Compression vs. CPU Usage</p> <p>While GZIP compression reduces bandwidth and improves load times, higher compression levels consume more CPU resources. For high-traffic sites, find the right balance between compression efficiency and server performance.</p>"},{"location":"features/#example-configurations_16","title":"Example Configurations","text":"Basic ConfigurationMaximum CompressionBalanced PerformanceProxied Content Focus <p>A standard configuration that enables GZIP with default settings:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json application/xml text/css text/html text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"5\"\n</code></pre> <p>Configuration optimized for maximum compression savings:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"500\"\nGZIP_COMP_LEVEL: \"9\"\nGZIP_PROXIED: \"any\"\n</code></pre> <p>Configuration that balances compression ratio with CPU usage:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"3\"\nGZIP_PROXIED: \"no-cache no-store private expired\"\n</code></pre> <p>Configuration that focuses on properly handling compression for proxied content:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"4\"\nGZIP_PROXIED: \"any\"\n</code></pre>"},{"location":"features/#html-injection","title":"HTML injection","text":"<p>STREAM support </p> <p>The HTML Injection plugin enables you to seamlessly add custom HTML code to your website's pages before either the closing <code>&lt;/body&gt;</code> or <code>&lt;/head&gt;</code> tags. This feature is particularly useful for adding analytics scripts, tracking pixels, custom JavaScript, CSS styles, or other third-party integrations without modifying your website's source code.</p> <p>How it works:</p> <ol> <li>When a page is served from your website, BunkerWeb examines the HTML response.</li> <li>If you've configured body injection, BunkerWeb inserts your custom HTML code just before the closing <code>&lt;/body&gt;</code> tag.</li> <li>If you've configured head injection, BunkerWeb inserts your custom HTML code just before the closing <code>&lt;/head&gt;</code> tag.</li> <li>The insertion happens automatically for all HTML pages served by your website.</li> <li>This allows you to add scripts, styles, or other elements without modifying your application's code.</li> </ol>"},{"location":"features/#how-to-use_16","title":"How to Use","text":"<p>Follow these steps to configure and use the HTML Injection feature:</p> <ol> <li>Prepare your custom HTML: Decide what HTML code you want to inject into your pages.</li> <li>Choose injection locations: Determine whether you need to inject code in the <code>&lt;head&gt;</code> section, the <code>&lt;body&gt;</code> section, or both.</li> <li>Configure the settings: Add your custom HTML to the appropriate settings (<code>INJECT_HEAD</code> and/or <code>INJECT_BODY</code>).</li> <li>Let BunkerWeb handle the rest: Once configured, the HTML will be automatically injected into all served HTML pages.</li> </ol>"},{"location":"features/#configuration-settings_17","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>INJECT_HEAD</code> multisite no Head HTML Code: The HTML code to inject before the <code>&lt;/head&gt;</code> tag. <code>INJECT_BODY</code> multisite no Body HTML Code: The HTML code to inject before the <code>&lt;/body&gt;</code> tag. <p>Best Practices</p> <ul> <li>For performance reasons, place JavaScript files at the end of the body to prevent render blocking.</li> <li>Place CSS and critical JavaScript in the head section to avoid a flash of unstyled content.</li> <li>Be careful with injected content that could potentially break your site's functionality.</li> </ul> <p>Common Use Cases</p> <ul> <li>Adding analytics scripts (like Google Analytics, Matomo)</li> <li>Integrating chat widgets or customer support tools</li> <li>Including tracking pixels for marketing campaigns</li> <li>Adding custom CSS styles or JavaScript functionality</li> <li>Including third-party libraries without modifying your application code</li> </ul>"},{"location":"features/#example-configurations_17","title":"Example Configurations","text":"Google AnalyticsCustom StylesMultiple IntegrationsCookie Consent Banner <p>Adding Google Analytics tracking to your website:</p> <pre><code>INJECT_HEAD: \"\"\nINJECT_BODY: \"&lt;script async src=\\\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\\\"&gt;&lt;/script&gt;&lt;script&gt;window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-XXXXXXXXXX');&lt;/script&gt;\"\n</code></pre> <p>Adding custom CSS styles to your website:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .custom-element { color: blue; }&lt;/style&gt;\"\nINJECT_BODY: \"\"\n</code></pre> <p>Adding both custom styles and JavaScript:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .notification-banner { background: #f8f9fa; padding: 10px; text-align: center; }&lt;/style&gt;\"\nINJECT_BODY: \"&lt;script src=\\\"https://cdn.example.com/js/widget.js\\\"&gt;&lt;/script&gt;&lt;script&gt;initializeWidget('your-api-key');&lt;/script&gt;\"\n</code></pre> <p>Adding a simple cookie consent banner:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;.cookie-banner { position: fixed; bottom: 0; left: 0; right: 0; background: #f1f1f1; padding: 20px; text-align: center; z-index: 1000; } .cookie-banner button { background: #4CAF50; border: none; color: white; padding: 10px 20px; cursor: pointer; }&lt;/style&gt;\"\nINJECT_BODY: \"&lt;div id=\\\"cookie-banner\\\" class=\\\"cookie-banner\\\"&gt;This website uses cookies to ensure you get the best experience. &lt;button onclick=\\\"acceptCookies()\\\"&gt;Accept&lt;/button&gt;&lt;/div&gt;&lt;script&gt;function acceptCookies() { document.getElementById('cookie-banner').style.display = 'none'; localStorage.setItem('cookies-accepted', 'true'); } if(localStorage.getItem('cookies-accepted') === 'true') { document.getElementById('cookie-banner').style.display = 'none'; }&lt;/script&gt;\"\n</code></pre>"},{"location":"features/#headers","title":"Headers","text":"<p>STREAM support </p> <p>Headers play a crucial role in HTTP security. The Headers plugin provides robust management of both standard and custom HTTP headers\u2014enhancing security and functionality. It dynamically applies security measures, such as HSTS, CSP (including a reporting mode), and custom header injection, while preventing information leakage.</p> <p>How it works</p> <ol> <li>When a client requests content from your website, BunkerWeb processes the response headers.</li> <li>Security headers are applied in accordance with your configuration.</li> <li>Custom headers can be added to provide additional information or functionality to clients.</li> <li>Unwanted headers that might reveal server information are automatically removed.</li> <li>Cookies are modified to include appropriate security flags based on your settings.</li> <li>Headers from upstream servers can be selectively preserved when needed.</li> </ol>"},{"location":"features/#how-to-use_17","title":"How to Use","text":"<p>Follow these steps to configure and use the Headers feature:</p> <ol> <li>Configure security headers: Set values for common headers.</li> <li>Add custom headers: Define any custom headers using the <code>CUSTOM_HEADER</code> setting.</li> <li>Remove unwanted headers: Use <code>REMOVE_HEADERS</code> to ensure headers that could expose server details are stripped out.</li> <li>Set cookie security: Enable robust cookie security by configuring <code>COOKIE_FLAGS</code> and setting <code>COOKIE_AUTO_SECURE_FLAG</code> to <code>yes</code> so that the Secure flag is automatically added on HTTPS connections.</li> <li>Preserve upstream headers: Specify which upstream headers to retain by using <code>KEEP_UPSTREAM_HEADERS</code>.</li> <li>Leverage conditional header application: If you wish to test policies without disruption, enable CSP Report-Only mode via <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code>.</li> </ol>"},{"location":"features/#configuration-guide","title":"Configuration Guide","text":"Security HeadersCookie SettingsCustom Headers <p>Overview</p> <p>Security headers enforce secure communication, restrict resource loading, and prevent attacks like clickjacking and injection. Properly configured headers create a robust defensive layer for your website.</p> <p>Benefits of Security Headers</p> <ul> <li>HSTS: Ensures all connections are encrypted, protecting against protocol downgrade attacks.</li> <li>CSP: Prevents malicious scripts from executing, reducing the risk of XSS attacks.</li> <li>X-Frame-Options: Blocks clickjacking attempts by controlling iframe embedding.</li> <li>Referrer Policy: Limits sensitive information leakage through referrer headers.</li> </ul> Setting Default Context Multiple Description <code>STRICT_TRANSPORT_SECURITY</code> <code>max-age=63072000; includeSubDomains; preload</code> multisite no HSTS: Enforces secure HTTPS connections, reducing risks of man-in-the-middle attacks. <code>CONTENT_SECURITY_POLICY</code> <code>object-src 'none'; form-action 'self'; frame-ancestors 'self';</code> multisite no CSP: Restricts resource loading to trusted sources, mitigating cross-site scripting and data injection attacks. <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code> <code>no</code> multisite no CSP Report Mode: Reports violations without blocking content, helping in testing security policies while capturing logs. <code>X_FRAME_OPTIONS</code> <code>SAMEORIGIN</code> multisite no X-Frame-Options: Prevents clickjacking by controlling whether your site can be framed. <code>X_CONTENT_TYPE_OPTIONS</code> <code>nosniff</code> multisite no X-Content-Type-Options: Prevents browsers from MIME-sniffing, protecting against drive-by download attacks. <code>X_DNS_PREFETCH_CONTROL</code> <code>off</code> multisite no X-DNS-Prefetch-Control: Regulates DNS prefetching to reduce unintentional network requests and enhance privacy. <code>REFERRER_POLICY</code> <code>strict-origin-when-cross-origin</code> multisite no Referrer Policy: Controls the amount of referrer information sent, safeguarding user privacy. <code>PERMISSIONS_POLICY</code> <code>accelerometer=(), ambient-light-sensor=(), attribution-reporting=(), autoplay=(), battery=(), ...</code> multisite no Permissions Policy: Restricts browser feature access, reducing potential attack vectors. <code>KEEP_UPSTREAM_HEADERS</code> <code>Content-Security-Policy Permissions-Policy X-Frame-Options</code> multisite no Keep Headers: Preserves selected upstream headers, aiding legacy integration while maintaining security. <p>Best Practices</p> <ul> <li>Regularly review and update your security headers to align with evolving security standards.</li> <li>Use tools like Mozilla Observatory to validate your header configuration.</li> <li>Test CSP in <code>Report-Only</code> mode before enforcing it to avoid breaking functionality.</li> </ul> <p>Overview</p> <p>Proper cookie settings ensure secure user sessions by preventing hijacking, fixation, and cross-site scripting. Secure cookies maintain session integrity over HTTPS and enhance overall user data protection.</p> <p>Benefits of Secure Cookies</p> <ul> <li>HttpOnly Flag: Prevents client-side scripts from accessing cookies, mitigating XSS risks.</li> <li>SameSite Flag: Reduces CSRF attacks by restricting cross-origin cookie usage.</li> <li>Secure Flag: Ensures cookies are transmitted only over encrypted HTTPS connections.</li> </ul> Setting Default Context Multiple Description <code>COOKIE_FLAGS</code> <code>* HttpOnly SameSite=Lax</code> multisite yes Cookie Flags: Automatically adds security flags such as HttpOnly and SameSite, protecting cookies from client-side script access and CSRF attacks. <code>COOKIE_AUTO_SECURE_FLAG</code> <code>yes</code> multisite no Auto Secure Flag: Ensures cookies are only sent over secure HTTPS connections by appending the Secure flag automatically. <p>Best Practices</p> <ul> <li>Use <code>SameSite=Strict</code> for sensitive cookies to prevent cross-origin access.</li> <li>Regularly audit your cookie settings to ensure compliance with security and privacy regulations.</li> <li>Avoid setting cookies without the Secure flag in production environments.</li> </ul> <p>Overview</p> <p>Custom headers allow you to add specific HTTP headers to meet application or performance requirements. They offer flexibility but must be carefully configured to avoid exposing sensitive server details.</p> <p>Benefits of Custom Headers</p> <ul> <li>Enhance security by removing unnecessary headers that may leak server details.</li> <li>Add application-specific headers to improve functionality or debugging.</li> </ul> Setting Default Context Multiple Description <code>CUSTOM_HEADER</code> multisite yes Custom Header: Provides a means to add user-defined headers in the format HeaderName: HeaderValue for specialized security or performance enhancements. <code>REMOVE_HEADERS</code> <code>Server Expect-CT X-Powered-By X-AspNet-Version X-AspNetMvc-Version Public-Key-Pins</code> multisite no Remove Headers: Specifies headers to remove, decreasing the chance of exposing internal server details and known vulnerabilities. <p>Security Considerations</p> <ul> <li>Avoid exposing sensitive information through custom headers.</li> <li>Regularly review and update custom headers to align with your application's requirements.</li> </ul> <p>Best Practices</p> <ul> <li>Use <code>REMOVE_HEADERS</code> to strip out headers like <code>Server</code> and <code>X-Powered-By</code> to reduce fingerprinting risks.</li> <li>Test custom headers in a staging environment before deploying them to production.</li> </ul>"},{"location":"features/#example-configurations_18","title":"Example Configurations","text":"Basic Security HeadersEnhanced Cookie SecurityCustom Headers for APIContent Security Policy - Reporting Mode <p>A standard configuration with essential security headers:</p> <pre><code>STRICT_TRANSPORT_SECURITY: \"max-age=63072000; includeSubDomains; preload\"\nCONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self'; object-src 'none'; frame-ancestors 'self'\"\nX_FRAME_OPTIONS: \"SAMEORIGIN\"\nX_CONTENT_TYPE_OPTIONS: \"nosniff\"\nREFERRER_POLICY: \"strict-origin-when-cross-origin\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version\"\n</code></pre> <p>Configuration with robust cookie security settings:</p> <pre><code>COOKIE_FLAGS: \"* HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_2: \"session_cookie Secure HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_3: \"auth_cookie Secure HttpOnly SameSite=Strict Max-Age=3600\"\nCOOKIE_AUTO_SECURE_FLAG: \"yes\"\n</code></pre> <p>Configuration for an API service with custom headers:</p> <pre><code>CUSTOM_HEADER: \"API-Version: 1.2.3\"\nCUSTOM_HEADER_2: \"Access-Control-Max-Age: 86400\"\nCONTENT_SECURITY_POLICY: \"default-src 'none'; frame-ancestors 'none'\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version X-Runtime\"\n</code></pre> <p>Configuration to test CSP without breaking functionality:</p> <pre><code>CONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self' https://trusted-cdn.example.com; img-src 'self' data: https://*.example.com; style-src 'self' 'unsafe-inline' https://trusted-cdn.example.com; connect-src 'self' https://api.example.com; object-src 'none'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; report-uri https://example.com/csp-reports\"\nCONTENT_SECURITY_POLICY_REPORT_ONLY: \"yes\"\n</code></pre>"},{"location":"features/#lets-encrypt","title":"Let's Encrypt","text":"<p>STREAM support </p> <p>The Let's Encrypt plugin simplifies SSL/TLS certificate management by automating the creation, renewal, and configuration of free certificates from Let's Encrypt. This feature enables secure HTTPS connections for your websites without the complexity of manual certificate management, reducing both cost and administrative overhead.</p> <p>How it works:</p> <ol> <li>When enabled, BunkerWeb automatically detects the domains configured for your website.</li> <li>BunkerWeb requests free SSL/TLS certificates from Let's Encrypt's certificate authority.</li> <li>Domain ownership is verified through either HTTP challenges (proving you control the website) or DNS challenges (proving you control your domain's DNS).</li> <li>Certificates are automatically installed and configured for your domains.</li> <li>BunkerWeb handles certificate renewals in the background before expiration, ensuring continuous HTTPS availability.</li> <li>The entire process is fully automated, requiring minimal intervention after the initial setup.</li> </ol> <p>Prerequisites</p> <p>To use this feature, ensure that proper DNS A records are configured for each domain, pointing to the public IP(s) where BunkerWeb is accessible. Without correct DNS configuration, the domain verification process will fail.</p>"},{"location":"features/#how-to-use_18","title":"How to Use","text":"<p>Follow these steps to configure and use the Let's Encrypt feature:</p> <ol> <li>Enable the feature: Set the <code>AUTO_LETS_ENCRYPT</code> setting to <code>yes</code> to enable automatic certificate issuance and renewal.</li> <li>Provide contact email: Enter your email address using the <code>EMAIL_LETS_ENCRYPT</code> setting to receive important notifications about your certificates.</li> <li>Choose challenge type: Select either <code>http</code> or <code>dns</code> verification with the <code>LETS_ENCRYPT_CHALLENGE</code> setting.</li> <li>Configure DNS provider: If using DNS challenges, specify your DNS provider and credentials.</li> <li>Select certificate profile: Choose your preferred certificate profile using the <code>LETS_ENCRYPT_PROFILE</code> setting (classic, tlsserver, or shortlived).</li> <li>Let BunkerWeb handle the rest: Once configured, certificates are automatically issued, installed, and renewed as needed.</li> </ol> <p>Certificate Profiles</p> <p>Let's Encrypt provides different certificate profiles for different use cases: - classic: General-purpose certificates with 90-day validity (default) - tlsserver: Optimized for TLS server authentication with 90-day validity and smaller payload - shortlived: Enhanced security with 7-day validity for automated environments - custom: If your ACME server supports a different profile, set it using <code>LETS_ENCRYPT_CUSTOM_PROFILE</code>.</p> <p>Profile Availability</p> <p>Note that the <code>tlsserver</code> and <code>shortlived</code> profiles may not be available in all environments or with all ACME clients at this time. The <code>classic</code> profile has the widest compatibility and is recommended for most users. If a selected profile is not available, the system will automatically fall back to the <code>classic</code> profile.</p>"},{"location":"features/#configuration-settings_18","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>AUTO_LETS_ENCRYPT</code> <code>no</code> multisite no Enable Let's Encrypt: Set to <code>yes</code> to enable automatic certificate issuance and renewal. <code>LETS_ENCRYPT_PASSTHROUGH</code> <code>no</code> multisite no Pass Through Let's Encrypt: Set to <code>yes</code> to pass through Let's Encrypt requests to the web server. This is useful when BunkerWeb is behind another reverse proxy handling SSL. <code>EMAIL_LETS_ENCRYPT</code> <code>contact@{FIRST_SERVER}</code> multisite no Contact Email: Email address that is used for Let's Encrypt notifications and is included in certificates. <code>LETS_ENCRYPT_CHALLENGE</code> <code>http</code> multisite no Challenge Type: Method used to verify domain ownership. Options: <code>http</code> or <code>dns</code>. <code>LETS_ENCRYPT_DNS_PROVIDER</code> multisite no DNS Provider: When using DNS challenges, the DNS provider to use (e.g., cloudflare, route53, digitalocean). <code>LETS_ENCRYPT_DNS_PROPAGATION</code> <code>default</code> multisite no DNS Propagation: The time to wait for DNS propagation in seconds. If no value is provided, the provider's default propagation time is used. <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> multisite yes Credential Item: Configuration items for DNS provider authentication (e.g., <code>cloudflare_api_token 123456</code>). Values can be raw text, base64 encoded, or a JSON object. <code>USE_LETS_ENCRYPT_WILDCARD</code> <code>no</code> multisite no Wildcard Certificates: When set to <code>yes</code>, creates wildcard certificates for all domains. Only available with DNS challenges. <code>USE_LETS_ENCRYPT_STAGING</code> <code>no</code> multisite no Use Staging: When set to <code>yes</code>, uses Let's Encrypt's staging environment for testing. Staging has higher rate limits but produces certificates that are not trusted by browsers. <code>LETS_ENCRYPT_CLEAR_OLD_CERTS</code> <code>no</code> global no Clear Old Certificates: When set to <code>yes</code>, removes old certificates that are no longer needed during renewal. <code>LETS_ENCRYPT_PROFILE</code> <code>classic</code> multisite no Certificate Profile: Select the certificate profile to use. Options: <code>classic</code> (general-purpose), <code>tlsserver</code> (optimized for TLS servers), or <code>shortlived</code> (7-day certificates). <code>LETS_ENCRYPT_CUSTOM_PROFILE</code> multisite no Custom Certificate Profile: Enter a custom certificate profile if your ACME server supports non-standard profiles. This overrides <code>LETS_ENCRYPT_PROFILE</code> if set. <code>LETS_ENCRYPT_MAX_RETRIES</code> <code>3</code> multisite no Maximum Retries: Number of times to retry certificate generation on failure. Set to <code>0</code> to disable retries. Useful for handling temporary network issues or API rate limits. <p>Information and behavior</p> <ul> <li>The <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> setting is a multiple setting and can be used to set multiple items for the DNS provider. The items will be saved as a cache file, and Certbot will read the credentials from it.</li> <li>If no <code>LETS_ENCRYPT_DNS_PROPAGATION</code> setting is provided, the provider's default propagation time is used.</li> <li>Full Let's Encrypt automation using the <code>http</code> challenge works in stream mode as long as you open the <code>80/tcp</code> port from the outside. Use the <code>LISTEN_STREAM_PORT_SSL</code> setting to choose your listening SSL/TLS port.</li> <li>If <code>LETS_ENCRYPT_PASSTHROUGH</code> is set to <code>yes</code>, BunkerWeb will not handle the ACME challenge requests itself but will pass them to the backend web server. This is useful in scenarios where BunkerWeb is acting as a reverse proxy in front of another server that is configured to handle Let's Encrypt challenges</li> </ul> <p>HTTP vs. DNS Challenges</p> <p>HTTP Challenges are easier to set up and work well for most websites:</p> <ul> <li>Requires your website to be publicly accessible on port 80</li> <li>Automatically configured by BunkerWeb</li> <li>Cannot be used for wildcard certificates</li> </ul> <p>DNS Challenges offer more flexibility and are required for wildcard certificates:</p> <ul> <li>Works even when your website is not publicly accessible</li> <li>Requires DNS provider API credentials</li> <li>Required for wildcard certificates (e.g., *.example.com)</li> <li>Useful when port 80 is blocked or unavailable</li> </ul> <p>Wildcard certificates</p> <p>Wildcard certificates are only available with DNS challenges. If you want to use them, you must set the <code>USE_LETS_ENCRYPT_WILDCARD</code> setting to <code>yes</code> and properly configure your DNS provider credentials.</p> <p>Rate Limits</p> <p>Let's Encrypt imposes rate limits on certificate issuance. When testing configurations, use the staging environment by setting <code>USE_LETS_ENCRYPT_STAGING</code> to <code>yes</code> to avoid hitting production rate limits. Staging certificates are not trusted by browsers but are useful for validating your setup.</p>"},{"location":"features/#supported-dns-providers","title":"Supported DNS Providers","text":"<p>The Let's Encrypt plugin supports a wide range of DNS providers for DNS challenges. Each provider requires specific credentials that must be provided using the <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> setting.</p> Provider Description Mandatory Settings Optional Settings Documentation <code>bunny</code> bunny.net <code>api_key</code> Documentation <code>cloudflare</code> Cloudflare either <code>api_token</code>or <code>email</code> and <code>api_key</code> Documentation <code>desec</code> deSEC <code>token</code> Documentation <code>digitalocean</code> DigitalOcean <code>token</code> Documentation <code>domainoffensive</code> Domain-Offensive <code>api_token</code> Documentation <code>dnsimple</code> DNSimple <code>token</code> Documentation <code>dnsmadeeasy</code> DNS Made Easy <code>api_key</code><code>secret_key</code> Documentation <code>dynu</code> Dynu <code>auth_token</code> Documentation <code>gehirn</code> Gehirn DNS <code>api_token</code><code>api_secret</code> Documentation <code>google</code> Google Cloud <code>project_id</code><code>private_key_id</code><code>private_key</code><code>client_email</code><code>client_id</code><code>client_x509_cert_url</code> <code>type</code> (default: <code>service_account</code>)<code>auth_uri</code> (default: <code>https://accounts.google.com/o/oauth2/auth</code>)<code>token_uri</code> (default: <code>https://accounts.google.com/o/oauth2/token</code>)<code>auth_provider_x509_cert_url</code> (default: <code>https://www.googleapis.com/oauth2/v1/certs</code>) Documentation <code>infomaniak</code> Infomaniak <code>token</code> Documentation <code>ionos</code> IONOS <code>prefix</code><code>secret</code> <code>endpoint</code> (default: <code>https://api.hosting.ionos.com</code>) Documentation <code>linode</code> Linode <code>key</code> Documentation <code>luadns</code> LuaDNS <code>email</code><code>token</code> Documentation <code>njalla</code> Njalla <code>token</code> Documentation <code>nsone</code> NS1 <code>api_key</code> Documentation <code>ovh</code> OVH <code>application_key</code><code>application_secret</code><code>consumer_key</code> <code>endpoint</code> (default: <code>ovh-eu</code>) Documentation <code>rfc2136</code> RFC 2136 <code>server</code><code>name</code><code>secret</code> <code>port</code> (default: <code>53</code>)<code>algorithm</code> (default: <code>HMAC-SHA512</code>)<code>sign_query</code> (default: <code>false</code>) Documentation <code>route53</code> Amazon Route 53 <code>access_key_id</code><code>secret_access_key</code> Documentation <code>sakuracloud</code> Sakura Cloud <code>api_token</code><code>api_secret</code> Documentation <code>scaleway</code> Scaleway <code>application_token</code> Documentation"},{"location":"features/#example-configurations_19","title":"Example Configurations","text":"Basic HTTP ChallengeCloudflare DNS with WildcardAWS Route53 ConfigurationTesting with Staging Environment and RetriesDigitalOcean with Custom Propagation TimeGoogle Cloud DNS <p>Simple configuration using HTTP challenges for a single domain:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\n</code></pre> <p>Configuration for wildcard certificates using Cloudflare DNS:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"cloudflare\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"api_token YOUR_API_TOKEN\"\nUSE_LETS_ENCRYPT_WILDCARD: \"yes\"\n</code></pre> <p>Configuration using Amazon Route53 for DNS challenges:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"route53\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"aws_access_key_id YOUR_ACCESS_KEY\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"aws_secret_access_key YOUR_SECRET_KEY\"\n</code></pre> <p>Configuration for testing setup with the staging environment and enhanced retry settings:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\nUSE_LETS_ENCRYPT_STAGING: \"yes\"\nLETS_ENCRYPT_MAX_RETRIES: \"5\"\n</code></pre> <p>Configuration using DigitalOcean DNS with a longer propagation wait time:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"digitalocean\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"token YOUR_API_TOKEN\"\nLETS_ENCRYPT_DNS_PROPAGATION: \"120\"\n</code></pre> <p>Configuration using Google Cloud DNS with service account credentials:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"google\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"project_id your-project-id\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"private_key_id your-private-key-id\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_3: \"private_key your-private-key\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_4: \"client_email your-service-account-email\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_5: \"client_id your-client-id\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_6: \"client_x509_cert_url your-cert-url\"\n</code></pre>"},{"location":"features/#limit","title":"Limit","text":"<p>STREAM support </p> <p>The Limit plugin in BunkerWeb provides robust capabilities to enforce limiting policies on your website, ensuring fair usage and protecting your resources from abuse, denial-of-service attacks, and excessive resource consumption. These policies include:</p> <ul> <li>Number of connections per IP address (STREAM support )</li> <li>Number of requests per IP address and URL within a specific time period (STREAM support )</li> </ul>"},{"location":"features/#how-it-works_1","title":"How it Works","text":"<ol> <li>Rate Limiting: Tracks the number of requests from each client IP address to specific URLs. If a client exceeds the configured rate limit, subsequent requests are temporarily denied.</li> <li>Connection Limiting: Monitors and restricts the number of concurrent connections from each client IP address. Different connection limits can be applied based on the protocol used (HTTP/1, HTTP/2, HTTP/3, or stream).</li> <li>In both cases, clients that exceed the defined limits receive an HTTP status code \"429 - Too Many Requests\", which helps prevent server overload.</li> </ol>"},{"location":"features/#steps-to-use","title":"Steps to Use","text":"<ol> <li>Enable Request Rate Limiting: Use <code>USE_LIMIT_REQ</code> to enable request rate limiting and define URL patterns along with their corresponding rate limits.</li> <li>Enable Connection Limiting: Use <code>USE_LIMIT_CONN</code> to enable connection limiting and set the maximum number of concurrent connections for different protocols.</li> <li>Apply Granular Control: Create multiple rate limit rules for different URLs to provide varying levels of protection across your site.</li> <li>Monitor Effectiveness: Use the web UI to view statistics on limited requests and connections.</li> </ol>"},{"location":"features/#configuration-settings_19","title":"Configuration Settings","text":"Request Rate LimitingConnection Limiting Setting Default Context Multiple Description <code>USE_LIMIT_REQ</code> <code>yes</code> multisite no Enable Request Limiting: Set to <code>yes</code> to enable the request rate limiting feature. <code>LIMIT_REQ_URL</code> <code>/</code> multisite yes URL Pattern: URL pattern (PCRE regex) to which the rate limit will be applied; use <code>/</code> to apply for all requests. <code>LIMIT_REQ_RATE</code> <code>2r/s</code> multisite yes Rate Limit: Maximum request rate in the format <code>Nr/t</code>, where N is the number of requests and t is the time unit: s (second), m (minute), h (hour), or d (day). <p>Rate Limiting Format</p> <p>The rate limit format is specified as <code>Nr/t</code> where:</p> <ul> <li><code>N</code> is the number of requests allowed</li> <li><code>r</code> is a literal 'r' (for 'requests')</li> <li><code>/</code> is a literal slash</li> <li><code>t</code> is the time unit: <code>s</code> (second), <code>m</code> (minute), <code>h</code> (hour), or <code>d</code> (day)</li> </ul> <p>For example, <code>5r/m</code> means that 5 requests per minute are allowed from each IP address.</p> Setting Default Context Multiple Description <code>USE_LIMIT_CONN</code> <code>yes</code> multisite no Enable Connection Limiting: Set to <code>yes</code> to enable the connection limiting feature. <code>LIMIT_CONN_MAX_HTTP1</code> <code>10</code> multisite no HTTP/1.X Connections: Maximum number of concurrent HTTP/1.X connections per IP address. <code>LIMIT_CONN_MAX_HTTP2</code> <code>100</code> multisite no HTTP/2 Streams: Maximum number of concurrent HTTP/2 streams per IP address. <code>LIMIT_CONN_MAX_HTTP3</code> <code>100</code> multisite no HTTP/3 Streams: Maximum number of concurrent HTTP/3 streams per IP address. <code>LIMIT_CONN_MAX_STREAM</code> <code>10</code> multisite no Stream Connections: Maximum number of concurrent stream connections per IP address. <p>Connection vs. Request Limiting</p> <ul> <li>Connection limiting restricts the number of simultaneous connections that a single IP address can maintain.</li> <li>Request rate limiting restricts the number of requests an IP address can make within a defined period of time.</li> </ul> <p>Using both methods provides comprehensive protection against various types of abuse.</p> <p>Setting Appropriate Limits</p> <p>Setting limits too restrictively may impact legitimate users, especially for HTTP/2 and HTTP/3 where browsers often use multiple streams. The default values are balanced for most use cases, but consider adjusting them based on your application's needs and user behavior.</p>"},{"location":"features/#example-configurations_20","title":"Example Configurations","text":"Basic ProtectionProtecting Specific EndpointsHigh-Traffic Site ConfigurationAPI Server Configuration <p>A simple configuration using default settings to protect your entire site:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"2r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Configuration with different rate limits for various endpoints:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Default rule for all requests\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"10r/s\"\n\n# Stricter limit for login page\nLIMIT_REQ_URL_2: \"^/login\"\nLIMIT_REQ_RATE_2: \"1r/s\"\n\n# Stricter limit for API\nLIMIT_REQ_URL_3: \"^/api/\"\nLIMIT_REQ_RATE_3: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Configuration tuned for high-traffic sites with more permissive limits:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# General limit\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"30r/s\"\n\n# Admin area protection\nLIMIT_REQ_URL_2: \"^/admin/\"\nLIMIT_REQ_RATE_2: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"50\"\nLIMIT_CONN_MAX_HTTP2: \"200\"\nLIMIT_CONN_MAX_HTTP3: \"200\"\nLIMIT_CONN_MAX_STREAM: \"30\"\n</code></pre> <p>Configuration optimized for an API server with rate limits expressed in requests per minute:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Public API endpoints\nLIMIT_REQ_URL: \"^/api/public/\"\nLIMIT_REQ_RATE: \"120r/m\"\n\n# Private API endpoints\nLIMIT_REQ_URL_2: \"^/api/private/\"\nLIMIT_REQ_RATE_2: \"300r/m\"\n\n# Authentication endpoint\nLIMIT_REQ_URL_3: \"^/api/auth\"\nLIMIT_REQ_RATE_3: \"10r/m\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"20\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"20\"\n</code></pre>"},{"location":"features/#load-balancer-pro","title":"Load Balancer  (PRO)","text":"<p>STREAM support </p> <p>Provides load balancing feature to group of upstreams with optional healthchecks.</p> Setting Default Context Multiple Description <code>LOADBALANCER_HEALTHCHECK_DICT_SIZE</code> <code>10m</code> global no Shared dict size (datastore for all healthchecks). <code>LOADBALANCER_UPSTREAM_NAME</code> global yes Name of the upstream (used in REVERSE_PROXY_HOST). <code>LOADBALANCER_UPSTREAM_SERVERS</code> global yes List of servers/IPs in the server group. <code>LOADBALANCER_UPSTREAM_MODE</code> <code>round-robin</code> global yes Load balancing mode (round-robin or sticky). <code>LOADBALANCER_UPSTREAM_STICKY_METHOD</code> <code>ip</code> global yes Sticky session method (ip or cookie). <code>LOADBALANCER_UPSTREAM_RESOLVE</code> <code>no</code> global yes Dynamically resolve upstream hostnames. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIMEOUT</code> <code>60s</code> global yes Keepalive timeout for upstream connections. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIME</code> <code>1h</code> global yes Keepalive time for upstream connections. <code>LOADBALANCER_HEALTHCHECK_URL</code> <code>/status</code> global yes The healthcheck URL. <code>LOADBALANCER_HEALTHCHECK_INTERVAL</code> <code>2000</code> global yes Healthcheck interval in milliseconds. <code>LOADBALANCER_HEALTHCHECK_TIMEOUT</code> <code>1000</code> global yes Healthcheck timeout in milliseconds. <code>LOADBALANCER_HEALTHCHECK_FALL</code> <code>3</code> global yes Number of failed healthchecks before marking the server as down. <code>LOADBALANCER_HEALTHCHECK_RISE</code> <code>1</code> global yes Number of successful healthchecks before marking the server as up. <code>LOADBALANCER_HEALTHCHECK_VALID_STATUSES</code> <code>200</code> global yes HTTP status considered valid in healthchecks. <code>LOADBALANCER_HEALTHCHECK_CONCURRENCY</code> <code>10</code> global yes Maximum number of concurrent healthchecks. <code>LOADBALANCER_HEALTHCHECK_TYPE</code> <code>http</code> global yes Type of healthcheck (http or https). <code>LOADBALANCER_HEALTHCHECK_SSL_VERIFY</code> <code>yes</code> global yes Verify SSL certificate in healthchecks. <code>LOADBALANCER_HEALTHCHECK_HOST</code> global yes Host header for healthchecks (useful for HTTPS)."},{"location":"features/#metrics","title":"Metrics","text":"<p>STREAM support </p> <p>The Metrics plugin provides comprehensive monitoring and data collection capabilities for your BunkerWeb instance. This feature enables you to track various performance indicators, security events, and system statistics, giving you valuable insights into the behavior and health of your protected websites and services.</p> <p>How it works:</p> <ol> <li>BunkerWeb collects key metrics during the processing of requests and responses.</li> <li>These metrics include counters for blocked requests, performance measurements, and various security-related statistics.</li> <li>The data is stored efficiently in memory, with configurable limits to prevent excessive resource usage.</li> <li>For multi-instance setups, Redis can be used to centralize and aggregate metrics data.</li> <li>The collected metrics can be accessed through the API or visualized in the web UI.</li> <li>This information helps you identify security threats, troubleshoot issues, and optimize your configuration.</li> </ol>"},{"location":"features/#technical-implementation","title":"Technical Implementation","text":"<p>The metrics plugin works by:</p> <ul> <li>Using shared dictionaries in NGINX, where <code>metrics_datastore</code> is used for HTTP and <code>metrics_datastore_stream</code> for TCP/UDP traffic</li> <li>Leveraging an LRU cache for efficient in-memory storage</li> <li>Periodically synchronizing data between workers using timers</li> <li>Storing detailed information about blocked requests, including the client IP address, country, timestamp, request details, and block reason</li> <li>Supporting plugin-specific metrics through a common metrics collection interface</li> <li>Providing API endpoints for querying collected metrics</li> </ul>"},{"location":"features/#how-to-use_19","title":"How to Use","text":"<p>Follow these steps to configure and use the Metrics feature:</p> <ol> <li>Enable the feature: Metrics collection is enabled by default. You can control this with the <code>USE_METRICS</code> setting.</li> <li>Configure memory allocation: Set the amount of memory to allocate for metrics storage using the <code>METRICS_MEMORY_SIZE</code> setting.</li> <li>Set storage limits: Define how many blocked requests to store per worker and in Redis with the respective settings.</li> <li>Access the data: View the collected metrics through the web UI or API endpoints.</li> <li>Analyze the information: Use the gathered data to identify patterns, detect security issues, and optimize your configuration.</li> </ol>"},{"location":"features/#collected-metrics","title":"Collected Metrics","text":"<p>The metrics plugin collects the following information:</p> <ol> <li> <p>Blocked Requests: For each blocked request, the following data is stored:</p> <ul> <li>Request ID and timestamp</li> <li>Client IP address and country (when available)</li> <li>HTTP method and URL</li> <li>HTTP status code</li> <li>User agent</li> <li>Block reason and security mode</li> <li>Server name</li> <li>Additional data related to the block reason</li> </ul> </li> <li> <p>Plugin Counters: Various plugin-specific counters that track activities and events.</p> </li> </ol>"},{"location":"features/#api-access","title":"API Access","text":"<p>Metrics data can be accessed via BunkerWeb's internal API endpoints:</p> <ul> <li>Endpoint: <code>/metrics/{filter}</code></li> <li>Method: GET</li> <li>Description: Retrieves metrics data based on the specified filter</li> <li>Response Format: JSON object containing the requested metrics</li> </ul> <p>For example, <code>/metrics/requests</code> returns information about blocked requests.</p> <p>API Access Configuration</p> <p>To access metrics via the API, you must ensure that:</p> <ol> <li>The API feature is enabled with <code>USE_API: \"yes\"</code> (enabled by default)</li> <li>Your client IP is included in the <code>API_WHITELIST_IP</code> setting (default is <code>127.0.0.0/8</code>)</li> <li>You are accessing the API on the configured port (default is <code>5000</code> via the <code>API_HTTP_PORT</code> setting)</li> <li>You are using the correct <code>API_SERVER_NAME</code> value in the Host header (default is <code>bwapi</code>)</li> <li>If <code>API_TOKEN</code> is configured, include <code>Authorization: Bearer &lt;token&gt;</code> in the request headers.</li> </ol> <p>Typical requests:</p> <p>Without token (when <code>API_TOKEN</code> is not set): <pre><code>curl -H \"Host: bwapi\" \\\n     http://your-bunkerweb-instance:5000/metrics/requests\n</code></pre></p> <p>With token (when <code>API_TOKEN</code> is set): <pre><code>curl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://your-bunkerweb-instance:5000/metrics/requests\n</code></pre></p> <p>If you have customized the <code>API_SERVER_NAME</code> to something other than the default <code>bwapi</code>, use that value in the Host header instead.</p> <p>For secure production environments, restrict API access to trusted IPs and enable <code>API_TOKEN</code>.</p>"},{"location":"features/#configuration-settings_20","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_METRICS</code> <code>yes</code> multisite no Enable Metrics: Set to <code>yes</code> to enable collection and retrieval of metrics. <code>METRICS_MEMORY_SIZE</code> <code>16m</code> global no Memory Size: Size of the internal storage for metrics (e.g., <code>16m</code>, <code>32m</code>). <code>METRICS_MAX_BLOCKED_REQUESTS</code> <code>1000</code> global no Max Blocked Requests: Maximum number of blocked requests to store per worker. <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> <code>100000</code> global no Max Redis Blocked Requests: Maximum number of blocked requests to store in Redis. <code>METRICS_SAVE_TO_REDIS</code> <code>yes</code> global no Save Metrics to Redis: Set to <code>yes</code> to save metrics (counters and tables) to Redis for cluster-wide aggregation. <p>Sizing Memory Allocation</p> <p>The <code>METRICS_MEMORY_SIZE</code> setting should be adjusted based on your traffic volume and the number of instances. For high-traffic sites, consider increasing this value to ensure all metrics are captured without data loss.</p> <p>Redis Integration</p> <p>When BunkerWeb is configured to use Redis, the metrics plugin will automatically synchronize blocked request data to the Redis server. This provides a centralized view of security events across multiple BunkerWeb instances.</p> <p>Performance Considerations</p> <p>Setting very high values for <code>METRICS_MAX_BLOCKED_REQUESTS</code> or <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> can increase memory usage. Monitor your system resources and adjust these values according to your actual needs and available resources.</p> <p>Worker-Specific Storage</p> <p>Each NGINX worker maintains its own metrics in memory. When accessing metrics through the API, data from all workers is automatically aggregated to provide a complete view.</p>"},{"location":"features/#example-configurations_21","title":"Example Configurations","text":"Basic ConfigurationLow-Resource EnvironmentHigh-Traffic EnvironmentMetrics Disabled <p>Default configuration suitable for most deployments:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"16m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"1000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"100000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> <p>Configuration optimized for environments with limited resources:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"8m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"500\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"10000\"\nMETRICS_SAVE_TO_REDIS: \"no\"\n</code></pre> <p>Configuration for high-traffic websites that need to track more security events:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"64m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"5000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"500000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> <p>Configuration with metrics collection disabled:</p> <pre><code>USE_METRICS: \"no\"\n</code></pre>"},{"location":"features/#migration-pro","title":"Migration  (PRO)","text":"<p>STREAM support </p> <p>Migration of BunkerWeb configuration between instances made easy via the web UI</p>"},{"location":"features/#miscellaneous","title":"Miscellaneous","text":"<p>STREAM support </p> <p>The Miscellaneous plugin provides essential baseline settings that help maintain the security and functionality of your website. This core component offers comprehensive controls for:</p> <ul> <li>Server behavior - Configure how your server responds to various requests</li> <li>HTTP settings - Manage methods, request sizes, and protocol options</li> <li>File management - Control static file serving and optimize delivery</li> <li>Protocol support - Enable modern HTTP protocols for better performance</li> <li>System configurations - Extend functionality and improve security</li> </ul> <p>Whether you need to restrict HTTP methods, manage request sizes, optimize file caching, or control how your server responds to various requests, this plugin gives you the tools to fine-tune your web service's behavior while optimizing both performance and security.</p>"},{"location":"features/#key-features","title":"Key Features","text":"Feature Category Description HTTP Method Control Define which HTTP methods are acceptable for your application Default Server Protection Prevent unauthorized access through hostname mismatches and enforce SNI for secure connections Request Size Management Set limits for client request bodies and file uploads Static File Serving Configure and optimize delivery of static content from custom root folders File Caching Improve performance through advanced file descriptor caching mechanisms with customizable settings Protocol Support Configure modern HTTP protocol options (HTTP2/HTTP3) and Alt-Svc port settings Anonymous Reporting Optional usage statistics reporting to help improve BunkerWeb External Plugin Support Extend functionality by integrating external plugins through URLs HTTP Status Control Configure how your server responds when denying requests (including connection termination)"},{"location":"features/#configuration-guide_1","title":"Configuration Guide","text":"Default Server SecurityDeny HTTP StatusHTTP MethodsRequest Size LimitsProtocol SupportStatic File ServingSystem SettingsFile Caching <p>Default Server Controls</p> <p>In HTTP, the <code>Host</code> header specifies the target server, but it may be missing or unknown, often due to bots scanning for vulnerabilities.</p> <p>To block such requests:</p> <ul> <li>Set <code>DISABLE_DEFAULT_SERVER</code> to <code>yes</code> to silently deny such requests using NGINX's <code>444</code> status code.</li> <li>For stricter security, enable <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> to reject SSL/TLS connections without valid SNI.</li> </ul> <p>Security Benefits</p> <ul> <li>Blocks Host header manipulation and virtual host scanning</li> <li>Mitigates HTTP request smuggling risks</li> <li>Removes the default server as an attack vector</li> </ul> Setting Default Context Multiple Description <code>DISABLE_DEFAULT_SERVER</code> <code>no</code> global no Default Server: Set to <code>yes</code> to disable the default server when no hostname matches the request. <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> <code>no</code> global no Strict SNI: When set to <code>yes</code>, requires SNI for HTTPS connections and rejects connections without valid SNI. <p>SNI Enforcement</p> <p>Enabling strict SNI validation provides stronger security but may cause issues if BunkerWeb is behind a reverse proxy that forwards HTTPS requests without preserving SNI information. Test thoroughly before enabling in production environments.</p> <p>HTTP Status Control</p> <p>The first step in handling denied client access is defining the appropriate action. This can be configured using the <code>DENY_HTTP_STATUS</code> setting. When BunkerWeb denies a request, you can control its response using this setting. By default, it returns a <code>403 Forbidden</code> status, displaying a web page or custom content to the client.</p> <p>Alternatively, setting it to <code>444</code> closes the connection immediately without sending any response. This non-standard status code, specific to NGINX, is useful for silently dropping unwanted requests.</p> Setting Default Context Multiple Description <code>DENY_HTTP_STATUS</code> <code>403</code> global no Deny HTTP Status: HTTP status code to send when request is denied (403 or 444). Code 444 closes the connection. <p>444 Status Code considerations</p> <p>Since clients receive no feedback, troubleshooting can be more challenging. Setting <code>444</code> is recommended only if you have thoroughly addressed false positives, are experienced with BunkerWeb, and require a higher level of security.</p> <p>Stream mode</p> <p>In stream mode, this setting is always enforced as <code>444</code>, meaning the connection will be closed, regardless of the configured value.</p> <p>HTTP Method Control</p> <p>Restricting HTTP methods to only those required by your application is a fundamental security measure that adheres to the principle of least privilege. By explicitly defining acceptable HTTP methods, you can minimize the risk of exploitation through unused or dangerous methods.</p> <p>This feature is configured using the <code>ALLOWED_METHODS</code> setting, where methods are listed and separated by a <code>|</code> (default: <code>GET|POST|HEAD</code>). If a client attempts to use a method not listed, the server will respond with a 405 - Method Not Allowed status.</p> <p>For most websites, the default <code>GET|POST|HEAD</code> is sufficient. If your application uses RESTful APIs, you may need to include methods like <code>PUT</code> and <code>DELETE</code>.</p> <p>Security Benefits</p> <ul> <li>Prevents exploitation of unused or unnecessary HTTP methods</li> <li>Reduces the attack surface by disabling potentially harmful methods</li> <li>Blocks HTTP method enumeration techniques used by attackers</li> </ul> Setting Default Context Multiple Description <code>ALLOWED_METHODS</code> <code>GET    | POST    | HEAD</code> multisite no HTTP Methods: List of HTTP methods that are allowed, separated by pipe characters. <p>CORS and Pre-flight Requests</p> <p>If your application supports Cross-Origin Resource Sharing (CORS), you should include the <code>OPTIONS</code> method in the <code>ALLOWED_METHODS</code> setting to handle pre-flight requests. This ensures proper functionality for browsers making cross-origin requests.</p> <p>Security Considerations</p> <ul> <li>Avoid enabling <code>TRACE</code> or <code>CONNECT</code>: These methods are rarely needed and can introduce significant security risks, such as enabling Cross-Site Tracing (XST) or tunneling attacks.</li> <li>Regularly review allowed methods: Periodically audit the <code>ALLOWED_METHODS</code> setting to ensure it aligns with your application's current requirements.</li> <li>Test thoroughly before deployment: Changes to HTTP method restrictions can impact application functionality. Validate your configuration in a staging environment before applying it to production.</li> </ul> <p>Request Size Limits</p> <p>The maximum request body size can be controlled using the <code>MAX_CLIENT_SIZE</code> setting (default: <code>10m</code>). Accepted values follow the syntax described here.</p> <p>Security Benefits</p> <ul> <li>Protects against denial-of-service attacks caused by excessive payload sizes</li> <li>Mitigates buffer overflow vulnerabilities</li> <li>Prevents file upload attacks</li> <li>Reduces the risk of server resource exhaustion</li> </ul> Setting Default Context Multiple Description <code>MAX_CLIENT_SIZE</code> <code>10m</code> multisite no Maximum Request Size: The maximum allowed size for client request bodies (e.g., file uploads). <p>Request Size Configuration Best Practices</p> <p>If you need to allow a request body of unlimited size, you can set the <code>MAX_CLIENT_SIZE</code> value to <code>0</code>. However, this is not recommended due to potential security and performance risks.</p> <p>Best Practices:</p> <ul> <li>Always configure <code>MAX_CLIENT_SIZE</code> to the smallest value that meets your application's legitimate requirements.</li> <li>Regularly review and adjust this setting to align with your application's evolving needs.</li> <li>Avoid setting <code>0</code> unless absolutely necessary, as it can expose your server to denial-of-service attacks and resource exhaustion.</li> </ul> <p>By carefully managing this setting, you can ensure optimal security and performance for your application.</p> <p>HTTP Protocol Settings</p> <p>Modern HTTP protocols like HTTP/2 and HTTP/3 improve performance and security. BunkerWeb allows easy configuration of these protocols.</p> <p>Security and Performance Benefits</p> <ul> <li>Security Advantages: Modern protocols like HTTP/2 and HTTP/3 enforce TLS/HTTPS by default, reduce susceptibility to certain attacks, and improve privacy through encrypted headers (HTTP/3).</li> <li>Performance Benefits: Features like multiplexing, header compression, server push, and binary data transfer enhance speed and efficiency.</li> </ul> Setting Default Context Multiple Description <code>LISTEN_HTTP</code> <code>yes</code> multisite no HTTP Listen: Respond to (insecure) HTTP requests when set to <code>yes</code>. <code>HTTP2</code> <code>yes</code> multisite no HTTP2: Support HTTP2 protocol when HTTPS is enabled. <code>HTTP3</code> <code>yes</code> multisite no HTTP3: Support HTTP3 protocol when HTTPS is enabled. <code>HTTP3_ALT_SVC_PORT</code> <code>443</code> multisite no HTTP3 Alt-Svc Port: Port to use in the Alt-Svc header for HTTP3. <p>About HTTP/3</p> <p>HTTP/3, the latest version of the Hypertext Transfer Protocol, uses QUIC over UDP instead of TCP, addressing issues like head-of-line blocking for faster, more reliable connections.</p> <p>NGINX introduced experimental support for HTTP/3 and QUIC starting with version 1.25.0. However, this feature is still experimental, and caution is advised for production use. For more details, see NGINX's official documentation.</p> <p>Thorough testing is recommended before enabling HTTP/3 in production environments.</p> <p>File Serving Configuration</p> <p>BunkerWeb can serve static files directly or act as a reverse proxy to an application server. By default, files are served from <code>/var/www/html/{server_name}</code>.</p> Setting Default Context Multiple Description <code>SERVE_FILES</code> <code>yes</code> multisite no Serve Files: When set to <code>yes</code>, BunkerWeb will serve static files from the configured root folder. <code>ROOT_FOLDER</code> <code>/var/www/html/{server_name}</code> multisite no Root Folder: The directory from which to serve static files. Empty means use the default location. <p>Best Practices for Static File Serving</p> <ul> <li>Direct Serving: Enable file serving (<code>SERVE_FILES=yes</code>) when BunkerWeb is responsible for serving static files directly.</li> <li>Reverse Proxy: If BunkerWeb acts as a reverse proxy, deactivate file serving (<code>SERVE_FILES=no</code>) to reduce the attack surface and avoid exposing unnecessary directories.</li> <li>Permissions: Ensure proper file permissions and path configurations to prevent unauthorized access.</li> <li>Security: Avoid exposing sensitive directories or files through misconfigurations.</li> </ul> <p>By carefully managing static file serving, you can optimize performance while maintaining a secure environment.</p> <p>Plugin and System Management</p> <p>These settings manage BunkerWeb's interaction with external systems and contribute to improving the product through optional anonymous usage statistics.</p> <p>Anonymous Reporting</p> <p>Anonymous reporting provides the BunkerWeb team with insights into how the software is being used. This helps identify areas for improvement and prioritize feature development. The reports are strictly statistical and do not include any sensitive or personally identifiable information. They cover:</p> <ul> <li>Enabled features</li> <li>General configuration patterns</li> </ul> <p>You can disable this feature if desired by setting <code>SEND_ANONYMOUS_REPORT</code> to <code>no</code>.</p> <p>External Plugins</p> <p>External plugins enable you to extend BunkerWeb's functionality by integrating third-party modules. This allows for additional customization and advanced use cases.</p> <p>External Plugin Security</p> <p>External plugins can introduce security risks if not properly vetted. Follow these best practices to minimize potential threats:</p> <ul> <li>Only use plugins from trusted sources.</li> <li>Verify plugin integrity using checksums when available.</li> <li>Regularly review and update plugins to ensure security and compatibility.</li> </ul> <p>For more details, refer to the Plugins documentation.</p> Setting Default Context Multiple Description <code>SEND_ANONYMOUS_REPORT</code> <code>yes</code> global no Anonymous Reports: Send anonymous usage reports to BunkerWeb maintainers. <code>EXTERNAL_PLUGIN_URLS</code> global no External Plugins: URLs for external plugins to download (space-separated). <p>File Cache Optimization</p> <p>The open file cache improves performance by storing file descriptors and metadata in memory, reducing the need for repeated file system operations.</p> <p>Benefits of File Caching</p> <ul> <li>Performance: Reduces filesystem I/O, decreases latency, and lowers CPU usage for file operations.</li> <li>Security: Mitigates timing attacks by caching error responses and reduces the impact of DoS attacks targeting the filesystem.</li> </ul> Setting Default Context Multiple Description <code>USE_OPEN_FILE_CACHE</code> <code>no</code> multisite no Enable Cache: Enable caching of file descriptors and metadata to improve performance. <code>OPEN_FILE_CACHE</code> <code>max=1000 inactive=20s</code> multisite no Cache Configuration: Configure the open file cache (e.g., maximum entries and inactive timeout). <code>OPEN_FILE_CACHE_ERRORS</code> <code>yes</code> multisite no Cache Errors: Cache file descriptor lookup errors as well as successful lookups. <code>OPEN_FILE_CACHE_MIN_USES</code> <code>2</code> multisite no Minimum Uses: Minimum number of accesses during the inactive period for a file to remain cached. <code>OPEN_FILE_CACHE_VALID</code> <code>30s</code> multisite no Cache Validity: Time after which cached elements are revalidated. <p>Configuration Guide</p> <p>To enable and configure file caching: 1. Set <code>USE_OPEN_FILE_CACHE</code> to <code>yes</code> to activate the feature. 2. Adjust <code>OPEN_FILE_CACHE</code> parameters to define the maximum number of cached entries and their inactive timeout. 3. Use <code>OPEN_FILE_CACHE_ERRORS</code> to cache both successful and failed lookups, reducing repeated filesystem operations. 4. Set <code>OPEN_FILE_CACHE_MIN_USES</code> to specify the minimum number of accesses required for a file to remain cached. 5. Define the cache validity period with <code>OPEN_FILE_CACHE_VALID</code> to control how often cached elements are revalidated.</p> <p>Best Practices</p> <ul> <li>Enable file caching for websites with many static files to improve performance.</li> <li>Regularly review and fine-tune cache settings to balance performance and resource usage.</li> <li>In dynamic environments where files change frequently, consider reducing the cache validity period or disabling the feature to ensure content freshness.</li> </ul>"},{"location":"features/#example-configurations_22","title":"Example Configurations","text":"Default Server SecurityDeny HTTP StatusHTTP MethodsRequest Size LimitsProtocol SupportStatic File ServingFile Caching <p>Example configuration for disabling the default server and enforcing strict SNI:</p> <pre><code>DISABLE_DEFAULT_SERVER: \"yes\"\nDISABLE_DEFAULT_SERVER_STRICT_SNI: \"yes\"\n</code></pre> <p>Example configuration for silently dropping unwanted requests:</p> <pre><code>DENY_HTTP_STATUS: \"444\"\n</code></pre> <p>Example configuration for restricting HTTP methods to only those required by a RESTful API:</p> <pre><code>ALLOWED_METHODS: \"GET|POST|PUT|DELETE\"\n</code></pre> <p>Example configuration for limiting the maximum request body size:</p> <pre><code>MAX_CLIENT_SIZE: \"5m\"\n</code></pre> <p>Example configuration for enabling HTTP/2 and HTTP/3 with a custom Alt-Svc port:</p> <pre><code>HTTP2: \"yes\"\nHTTP3: \"yes\"\nHTTP3_ALT_SVC_PORT: \"443\"\n</code></pre> <p>Example configuration for serving static files from a custom root folder:</p> <pre><code>SERVE_FILES: \"yes\"\nROOT_FOLDER: \"/var/www/custom-folder\"\n</code></pre> <p>Example configuration for enabling and optimizing file caching:</p> <p>```yaml USE_OPEN_FILE_CACHE: \"yes\" OPEN_FILE_CACHE: \"max=2000 inactive=30s\" OPEN_FILE_CACHE_ERRORS: \"yes\" OPEN_FILE_CACHE_MIN_USES: \"3\" OPEN_FILE_CACHE_VALID: \"60s\"</p>"},{"location":"features/#modsecurity","title":"ModSecurity","text":"<p>STREAM support </p> <p>The ModSecurity plugin integrates the powerful ModSecurity Web Application Firewall (WAF) into BunkerWeb. This integration delivers robust protection against a wide range of web attacks by leveraging the OWASP Core Rule Set (CRS) to detect and block threats such as SQL injection, cross-site scripting (XSS), local file inclusion, and more.</p> <p>How it works:</p> <ol> <li>When a request is received, ModSecurity evaluates it against the active rule set.</li> <li>The OWASP Core Rule Set inspects headers, cookies, URL parameters, and body content.</li> <li>Each detected violation contributes to an overall anomaly score.</li> <li>If this score exceeds the configured threshold, the request is blocked.</li> <li>Detailed logs are created to help diagnose which rules were triggered and why.</li> </ol> <p>Key benefits</p> <ol> <li>Industry Standard Protection: Utilizes the widely used open-source ModSecurity firewall.</li> <li>OWASP Core Rule Set: Employs community-maintained rules covering the OWASP Top Ten and more.</li> <li>Configurable Security Levels: Adjust paranoia levels to balance security with potential false positives.</li> <li>Detailed Logging: Provides thorough audit logs for attack analysis.</li> <li>Plugin Support: Extend protection with optional CRS plugins tailored to your applications.</li> </ol>"},{"location":"features/#how-to-use_20","title":"How to Use","text":"<p>Follow these steps to configure and use ModSecurity:</p> <ol> <li>Enable the feature: ModSecurity is enabled by default. This can be controlled using the <code>USE_MODSECURITY</code> setting.</li> <li>Select a CRS version: Choose a version of the OWASP Core Rule Set (v3, v4, or nightly).</li> <li>Add plugins: Optionally activate CRS plugins to enhance rule coverage.</li> <li>Monitor and tune: Use logs and the web UI to identify false positives and adjust settings.</li> </ol>"},{"location":"features/#configuration-settings_21","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_MODSECURITY</code> <code>yes</code> multisite no Enable ModSecurity: Turn on ModSecurity Web Application Firewall protection. <code>USE_MODSECURITY_CRS</code> <code>yes</code> multisite no Use Core Rule Set: Enable the OWASP Core Rule Set for ModSecurity. <code>MODSECURITY_CRS_VERSION</code> <code>4</code> multisite no CRS Version: The version of the OWASP Core Rule Set to use. Options: <code>3</code>, <code>4</code>, or <code>nightly</code>. <code>MODSECURITY_SEC_RULE_ENGINE</code> <code>On</code> multisite no Rule Engine: Control whether rules are enforced. Options: <code>On</code>, <code>DetectionOnly</code>, or <code>Off</code>. <code>MODSECURITY_SEC_AUDIT_ENGINE</code> <code>RelevantOnly</code> multisite no Audit Engine: Control how audit logging works. Options: <code>On</code>, <code>Off</code>, or <code>RelevantOnly</code>. <code>MODSECURITY_SEC_AUDIT_LOG_PARTS</code> <code>ABIJDEFHZ</code> multisite no Audit Log Parts: Which parts of requests/responses to include in audit logs. <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code> <code>131072</code> multisite no Request Body Limit (No Files): Maximum size for request bodies without file uploads. Accepts plain bytes or human\u2011readable suffix (<code>k</code>, <code>m</code>, <code>g</code>), e.g. <code>131072</code>, <code>256k</code>, <code>1m</code>, <code>2g</code>. <code>USE_MODSECURITY_CRS_PLUGINS</code> <code>yes</code> multisite no Enable CRS Plugins: Enable additional plugin rule sets for the Core Rule Set. <code>MODSECURITY_CRS_PLUGINS</code> multisite no CRS Plugins List: Space-separated list of plugins to download and install (<code>plugin-name[/tag]</code> or URL). <code>USE_MODSECURITY_GLOBAL_CRS</code> <code>no</code> global no Global CRS: When enabled, applies CRS rules globally at the HTTP level rather than per server. <p>ModSecurity and the OWASP Core Rule Set</p> <p>We strongly recommend keeping both ModSecurity and the OWASP Core Rule Set (CRS) enabled to provide robust protection against common web vulnerabilities. While occasional false positives may occur, they can be resolved with some effort by fine-tuning rules or using predefined exclusions.</p> <p>The CRS team actively maintains a list of exclusions for popular applications such as WordPress, Nextcloud, Drupal, and Cpanel, making it easier to integrate without impacting functionality. The security benefits far outweigh the minimal configuration effort required to address false positives.</p>"},{"location":"features/#available-crs-versions","title":"Available CRS Versions","text":"<p>Select a CRS version to best match your security needs:</p> <ul> <li><code>3</code>: Stable v3.3.7.</li> <li><code>4</code>: Stable v4.18.0 (default).</li> <li><code>nightly</code>: Nightly build offering the latest rule updates.</li> </ul> <p>Nightly Build</p> <p>The nightly build contains the most up-to-date rules, offering the latest protections against emerging threats. However, since it is updated daily and may include experimental or untested changes, it is recommended to first use the nightly build in a staging environment before deploying it in production.</p> <p>Paranoia Levels</p> <p>The OWASP Core Rule Set uses \"paranoia levels\" (PL) to control rule strictness:</p> <ul> <li>PL1 (default): Basic protection with minimal false positives</li> <li>PL2: Tighter security with more strict pattern matching</li> <li>PL3: Enhanced security with stricter validation</li> <li>PL4: Maximum security with very strict rules (may cause many false positives)</li> </ul> <p>You can set the paranoia level by adding a custom configuration file in <code>/etc/bunkerweb/configs/modsec-crs/</code>.</p>"},{"location":"features/#custom-configurations","title":"Custom Configurations","text":"<p>Tuning ModSecurity and the OWASP Core Rule Set (CRS) can be achieved through custom configurations. These configurations allow you to customize behavior at specific stages of the security rules processing:</p> <ul> <li><code>modsec-crs</code>: Applied before the OWASP Core Rule Set is loaded.</li> <li><code>modsec</code>: Applied after the OWASP Core Rule Set is loaded. This is also used if the CRS is not loaded at all.</li> <li><code>crs-plugins-before</code>: Applied before the CRS plugins are loaded.</li> <li><code>crs-plugins-after</code>: Applied after the CRS plugins are loaded.</li> </ul> <p>This structure provides flexibility, allowing you to fine-tune ModSecurity and CRS settings to suit your application's specific needs while maintaining a clear configuration flow.</p>"},{"location":"features/#adding-crs-exclusions-with-modsec-crs","title":"Adding CRS Exclusions with <code>modsec-crs</code>","text":"<p>You can use a custom configuration of type <code>modsec-crs</code> to add exclusions for specific use cases, such as enabling predefined exclusions for WordPress:</p> <pre><code>SecAction \\\n \"id:900130,\\\n  phase:1,\\\n  nolog,\\\n  pass,\\\n  t:none,\\\n  setvar:tx.crs_exclusions_wordpress=1\"\n</code></pre> <p>In this example:</p> <ul> <li>The action is executed in Phase 1 (early in the request lifecycle).</li> <li>It enables WordPress-specific CRS exclusions by setting the variable <code>tx.crs_exclusions_wordpress</code>.</li> </ul>"},{"location":"features/#updating-crs-rules-with-modsec","title":"Updating CRS Rules with <code>modsec</code>","text":"<p>To fine-tune the loaded CRS rules, you can use a custom configuration of type <code>modsec</code>. For example, you can remove specific rules or tags for certain request paths:</p> <pre><code>SecRule REQUEST_FILENAME \"/wp-admin/admin-ajax.php\" \"id:1,ctl:ruleRemoveByTag=attack-xss,ctl:ruleRemoveByTag=attack-rce\"\nSecRule REQUEST_FILENAME \"/wp-admin/options.php\" \"id:2,ctl:ruleRemoveByTag=attack-xss\"\nSecRule REQUEST_FILENAME \"^/wp-json/yoast\" \"id:3,ctl:ruleRemoveById=930120\"\n</code></pre> <p>In this example:</p> <ul> <li>Rule 1: Removes rules tagged as <code>attack-xss</code> and <code>attack-rce</code> for requests to <code>/wp-admin/admin-ajax.php</code>.</li> <li>Rule 2: Removes rules tagged as <code>attack-xss</code> for requests to <code>/wp-admin/options.php</code>.</li> <li>Rule 3: Removes a specific rule (ID <code>930120</code>) for requests matching <code>/wp-json/yoast</code>.</li> </ul> <p>Order of execution</p> <p>The execution order for ModSecurity in BunkerWeb is as follows, ensuring a clear and logical progression of rule application:</p> <ol> <li>OWASP CRS Configuration: Base configuration for the OWASP Core Rule Set.</li> <li>Custom Plugins Configuration (<code>crs-plugins-before</code>): Settings specific to plugins, applied before any CRS rules.</li> <li>Custom Plugin Rules (Before CRS Rules) (<code>crs-plugins-before</code>): Custom rules for plugins executed prior to CRS rules.</li> <li>Downloaded Plugins Configuration: Configuration for externally downloaded plugins.</li> <li>Downloaded Plugin Rules (Before CRS Rules): Rules for downloaded plugins executed before CRS rules.</li> <li>Custom CRS Rules (<code>modsec-crs</code>): User-defined rules applied before loading the CRS rules.</li> <li>OWASP CRS Rules: The core set of security rules provided by OWASP.</li> <li>Custom Plugin Rules (After CRS Rules) (<code>crs-plugins-after</code>): Custom plugin rules executed after CRS rules.</li> <li>Downloaded Plugin Rules (After CRS Rules): Rules for downloaded plugins executed after CRS rules.</li> <li>Custom Rules (<code>modsec</code>): User-defined rules applied after all CRS and plugin rules.</li> </ol> <p>Key Notes:</p> <ul> <li>Pre-CRS customizations (<code>crs-plugins-before</code>, <code>modsec-crs</code>) allow you to define exceptions or preparatory rules before the core CRS rules are loaded.</li> <li>Post-CRS customizations (<code>crs-plugins-after</code>, <code>modsec</code>) are ideal for overriding or extending rules after CRS and plugin rules have been applied.</li> <li>This structure provides maximum flexibility, enabling precise control over rule execution and customization while maintaining a strong security baseline.</li> </ul>"},{"location":"features/#owasp-crs-plugins","title":"OWASP CRS Plugins","text":"<p>The OWASP Core Rule Set also supports a range of plugins designed to extend its functionality and improve compatibility with specific applications or environments. These plugins can help fine-tune the CRS for use with popular platforms such as WordPress, Nextcloud, and Drupal, or even custom setups. For more information and a list of available plugins, refer to the OWASP CRS plugin registry.</p> <p>Plugin download</p> <p>The <code>MODSECURITY_CRS_PLUGINS</code> setting allows you to download and install plugins to extend the functionality of the OWASP Core Rule Set (CRS). This setting accepts a list of plugin names with optional tags or URLs, making it easy to integrate additional security features tailored to your specific needs.</p> <p>Here's a non-exhaustive list of accepted values for the <code>MODSECURITY_CRS_PLUGINS</code> setting:</p> <ul> <li><code>fake-bot</code> - Download the latest release of the plugin.</li> <li><code>wordpress-rule-exclusions/v1.0.0</code> - Download the version 1.0.0 of the plugin.</li> <li><code>https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip</code> - Download the plugin directly from the URL.</li> </ul> <p>False Positives</p> <p>Higher security settings may block legitimate traffic. Start with the default settings and monitor logs before increasing security levels. Be prepared to add exclusion rules for your specific application needs.</p>"},{"location":"features/#example-configurations_23","title":"Example Configurations","text":"Basic ConfigurationDetection-Only ModeAdvanced Configuration with PluginsLegacy ConfigurationGlobal ModSecurityNightly Build with Custom Plugins <p>A standard configuration with ModSecurity and CRS v4 enabled:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Configuration for monitoring potential threats without blocking:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"DetectionOnly\"\nMODSECURITY_SEC_AUDIT_ENGINE: \"On\"\nMODSECURITY_SEC_AUDIT_LOG_PARTS: \"ABIJDEFHZ\"\n</code></pre> <p>Configuration with CRS v4 and plugins enabled for additional protection:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions fake-bot\"\nMODSECURITY_REQ_BODY_NO_FILES_LIMIT: \"262144\"\n</code></pre> <p>Configuration using CRS v3 for compatibility with older setups:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"3\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Configuration applying ModSecurity globally across all HTTP connections:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nUSE_MODSECURITY_GLOBAL_CRS: \"yes\"\n</code></pre> <p>Configuration using the nightly build of CRS with custom plugins:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"nightly\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions/v1.0.0 https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip\"\n</code></pre> <p>Human-readable size values</p> <p>For size settings like <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code>, the suffixes <code>k</code>, <code>m</code>, and <code>g</code> (case-insensitive) are supported and represent kibibytes, mebibytes, and gibibytes (multiples of 1024). Examples: <code>256k</code> = 262144, <code>1m</code> = 1048576, <code>2g</code> = 2147483648.</p>"},{"location":"features/#monitoring-pro","title":"Monitoring  (PRO)","text":"<p>STREAM support </p> <p>BunkerWeb monitoring pro system. This plugin is a prerequisite for some other plugins.</p> Setting Default Context Multiple Description <code>USE_MONITORING</code> <code>yes</code> global no Enable monitoring of BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global no Size of the dict to store monitoring metrics. <code>MONITORING_IGNORE_URLS</code> global no List of URLs to ignore when monitoring separated with spaces (e.g. /health)"},{"location":"features/#php","title":"PHP","text":"<p>STREAM support </p> <p>The PHP plugin provides seamless integration with PHP-FPM for BunkerWeb, enabling dynamic PHP processing for your websites. This feature supports both local PHP-FPM instances running on the same machine and remote PHP-FPM servers, giving you flexibility in how you configure your PHP environment.</p> <p>How it works:</p> <ol> <li>When a client requests a PHP file from your website, BunkerWeb routes the request to the configured PHP-FPM instance.</li> <li>For local PHP-FPM, BunkerWeb communicates with the PHP interpreter through a Unix socket file.</li> <li>For remote PHP-FPM, BunkerWeb forwards requests to the specified host and port using the FastCGI protocol.</li> <li>PHP-FPM processes the script and returns the generated content to BunkerWeb, which then delivers it to the client.</li> <li>URL rewriting is automatically configured to support common PHP frameworks and applications that use \"pretty URLs\".</li> </ol>"},{"location":"features/#how-to-use_21","title":"How to Use","text":"<p>Follow these steps to configure and use the PHP feature:</p> <ol> <li>Choose your PHP-FPM setup: Decide whether you'll use a local or remote PHP-FPM instance.</li> <li>Configure the connection: For local PHP, specify the socket path; for remote PHP, provide the hostname and port.</li> <li>Set the document root: Configure the root folder that contains your PHP files using the appropriate path setting.</li> <li>Let BunkerWeb handle the rest: Once configured, BunkerWeb automatically routes PHP requests to your PHP-FPM instance.</li> </ol>"},{"location":"features/#configuration-settings_22","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>REMOTE_PHP</code> multisite no Remote PHP Host: Hostname of the remote PHP-FPM instance. Leave empty to use local PHP. <code>REMOTE_PHP_PATH</code> multisite no Remote Path: Root folder containing files in the remote PHP-FPM instance. <code>REMOTE_PHP_PORT</code> <code>9000</code> multisite no Remote Port: Port of the remote PHP-FPM instance. <code>LOCAL_PHP</code> multisite no Local PHP Socket: Path to the PHP-FPM socket file. Leave empty to use a remote PHP-FPM instance. <code>LOCAL_PHP_PATH</code> multisite no Local Path: Root folder containing files in the local PHP-FPM instance. <p>Local vs. Remote PHP-FPM</p> <p>Choose the setup that best fits your infrastructure:</p> <ul> <li>Local PHP-FPM offers better performance due to socket-based communication and is ideal when PHP runs on the same machine as BunkerWeb.</li> <li>Remote PHP-FPM provides more flexibility and scalability by allowing PHP processing to occur on separate servers.</li> </ul> <p>Path Configuration</p> <p>The <code>REMOTE_PHP_PATH</code> or <code>LOCAL_PHP_PATH</code> must match the actual filesystem path where your PHP files are stored; otherwise, a \"File not found\" error will occur.</p> <p>URL Rewriting</p> <p>The PHP plugin automatically configures URL rewriting to support modern PHP applications. Requests for non-existent files will be directed to <code>index.php</code> with the original request URI available as a query parameter.</p>"},{"location":"features/#example-configurations_24","title":"Example Configurations","text":"Local PHP-FPM ConfigurationRemote PHP-FPM ConfigurationCustom Port ConfigurationWordPress Configuration <p>Configuration for using a local PHP-FPM instance:</p> <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Configuration for using a remote PHP-FPM instance:</p> <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9000\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Configuration for using PHP-FPM on a non-standard port:</p> <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9001\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Configuration optimized for WordPress:</p> <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html/wordpress\"\n</code></pre>"},{"location":"features/#pro","title":"Pro","text":"<p>STREAM support </p> <p>The Pro plugin bundles advanced features and enhancements for enterprise deployments of BunkerWeb. It unlocks additional capabilities, premium plugins, and extended functionality that complement the core BunkerWeb platform. It delivers enhanced security, performance, and management options for enterprise-grade deployments.</p> <p>How it works:</p> <ol> <li>With a valid Pro license key, BunkerWeb connects to the Pro API server to validate your subscription.</li> <li>Once authenticated, the plugin automatically downloads and installs Pro-exclusive plugins and extensions.</li> <li>Your Pro status is periodically verified to ensure continued access to premium features.</li> <li>Premium plugins are seamlessly integrated with your existing BunkerWeb configuration.</li> <li>All Pro features work harmoniously with the open-source core, enhancing rather than replacing functionality.</li> </ol> <p>Key benefits</p> <ol> <li>Premium Extensions: Access to exclusive plugins and features not available in the community edition.</li> <li>Enhanced Performance: Optimized configurations and advanced caching mechanisms.</li> <li>Enterprise Support: Priority assistance and dedicated support channels.</li> <li>Seamless Integration: Pro features work alongside community features without configuration conflicts.</li> <li>Automatic Updates: Premium plugins are automatically downloaded and kept current.</li> </ol>"},{"location":"features/#how-to-use_22","title":"How to Use","text":"<p>Follow these steps to configure and use the Pro features:</p> <ol> <li>Obtain a license key: Purchase a Pro license from the BunkerWeb Panel.</li> <li>Configure your license key: Use the <code>PRO_LICENSE_KEY</code> setting to configure your license.</li> <li>Let BunkerWeb handle the rest: Once configured with a valid license, Pro plugins are automatically downloaded and activated.</li> <li>Monitor your Pro status: Check the health indicators in the web UI to confirm your Pro subscription status.</li> </ol>"},{"location":"features/#configuration-settings_23","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>PRO_LICENSE_KEY</code> global no Pro License Key: Your BunkerWeb Pro license key for authentication. <p>License Management</p> <p>Your Pro license is tied to your specific deployment environment. If you need to transfer your license or have questions about your subscription, please contact support through the BunkerWeb Panel.</p> <p>Pro Features</p> <p>The specific Pro features available may evolve over time as new capabilities are added. The Pro plugin automatically handles the installation and configuration of all available features.</p> <p>Network Requirements</p> <p>The Pro plugin requires outbound internet access to connect to the BunkerWeb API for license verification and to download premium plugins. Ensure your firewall allows connections to <code>api.bunkerweb.io</code> on port 443 (HTTPS).</p>"},{"location":"features/#frequently-asked-questions","title":"Frequently Asked Questions","text":"<p>Q: What happens if my Pro license expires?</p> <p>A: If your Pro license expires, access to premium features and plugins will be disabled. However, your BunkerWeb installation will continue to operate with all community edition features intact. To regain access to Pro features, simply renew your license.</p> <p>Q: Will Pro features disrupt my existing configuration?</p> <p>A: No, Pro features are designed to integrate seamlessly with your current BunkerWeb setup. They enhance functionality without altering or interfering with your existing configuration, ensuring a smooth and reliable experience.</p> <p>Q: Can I try Pro features before committing to a purchase?</p> <p>A: Absolutely! BunkerWeb offers two Pro plans to suit your needs:</p> <ul> <li>BunkerWeb PRO Standard: Full access to Pro features without technical support.</li> <li>BunkerWeb PRO Enterprise: Full access to Pro features with dedicated technical support.</li> </ul> <p>You can explore Pro features with a free 1-month trial by using the promo code <code>freetrial</code>. Visit the BunkerWeb Panel to activate your trial and learn more about flexible pricing options based on the number of services protected by BunkerWeb PRO.</p>"},{"location":"features/#prometheus-exporter-pro","title":"Prometheus exporter  (PRO)","text":"<p>STREAM support </p> <p>Prometheus exporter for BunkerWeb internal metrics.</p> Setting Default Context Multiple Description <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global no Enable the Prometheus export. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global no Listening IP of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global no Listening port of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global no HTTP URL of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global no List of IP/networks allowed to contact the Prometheus exporter endpoint."},{"location":"features/#real-ip","title":"Real IP","text":"<p>STREAM support </p> <p>The Real IP plugin ensures that BunkerWeb correctly identifies the client\u2019s IP address even when behind proxies. This is essential for applying security rules, rate limiting, and logging properly; without it, all requests would appear to come from your proxy's IP rather than the client's actual IP.</p> <p>How it works:</p> <ol> <li>When enabled, BunkerWeb examines incoming requests for specific headers (like <code>X-Forwarded-For</code>) that contain the client's original IP address.</li> <li>BunkerWeb checks if the incoming IP is in your trusted proxy list (<code>REAL_IP_FROM</code>), ensuring that only legitimate proxies can pass client IPs.</li> <li>The original client IP is extracted from the specified header (<code>REAL_IP_HEADER</code>) and used for all security evaluations and logging.</li> <li>For recursive IP chains, BunkerWeb can trace through multiple proxy hops to determine the originating client IP.</li> <li>Additionally, PROXY protocol support can be enabled to receive client IPs directly from compatible proxies such as HAProxy.</li> <li>Trusted proxy IP lists can be automatically downloaded and updated from external sources via URLs.</li> </ol>"},{"location":"features/#how-to-use_23","title":"How to Use","text":"<p>Follow these steps to configure and use the Real IP feature:</p> <ol> <li>Enable the feature: Set the <code>USE_REAL_IP</code> setting to <code>yes</code> to enable real IP detection.</li> <li>Define trusted proxies: List the IP addresses or networks of your trusted proxies using the <code>REAL_IP_FROM</code> setting.</li> <li>Specify the header: Configure which header contains the real IP using the <code>REAL_IP_HEADER</code> setting.</li> <li>Configure recursion: Decide whether to trace IP chains recursively with the <code>REAL_IP_RECURSIVE</code> setting.</li> <li>Optional URL sources: Set up automatic downloads of trusted proxy lists with <code>REAL_IP_FROM_URLS</code>.</li> <li>PROXY protocol: For direct proxy communication, enable with <code>USE_PROXY_PROTOCOL</code> if your upstream supports it.</li> </ol> <p>PROXY Protocol Warning</p> <p>Enabling <code>USE_PROXY_PROTOCOL</code> without properly configuring your upstream proxy to send PROXY protocol headers will break your application. Only enable this setting if you are certain that your upstream proxy is properly configured to send PROXY protocol information. If your proxy is not sending PROXY protocol headers, all connections to BunkerWeb will fail with protocol errors.</p>"},{"location":"features/#configuration-settings_24","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_REAL_IP</code> <code>no</code> multisite no Enable Real IP: Set to <code>yes</code> to enable retrieving client's real IP from headers or PROXY protocol. <code>REAL_IP_FROM</code> <code>192.168.0.0/16 172.16.0.0/12 10.0.0.0/8</code> multisite no Trusted Proxies: List of trusted IP addresses or networks where proxied requests come from, separated by spaces. <code>REAL_IP_HEADER</code> <code>X-Forwarded-For</code> multisite no Real IP Header: HTTP header containing the real IP or special value <code>proxy_protocol</code> for PROXY protocol. <code>REAL_IP_RECURSIVE</code> <code>yes</code> multisite no Recursive Search: When set to <code>yes</code>, performs a recursive search in header containing multiple IP addresses. <code>REAL_IP_FROM_URLS</code> multisite no IP List URLs: URLs containing trusted proxy IPs/networks to download, separated by spaces. Supports file:// URLs. <code>USE_PROXY_PROTOCOL</code> <code>no</code> global no PROXY Protocol: Set to <code>yes</code> to enable PROXY protocol support for direct proxy-to-BunkerWeb communication. <p>Cloud Provider Networks</p> <p>If you're using a cloud provider like AWS, GCP, or Azure, consider adding their load balancer IP ranges to your <code>REAL_IP_FROM</code> setting to ensure proper client IP identification.</p> <p>Security Considerations</p> <p>Only include trusted proxy IPs in your configuration. Adding untrusted sources could allow IP spoofing attacks, where malicious actors could forge the client IP by manipulating headers.</p> <p>Multiple IP Addresses</p> <p>When <code>REAL_IP_RECURSIVE</code> is enabled and a header contains multiple IPs (e.g., <code>X-Forwarded-For: client, proxy1, proxy2</code>), BunkerWeb will identify the leftmost IP not in your trusted proxy list as the client IP.</p>"},{"location":"features/#example-configurations_25","title":"Example Configurations","text":"Basic ConfigurationCloud Load BalancerPROXY ProtocolMultiple Proxy Sources with URLsCDN ConfigurationBehind Cloudflare <p>A simple configuration for a site behind a reverse proxy:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.1.0/24 10.0.0.5\"\nREAL_IP_HEADER: \"X-Forwarded-For\"\nREAL_IP_RECURSIVE: \"yes\"\n</code></pre> <p>Configuration for a site behind a cloud load balancer:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.0.0/16 172.16.0.0/12 10.0.0.0/8\"\nREAL_IP_HEADER: \"X-Forwarded-For\"\nREAL_IP_RECURSIVE: \"yes\"\n</code></pre> <p>Configuration using PROXY protocol with a compatible load balancer:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.1.0/24\"\nREAL_IP_HEADER: \"proxy_protocol\"\nUSE_PROXY_PROTOCOL: \"yes\"\n</code></pre> <p>Advanced configuration with automatically updated proxy IP lists:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.0.0/16 172.16.0.0/12 10.0.0.0/8\"\nREAL_IP_HEADER: \"X-Real-IP\"\nREAL_IP_RECURSIVE: \"yes\"\nREAL_IP_FROM_URLS: \"https://example.com/proxy-ips.txt file:///etc/bunkerweb/custom-proxies.txt\"\n</code></pre> <p>Configuration for a website behind a CDN:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.0.0/16 172.16.0.0/12 10.0.0.0/8\"\nREAL_IP_FROM_URLS: \"https://cdn-provider.com/ip-ranges.txt\"\nREAL_IP_HEADER: \"CF-Connecting-IP\"  # Example for Cloudflare\nREAL_IP_RECURSIVE: \"no\"  # Not needed with single IP headers\n</code></pre> <p>Configuration for a website behind Cloudflare:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"\" # We only trust Cloudflare IPs\nREAL_IP_FROM_URLS: \"https://www.cloudflare.com/ips-v4/ https://www.cloudflare.com/ips-v6/\" # Download Cloudflare IPs automatically\nREAL_IP_HEADER: \"CF-Connecting-IP\"  # Cloudflare header for client IP\nREAL_IP_RECURSIVE: \"yes\"\n</code></pre>"},{"location":"features/#redirect","title":"Redirect","text":"<p>STREAM support </p> <p>The Redirect plugin provides simple and efficient HTTP redirection capabilities for your BunkerWeb-protected websites. This feature enables you to easily redirect visitors from one URL to another, supporting both full-domain redirects, specific path redirects and path-preserving redirections.</p> <p>How it works:</p> <ol> <li>When a visitor accesses your website, BunkerWeb verifies whether a redirection is configured.</li> <li>If enabled, BunkerWeb redirects the visitor to the specified destination URL.</li> <li>You can configure whether to preserve the original request path (automatically appending it to the destination URL) or redirect to the exact destination URL.</li> <li>The HTTP status code used for the redirection can be customized between permanent (301) and temporary (302) redirects.</li> <li>This functionality is ideal for domain migrations, establishing canonical domains, or redirecting deprecated URLs.</li> </ol>"},{"location":"features/#how-to-use_24","title":"How to Use","text":"<p>Follow these steps to configure and use the Redirect feature:</p> <ol> <li>Set the source path: Configure the path to redirect from using the <code>REDIRECT_FROM</code> setting (e.g. <code>/</code>, <code>/old-page</code>).</li> <li>Set the destination URL: Configure the target URL where visitors should be redirected using the <code>REDIRECT_TO</code> setting.</li> <li>Choose redirection type: Decide whether to preserve the original request path with the <code>REDIRECT_TO_REQUEST_URI</code> setting.</li> <li>Select status code: Set the appropriate HTTP status code with the <code>REDIRECT_TO_STATUS_CODE</code> setting to indicate permanent or temporary redirection.</li> <li>Let BunkerWeb handle the rest: Once configured, all requests to the site will be automatically redirected based on your settings.</li> </ol>"},{"location":"features/#configuration-settings_25","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>REDIRECT_FROM</code> <code>/</code> multisite yes Path to redirect from: The path that will be redirected. <code>REDIRECT_TO</code> multisite yes Destination URL: The target URL where visitors will be redirected. Leave empty to disable redirection. <code>REDIRECT_TO_REQUEST_URI</code> <code>no</code> multisite yes Preserve Path: When set to <code>yes</code>, appends the original request URI to the destination URL. <code>REDIRECT_TO_STATUS_CODE</code> <code>301</code> multisite yes HTTP Status Code: The HTTP status code to use for redirection. Options: <code>301</code> (permanent) or <code>302</code> (temporary). <p>Choosing the Right Status Code</p> <ul> <li>Use <code>301</code> (Moved Permanently) when the redirect is permanent, such as for domain migrations or establishing canonical URLs. This helps search engines update their indexes.</li> <li>Use <code>302</code> (Found/Temporary Redirect) when the redirect is temporary or if you may want to reuse the original URL in the future.</li> </ul> <p>Path Preservation</p> <p>When <code>REDIRECT_TO_REQUEST_URI</code> is set to <code>yes</code>, BunkerWeb preserves the original request path. For example, if a user visits <code>https://old-domain.com/blog/post-1</code> and you've set up a redirect to <code>https://new-domain.com</code>, they'll be redirected to <code>https://new-domain.com/blog/post-1</code>.</p>"},{"location":"features/#example-configurations_26","title":"Example Configurations","text":"Multiple Paths RedirectSimple Domain RedirectPath-Preserving RedirectTemporary RedirectSubdomain Consolidation <p>A configuration that redirects multiple paths to different destinations:</p> <pre><code># Redirect /blog to a new blog domain\nREDIRECT_FROM: \"/blog/\"\nREDIRECT_TO: \"https://blog.example.com/\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n\n# Redirect /shop to another domain\nREDIRECT_FROM_2: \"/shop/\"\nREDIRECT_TO_2: \"https://shop.example.com/\"\nREDIRECT_TO_REQUEST_URI_2: \"no\"\nREDIRECT_TO_STATUS_CODE_2: \"301\"\n\n# Redirect the rest of the site\nREDIRECT_FROM_3: \"/\"\nREDIRECT_TO_3: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI_3: \"no\"\nREDIRECT_TO_STATUS_CODE_3: \"301\"\n</code></pre> <p>A configuration that redirects all visitors to a new domain:</p> <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> <p>A configuration that redirects visitors to a new domain while preserving the requested path:</p> <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> <p>A configuration for a temporary redirect to a maintenance site:</p> <pre><code>REDIRECT_TO: \"https://maintenance.example.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"302\"\n</code></pre> <p>A configuration to redirect a subdomain to a specific path on the main domain:</p> <pre><code>REDIRECT_TO: \"https://example.com/support\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre>"},{"location":"features/#redis","title":"Redis","text":"<p>STREAM support </p> <p>The Redis plugin integrates Redis or Valkey into BunkerWeb for caching and fast data retrieval. This feature is essential for deploying BunkerWeb in high-availability environments where session data, metrics, and other shared information must be accessible across multiple nodes.</p> <p>How it works:</p> <ol> <li>When enabled, BunkerWeb establishes a connection to your configured Redis or Valkey server.</li> <li>Critical data such as session information, metrics, and security-related data are stored in Redis/Valkey.</li> <li>Multiple BunkerWeb instances can share this data, enabling seamless clustering and load balancing.</li> <li>The plugin supports various Redis/Valkey deployment options, including standalone servers, password authentication, SSL/TLS encryption, and Redis Sentinel for high availability.</li> <li>Automatic reconnection and configurable timeouts ensure robustness in production environments.</li> </ol>"},{"location":"features/#how-to-use_25","title":"How to Use","text":"<p>Follow these steps to configure and use the Redis plugin:</p> <ol> <li>Enable the feature: Set the <code>USE_REDIS</code> setting to <code>yes</code> to enable Redis/Valkey integration.</li> <li>Configure connection details: Specify your Redis/Valkey server's hostname/IP address and port.</li> <li>Set security options: Configure authentication credentials if your Redis/Valkey server requires them.</li> <li>Configure advanced options: Set the database selection, SSL options, and timeouts as needed.</li> <li>For high availability, configure Sentinel settings if you're using Redis Sentinel.</li> </ol>"},{"location":"features/#configuration-settings_26","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_REDIS</code> <code>no</code> global no Enable Redis: Set to <code>yes</code> to enable Redis/Valkey integration for cluster mode. <code>REDIS_HOST</code> global no Redis/Valkey Server: IP address or hostname of the Redis/Valkey server. <code>REDIS_PORT</code> <code>6379</code> global no Redis/Valkey Port: Port number of the Redis/Valkey server. <code>REDIS_DATABASE</code> <code>0</code> global no Redis/Valkey Database: Database number to use on the Redis/Valkey server (0-15). <code>REDIS_SSL</code> <code>no</code> global no Redis/Valkey SSL: Set to <code>yes</code> to enable SSL/TLS encryption for the Redis/Valkey connection. <code>REDIS_SSL_VERIFY</code> <code>yes</code> global no Redis/Valkey SSL Verify: Set to <code>yes</code> to verify the Redis/Valkey server's SSL certificate. <code>REDIS_TIMEOUT</code> <code>5</code> global no Redis/Valkey Timeout: Connection timeout in seconds for Redis/Valkey operations. <code>REDIS_USERNAME</code> global no Redis/Valkey Username: Username for Redis/Valkey authentication (Redis 6.0+). <code>REDIS_PASSWORD</code> global no Redis/Valkey Password: Password for Redis/Valkey authentication. <code>REDIS_SENTINEL_HOSTS</code> global no Sentinel Hosts: Space-separated list of Redis Sentinel hosts (hostname:port). <code>REDIS_SENTINEL_USERNAME</code> global no Sentinel Username: Username for Redis Sentinel authentication. <code>REDIS_SENTINEL_PASSWORD</code> global no Sentinel Password: Password for Redis Sentinel authentication. <code>REDIS_SENTINEL_MASTER</code> <code>mymaster</code> global no Sentinel Master: Name of the master in Redis Sentinel configuration. <code>REDIS_KEEPALIVE_IDLE</code> <code>300</code> global no Keepalive Idle: Time (in seconds) between TCP keepalive probes for idle connections. <code>REDIS_KEEPALIVE_POOL</code> <code>3</code> global no Keepalive Pool: Maximum number of Redis/Valkey connections kept in the pool. <p>High Availability with Redis Sentinel</p> <p>For production environments requiring high availability, configure Redis Sentinel settings. This provides automatic failover capabilities if the primary Redis server becomes unavailable.</p> <p>Security Considerations</p> <p>When using Redis in production:</p> <ul> <li>Always set strong passwords for both Redis and Sentinel authentication</li> <li>Consider enabling SSL/TLS encryption for Redis connections</li> <li>Ensure your Redis server is not exposed to the public internet</li> <li>Restrict access to the Redis port using firewalls or network segmentation</li> </ul> <p>Cluster Requirements</p> <p>When deploying BunkerWeb in a cluster:</p> <ul> <li>All BunkerWeb instances should connect to the same Redis or Valkey server or Sentinel cluster</li> <li>Configure the same database number across all instances</li> <li>Ensure network connectivity between all BunkerWeb instances and Redis/Valkey servers</li> </ul>"},{"location":"features/#example-configurations_27","title":"Example Configurations","text":"Basic ConfigurationSecure ConfigurationRedis Sentinel ConfigurationAdvanced Tuning <p>A simple configuration for connecting to a Redis or Valkey server on the local machine:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"localhost\"\nREDIS_PORT: \"6379\"\n</code></pre> <p>Configuration with password authentication and SSL enabled:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_SSL: \"yes\"\nREDIS_SSL_VERIFY: \"yes\"\n</code></pre> <p>Configuration for high availability using Redis Sentinel:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_SENTINEL_HOSTS: \"sentinel1:26379 sentinel2:26379 sentinel3:26379\"\nREDIS_SENTINEL_MASTER: \"mymaster\"\nREDIS_SENTINEL_PASSWORD: \"sentinel-password\"\nREDIS_PASSWORD: \"redis-password\"\n</code></pre> <p>Configuration with advanced connection parameters for performance optimization:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_DATABASE: \"3\"\nREDIS_TIMEOUT: \"3\"\nREDIS_KEEPALIVE_IDLE: \"60\"\nREDIS_KEEPALIVE_POOL: \"5\"\n</code></pre>"},{"location":"features/#redis-best-practices","title":"Redis Best Practices","text":"<p>When using Redis or Valkey with BunkerWeb, consider these best practices to ensure optimal performance, security, and reliability:</p>"},{"location":"features/#memory-management","title":"Memory Management","text":"<ul> <li>Monitor memory usage: Configure Redis with appropriate <code>maxmemory</code> settings to prevent out-of-memory errors</li> <li>Set an eviction policy: Use <code>maxmemory-policy</code> (e.g., <code>volatile-lru</code> or <code>allkeys-lru</code>) appropriate for your use case</li> <li>Avoid large keys: Ensure individual Redis keys are kept to a reasonable size to prevent performance degradation</li> </ul>"},{"location":"features/#data-persistence","title":"Data Persistence","text":"<ul> <li>Enable RDB snapshots: Configure periodic snapshots for data persistence without significant performance impact</li> <li>Consider AOF: For critical data, enable AOF (Append-Only File) persistence with an appropriate fsync policy</li> <li>Backup strategy: Implement regular Redis backups as part of your disaster recovery plan</li> </ul>"},{"location":"features/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Connection pooling: BunkerWeb already implements this, but ensure other applications follow this practice</li> <li>Pipelining: When possible, use pipelining for bulk operations to reduce network overhead</li> <li>Avoid expensive operations: Be cautious with commands like KEYS in production environments</li> <li>Benchmark your workload: Use redis-benchmark to test your specific workload patterns</li> </ul>"},{"location":"features/#further-resources","title":"Further Resources","text":"<ul> <li>Redis Documentation</li> <li>Redis Security Guide</li> <li>Redis High Availability</li> <li>Redis Persistence</li> </ul>"},{"location":"features/#reporting-pro","title":"Reporting  (PRO)","text":"<p>STREAM support </p> <p>Regular reporting of important data from BunkerWeb (global, attacks, bans, requests, reasons, AS...). Monitoring pro plugin needed to work.</p> Setting Default Context Multiple Description <code>USE_REPORTING_SMTP</code> <code>no</code> global no Enable sending the report via email. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global no Enable sending the report via webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global no The frequency at which reports are sent. <code>REPORTING_WEBHOOK_URLS</code> global no List of webhook URLs to receive the report in Markdown (separated by spaces). <code>REPORTING_SMTP_EMAILS</code> global no List of email addresses to receive the report in HTML format (separated by spaces). <code>REPORTING_SMTP_HOST</code> global no The host server used for SMTP sending. <code>REPORTING_SMTP_PORT</code> <code>465</code> global no The port used for SMTP. Please note that there are different standards depending on the type of connection (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global no The email address used as the sender. Note that 2FA must be disabled for this email address. <code>REPORTING_SMTP_FROM_USER</code> global no The user authentication value for sending via the from email address. <code>REPORTING_SMTP_FROM_PASSWORD</code> global no The password authentication value for sending via the from email address. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global no Determine whether or not to use a secure connection for SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global no The subject line of the email."},{"location":"features/#reverse-proxy","title":"Reverse proxy","text":"<p>STREAM support </p> <p>The Reverse Proxy plugin provides seamless proxying capabilities for BunkerWeb, allowing you to route requests to backend servers and services. This feature enables BunkerWeb to act as a secure frontend for your applications while providing additional benefits such as SSL termination and security filtering.</p> <p>How it works:</p> <ol> <li>When a client sends a request to BunkerWeb, the Reverse Proxy plugin forwards the request to your configured backend server.</li> <li>BunkerWeb adds security headers, applies WAF rules, and performs other security checks before passing requests to your application.</li> <li>The backend server processes the request and returns a response to BunkerWeb.</li> <li>BunkerWeb applies additional security measures to the response before sending it back to the client.</li> <li>The plugin supports both HTTP and TCP/UDP stream proxying, enabling a wide range of applications, including WebSockets and other non-HTTP protocols.</li> </ol>"},{"location":"features/#how-to-use_26","title":"How to Use","text":"<p>Follow these steps to configure and use the Reverse Proxy feature:</p> <ol> <li>Enable the feature: Set the <code>USE_REVERSE_PROXY</code> setting to <code>yes</code> to enable reverse proxy functionality.</li> <li>Configure your backend servers: Specify the upstream servers using the <code>REVERSE_PROXY_HOST</code> setting.</li> <li>Adjust proxy settings: Fine-tune behavior with optional settings for timeouts, buffer sizes, and other parameters.</li> <li>Configure protocol-specific options: For WebSockets or special HTTP requirements, adjust the corresponding settings.</li> <li>Set up caching (optional): Enable and configure proxy caching to improve performance for frequently accessed content.</li> </ol>"},{"location":"features/#configuration-guide_2","title":"Configuration Guide","text":"Basic ConfigurationConnection SettingsSSL/TLS ConfigurationProtocol SupportHeader ManagementAuthenticationAdvanced ConfigurationCaching Configuration <p>Core Settings</p> <p>The essential configuration settings enable and control the basic functionality of the reverse proxy feature.</p> <p>Benefits of Reverse Proxy</p> <ul> <li>Security Enhancement: All traffic passes through BunkerWeb's security layers before reaching your applications</li> <li>SSL Termination: Manage SSL/TLS certificates centrally while backend services can use unencrypted connections</li> <li>Protocol Handling: Support for HTTP, HTTPS, WebSockets, and other protocols</li> <li>Error Interception: Customize error pages for a consistent user experience</li> </ul> Setting Default Context Multiple Description <code>USE_REVERSE_PROXY</code> <code>no</code> multisite no Enable Reverse Proxy: Set to <code>yes</code> to enable reverse proxy functionality. <code>REVERSE_PROXY_HOST</code> multisite yes Backend Host: Full URL of the proxied resource (proxy_pass). <code>REVERSE_PROXY_URL</code> <code>/</code> multisite yes Location URL: Path that will be proxied to the backend server. <code>REVERSE_PROXY_BUFFERING</code> <code>yes</code> multisite yes Response Buffering: Enable or disable buffering of responses from proxied resource. <code>REVERSE_PROXY_KEEPALIVE</code> <code>no</code> multisite yes Keep-Alive: Enable or disable keepalive connections with the proxied resource. <code>REVERSE_PROXY_CUSTOM_HOST</code> multisite no Custom Host: Override Host header sent to upstream server. <code>REVERSE_PROXY_INTERCEPT_ERRORS</code> <code>yes</code> multisite no Intercept Errors: Whether to intercept and rewrite error responses from the backend. <p>Best Practices</p> <ul> <li>Always specify the full URL in <code>REVERSE_PROXY_HOST</code> including the protocol (http:// or https://)</li> <li>Use <code>REVERSE_PROXY_INTERCEPT_ERRORS</code> to provide consistent error pages across all your services</li> <li>When configuring multiple backends, use the numbered suffix format (e.g., <code>REVERSE_PROXY_HOST_2</code>, <code>REVERSE_PROXY_URL_2</code>)</li> </ul> <p>Connection and Timeout Configuration</p> <p>These settings control connection behavior, buffering, and timeout values for the proxied connections.</p> <p>Benefits</p> <ul> <li>Optimized Performance: Adjust buffer sizes and connection settings based on your application needs</li> <li>Resource Management: Control memory usage through appropriate buffer configurations</li> <li>Reliability: Configure appropriate timeouts to handle slow connections or backend issues</li> </ul> Setting Default Context Multiple Description <code>REVERSE_PROXY_CONNECT_TIMEOUT</code> <code>60s</code> multisite yes Connect Timeout: Maximum time to establish a connection to the backend server. <code>REVERSE_PROXY_READ_TIMEOUT</code> <code>60s</code> multisite yes Read Timeout: Maximum time between transmissions of two successive packets from the backend server. <code>REVERSE_PROXY_SEND_TIMEOUT</code> <code>60s</code> multisite yes Send Timeout: Maximum time between transmissions of two successive packets to the backend server. <code>PROXY_BUFFERS</code> multisite no Buffers: Number and size of buffers for reading the response from the backend server. <code>PROXY_BUFFER_SIZE</code> multisite no Buffer Size: Size of the buffer for reading the first part of the response from the backend server. <code>PROXY_BUSY_BUFFERS_SIZE</code> multisite no Busy Buffers Size: Size of buffers that can be busy sending response to the client. <p>Timeout Considerations</p> <ul> <li>Setting timeouts too low may cause legitimate but slow connections to be terminated</li> <li>Setting timeouts too high may leave connections open unnecessarily, potentially exhausting resources</li> <li>For WebSocket applications, increase the read and send timeouts significantly (300s or more recommended)</li> </ul> <p>SSL/TLS Settings for Backend Connections</p> <p>These settings control how BunkerWeb establishes secure connections to backend servers.</p> <p>Benefits</p> <ul> <li>End-to-End Encryption: Maintain encrypted connections from client to backend</li> <li>Certificate Validation: Control how backend server certificates are validated</li> <li>SNI Support: Specify Server Name Indication for backends that host multiple sites</li> </ul> Setting Default Context Multiple Description <code>REVERSE_PROXY_SSL_SNI</code> <code>no</code> multisite no SSL SNI: Enable or disable sending SNI (Server Name Indication) to upstream. <code>REVERSE_PROXY_SSL_SNI_NAME</code> multisite no SSL SNI Name: Sets the SNI hostname to send to upstream when SSL SNI is enabled. <p>SNI Explained</p> <p>Server Name Indication (SNI) is a TLS extension that allows a client to specify the hostname it is attempting to connect to during the handshake process. This enables servers to present multiple certificates on the same IP address and port, allowing multiple secure (HTTPS) websites to be served from a single IP address without requiring all those sites to use the same certificate.</p> <p>Protocol-Specific Configuration</p> <p>Configure special protocol handling, particularly for WebSockets and other non-HTTP protocols.</p> <p>Benefits</p> <ul> <li>Protocol Flexibility: Support for WebSockets enables real-time applications</li> <li>Modern Web Applications: Enable interactive features requiring bidirectional communication</li> </ul> Setting Default Context Multiple Description <code>REVERSE_PROXY_WS</code> <code>no</code> multisite yes WebSocket Support: Enable WebSocket protocol on the resource. <p>WebSocket Configuration</p> <ul> <li>When enabling WebSockets with <code>REVERSE_PROXY_WS: \"yes\"</code>, consider increasing timeout values</li> <li>WebSocket connections stay open longer than typical HTTP connections</li> <li>For WebSocket applications, a recommended configuration is:   <pre><code>REVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\n</code></pre></li> </ul> <p>HTTP Header Configuration</p> <p>Control which headers are sent to backend servers and to clients, allowing you to add, modify, or preserve HTTP headers.</p> <p>Benefits</p> <ul> <li>Information Control: Precisely manage what information is shared between clients and backends</li> <li>Security Enhancement: Add security-related headers or remove headers that might leak sensitive information</li> <li>Integration Support: Provide necessary headers for authentication and proper backend operation</li> </ul> Setting Default Context Multiple Description <code>REVERSE_PROXY_HEADERS</code> multisite yes Custom Headers: HTTP headers to send to backend separated with semicolons. <code>REVERSE_PROXY_HIDE_HEADERS</code> <code>Upgrade</code> multisite yes Hide Headers: HTTP headers to hide from clients when received from the backend. <code>REVERSE_PROXY_HEADERS_CLIENT</code> multisite yes Client Headers: HTTP headers to send to client separated with semicolons. <code>REVERSE_PROXY_UNDERSCORES_IN_HEADERS</code> <code>no</code> multisite no Underscores in Headers: Enable or disable the <code>underscores_in_headers</code> directive. <p>Security Considerations</p> <p>When using the reverse proxy feature, be cautious about what headers you forward to your backend applications. Certain headers might expose sensitive information about your infrastructure or bypass security controls.</p> <p>Header Format Examples</p> <p>Custom headers to backend servers: <pre><code>REVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n</code></pre></p> <p>Custom headers to clients: <pre><code>REVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre></p> <p>External Authentication Configuration</p> <p>Integrate with external authentication systems to centralize authorization logic across your applications.</p> <p>Benefits</p> <ul> <li>Centralized Authentication: Implement a single authentication point for multiple applications</li> <li>Consistent Security: Apply uniform authentication policies across different services</li> <li>Enhanced Control: Forward authentication details to backend applications via headers or variables</li> </ul> Setting Default Context Multiple Description <code>REVERSE_PROXY_AUTH_REQUEST</code> multisite yes Auth Request: Enable authentication using an external provider. <code>REVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL</code> multisite yes Sign-in URL: Redirect clients to sign-in URL when authentication fails. <code>REVERSE_PROXY_AUTH_REQUEST_SET</code> multisite yes Auth Request Set: Variables to set from the authentication provider. <p>Authentication Integration</p> <ul> <li>The auth request feature enables implementation of centralized authentication microservices</li> <li>Your authentication service should return a 200 status code for successful authentication or 401/403 for failures</li> <li>Use the auth_request_set directive to extract and forward information from the authentication service</li> </ul> <p>Additional Configuration Options</p> <p>These settings provide further customization of the reverse proxy behavior for specialized scenarios.</p> <p>Benefits</p> <ul> <li>Customization: Include additional configuration snippets for complex requirements</li> <li>Performance Optimization: Fine-tune request handling for specific use cases</li> <li>Flexibility: Adapt to unique application requirements with specialized configurations</li> </ul> Setting Default Context Multiple Description <code>REVERSE_PROXY_INCLUDES</code> multisite yes Additional Configurations: Include additional configs in location block. <code>REVERSE_PROXY_PASS_REQUEST_BODY</code> <code>yes</code> multisite yes Pass Request Body: Enable or disable passing the request body. <p>Security Considerations</p> <p>Be careful when including custom configuration snippets as they may override BunkerWeb's security settings or introduce vulnerabilities if not properly configured.</p> <p>Response Caching Settings</p> <p>Improve performance by caching responses from backend servers, reducing load and improving response times.</p> <p>Benefits</p> <ul> <li>Performance: Reduce load on backend servers by serving cached content</li> <li>Reduced Latency: Faster response times for frequently requested content</li> <li>Bandwidth Savings: Minimize internal network traffic by caching responses</li> <li>Customization: Configure exactly what, when, and how content is cached</li> </ul> Setting Default Context Multiple Description <code>USE_PROXY_CACHE</code> <code>no</code> multisite no Enable Caching: Set to <code>yes</code> to enable caching of backend responses. <code>PROXY_CACHE_PATH_LEVELS</code> <code>1:2</code> global no Cache Path Levels: How to structure the cache directory hierarchy. <code>PROXY_CACHE_PATH_ZONE_SIZE</code> <code>10m</code> global no Cache Zone Size: Size of the shared memory zone used for cache metadata. <code>PROXY_CACHE_PATH_PARAMS</code> <code>max_size=100m</code> global no Cache Path Parameters: Additional parameters for the cache path. <code>PROXY_CACHE_METHODS</code> <code>GET HEAD</code> multisite no Cache Methods: HTTP methods that can be cached. <code>PROXY_CACHE_MIN_USES</code> <code>2</code> multisite no Cache Min Uses: Minimum number of requests before a response is cached. <code>PROXY_CACHE_KEY</code> <code>$scheme$host$request_uri</code> multisite no Cache Key: The key used to uniquely identify a cached response. <code>PROXY_CACHE_VALID</code> <code>200=24h 301=1h 302=24h</code> multisite no Cache Valid: How long to cache specific response codes. <code>PROXY_NO_CACHE</code> <code>$http_pragma $http_authorization</code> multisite no No Cache: Conditions for not caching responses even if normally cacheable. <code>PROXY_CACHE_BYPASS</code> <code>0</code> multisite no Cache Bypass: Conditions under which to bypass the cache. <p>Caching Best Practices</p> <ul> <li>Cache only content that doesn't change frequently or isn't personalized</li> <li>Use appropriate cache durations based on content type (static assets can be cached longer)</li> <li>Configure <code>PROXY_NO_CACHE</code> to avoid caching sensitive or personalized content</li> <li>Monitor cache hit rates and adjust settings accordingly</li> </ul> <p>Docker Compose Users - NGINX Variables</p> <p>When using Docker Compose with NGINX variables in your configurations, you must escape the dollar sign (<code>$</code>) by using double dollar signs (<code>$$</code>). This applies to all settings that contain NGINX variables like <code>$remote_addr</code>, <code>$proxy_add_x_forwarded_for</code>, etc.</p> <p>Without this escaping, Docker Compose will try to substitute these variables with environment variables, which typically don't exist, resulting in empty values in your NGINX configuration.</p>"},{"location":"features/#example-configurations_28","title":"Example Configurations","text":"Basic HTTP ProxyWebSocket ApplicationMultiple LocationsCaching ConfigurationAdvanced Header ManagementAuthentication Integration <p>A simple configuration for proxying HTTP requests to a backend application server:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"60s\"\nREVERSE_PROXY_READ_TIMEOUT: \"60s\"\n</code></pre> <p>Configuration optimized for a WebSocket application with longer timeouts:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://websocket-app:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\n</code></pre> <p>Configuration for routing different paths to different backend services:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\n\n# API Backend\nREVERSE_PROXY_HOST: \"http://api-server:8080\"\nREVERSE_PROXY_URL: \"/api/\"\n\n# Admin Backend\nREVERSE_PROXY_HOST_2: \"http://admin-server:8080\"\nREVERSE_PROXY_URL_2: \"/admin/\"\n\n# Frontend App\nREVERSE_PROXY_HOST_3: \"http://frontend:3000\"\nREVERSE_PROXY_URL_3: \"/\"\n</code></pre> <p>Configuration with proxy caching enabled for better performance:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nUSE_PROXY_CACHE: \"yes\"\nPROXY_CACHE_VALID: \"200=24h 301=1h 302=24h\"\nPROXY_CACHE_METHODS: \"GET HEAD\"\nPROXY_NO_CACHE: \"$http_authorization\"\n</code></pre> <p>Configuration with custom header manipulation:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Custom headers to backend\nREVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n\n# Custom headers to client\nREVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre> <p>Configuration with external authentication:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Authentication configuration\nREVERSE_PROXY_AUTH_REQUEST: \"/auth\"\nREVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL: \"https://login.example.com\"\nREVERSE_PROXY_AUTH_REQUEST_SET: \"$auth_user $upstream_http_x_user;$auth_role $upstream_http_x_role\"\n\n# Auth service backend\nREVERSE_PROXY_HOST_2: \"http://auth-service:8080\"\nREVERSE_PROXY_URL_2: \"/auth\"\n</code></pre>"},{"location":"features/#reverse-scan","title":"Reverse scan","text":"<p>STREAM support </p> <p>The Reverse Scan plugin robustly protects against proxy bypass attempts by scanning clients' ports to detect whether they are running proxy servers or other network services. This feature helps identify and block potential threats from clients that may be attempting to hide their true identity or origin, thereby enhancing your website's security posture.</p> <p>How it works:</p> <ol> <li>When a client connects to your server, BunkerWeb attempts to scan specific ports on the client's IP address.</li> <li>The plugin checks if any common proxy ports (such as 80, 443, 8080, etc.) are open on the client side.</li> <li>If open ports are detected, indicating that the client may be running a proxy server, the connection is denied.</li> <li>This adds an extra layer of security against automated tools, bots, and malicious users attempting to mask their identity.</li> </ol> <p>Key benefits</p> <ol> <li>Enhanced Security: Identifies clients potentially running proxy servers that could be used for malicious purposes.</li> <li>Proxy Detection: Helps detect and block clients attempting to hide their true identity.</li> <li>Configurable Settings: Customize which ports to scan based on your specific security requirements.</li> <li>Performance Optimized: Intelligent scanning with configurable timeouts to minimize impact on legitimate users.</li> <li>Seamless Integration: Works transparently with your existing security layers.</li> </ol>"},{"location":"features/#how-to-use_27","title":"How to Use","text":"<p>Follow these steps to configure and use the Reverse Scan feature:</p> <ol> <li>Enable the feature: Set the <code>USE_REVERSE_SCAN</code> setting to <code>yes</code> to enable client port scanning.</li> <li>Configure ports to scan: Customize the <code>REVERSE_SCAN_PORTS</code> setting to specify which client ports should be checked.</li> <li>Set scan timeout: Adjust the <code>REVERSE_SCAN_TIMEOUT</code> to balance thorough scanning with performance.</li> <li>Monitor scan activity: Check logs and the web UI to review scan results and potential security incidents.</li> </ol>"},{"location":"features/#configuration-settings_27","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_REVERSE_SCAN</code> <code>no</code> multisite no Enable Reverse Scan: Set to <code>yes</code> to enable scanning of clients ports. <code>REVERSE_SCAN_PORTS</code> <code>22 80 443 3128 8000 8080</code> multisite no Ports to Scan: Space-separated list of ports to check on the client side. <code>REVERSE_SCAN_TIMEOUT</code> <code>500</code> multisite no Scan Timeout: Maximum time in milliseconds allowed for scanning a port. <p>Performance Considerations</p> <p>Scanning multiple ports can add latency to client connections. Use an appropriate timeout value and limit the number of ports scanned to maintain good performance.</p> <p>Common Proxy Ports</p> <p>The default configuration includes common ports used by proxy servers (80, 443, 8080, 3128) and SSH (22). You may want to customize this list based on your threat model.</p>"},{"location":"features/#example-configurations_29","title":"Example Configurations","text":"Basic ConfigurationComprehensive ScanningPerformance-Optimized ConfigurationHigh-Security Configuration <p>A simple configuration for enabling client port scanning:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"500\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> <p>A more thorough configuration that checks additional ports:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1000\"\nREVERSE_SCAN_PORTS: \"22 80 443 3128 8080 8000 8888 1080 3333 8081\"\n</code></pre> <p>Configuration tuned for better performance by checking fewer ports with lower timeout:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"250\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> <p>Configuration focused on maximum security with extended scanning:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1500\"\nREVERSE_SCAN_PORTS: \"22 25 80 443 1080 3128 3333 4444 5555 6588 6666 7777 8000 8080 8081 8800 8888 9999\"\n</code></pre>"},{"location":"features/#robotstxt","title":"Robots.txt","text":"<p>STREAM support </p> <p>The Robots.txt plugin manages the robots.txt file for your website. This file tells web crawlers and robots which parts of your site they can or cannot access.</p> <p>How it works:</p> <p>When enabled, BunkerWeb dynamically generates the <code>/robots.txt</code> file at the root of your website. The rules within this file are aggregated from multiple sources in the following order:</p> <ol> <li>DarkVisitors API: If <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> is provided, rules are fetched from the DarkVisitors API, allowing dynamic blocking of malicious bots and AI crawlers based on configured agent types and disallowed user agents.</li> <li>Community Lists: Rules from pre-defined, community-maintained <code>robots.txt</code> lists (specified by <code>ROBOTSTXT_COMMUNITY_LISTS</code>) are included.</li> <li>Custom URLs: Rules are fetched from user-provided URLs (specified by <code>ROBOTSTXT_URLS</code>).</li> <li>Manual Rules: Rules defined directly via <code>ROBOTSTXT_RULE</code> environment variables are added.</li> </ol> <p>All rules from these sources are combined. After aggregation, <code>ROBOTSTXT_IGNORE_RULE</code> are applied to filter out any unwanted rules using PCRE regex patterns. Finally, if no rules remain after this entire process, a default <code>User-agent: *</code> and <code>Disallow: /</code> rule is automatically applied to ensure a basic level of protection. Optional sitemap URLs (specified by <code>ROBOTSTXT_SITEMAP</code>) are also included in the final <code>robots.txt</code> output.</p>"},{"location":"features/#dynamic-bot-circumvention-with-darkvisitors-api","title":"Dynamic Bot Circumvention with DarkVisitors API","text":"<p>DarkVisitors is a service that provides a dynamic <code>robots.txt</code> file to help block known malicious bots and AI crawlers. By integrating with DarkVisitors, BunkerWeb can automatically fetch and serve an up-to-date <code>robots.txt</code> that helps protect your site from unwanted automated traffic.</p> <p>To enable this, you need to sign up at darkvisitors.com and obtain a bearer token.</p>"},{"location":"features/#how-to-use_28","title":"How to Use","text":"<ol> <li>Enable the feature: Set the <code>USE_ROBOTSTXT</code> setting to <code>yes</code>.</li> <li>Configure rules: Choose one or more methods to define your <code>robots.txt</code> rules:<ul> <li>DarkVisitors API: Provide <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> and optionally <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> and <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code>.</li> <li>Community Lists: Specify <code>ROBOTSTXT_COMMUNITY_LISTS</code> (space-separated IDs).</li> <li>Custom URLs: Provide <code>ROBOTSTXT_URLS</code> (space-separated URLs).</li> <li>Manual Rules: Use <code>ROBOTSTXT_RULE</code> for individual rules (multiple rules can be specified with <code>ROBOTSTXT_RULE_N</code>).</li> </ul> </li> <li>Filter rules (optional): Use <code>ROBOTSTXT_IGNORE_RULE_N</code> to exclude specific rules by regex pattern.</li> <li>Add sitemaps (optional): Use <code>ROBOTSTXT_SITEMAP_N</code> for sitemap URLs.</li> <li>Obtain the generated robots.txt file: Once BunkerWeb is running with the above settings, you can access the dynamically generated <code>robots.txt</code> file by making an HTTP GET request to <code>http(s)://your-domain.com/robots.txt</code>.</li> </ol>"},{"location":"features/#configuration-settings_28","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_ROBOTSTXT</code> <code>no</code> multisite No Enables or disables the <code>robots.txt</code> feature. <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> multisite No Bearer token for the DarkVisitors API. <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> multisite No Comma-separated list of agent types (e.g., <code>AI Data Scraper</code>) to include from DarkVisitors. <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code> <code>/</code> multisite No A string specifying which URLs are disallowed. This value will be sent as the disallow field when contacting the DarkVisitors API. <code>ROBOTSTXT_COMMUNITY_LISTS</code> multisite No Space-separated list of community-maintained rule set IDs to include. <code>ROBOTSTXT_URLS</code> multisite No Space-separated list of URLs to fetch additional <code>robots.txt</code> rules from. Supports <code>file://</code> and basic auth (<code>http://user:pass@url</code>). <code>ROBOTSTXT_RULE</code> multisite Yes A single rule for <code>robots.txt</code>. <code>ROBOTSTXT_HEADER</code> multisite Yes Header for <code>robots.txt</code> file (before rules). Can be Base64 encoded. <code>ROBOTSTXT_FOOTER</code> multisite Yes Footer for <code>robots.txt</code> file (after rules). Can be Base64 encoded. <code>ROBOTSTXT_IGNORE_RULE</code> multisite Yes A single PCRE regex pattern to ignore rules. <code>ROBOTSTXT_SITEMAP</code> multisite Yes A single sitemap URL."},{"location":"features/#example-configurations_30","title":"Example Configurations","text":"<p>Basic Manual Rules</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Using Dynamic Sources (DarkVisitors &amp; Community List)</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"your-darkvisitors-token-here\"\nROBOTSTXT_DARKVISITORS_AGENT_TYPES: \"AI Data Scraper\"\nROBOTSTXT_COMMUNITY_LISTS: \"robots-disallowed\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\n</code></pre> <p>Combined Configuration</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"your-darkvisitors-token-here\"\nROBOTSTXT_COMMUNITY_LISTS: \"ai-robots-txt\"\nROBOTSTXT_URLS: \"https://example.com/my-custom-rules.txt\"\nROBOTSTXT_RULE: \"User-agent: MyOwnBot\"\nROBOTSTXT_RULE_1: \"Disallow: /admin\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>With Header and Footer</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_HEADER: \"# This is a custom header\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_FOOTER: \"# This is a custom footer\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>For more information, see the robots.txt documentation.</p>"},{"location":"features/#ssl","title":"SSL","text":"<p>STREAM support </p> <p>The SSL plugin provides robust SSL/TLS encryption capabilities for your BunkerWeb-protected websites. This core component enables secure HTTPS connections by configuring and optimizing cryptographic protocols, ciphers, and related security settings to protect data in transit between clients and your web services.</p> <p>How it works:</p> <ol> <li>When a client initiates an HTTPS connection to your website, BunkerWeb handles the SSL/TLS handshake using your configured settings.</li> <li>The plugin enforces modern encryption protocols and strong cipher suites while disabling known vulnerable options.</li> <li>Optimized SSL session parameters improve connection performance without sacrificing security.</li> <li>Certificate presentation is configured according to best practices to ensure compatibility and security.</li> </ol> <p>Security Benefits</p> <ul> <li>Data Protection: Encrypts data in transit, preventing eavesdropping and man-in-the-middle attacks</li> <li>Authentication: Verifies the identity of your server to clients</li> <li>Integrity: Ensures data hasn't been tampered with during transmission</li> <li>Modern Standards: Configured for compliance with industry best practices and security standards</li> </ul>"},{"location":"features/#how-to-use_29","title":"How to Use","text":"<p>Follow these steps to configure and use the SSL feature:</p> <ol> <li>Configure protocols: Choose which SSL/TLS protocol versions to support using the <code>SSL_PROTOCOLS</code> setting.</li> <li>Select cipher suites: Specify the encryption strength using the <code>SSL_CIPHERS_LEVEL</code> setting or provide custom ciphers with <code>SSL_CIPHERS_CUSTOM</code>.</li> <li>Configure HTTP to HTTPS redirection: Set up automatic redirection using the <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> or <code>REDIRECT_HTTP_TO_HTTPS</code> settings.</li> </ol>"},{"location":"features/#configuration-settings_29","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>REDIRECT_HTTP_TO_HTTPS</code> <code>no</code> multisite no Redirect HTTP to HTTPS: When set to <code>yes</code>, all HTTP requests are redirected to HTTPS. <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> <code>yes</code> multisite no Auto Redirect HTTP to HTTPS: When set to <code>yes</code>, automatically redirects HTTP to HTTPS if HTTPS is detected. <code>SSL_PROTOCOLS</code> <code>TLSv1.2 TLSv1.3</code> multisite no SSL Protocols: Space-separated list of SSL/TLS protocols to support. <code>SSL_CIPHERS_LEVEL</code> <code>modern</code> multisite no SSL Ciphers Level: Preset security level for cipher suites (<code>modern</code>, <code>intermediate</code>, or <code>old</code>). <code>SSL_CIPHERS_CUSTOM</code> multisite no Custom SSL Ciphers: Colon-separated list of cipher suites to use for SSL/TLS connections (overrides level). <p>SSL Labs Testing</p> <p>After configuring your SSL settings, use the Qualys SSL Labs Server Test to verify your configuration and check for potential security issues. A proper BunkerWeb SSL configuration should achieve an A+ rating.</p> <p>Protocol Selection</p> <p>Support for older protocols like SSLv3, TLSv1.0, and TLSv1.1 is intentionally disabled by default due to known vulnerabilities. Only enable these protocols if you absolutely need to support legacy clients and understand the security implications of doing so.</p>"},{"location":"features/#example-configurations_31","title":"Example Configurations","text":"Modern Security (Default)Maximum SecurityLegacy CompatibilityCustom Ciphers <p>The default configuration that provides strong security while maintaining compatibility with modern browsers:</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> <p>Configuration focused on maximum security, potentially with reduced compatibility for older clients:</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre> <p>Configuration with broader compatibility for older clients (use only if necessary):</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"old\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> <p>Configuration using custom cipher specification:</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_CUSTOM: \"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre>"},{"location":"features/#securitytxt","title":"Security.txt","text":"<p>STREAM support </p> <p>The Security.txt plugin implements the Security.txt standard (RFC 9116) for your website. This feature helps security researchers access your security policies and provides a standardized way for them to report security vulnerabilities they discover in your systems.</p> <p>How it works:</p> <ol> <li>When enabled, BunkerWeb creates a <code>/.well-known/security.txt</code> file at the root of your website.</li> <li>This file contains information about your security policies, contacts, and other relevant details.</li> <li>Security researchers and automated tools can easily find this file at the standard location.</li> <li>The content is configured using simple settings that allow you to specify contact information, encryption keys, policies, and acknowledgments.</li> <li>BunkerWeb automatically formats the file in accordance with RFC 9116.</li> </ol>"},{"location":"features/#how-to-use_30","title":"How to Use","text":"<p>Follow these steps to configure and use the Security.txt feature:</p> <ol> <li>Enable the feature: Set the <code>USE_SECURITYTXT</code> setting to <code>yes</code> to enable the security.txt file.</li> <li>Configure contact information: Specify at least one contact method using the <code>SECURITYTXT_CONTACT</code> setting.</li> <li>Set additional information: Configure optional fields like expiration date, encryption, acknowledgments, and policy URLs.</li> <li>Let BunkerWeb handle the rest: Once configured, BunkerWeb will automatically create and serve the security.txt file at the standard location.</li> </ol>"},{"location":"features/#configuration-settings_30","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>USE_SECURITYTXT</code> <code>no</code> multisite no Enable Security.txt: Set to <code>yes</code> to enable the security.txt file. <code>SECURITYTXT_URI</code> <code>/.well-known/security.txt</code> multisite no Security.txt URI: Indicates the URI where the security.txt file will be accessible. <code>SECURITYTXT_CONTACT</code> multisite yes Contact Information: How security researchers can contact you (e.g., <code>mailto:security@example.com</code>). <code>SECURITYTXT_EXPIRES</code> multisite no Expiration Date: When this security.txt file should be considered expired (ISO 8601 format). <code>SECURITYTXT_ENCRYPTION</code> multisite yes Encryption: URL pointing to encryption keys to be used for secure communication. <code>SECURITYTXT_ACKNOWLEDGEMENTS</code> multisite yes Acknowledgements: URL where security researchers are recognized for their reports. <code>SECURITYTXT_POLICY</code> multisite yes Security Policy: URL pointing to the security policy describing how to report vulnerabilities. <code>SECURITYTXT_HIRING</code> multisite yes Security Jobs: URL pointing to security-related job openings. <code>SECURITYTXT_CANONICAL</code> multisite yes Canonical URL: The canonical URI(s) for this security.txt file. <code>SECURITYTXT_PREFERRED_LANG</code> <code>en</code> multisite no Preferred Language: The language(s) used in communications. Specified as an ISO 639-1 language code. <code>SECURITYTXT_CSAF</code> multisite yes CSAF: Link to the provider-metadata.json of your Common Security Advisory Framework provider. <p>Expiration Date Required</p> <p>According to RFC 9116, the <code>Expires</code> field is required. If you don't provide a value for <code>SECURITYTXT_EXPIRES</code>, BunkerWeb automatically sets the expiration date to one year from the current date.</p> <p>Contact Information Is Essential</p> <p>The <code>Contact</code> field is the most important part of the security.txt file. You should provide at least one way for security researchers to contact you. This can be an email address, a web form, a phone number, or any other method that works for your organization.</p> <p>URLs Must Use HTTPS</p> <p>According to RFC 9116, all URLs in the security.txt file (except for <code>mailto:</code> and <code>tel:</code> links) MUST use HTTPS. Non-HTTPS URLs will automatically be converted to HTTPS by BunkerWeb to ensure compliance with the standard.</p>"},{"location":"features/#example-configurations_32","title":"Example Configurations","text":"Basic ConfigurationComprehensive ConfigurationMultiple Contacts Configuration <p>A minimal configuration with just contact information:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\n</code></pre> <p>A more complete configuration with all fields:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"https://example.com/security-contact-form\"\nSECURITYTXT_EXPIRES: \"2023-12-31T23:59:59+00:00\"\nSECURITYTXT_ENCRYPTION: \"https://example.com/pgp-key.txt\"\nSECURITYTXT_ACKNOWLEDGEMENTS: \"https://example.com/hall-of-fame\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_HIRING: \"https://example.com/jobs/security\"\nSECURITYTXT_CANONICAL: \"https://example.com/.well-known/security.txt\"\nSECURITYTXT_PREFERRED_LANG: \"en\"\nSECURITYTXT_CSAF: \"https://example.com/provider-metadata.json\"\n</code></pre> <p>Configuration with multiple contact methods:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"tel:+1-201-555-0123\"\nSECURITYTXT_CONTACT_3: \"https://example.com/security-form\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_EXPIRES: \"2024-06-30T23:59:59+00:00\"\n</code></pre>"},{"location":"features/#self-signed-certificate","title":"Self-signed certificate","text":"<p>STREAM support </p> <p>The Self-signed Certificate plugin automatically generates and manages SSL/TLS certificates directly within BunkerWeb, enabling secure HTTPS connections without requiring an external certificate authority. This feature is particularly useful in development environments, internal networks, or whenever you need to quickly deploy HTTPS without configuring external certificates.</p> <p>How it works:</p> <ol> <li>When enabled, BunkerWeb automatically generates a self-signed SSL/TLS certificate for your configured domains.</li> <li>The certificate includes all server names defined in your configuration, ensuring proper SSL validation for each domain.</li> <li>Certificates are stored securely and used to encrypt all HTTPS traffic to your websites.</li> <li>The certificate is automatically renewed before expiration, ensuring continuous HTTPS availability.</li> </ol> <p>Browser Security Warnings</p> <p>Browsers will display security warnings when users visit sites using self-signed certificates, as these certificates aren't validated by a trusted certificate authority. For production environments, consider using Let's Encrypt instead.</p>"},{"location":"features/#how-to-use_31","title":"How to Use","text":"<p>Follow these steps to configure and use the Self-signed Certificate feature:</p> <ol> <li>Enable the feature: Set the <code>GENERATE_SELF_SIGNED_SSL</code> setting to <code>yes</code> to enable self-signed certificate generation.</li> <li>Choose cryptographic algorithm: Select your preferred algorithm using the <code>SELF_SIGNED_SSL_ALGORITHM</code> setting.</li> <li>Configure validity period: Optionally set how long the certificate should be valid using the <code>SELF_SIGNED_SSL_EXPIRY</code> setting.</li> <li>Set certificate subject: Configure the certificate subject using the <code>SELF_SIGNED_SSL_SUBJ</code> setting.</li> <li>Let BunkerWeb handle the rest: Once configured, certificates are automatically generated and applied to your domains.</li> </ol> <p>Stream Mode Configuration</p> <p>For stream mode, configure the <code>LISTEN_STREAM_PORT_SSL</code> setting to specify the SSL/TLS listening port. This step is essential for proper operation in stream mode.</p>"},{"location":"features/#configuration-settings_31","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>GENERATE_SELF_SIGNED_SSL</code> <code>no</code> multisite no Enable Self-signed: Set to <code>yes</code> to enable automatic self-signed certificate generation. <code>SELF_SIGNED_SSL_ALGORITHM</code> <code>ec-prime256v1</code> multisite no Certificate Algorithm: Algorithm used for certificate generation: <code>ec-prime256v1</code>, <code>ec-secp384r1</code>, <code>rsa-2048</code>, or <code>rsa-4096</code>. <code>SELF_SIGNED_SSL_EXPIRY</code> <code>365</code> multisite no Certificate Validity: Number of days the self-signed certificate should be valid (default: 1 year). <code>SELF_SIGNED_SSL_SUBJ</code> <code>/CN=www.example.com/</code> multisite no Certificate Subject: Subject field for the certificate that identifies the domain. <p>Development Environments</p> <p>Self-signed certificates are ideal for development and testing environments where you need HTTPS but do not require certificates trusted by public browsers.</p> <p>Certificate Information</p> <p>The generated self-signed certificates use the specified algorithm (defaulting to Elliptic Curve cryptography with the prime256v1 curve) and include the configured subject, ensuring proper functionality for your domains.</p>"},{"location":"features/#example-configurations_33","title":"Example Configurations","text":"Basic ConfigurationShort-lived CertificatesTesting with RSA Certificates <p>A simple configuration using self-signed certificates with default settings:</p> <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=mysite.local/\"\n</code></pre> <p>Configuration with certificates that expire more frequently (useful for regularly testing certificate renewal processes):</p> <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"90\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=dev.example.com/\"\n</code></pre> <p>Configuration for a testing environment where a domain uses self-signed RSA certificates:</p> <pre><code>SERVER_NAME: \"test.example.com\"\nGENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"rsa-4096\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=test.example.com/\"\n</code></pre>"},{"location":"features/#sessions","title":"Sessions","text":"<p>STREAM support </p> <p>The Sessions plugin provides robust HTTP session management for BunkerWeb, enabling secure and reliable user session tracking across requests. This core feature is essential for maintaining user state, authentication persistence, and supporting other features that require identity continuity, such as anti\u2011bot protection and user authentication systems.</p> <p>How it works:</p> <ol> <li>When a user first interacts with your website, BunkerWeb creates a unique session identifier.</li> <li>This identifier is securely stored in a cookie on the user's browser.</li> <li>On subsequent requests, BunkerWeb retrieves the session identifier from the cookie and uses it to access the user's session data.</li> <li>Session data can be stored locally or in Redis for distributed environments with multiple BunkerWeb instances.</li> <li>Sessions are automatically managed with configurable timeouts, ensuring security while maintaining usability.</li> <li>The cryptographic security of sessions is ensured through a secret key that is used to sign session cookies.</li> </ol>"},{"location":"features/#how-to-use_32","title":"How to Use","text":"<p>Follow these steps to configure and use the Sessions feature:</p> <ol> <li>Configure session security: Set a strong, unique <code>SESSIONS_SECRET</code> to ensure session cookies cannot be forged. (The default value is \"random\" which triggers BunkerWeb to generate a random secret key.)</li> <li>Choose a session name: Optionally customize the <code>SESSIONS_NAME</code> to define what your session cookie will be called in the browser. (The default value is \"random\" which triggers BunkerWeb to generate a random name.)</li> <li>Set session timeouts: Configure how long sessions remain valid with the timeout settings (<code>SESSIONS_IDLING_TIMEOUT</code>, <code>SESSIONS_ROLLING_TIMEOUT</code>, <code>SESSIONS_ABSOLUTE_TIMEOUT</code>).</li> <li>Configure Redis integration: For distributed environments, set <code>USE_REDIS</code> to \"yes\" and configure your Redis connection to share session data across multiple BunkerWeb nodes.</li> <li>Let BunkerWeb handle the rest: Once configured, session management happens automatically for your website.</li> </ol>"},{"location":"features/#configuration-settings_32","title":"Configuration Settings","text":"Setting Default Context Multiple Description <code>SESSIONS_SECRET</code> <code>random</code> global no Session Secret: Cryptographic key used to sign session cookies. Should be a strong, random string unique to your site. <code>SESSIONS_NAME</code> <code>random</code> global no Cookie Name: The name of the cookie that will store the session identifier. <code>SESSIONS_IDLING_TIMEOUT</code> <code>1800</code> global no Idling Timeout: Maximum time (in seconds) of inactivity before the session is invalidated. <code>SESSIONS_ROLLING_TIMEOUT</code> <code>3600</code> global no Rolling Timeout: Maximum time (in seconds) before a session must be renewed. <code>SESSIONS_ABSOLUTE_TIMEOUT</code> <code>86400</code> global no Absolute Timeout: Maximum time (in seconds) before a session is destroyed regardless of activity. <code>SESSIONS_CHECK_IP</code> <code>yes</code> global no Check IP: When set to <code>yes</code>, destroys the session if the client IP address changes. <code>SESSIONS_CHECK_USER_AGENT</code> <code>yes</code> global no Check User-Agent: When set to <code>yes</code>, destroys the session if the client User-Agent changes. <p>Security Considerations</p> <p>The <code>SESSIONS_SECRET</code> setting is critical for security. In production environments:</p> <ol> <li>Use a strong, random value (at least 32 characters)</li> <li>Keep this value confidential</li> <li>Use the same value across all BunkerWeb instances in a cluster</li> <li>Consider using environment variables or secrets management to avoid storing this in plain text</li> </ol> <p>Clustered Environments</p> <p>If you're running multiple BunkerWeb instances behind a load balancer:</p> <ol> <li>Set <code>USE_REDIS</code> to <code>yes</code> and configure your Redis connection</li> <li>Ensure all instances use the exact same <code>SESSIONS_SECRET</code> and <code>SESSIONS_NAME</code></li> <li>This ensures users maintain their session regardless of which BunkerWeb instance handles their requests</li> </ol>"},{"location":"features/#example-configurations_34","title":"Example Configurations","text":"Basic ConfigurationEnhanced SecurityClustered Environment with RedisLong-lived Sessions <p>A simple configuration for a single BunkerWeb instance:</p> <pre><code>SESSIONS_SECRET: \"your-strong-random-secret-key-here\"\nSESSIONS_NAME: \"myappsession\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\n</code></pre> <p>Configuration with increased security settings:</p> <pre><code>SESSIONS_SECRET: \"your-very-strong-random-secret-key-here\"\nSESSIONS_NAME: \"securesession\"\nSESSIONS_IDLING_TIMEOUT: \"900\"  # 15 minutes\nSESSIONS_ROLLING_TIMEOUT: \"1800\"  # 30 minutes\nSESSIONS_ABSOLUTE_TIMEOUT: \"43200\"  # 12 hours\nSESSIONS_CHECK_IP: \"yes\"\nSESSIONS_CHECK_USER_AGENT: \"yes\"\n</code></pre> <p>Configuration for multiple BunkerWeb instances sharing session data:</p> <pre><code>SESSIONS_SECRET: \"your-strong-random-secret-key-here\"\nSESSIONS_NAME: \"clustersession\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\nUSE_REDIS: \"yes\"\n# Ensure Redis connection is configured correctly\n</code></pre> <p>Configuration for applications requiring extended session persistence:</p> <pre><code>SESSIONS_SECRET: \"your-strong-random-secret-key-here\"\nSESSIONS_NAME: \"persistentsession\"\nSESSIONS_IDLING_TIMEOUT: \"86400\"  # 1 day\nSESSIONS_ROLLING_TIMEOUT: \"172800\"  # 2 days\nSESSIONS_ABSOLUTE_TIMEOUT: \"604800\"  # 7 days\n</code></pre>"},{"location":"features/#ui","title":"UI","text":"<p>STREAM support </p> <p>Integrate easily the BunkerWeb UI.</p> Setting Default Context Multiple Description <code>USE_UI</code> <code>no</code> multisite no Use UI <code>UI_HOST</code> global no Address of the web UI used for initial setup"},{"location":"features/#user-manager-pro","title":"User Manager  (PRO)","text":"<p>STREAM support </p> <p>Add the possibility to manage users on the web interface</p> Setting Default Context Multiple Description <code>USERS_REQUIRE_2FA</code> <code>no</code> global no Require two-factor authentication for all users"},{"location":"features/#whitelist","title":"Whitelist","text":"<p>STREAM support </p> <p>The Whitelist plugin lets you define a list of trusted IP addresses that bypass other security filters. For blocking unwanted clients instead, refer to the Blacklist plugin.</p> <p>The Whitelist plugin provides a comprehensive approach to explicitly allow access to your website based on various client attributes. This feature provides a security mechanism: visitors matching specific criteria are granted immediate access, while all others must pass regular security checks.</p> <p>How it works:</p> <ol> <li>You define criteria for visitors who should be \"whitelisted\" (IP addresses, networks, rDNS, ASN, User-Agent, or URI patterns).</li> <li>When a visitor attempts to access your site, BunkerWeb checks whether they match any of these whitelist criteria.</li> <li>If a visitor matches any whitelist rule (and doesn't match any ignore rule), they are granted access to your site and bypass all other security checks.</li> <li>If a visitor doesn't match any whitelist criteria, they proceed through all normal security checks as usual.</li> <li>Whitelists can be automatically updated from external sources on a regular schedule.</li> </ol>"},{"location":"features/#how-to-use_33","title":"How to Use","text":"<p>Follow these steps to configure and use the Whitelist feature:</p> <ol> <li>Enable the feature: The Whitelist feature is disabled by default. Set the <code>USE_WHITELIST</code> setting to <code>yes</code> to enable it.</li> <li>Configure allow rules: Define which IPs, networks, rDNS patterns, ASNs, User-Agents, or URIs should be whitelisted.</li> <li>Set up ignore rules: Specify any exceptions that should bypass the whitelist checks.</li> <li>Add external sources: Configure URLs for automatically downloading and updating whitelist data.</li> <li>Monitor access: Check the web UI to see which visitors are being allowed or denied.</li> </ol> <p>stream mode</p> <p>When using stream mode, only IP, rDNS, and ASN checks are performed.</p>"},{"location":"features/#configuration-settings_33","title":"Configuration Settings","text":"<p>General</p> Setting Default Context Multiple Description <code>USE_WHITELIST</code> <code>no</code> multisite no Enable Whitelist: Set to <code>yes</code> to enable the whitelist feature. IP AddressReverse DNSASNUser AgentURI <p>What this does: Whitelists visitors based on their IP address or network. These visitors will bypass all security checks.</p> Setting Default Context Multiple Description <code>WHITELIST_IP</code> multisite no IP Whitelist: List of IP addresses or networks (CIDR notation) to allow, separated by spaces. <code>WHITELIST_IGNORE_IP</code> multisite no IP Ignore List: List of IP addresses or networks that should bypass IP whitelist checks. <code>WHITELIST_IP_URLS</code> multisite no IP Whitelist URLs: List of URLs containing IP addresses or networks to whitelist, separated by spaces. <code>WHITELIST_IGNORE_IP_URLS</code> multisite no IP Ignore List URLs: List of URLs containing IP addresses or networks to ignore. <p>What this does: Whitelists visitors based on their domain name (in reverse). This is useful for allowing access to visitors from specific organizations or networks by their domain.</p> Setting Default Context Multiple Description <code>WHITELIST_RDNS</code> multisite no rDNS Whitelist: List of reverse DNS suffixes to allow, separated by spaces. <code>WHITELIST_RDNS_GLOBAL</code> <code>yes</code> multisite no rDNS Global Only: Only perform rDNS whitelist checks on global IP addresses when set to <code>yes</code>. <code>WHITELIST_IGNORE_RDNS</code> multisite no rDNS Ignore List: List of reverse DNS suffixes that should bypass rDNS whitelist checks. <code>WHITELIST_RDNS_URLS</code> multisite no rDNS Whitelist URLs: List of URLs containing reverse DNS suffixes to whitelist, separated by spaces. <code>WHITELIST_IGNORE_RDNS_URLS</code> multisite no rDNS Ignore List URLs: List of URLs containing reverse DNS suffixes to ignore. <p>What this does: Whitelists visitors from specific network providers using Autonomous System Numbers. ASNs identify which provider or organization an IP belongs to.</p> Setting Default Context Multiple Description <code>WHITELIST_ASN</code> multisite no ASN Whitelist: List of Autonomous System Numbers to allow, separated by spaces. <code>WHITELIST_IGNORE_ASN</code> multisite no ASN Ignore List: List of ASNs that should bypass ASN whitelist checks. <code>WHITELIST_ASN_URLS</code> multisite no ASN Whitelist URLs: List of URLs containing ASNs to whitelist, separated by spaces. <code>WHITELIST_IGNORE_ASN_URLS</code> multisite no ASN Ignore List URLs: List of URLs containing ASNs to ignore. <p>What this does: Whitelists visitors based on what browser or tool they claim to be using. This is effective for allowing access to specific known tools or services.</p> Setting Default Context Multiple Description <code>WHITELIST_USER_AGENT</code> multisite no User-Agent Whitelist: List of User-Agent patterns (PCRE regex) to allow, separated by spaces. <code>WHITELIST_IGNORE_USER_AGENT</code> multisite no User-Agent Ignore List: List of User-Agent patterns that should bypass User-Agent whitelist checks. <code>WHITELIST_USER_AGENT_URLS</code> multisite no User-Agent Whitelist URLs: List of URLs containing User-Agent patterns to whitelist. <code>WHITELIST_IGNORE_USER_AGENT_URLS</code> multisite no User-Agent Ignore List URLs: List of URLs containing User-Agent patterns to ignore. <p>What this does: Whitelists requests to specific URLs on your site. This is helpful for allowing access to specific endpoints regardless of other factors.</p> Setting Default Context Multiple Description <code>WHITELIST_URI</code> multisite no URI Whitelist: List of URI patterns (PCRE regex) to allow, separated by spaces. <code>WHITELIST_IGNORE_URI</code> multisite no URI Ignore List: List of URI patterns that should bypass URI whitelist checks. <code>WHITELIST_URI_URLS</code> multisite no URI Whitelist URLs: List of URLs containing URI patterns to whitelist, separated by spaces. <code>WHITELIST_IGNORE_URI_URLS</code> multisite no URI Ignore List URLs: List of URLs containing URI patterns to ignore. <p>URL Format Support</p> <p>All <code>*_URLS</code> settings support HTTP/HTTPS URLs as well as local file paths using the <code>file:///</code> prefix. Basic authentication is supported using the <code>http://user:pass@url</code> format.</p> <p>Regular Updates</p> <p>Whitelists from URLs are automatically downloaded and updated hourly to ensure your protection remains current with the latest trusted sources.</p> <p>Security Bypass</p> <p>Whitelisted visitors will completely bypass all other security checks in BunkerWeb, including WAF rules, rate limiting, bad bot detection, and any other security mechanisms. Only use the whitelist for trusted sources you're absolutely confident in.</p>"},{"location":"features/#example-configurations_35","title":"Example Configurations","text":"Basic Organization AccessAdvanced ConfigurationUsing Local FilesAPI Access PatternWell-Known Crawlers <p>A simple configuration that whitelists company office IPs:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_IP: \"192.168.1.0/24 10.0.0.0/8 203.0.113.42\"\n</code></pre> <p>A more comprehensive configuration with multiple whitelist criteria:</p> <pre><code>USE_WHITELIST: \"yes\"\n\n# Company and trusted partner assets\nWHITELIST_IP: \"192.168.1.0/24 203.0.113.0/24\"\nWHITELIST_RDNS: \".company.com .partner-company.org\"\nWHITELIST_ASN: \"12345 67890\"  # Company and partner ASNs\nWHITELIST_USER_AGENT: \"(?:\\b)CompanyBot(?:\\b) (?:\\b)PartnerCrawler(?:\\b)\"\n\n# External trusted sources\nWHITELIST_IP_URLS: \"https://example.com/trusted-networks.txt\"\nWHITELIST_USER_AGENT_URLS: \"https://example.com/trusted-crawlers.txt\"\n</code></pre> <p>Configuration using local files for whitelists:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_IP_URLS: \"file:///path/to/ip-whitelist.txt\"\nWHITELIST_RDNS_URLS: \"file:///path/to/rdns-whitelist.txt\"\nWHITELIST_ASN_URLS: \"file:///path/to/asn-whitelist.txt\"\nWHITELIST_USER_AGENT_URLS: \"file:///path/to/user-agent-whitelist.txt\"\nWHITELIST_URI_URLS: \"file:///path/to/uri-whitelist.txt\"\n</code></pre> <p>A configuration focused on allowing access to only specific API endpoints:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_URI: \"^/api/v1/public/ ^/api/v1/status\"\nWHITELIST_IP: \"192.168.1.0/24\"  # Internal network for all endpoints\n</code></pre> <p>A configuration that whitelists common search engine and social media crawlers:</p> <pre><code>USE_WHITELIST: \"yes\"\n\n# Verification with reverse DNS for added security\nWHITELIST_RDNS: \".googlebot.com .search.msn.com .crawl.yahoo.net .yandex.com .baidu.com .facebook.com\"\nWHITELIST_RDNS_GLOBAL: \"yes\"  # Only check global IPs\n</code></pre> <p>This configuration allows legitimate crawlers to index your site without being subject to rate limiting or other security measures that might block them. The rDNS checks help verify that crawlers are actually coming from their claimed companies.</p>"},{"location":"integrations/","title":"Integrations","text":""},{"location":"integrations/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>BunkerWeb Cloud will be the easiest way to get started with BunkerWeb. It offers you a fully managed BunkerWeb service with no hassle. Think of it as a BunkerWeb-as-a-Service!</p> <p>Try our BunkerWeb Cloud offer and get access to:</p> <ul> <li>A fully managed BunkerWeb instance hosted in our cloud</li> <li>All BunkerWeb features, including PRO ones</li> <li>A monitoring platform with dashboards and alerts</li> <li>Technical support to assist you with configuration</li> </ul> <p>If you are interested in the BunkerWeb Cloud offering, don't hesitate to contact us so we can discuss your needs.</p>"},{"location":"integrations/#all-in-one-aio-image","title":"All-In-One (AIO) Image","text":"BunkerWeb All-In-One Architecture (AIO)"},{"location":"integrations/#deployment","title":"Deployment","text":"<p>To deploy the all-in-one container, all you have to do is run the following command:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>By default, the container exposes:</p> <ul> <li>8080/tcp for HTTP</li> <li>8443/tcp for HTTPS</li> <li>8443/udp for QUIC</li> <li>7000/tcp for the web UI access without BunkerWeb in front (not recommended for production)</li> <li>8888/tcp for the API when <code>SERVICE_API=yes</code> (internal use; prefer exposing it through BunkerWeb as a reverse proxy rather than publishing directly)</li> </ul> <p>The All-In-One image comes with several built-in services, which can be controlled using environment variables:</p> <ul> <li><code>SERVICE_UI=yes</code> (default) - Enables the web UI service</li> <li><code>SERVICE_SCHEDULER=yes</code> (default) - Enables the Scheduler service</li> <li><code>SERVICE_API=no</code> (default) - Enables the API service (FastAPI control plane)</li> <li><code>AUTOCONF_MODE=no</code> (default) - Enables the autoconf service</li> <li><code>USE_REDIS=yes</code> (default) - Enables the built-in Redis instance</li> <li><code>USE_CROWDSEC=no</code> (default) - CrowdSec integration is disabled by default</li> </ul>"},{"location":"integrations/#api-integration","title":"API Integration","text":"<p>The All-In-One image embeds the BunkerWeb API. It is disabled by default and can be enabled by setting <code>SERVICE_API=yes</code>.</p> <p>Security</p> <p>The API is a privileged control plane. Do not expose it directly to the Internet. Keep it on an internal network, restrict source IPs with <code>API_WHITELIST_IPS</code>, require authentication (<code>API_TOKEN</code> or API users + Biscuit), and preferably access it through BunkerWeb as a reverse proxy on an unguessable path.</p> <p>Quick enable (standalone) \u2014 publishes the API port; for testing only:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -e API_TOKEN=\"changeme\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  -p 8888:8888/tcp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Recommended (behind BunkerWeb) \u2014 do not publish <code>8888</code>; reverse\u2011proxy it instead:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"\n    environment:\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_REVERSE_PROXY: \"yes\"\n      REVERSE_PROXY_URL: \"/api-&lt;unguessable&gt;\"\n      REVERSE_PROXY_HOST: \"http://bunkerweb-aio:8888\"\n\n  bunkerweb-aio:\n    image: bunkerity/bunkerweb-all-in-one:testing\n    environment:\n      SERVICE_API: \"yes\"\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      # Optionally set an admin override token\n      # API_TOKEN: \"changeme\"\n    networks:\n      - bw-universe\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n</code></pre> <p>Details about authentication, permissions (ACL), rate limiting, TLS, and configuration options are available in the API documentation.</p>"},{"location":"integrations/#accessing-the-setup-wizard","title":"Accessing the Setup wizard","text":"<p>By default, the setup wizard is automagically launched when you run the AIO container for the first time. To access it, follow these steps:</p> <ol> <li>Start the AIO container as above, ensuring <code>SERVICE_UI=yes</code> (default).</li> <li>Access the UI via your main BunkerWeb endpoint, e.g. <code>https://your-domain</code>.</li> </ol> <p>Follow the next steps in the Quickstart guide to set up the Web UI.</p>"},{"location":"integrations/#redis-integration","title":"Redis Integration","text":"<p>The BunkerWeb All-In-One image includes Redis out-of-the-box for the persistence of bans and reports. To manage Redis:</p> <ul> <li>To disable Redis, set <code>USE_REDIS=no</code> or point <code>REDIS_HOST</code> to an external host.</li> <li>Redis logs appear with <code>[REDIS]</code> prefix in Docker logs and <code>/var/log/bunkerweb/redis.log</code>.</li> </ul>"},{"location":"integrations/#crowdsec-integration","title":"CrowdSec Integration","text":"<p>The BunkerWeb All-In-One Docker image comes with CrowdSec fully integrated\u2014no extra containers or manual setup required. Follow the steps below to enable, configure, and extend CrowdSec in your deployment.</p> <p>By default, CrowdSec is disabled. To turn it on, simply add the <code>USE_CROWDSEC</code> environment variable:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <ul> <li> <p>When <code>USE_CROWDSEC=yes</code>, the entrypoint will:</p> <ol> <li>Register and start the local CrowdSec agent (via <code>cscli</code>).</li> <li>Install or upgrade default collections &amp; parsers.</li> <li>Configure the <code>crowdsec-bunkerweb-bouncer/v1.6</code> bouncer.</li> </ol> </li> </ul>"},{"location":"integrations/#default-collections-parsers","title":"Default Collections &amp; Parsers","text":"<p>On first startup (or after upgrading), these assets are automatically installed and kept up to date:</p> Type Name Purpose Collection <code>crowdsecurity/nginx</code> Defend Nginx servers against a broad array of HTTP-based attacks, from brute-force to injection attempts. Collection <code>crowdsecurity/appsec-virtual-patching</code> Delivers a dynamically updated WAF-style rule set targeting known CVEs, automatically patched daily to shield web applications from newly discovered vulnerabilities. Collection <code>crowdsecurity/appsec-generic-rules</code> Complements <code>crowdsecurity/appsec-virtual-patching</code> with heuristics for generic application-layer attack patterns\u2014such as enumeration, path traversal, and automated probes\u2014filling gaps where CVE-specific rules don\u2019t yet exist. Parser <code>crowdsecurity/geoip-enrich</code> Enriches events with GeoIP context How it works internally  The entrypoint script invokes:  <pre><code>cscli install collection crowdsecurity/nginx\ncscli install collection crowdsecurity/appsec-virtual-patching\ncscli install collection crowdsecurity/appsec-generic-rules\ncscli install parser     crowdsecurity/geoip-enrich\n</code></pre>"},{"location":"integrations/#adding-extra-collections","title":"Adding Extra Collections","text":"<p>Need more coverage? Define <code>CROWDSEC_EXTRA_COLLECTIONS</code> with a space-separated list of Hubb collections:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_EXTRA_COLLECTIONS=\"crowdsecurity/apache2 crowdsecurity/mysql\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>How it works internally</p> <p>The script loops through each name and installs or upgrades as needed\u2014no manual steps required.</p>"},{"location":"integrations/#disable-specific-parsers","title":"Disable Specific Parsers","text":"<p>If you want to keep the default setup but explicitly disable one or more parsers, provide a space-separated list via <code>CROWDSEC_DISABLED_PARSERS</code>:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_DISABLED_PARSERS=\"crowdsecurity/geoip-enrich foo/bar-parser\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Notes: - The list is applied after required items are installed/updated; only the parsers you list are removed. - Use hub slugs as shown by <code>cscli parsers list</code> (e.g., <code>crowdsecurity/geoip-enrich</code>).</p>"},{"location":"integrations/#appsec-toggle","title":"AppSec Toggle","text":"<p>CrowdSec AppSec features\u2014powered by the <code>appsec-virtual-patching</code> and <code>appsec-generic-rules</code> collections\u2014are enabled by default.</p> <p>To disable all AppSec (WAF/virtual-patching) functionality, set:</p> <pre><code>-e CROWDSEC_APPSEC_URL=\"\"\n</code></pre> <p>This effectively turns off the AppSec endpoint so no rules are applied.</p>"},{"location":"integrations/#external-crowdsec-api","title":"External CrowdSec API","text":"<p>If you operate a remote CrowdSec instance, point the container to your API:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_API=\"https://crowdsec.example.com:8000\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <ul> <li>Local registration is skipped when <code>CROWDSEC_API</code> is not <code>127.0.0.1</code> or <code>localhost</code>.</li> <li>AppSec is disabled by default when using an external API. To enable it, set <code>CROWDSEC_APPSEC_URL</code> to your desired endpoint.</li> <li>Bouncer registration still occurs against the remote API.</li> <li>To reuse an existing bouncer key, supply <code>CROWDSEC_API_KEY</code> with your pre-generated token.</li> </ul> <p>More options</p> <p>For full coverage of all CrowdSec options (custom scenarios, logs, troubleshooting, and more), see the BunkerWeb CrowdSec plugin docs or visit the official CrowdSec website.</p>"},{"location":"integrations/#docker","title":"Docker","text":"Docker integration <p>Using BunkerWeb as a Docker container offers a convenient and straightforward approach for testing and utilizing the solution, particularly if you are already familiar with Docker technology.</p> <p>To facilitate your Docker deployment, we provide readily available prebuilt images on Docker Hub, supporting multiple architectures. These prebuilt images are optimized and prepared for use on the following architectures:</p> <ul> <li>x64 (64-bit)</li> <li>x86</li> <li>armv8 (ARM 64-bit)</li> <li>armv7 (ARM 32-bit)</li> </ul> <p>By accessing these prebuilt images from Docker Hub, you can quickly pull and run BunkerWeb within your Docker environment, eliminating the need for extensive configuration or setup processes. This streamlined approach allows you to focus on leveraging the capabilities of BunkerWeb without unnecessary complexities.</p> <p>Whether you're conducting tests, developing applications, or deploying BunkerWeb in production, the Docker containerization option provides flexibility and ease of use. Embracing this method empowers you to take full advantage of BunkerWeb's features while leveraging the benefits of Docker technology.</p> <pre><code>docker pull bunkerity/bunkerweb:testing\n</code></pre> <p>Docker images are also available on GitHub packages and can be downloaded using the <code>ghcr.io</code> repository address:</p> <pre><code>docker pull ghcr.io/bunkerity/bunkerweb:testing\n</code></pre> <p>Key concepts for Docker integration include:</p> <ul> <li>Environment variables: Configure BunkerWeb easily using environment variables. These variables allow you to customize various aspects of BunkerWeb's behavior, such as network settings, security options, and other parameters.</li> <li>Scheduler container: Manage configuration and execute jobs using a dedicated container called the scheduler.</li> <li>Networks: Docker networks play a vital role in the integration of BunkerWeb. These networks serve two main purposes: exposing ports to clients and connecting to upstream web services. By exposing ports, BunkerWeb can accept incoming requests from clients, allowing them to access the protected web services. Additionally, by connecting to upstream web services, BunkerWeb can efficiently route and manage traffic, providing enhanced security and performance.</li> </ul> <p>Database backend</p> <p>Please note that our instructions assume you are using SQLite as the default database backend, as configured by the <code>DATABASE_URI</code> setting. However, other database backends are also supported. See the docker-compose files in the misc/integrations folder of the repository for more information.</p>"},{"location":"integrations/#environment-variables","title":"Environment variables","text":"<p>Settings are passed to the Scheduler using Docker environment variables:</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      - MY_SETTING=value\n      - ANOTHER_SETTING=another value\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n...\n</code></pre> <p>Full list</p> <p>For the complete list of environment variables, see the settings section of the documentation.</p>"},{"location":"integrations/#using-docker-secrets","title":"Using Docker secrets","text":"<p>Instead of passing sensitive settings via environment variables, you can store them as Docker secrets. For each setting you want to secure, create a Docker secret with the name matching the setting key (in uppercase). BunkerWeb's entrypoint scripts automatically load secrets from <code>/run/secrets</code> and export them as environment variables.</p> <p>Example: <pre><code># Create a Docker secret for ADMIN_PASSWORD\necho \"S3cr3tP@ssw0rd\" | docker secret create ADMIN_PASSWORD -\n</code></pre></p> <p>Mount the secrets when deploying: <pre><code>services:\n  bw-ui:\n    secrets:\n      - ADMIN_PASSWORD\n...\nsecrets:\n  ADMIN_PASSWORD:\n    external: true\n</code></pre></p> <p>This ensures sensitive settings are kept out of the environment and logs.</p>"},{"location":"integrations/#scheduler","title":"Scheduler","text":"<p>The scheduler runs in its own container, which is also available on Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-scheduler:testing\n</code></pre> <p>BunkerWeb settings</p> <p>Since version <code>1.6.0</code>, the Scheduler container is where you define the settings for BunkerWeb. The Scheduler then pushes the configuration to the BunkerWeb container.</p> <p>\u26a0 Important: All API-related settings (like <code>API_HTTP_PORT</code>, <code>API_LISTEN_IP</code>, <code>API_SERVER_NAME</code>, <code>API_WHITELIST_IP</code>, and <code>API_TOKEN</code> if you use it) must also be defined in the BunkerWeb container. The settings must be mirrored in both containers; otherwise, the BunkerWeb container will not accept API requests from the Scheduler.</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  API_HTTP_PORT: \"5000\" # Default value\n  API_LISTEN_IP: \"0.0.0.0\" # Default value\n  API_SERVER_NAME: \"bwapi\" # Default value\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\" # Set this according to your network settings\n  # Optional token; if set, Scheduler sends Authorization: Bearer &lt;token&gt;\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    environment:\n      # This will set the API settings for the BunkerWeb container\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      # This will set the API settings for the Scheduler container\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\n</code></pre> <p>A volume is needed to store the SQLite database and backups used by the scheduler:</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - bw-storage:/data\n...\nvolumes:\n  bw-storage:\n</code></pre> <p>Using a local folder for persistent data</p> <p>The scheduler runs as an unprivileged user with UID 101 and GID 101 inside the container. This enhances security: in case a vulnerability is exploited, the attacker won't have full root (UID/GID 0) privileges.</p> <p>However, if you use a local folder for persistent data, you must set the correct permissions so the unprivileged user can write data to it. For example:</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternatively, if the folder already exists:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>If you are using Docker in rootless mode or Podman, UIDs and GIDs in the container will be mapped to different ones on the host. You will first need to check your initial subuid and subgid:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>For example, if you have a value of 100000, the mapped UID/GID will be 100100 (100000 + 100):</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Or if the folder already exists:</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nsudo chmod -R 770 bw-data\n</code></pre>"},{"location":"integrations/#networks","title":"Networks","text":"<p>By default, the BunkerWeb container listens (inside the container) on 8080/tcp for HTTP, 8443/tcp for HTTPS, and 8443/udp for QUIC.</p> <p>Privileged ports in rootless mode or when using Podman</p> <p>If you are using Docker in rootless mode and want to redirect privileged ports (&lt; 1024) like 80 and 443 to BunkerWeb, please refer to the prerequisites here.</p> <p>If you are using Podman, you can lower the minimum number for unprivileged ports: <pre><code>sudo sysctl net.ipv4.ip_unprivileged_port_start=1\n</code></pre></p> <p>The typical BunkerWeb stack when using Docker integration contains the following containers:</p> <ul> <li>BunkerWeb</li> <li>Scheduler</li> <li>Your services</li> </ul> <p>For defense-in-depth purposes, we strongly recommend creating at least three different Docker networks:</p> <ul> <li><code>bw-services</code>: for BunkerWeb and your web services</li> <li><code>bw-universe</code>: for BunkerWeb and the scheduler</li> <li><code>bw-db</code>: for the database (if you are using one)</li> </ul> <p>To secure communication between the scheduler and the BunkerWeb API, authorize API calls. Use the <code>API_WHITELIST_IP</code> setting to specify allowed IP addresses and subnets. For stronger protection, set <code>API_TOKEN</code> in both containers; the scheduler will automatically include <code>Authorization: Bearer &lt;token&gt;</code>.</p> <p>It is strongly recommended to use a static subnet for the <code>bw-universe</code> network to enhance security. By implementing these measures, you can ensure that only authorized sources can access the BunkerWeb API, reducing the risk of unauthorized access or malicious activities:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  API_TOKEN: \"\" # Optional API token\n  # Optional API token for authenticated API access\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-services\n      - bw-universe\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Static subnet so only authorized sources can access the BunkerWeb API\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"integrations/#full-compose-file","title":"Full compose file","text":"<pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    depends_on:\n      - bunkerweb\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n      SERVER_NAME: \"www.example.com\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Static subnet so only authorized sources can access the BunkerWeb API\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"integrations/#build-from-source","title":"Build from source","text":"<p>Alternatively, if you prefer a more hands-on approach, you have the option to build the Docker image directly from the source. Building the image from source gives you greater control and customization over the deployment process. However, please note that this method may take some time to complete, depending on your hardware configuration (you can take a coffee \u2615 if needed).</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t bw -f src/bw/Dockerfile . &amp;&amp; \\\ndocker build -t bw-scheduler -f src/scheduler/Dockerfile . &amp;&amp; \\\ndocker build -t bw-autoconf -f src/autoconf/Dockerfile . &amp;&amp; \\\ndocker build -t bw-ui -f src/ui/Dockerfile .\n</code></pre>"},{"location":"integrations/#linux","title":"Linux","text":"Linux integration <p>Supported Linux distributions for BunkerWeb (amd64/x86_64 and arm64/aarch64 architectures) include:</p> <ul> <li>Debian 12 \"Bookworm\"</li> <li>Debian 13 \"Trixie\"</li> <li>Ubuntu 22.04 \"Jammy\"</li> <li>Ubuntu 24.04 \"Noble\"</li> <li>Fedora 41 and 42</li> <li>Red Hat Enterprise Linux (RHEL) 8, 9 and 10</li> </ul>"},{"location":"integrations/#easy-installation-script","title":"Easy installation script","text":"<p>For a simplified installation experience, BunkerWeb provides an easy install script that automatically handles the entire setup process, including NGINX installation, repository configuration, and service setup.</p>"},{"location":"integrations/#quick-start","title":"Quick start","text":"<p>To get started, download the installation script and its checksum, then verify the script's integrity before running it.</p> <pre><code># Download the script and its checksum\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Verify the checksum\nsha256sum -c install-bunkerweb.sh.sha256\n\n# If the check is successful, run the script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Security Notice</p> <p>Always verify the integrity of the installation script before running it.</p> <p>Download the checksum file and use a tool like <code>sha256sum</code> to confirm the script has not been altered or tampered with.</p> <p>If the checksum verification fails, do not execute the script\u2014it may be unsafe.</p>"},{"location":"integrations/#how-it-works","title":"How It Works","text":"<p>The easy install script is a powerful tool designed to streamline the setup of BunkerWeb on a fresh Linux system. It automates the following key steps:</p> <ol> <li>System Analysis: Detects your operating system and verifies it against the list of supported distributions.</li> <li>Installation Customization: In interactive mode, it prompts you to choose an installation type (All-In-One, Manager, Worker, etc.) and decide whether to enable the web-based setup wizard.</li> <li>Optional Integrations: Offers to automatically install and configure the CrowdSec Security Engine.</li> <li>Dependency Management: Installs the correct version of NGINX required by BunkerWeb from official sources and locks the version to prevent unintended upgrades.</li> <li>BunkerWeb Installation: Adds the BunkerWeb package repository, installs the necessary packages, and locks the version.</li> <li>Service Configuration: Sets up and enables the <code>systemd</code> services corresponding to your chosen installation type.</li> <li>Post-install Guidance: Provides clear next steps to help you get started with your new BunkerWeb instance.</li> </ol>"},{"location":"integrations/#interactive-installation","title":"Interactive Installation","text":"<p>When run without any options, the script enters an interactive mode that guides you through the setup process. You will be asked to make the following choices:</p> <ol> <li>Installation Type: Select the components you want to install.<ul> <li>Full Stack (default): An all-in-one installation including BunkerWeb, the Scheduler, and the Web UI.</li> <li>Manager: Installs the Scheduler and Web UI, intended to manage one or more remote BunkerWeb workers.</li> <li>Worker: Installs only the BunkerWeb instance, which can be managed by a remote Manager.</li> <li>Scheduler Only: Installs only the Scheduler component.</li> <li>Web UI Only: Installs only the Web UI component.</li> </ul> </li> <li>Setup Wizard: Choose whether to enable the web-based configuration wizard. This is highly recommended for first-time users.</li> <li>CrowdSec Integration: Opt-in to install the CrowdSec security engine for advanced, real-time threat protection.</li> <li>CrowdSec AppSec: If you choose to install CrowdSec, you can also enable the Application Security (AppSec) component, which adds WAF capabilities.</li> <li>API Service: Choose whether to enable the optional BunkerWeb API service. It is disabled by default on Linux installations.</li> </ol> <p>Manager and Scheduler installations</p> <p>If you choose the Manager or Scheduler Only installation type, you will also be prompted to provide the IP addresses or hostnames of your BunkerWeb worker instances.</p>"},{"location":"integrations/#command-line-options","title":"Command-Line Options","text":"<p>For non-interactive or automated setups, the script can be controlled with command-line flags:</p> <p>General Options:</p> Option Description <code>-v, --version VERSION</code> Specifies the BunkerWeb version to install (e.g., <code>testing</code>). <code>-w, --enable-wizard</code> Enables the setup wizard. <code>-n, --no-wizard</code> Disables the setup wizard. <code>-y, --yes</code> Runs in non-interactive mode using default answers for all prompts. <code>-f, --force</code> Forces the installation to proceed even on an unsupported OS version. <code>-q, --quiet</code> Silent installation (suppress output). <code>--api</code>, <code>--enable-api</code> Enables the API (FastAPI) systemd service (disabled by default). <code>--no-api</code> Explicitly disables the API service. <code>-h, --help</code> Displays the help message with all available options. <code>--dry-run</code> Show what would be installed without doing it. <p>Installation Types:</p> Option Description <code>--full</code> Full stack installation (BunkerWeb, Scheduler, UI). This is the default. <code>--manager</code> Installs the Scheduler and UI to manage remote workers. <code>--worker</code> Installs only the BunkerWeb instance. <code>--scheduler-only</code> Installs only the Scheduler component. <code>--ui-only</code> Installs only the Web UI component. <p>Security Integrations:</p> Option Description <code>--crowdsec</code> Install and configure CrowdSec security engine. <code>--no-crowdsec</code> Skip CrowdSec installation. <code>--crowdsec-appsec</code> Install CrowdSec with AppSec component (includes WAF capabilities). <p>Advanced Options:</p> Option Description <code>--instances \"IP1 IP2\"</code> Space-separated list of BunkerWeb instances (required for manager/scheduler modes). <p>Example Usage:</p> <pre><code># Run in interactive mode (recommended for most users)\nsudo ./install-bunkerweb.sh\n\n# Non-interactive installation with defaults (full stack, wizard enabled)\nsudo ./install-bunkerweb.sh --yes\n\n# Install a Worker node without the setup wizard\nsudo ./install-bunkerweb.sh --worker --no-wizard\n\n# Install a specific version\nsudo ./install-bunkerweb.sh --version testing\n\n# Manager setup with remote worker instances (instances required)\nsudo ./install-bunkerweb.sh --manager --instances \"192.168.1.10 192.168.1.11\"\n\n# Full installation with CrowdSec and AppSec\nsudo ./install-bunkerweb.sh --crowdsec-appsec\n\n# Silent non-interactive installation\nsudo ./install-bunkerweb.sh --quiet --yes\n\n# Preview installation without executing\nsudo ./install-bunkerweb.sh --dry-run\n\n# Enable the API during easy install (non-interactive)\nsudo ./install-bunkerweb.sh --yes --api\n\n# Error: CrowdSec cannot be used with worker installations\n# sudo ./install-bunkerweb.sh --worker --crowdsec  # This will fail\n\n# Error: Instances required for manager in non-interactive mode\n# sudo ./install-bunkerweb.sh --manager --yes  # This will fail without --instances\n</code></pre> <p>Important Notes on Option Compatibility</p> <p>CrowdSec Limitations: - CrowdSec options (<code>--crowdsec</code>, <code>--crowdsec-appsec</code>) are only compatible with <code>--full</code> (default) and <code>--manager</code> installation types - They cannot be used with <code>--worker</code>, <code>--scheduler-only</code>, or <code>--ui-only</code> installations</p> <p>Instances Requirements: - The <code>--instances</code> option is only valid with <code>--manager</code> and <code>--scheduler-only</code> installation types - When using <code>--manager</code> or <code>--scheduler-only</code> with <code>--yes</code> (non-interactive mode), the <code>--instances</code> option is mandatory - Format: <code>--instances \"192.168.1.10 192.168.1.11 192.168.1.12\"</code></p> <p>Interactive vs Non-Interactive: - Interactive mode (default) will prompt for missing required values - Non-interactive mode (<code>--yes</code>) requires all necessary options to be provided via command line</p>"},{"location":"integrations/#crowdsec-integration-with-the-script","title":"CrowdSec Integration with the Script","text":"<p>If you opt to install CrowdSec during the interactive setup, the script fully automates its integration with BunkerWeb:</p> <ul> <li>It adds the official CrowdSec repository and installs the agent.</li> <li>It creates a new acquisition file to make CrowdSec parse BunkerWeb's logs (<code>access.log</code>, <code>error.log</code>, and <code>modsec_audit.log</code>).</li> <li>It installs essential collections (<code>crowdsecurity/nginx</code>) and parsers (<code>crowdsecurity/geoip-enrich</code>).</li> <li>It registers a bouncer for BunkerWeb and automatically configures the API key in <code>/etc/bunkerweb/variables.env</code>.</li> <li>If you also select the AppSec Component, it installs the <code>appsec-virtual-patching</code> and <code>appsec-generic-rules</code> collections and configures the AppSec endpoint for BunkerWeb.</li> </ul> <p>This provides a seamless, out-of-the-box integration for powerful intrusion prevention.</p>"},{"location":"integrations/#rhel-considerations","title":"RHEL considerations","text":"<p>External database support on RHEL-based systems</p> <p>If you plan to use an external database (recommended for production), you must install the appropriate database client package:</p> <pre><code># For MariaDB\nsudo dnf install mariadb\n\n# For MySQL\nsudo dnf install mysql\n\n# For PostgreSQL\nsudo dnf install postgresql\n</code></pre> <p>This is required for the BunkerWeb Scheduler to connect to your external database.</p>"},{"location":"integrations/#after-installation","title":"After installation","text":"<p>Depending on your choices during installation:</p> <p>With setup wizard enabled:</p> <ol> <li>Access the setup wizard at: <code>https://your-server-ip/setup</code></li> <li>Follow the guided configuration to set up your first protected service</li> <li>Configure SSL/TLS certificates and other security settings</li> </ol> <p>Without setup wizard:</p> <ol> <li>Edit <code>/etc/bunkerweb/variables.env</code> to configure BunkerWeb manually</li> <li>Add your server settings and protected services</li> <li>Restart the scheduler: <code>sudo systemctl restart bunkerweb-scheduler</code></li> </ol>"},{"location":"integrations/#installation-using-package-manager","title":"Installation using package manager","text":"<p>Please ensure that you have NGINX 1.28.0 installed before installing BunkerWeb. For all distributions, except Fedora, it is mandatory to use prebuilt packages from the official NGINX repository. Compiling NGINX from source or using packages from different repositories will not work with the official prebuilt packages of BunkerWeb. However, you have the option to build BunkerWeb from source.</p> Debian Bookworm/TrixieUbuntuFedoraRedHat <p>The first step is to add NGINX official repository:</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/debian `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>You should now be able to install NGINX 1.28.0:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Testing/dev version</p> <p>If you use the <code>testing</code> or <code>dev</code> version, you will need to add the <code>force-bad-version</code> directive to your <code>/etc/dpkg/dpkg.cfg</code> file before installing BunkerWeb.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>Disable the setup wizard</p> <p>If you don't want to use the setup wizard of the web UI when BunkerWeb is installed, export the following variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>And finally install BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>To prevent upgrading NGINX and/or BunkerWeb packages when executing <code>apt upgrade</code>, you can use the following command:</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>The first step is to add NGINX official repository:</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release ubuntu-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/ubuntu `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>You should now be able to install NGINX 1.28.0:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Testing/dev version</p> <p>If you use the <code>testing</code> or <code>dev</code> version, you will need to add the <code>force-bad-version</code> directive to your <code>/etc/dpkg/dpkg.cfg</code> file before installing BunkerWeb.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>Disable the setup wizard</p> <p>If you don't want to use the setup wizard of the web UI when BunkerWeb is installed, export the following variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>And finally install BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>To prevent upgrading NGINX and/or BunkerWeb packages when executing <code>apt upgrade</code>, you can use the following command:</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>Fedora Update Testing</p> <p>If you can't find the NGINX version listed in the stable repository, you can enable the <code>updates-testing</code> repository:</p> <pre><code>sudo dnf config-manager setopt updates-testing.enabled=1\n</code></pre> <p>Fedora already provides NGINX 1.28.0 that we support</p> <pre><code>sudo dnf install -y --allowerasing nginx-1.28.0\n</code></pre> <p>Disable the setup wizard</p> <p>If you don't want to use the setup wizard of the web UI when BunkerWeb is installed, export the following variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>And finally install BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf makecache &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>To prevent upgrading NGINX and/or BunkerWeb packages when executing <code>dnf upgrade</code>, you can use the following command:</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre> <p>The first step is to add NGINX official repository. Create the following file at <code>/etc/yum.repos.d/nginx.repo</code>:</p> <pre><code>[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n</code></pre> <p>You should now be able to install NGINX 1.28.0:</p> <pre><code>sudo dnf install --allowerasing nginx-1.28.0\n</code></pre> <p>Disable the setup wizard</p> <p>If you don't want to use the setup wizard of the web UI when BunkerWeb is installed, export the following variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>And finally install BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf check-update &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>To prevent upgrading NGINX and/or BunkerWeb packages when executing <code>dnf upgrade</code>, you can use the following command:</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre>"},{"location":"integrations/#configuration-and-service","title":"Configuration and service","text":"<p>Manual configuration of BunkerWeb is done by editing the <code>/etc/bunkerweb/variables.env</code> file:</p> <pre><code>MY_SETTING_1=value1\nMY_SETTING_2=value2\n...\n</code></pre> <p>When installed, BunkerWeb comes with three services <code>bunkerweb</code>, <code>bunkerweb-scheduler</code> and <code>bunkerweb-ui</code> that you can manage using <code>systemctl</code>.</p> <p>If you manually edit the BunkerWeb configuration using <code>/etc/bunkerweb/variables.env</code> a restart of the <code>bunkerweb-scheduler</code> service will be enough to generate and reload the configuration without any downtime. But depending on the case (such as changing listening ports) you might need to restart the <code>bunkerweb</code> service.</p>"},{"location":"integrations/#high-availability","title":"High availability","text":"<p>The scheduler can be detached from the BunkerWeb instance to provide high availability. In this case, the scheduler will be installed on a separate server and will be able to manage multiple BunkerWeb instances.</p>"},{"location":"integrations/#manager","title":"Manager","text":"<p>To install only the scheduler on a server, you can export the following variables before executing the BunkerWeb installation:</p> <pre><code>export MANAGER_MODE=yes\nexport UI_WIZARD=no\n</code></pre> <p>Alternatively, you can also export the following variables to only enable the scheduler:</p> <pre><code>export SERVICE_SCHEDULER=yes\nexport SERVICE_BUNKERWEB=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"integrations/#worker","title":"Worker","text":"<p>On another server, to install only BunkerWeb, you can export the following variables before executing the BunkerWeb installation:</p> <pre><code>export WORKER_MODE=yes\n</code></pre> <p>Alternatively, you can also export the following variables to only enable BunkerWeb:</p> <pre><code>export SERVICE_BUNKERWEB=yes\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"integrations/#web-ui","title":"Web UI","text":"<p>The Web UI can be installed on a separate server to provide a dedicated interface for managing BunkerWeb instances. To install only the Web UI, you can export the following variables before executing the BunkerWeb installation:</p> <pre><code>export SERVICE_BUNKERWEB=no\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=yes\n</code></pre>"},{"location":"integrations/#docker-autoconf","title":"Docker autoconf","text":"Docker autoconf integration <p>Docker integration</p> <p>The Docker autoconf integration is an \"evolution\" of the Docker one. Please read the Docker integration section first if needed.</p> <p>An alternative approach is available to address the inconvenience of recreating the container every time there is an update. By utilizing another image called autoconf, you can automate the real-time reconfiguration of BunkerWeb without the need for container recreation.</p> <p>To leverage this functionality, instead of defining environment variables for the BunkerWeb container, you can add labels to your web application containers. The autoconf image will then listen for Docker events and seamlessly handle the configuration updates for BunkerWeb.</p> <p>This \"automagical\" process simplifies the management of BunkerWeb configurations. By adding labels to your web application containers, you can delegate the reconfiguration tasks to autoconf without the manual intervention of container recreation. This streamlines the update process and enhances convenience.</p> <p>By adopting this approach, you can enjoy real-time reconfiguration of BunkerWeb without the hassle of container recreation, making it more efficient and user-friendly.</p> <p>Multisite mode</p> <p>The Docker autoconf integration implies the use of multisite mode. Please refer to the multisite section of the documentation for more information.</p> <p>Database backend</p> <p>Please be aware that our instructions assume you are using MariaDB as the default database backend, as configured by the <code>DATABASE_URI</code> setting. However, we understand that you may prefer to utilize alternative backends for your Docker integration. If that is the case, rest assured that other database backends are still possible. See docker-compose files in the misc/integrations folder of the repository for more information.</p> <p>To enable automated configuration updates, include an additional container called <code>bw-autoconf</code> in the stack. This container hosts the autoconf service, which manages dynamic configuration changes for BunkerWeb.</p> <p>To support this functionality, use a dedicated \"real\" database backend (e.g., MariaDB, MySQL, or PostgreSQL) for synchronized configuration storage. By integrating <code>bw-autoconf</code> and a suitable database backend, you establish the infrastructure for seamless automated configuration management in BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Mandatory label for the autoconf service to identify the BunkerWeb instance\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # The Docker socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>Database in the <code>bw-db</code> network</p> <p>The database container is intentionally not included in the <code>bw-universe</code> network. It is used by the <code>bw-autoconf</code> and <code>bw-scheduler</code> containers rather than directly by BunkerWeb. Therefore, the database container is part of the <code>bw-db</code> network, which enhances security by making external access to the database more challenging. This deliberate design choice helps safeguard the database and strengthens the overall security perspective of the system.</p> <p>Using Docker in rootless mode</p> <p>If you are using Docker in rootless mode, you will need to replace the mount of the docker socket with the following value: <code>$XDG_RUNTIME_DIR/docker.sock:/var/run/docker.sock:ro</code>.</p>"},{"location":"integrations/#autoconf-services","title":"Autoconf services","text":"<p>Once the stack is set up, you will be able to create the web application container and add the settings as labels using the \"bunkerweb.\" prefix in order to automatically set up BunkerWeb:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"integrations/#namespaces","title":"Namespaces","text":"<p>Starting from version <code>1.6.0</code>, BunkerWeb's Autoconf stacks now support namespaces. This feature enables you to manage multiple \"clusters\" of BunkerWeb instances and services on the same Docker host. To take advantage of namespaces, simply set the <code>NAMESPACE</code> label on your services. Here's an example:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the service\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Namespace behavior</p> <p>By default all Autoconf stacks listen to all namespaces. If you want to restrict a stack to specific namespaces, you can set the <code>NAMESPACES</code> environment variable in the <code>bw-autoconf</code> service:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the BunkerWeb instance so the autoconf service can detect it\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      ...\n      NAMESPACES: \"my-namespace my-other-namespace\" # Only listen to these namespaces\n...\n</code></pre> <p>Keep in mind that the <code>NAMESPACES</code> environment variable is a space-separated list of namespaces.</p> <p>Namespace specifications</p> <p>There can only be one database and one Scheduler per namespace. If you try to create multiple databases or Schedulers in the same namespace, the configurations will end up conflicting with each other.</p> <p>The Scheduler doesn't need the <code>NAMESPACE</code> label to work properly. It will only need the <code>DATABASE_URI</code> setting properly configured so that it can access the same database as the autoconf service.</p>"},{"location":"integrations/#kubernetes","title":"Kubernetes","text":"Kubernetes integration <p>To automate the configuration of BunkerWeb instances in a Kubernetes environment, the autoconf service serves as an Ingress controller. It configures the BunkerWeb instances based on Ingress resources and also monitors other Kubernetes objects, such as ConfigMap, for custom configurations.</p> <p>For an optimal setup, it is recommended to define BunkerWeb as a DaemonSet, which ensures that a pod is created on all nodes, while the autoconf and scheduler are defined as single replicated Deployment.</p> <p>Given the presence of multiple BunkerWeb instances, it is necessary to establish a shared data store implemented as a Redis or Valkey service. This service will be utilized by the instances to cache and share data among themselves. Further information about the Redis/Valkey settings can be found here.</p> <p>Database backend</p> <p>Please be aware that our instructions assume you are using MariaDB as the default database backend, as configured by the <code>DATABASE_URI</code> setting. However, we understand that you may prefer to utilize alternative backends for your Docker integration. If that is the case, rest assured that other database backends are still possible. See docker-compose files in the misc/integrations folder of the repository for more information.</p> <p>Clustered database backends setup are out-of-the-scope of this documentation.</p> <p>Please ensure that the autoconf services have access to the Kubernetes API. It is recommended to utilize RBAC authorization for this purpose.</p> <p>Custom CA for Kubernetes API</p> <p>If you use a custom CA for your Kubernetes API, you can mount a bundle file containing your intermediate(s) and root certificates on the ingress controller and set the <code>KUBERNETES_SSL_CA_CERT</code> environment value to the path of the bundle inside the container. Alternatively, even if it's not recommended, you can disable certificate verification by setting the <code>KUBERNETES_SSL_VERIFY</code> environment variable of the ingress controller to <code>no</code> (default is <code>yes</code>).</p> <p>Additionally, it is crucial to set the <code>KUBERNETES_MODE</code> environment variable to <code>yes</code> when utilizing the Kubernetes integration. This variable is mandatory for proper functionality.</p>"},{"location":"integrations/#installation-methods","title":"Installation methods","text":""},{"location":"integrations/#using-helm-chart-recommended","title":"Using helm chart (recommended)","text":"<p>The recommended way to install Kubernetes is to use the Helm chart available at <code>https://repo.bunkerweb.io/charts</code>:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>You can then use the bunkerweb helm chart from that repository:</p> <pre><code>helm install -f myvalues.yaml mybunkerweb bunkerweb/bunkerweb\n</code></pre> <p>The full list of values are listed in the charts/bunkerweb/values.yaml file of the bunkerity/bunkerweb-helm repository.</p>"},{"location":"integrations/#full-yaml-files","title":"Full YAML files","text":"<p>Instead of using the helm chart, you can also use the YAML boilerplates inside the misc/integrations folder of the GitHub repository. Please note that we highly recommend to use the helm chart instead.</p>"},{"location":"integrations/#ingress-resources","title":"Ingress resources","text":"<p>Once the BunkerWeb Kubernetes stack is successfully set up and operational (refer to the autoconf logs for detailed information), you can proceed with deploying web applications within the cluster and declaring your Ingress resource.</p> <p>It is important to note that the BunkerWeb settings need to be specified as annotations for the Ingress resource. For the domain part, please use the special value <code>bunkerweb.io</code>. By including the appropriate annotations, you can configure BunkerWeb accordingly for the Ingress resource.</p> <p>TLS support</p> <p>BunkerWeb ingress controller fully supports custom HTTPS certificates using the tls spec as shown in the example. Configuring solutions such as <code>cert-manager</code> to automatically generate tls secrets is out of the scope of this documentation.</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    # Will be applied to all host in this ingress\n    bunkerweb.io/MY_SETTING: \"value\"\n    # Will only be applied to the www.example.com host\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  # TLS is optional, you can also use builtin Let's Encrypt for example\n  # tls:\n  #   - hosts:\n  #       - www.example.com\n  #     secretName: secret-example-tls\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n...\n</code></pre>"},{"location":"integrations/#namespaces_1","title":"Namespaces","text":"<p>Starting from version <code>1.6.0</code>, BunkerWeb's autoconf stacks now support namespaces. This feature enables you to manage multiple clusters of BunkerWeb instances and services on the same Kubernetes cluster. To take advantage of namespaces, simply set the <code>namespace</code> metadata field on your BunkerWeb instances and services. Here's an example:</p> <pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: bunkerweb\n  namespace: my-namespace # Set the namespace for the BunkerWeb instance\n...\n</code></pre> <p>Namespace behavior</p> <p>By default all Autoconf stacks listen to all namespaces. If you want to restrict a stack to specific namespaces, you can set the <code>NAMESPACES</code> environment variable in the <code>bunkerweb-controller</code> deployment:</p> <pre><code>...\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-controller\n  namespace: my-namespace # Set the namespace for the Controller\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-controller\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-controller\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-controller\n          image: bunkerity/bunkerweb-autoconf:testing\n          imagePullPolicy: Always\n          env:\n            - name: NAMESPACES\n              value: \"my-namespace my-other-namespace\" # Only listen to these namespaces\n            ...\n...\n</code></pre> <p>Keep in mind that the <code>NAMESPACES</code> environment variable is a space-separated list of namespaces.</p> <p>Namespace specifications</p> <p>There can only be one database and one Scheduler per namespace. If you try to create multiple databases or Schedulers in the same namespace, the configurations will end up conflicting with each other.</p> <p>The Scheduler doesn't need the <code>NAMESPACE</code> annotation to work properly. It will only need the <code>DATABASE_URI</code> setting properly configured so that it can access the same database as the autoconf service.</p>"},{"location":"integrations/#ingress-class","title":"Ingress class","text":"<p>When installed using the official methods in the documentation, BunkerWeb comes with the following <code>IngressClass</code> definition:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: bunkerweb\nspec:\n  controller: bunkerweb.io/ingress-controller\n</code></pre> <p>In order to restrict the <code>Ingress</code> resources monitored by the ingress controller, you can set the <code>KUBERNETES_INGRESS_CLASS</code> environment variable with the value <code>bunkerweb</code>. Then, you can leverage the <code>ingressClassName</code> directive in your <code>Ingress</code> definitions:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    bunkerweb.io/MY_SETTING: \"value\"\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  ingressClassName: bunkerweb\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n</code></pre>"},{"location":"integrations/#custom-domain-name","title":"Custom domain name","text":"<p>If you use a custom domain name for your Kubernetes cluster different than the default <code>kubernetes.local</code> one, you can set the value using the <code>KUBERNETES_DOMAIN_NAME</code> environment variable on the scheduler container.</p>"},{"location":"integrations/#use-with-existing-ingress-controller","title":"Use with existing ingress controller","text":"<p>Keeping both existing ingress controller and BunkerWeb</p> <p>This is a use-case where you want to keep an existing ingress controller such as the nginx one. Typical traffic flow will be: Load Balancer =&gt; Ingress Controller =&gt; BunkerWeb =&gt; Application.</p>"},{"location":"integrations/#nginx-ingress-controller-install","title":"nginx ingress controller install","text":"<p>Install ingress nginx helm repo:</p> <pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n</code></pre> <p>Install nginx ingress controller with default values (might not work on your own cluster out-of-the-box, please check the documentation):</p> <pre><code>helm install --namespace nginx --create-namespace nginx ingress-nginx/ingress-nginx\n</code></pre> <p>Extract IP address of LB:</p> <pre><code>kubectl get svc nginx-ingress-nginx-controller -n nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Setup DNS entries to IP of LB (e.g <code>bunkerweb</code> subdomain for BW UI and <code>myapp</code> for application):</p> <pre><code>$ nslookup bunkerweb.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   bunkerweb.example.com\nAddress: 1.2.3.4\n$ nslookup myapp.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   myapp.example.com\nAddress: 1.2.3.4\n</code></pre> <p>BunkerWeb install</p> <p>Install BunkerWeb helm repo:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\nhelm repo update\n</code></pre> <p>Create <code>values.yaml</code> file:</p> <pre><code># Here we will setup the values needed to setup BunkerWeb behind an existing ingress controller\n# Traffic flow with BW: LB =&gt; existing Ingress Controller =&gt; BunkerWeb =&gt; Service\n# Traffic flow without BW: LB =&gt; existing Ingress Controller =&gt; Service\n\n# Global settings\nsettings:\n  misc:\n    # Replace with your DNS resolver\n    # to get it: kubectl exec in a random pod then cat /etc/resolv.conf\n    # if you have an IP as nameserver then do a reverse DNS lookup: nslookup &lt;IP&gt;\n    # most of the time it's coredns.kube-system.svc.cluster.local or kube-dns.kube-system.svc.cluster.local\n    dnsResolvers: \"kube-dns.kube-system.svc.cluster.local\"\n  kubernetes:\n    # We only consider Ingress resources with ingressClass bunkerweb to avoid conflicts with existing ingress controller\n    ingressClass: \"bunkerweb\"\n    # Optional: you can choose namespace(s) where BunkerWeb will listen for Ingress/ConfigMap changes\n    # Default (blank value) is all namespaces\n    namespaces: \"\"\n\n# Override the bunkerweb-external service type to ClusterIP\n# Since we don't need to expose it to the outside world\n# We will use the existing ingress controller to route traffic to BunkerWeb\nservice:\n  type: ClusterIP\n\n# BunkerWeb settings\nbunkerweb:\n  tag: testing\n\n# Scheduler settings\nscheduler:\n  tag: testing\n  extraEnvs:\n    # Enable real IP module to get real IP of clients\n    - name: USE_REAL_IP\n      value: \"yes\"\n\n# Controller settings\ncontroller:\n  tag: testing\n\n# UI settings\nui:\n  tag: testing\n</code></pre> <p>Install BunkerWeb with custom values:</p> <pre><code>helm install --namespace bunkerweb --create-namespace -f values.yaml bunkerweb bunkerweb/bunkerweb\n</code></pre> <p>Check logs and wait until everything is ready.</p> <p>Web UI install</p> <p>Setup the following ingress (assuming nginx controller is installed):</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ui-bunkerweb\n  # Replace with your namespace of BW if needed\n  namespace: bunkerweb\n  annotations:\n    # HTTPS is mandatory for web UI even if traffic is internal\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # We must set SNI so BW can serve the right vhost\n    # Replace with your domain\n    nginx.ingress.kubernetes.io/proxy-ssl-name: \"bunkerweb.example.com\"\n    nginx.ingress.kubernetes.io/proxy-ssl-server-name: \"on\"\nspec:\n  # Only served by nginx controller and not BW\n  ingressClassName: nginx\n  # Uncomment and edit if you want to use your own certificate\n  # tls:\n  # - hosts:\n  #   - bunkerweb.example.com\n  #   secretName: tls-secret\n  rules:\n  # Replace with your domain\n  - host: bunkerweb.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Created by Helm chart\n            name: bunkerweb-external\n            port:\n              # Using HTTPS port is mandatory for UI\n              number: 443\n</code></pre> <p>And you can now proceed to the setup wizard by browsing to <code>https://bunkerweb.example.com/setup</code>.</p> <p>Protecting existing application</p> <p>First of all, you will need to go to Global Config, select the SSL plugin and then disable the Auto redirect HTTP to HTTPS. Please note that you only need to do it one time.</p> <p>Let's assume that you have an application in the <code>myapp</code> namespace which is accessible using the <code>myapp-service</code> service on port <code>5000</code>.</p> <p>You will need to add a new service on the web UI and fill the required information:</p> <ul> <li>Server name: the public facing domain of your application (e.g. <code>myapp.example.com</code>)</li> <li>SSL/TLS: your ingress controller takes care of that part so don't enable it on BunkerWeb since traffic is internal within the cluster</li> <li>Reverse proxy host: the full URL of your application within the cluster (e.g. <code>http://myapp-service.myapp.svc.cluster.local:5000</code>)</li> </ul> <p>Once the new service has been added, you can now declare an Ingress resource for that service and route it to the BunkerWeb service on HTTP port:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: myapp\n  # Replace with your namespace of BW if needed\n  namespace: bunkerweb\nspec:\n  # Only served by nginx controller and not BW\n  ingressClassName: nginx\n  # Uncomment and edit if you want to use your own certificate\n  # tls:\n  # - hosts:\n  #   - myapp.example.com\n  #   secretName: tls-secret\n  rules:\n  # Replace with your domain\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Created by Helm chart\n            name: bunkerweb-external\n            port:\n              number: 80\n</code></pre> <p>You can visit <code>http(s)://myapp.example.com</code>, which is now protected with BunkerWeb \ud83d\udee1\ufe0f</p>"},{"location":"integrations/#swarm","title":"Swarm","text":"Docker Swarm integration <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>PRO support</p> <p>If you need Swarm support, please contact us at contact@bunkerity.com or via the contact form.</p> <p>Docker autoconf</p> <p>The Swarm integration is similar to the Docker autoconf one (but with services instead of containers). Please read the Docker autoconf integration section first if needed.</p> <p>To enable automatic configuration of BunkerWeb instances, the autoconf service requires access to the Docker API. This service listens for Docker Swarm events, such as service creation or deletion, and seamlessly configures the BunkerWeb instances in real-time without any downtime. It also monitors other Swarm objects, such as configs, for custom configurations.</p> <p>Similar to the Docker autoconf integration, configuration for web services is defined using labels that start with the bunkerweb  prefix.</p> <p>For an optimal setup, it is recommended to schedule the BunkerWeb service as a global service on all nodes, while the autoconf, scheduler, and Docker API proxy services should be scheduled as single replicated services. Please note that the Docker API proxy service needs to be scheduled on a manager node unless you configure it to use a remote API (which is not covered in the documentation).</p> <p>Since multiple instances of BunkerWeb are running, a shared data store implemented as a Redis or Valkey service must be created. These instances will utilize the Redis/Valkey service to cache and share data. Further details regarding the Redis/Valkey settings can be found here.</p> <p>As for the database volume, the documentation does not specify a specific approach. Choosing either a shared folder or a specific driver for the database volume is dependent on your unique use-case and is left as an exercise for the reader.</p> <p>Database backend</p> <p>Please be aware that our instructions assume you are using MariaDB as the default database backend, as configured by the <code>DATABASE_URI</code> setting. However, we understand that you may prefer to utilize alternative backends for your Docker integration. If that is the case, rest assured that other database backends are still possible. See docker-compose files in the misc/integrations folder of the repository for more information.</p> <p>Clustered database backends setup are out-of-the-scope of this documentation.</p> <p>Here is the stack boilerplate that you can deploy using <code>docker stack deploy</code>:</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both services\n  SWARM_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\" # Mandatory label for the autoconf service to identify the BunkerWeb instance\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      SWARM_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # The Docker socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-redis:\n    image: redis:7-alpine\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre> <p>Swarm mandatory setting</p> <p>Please note that the <code>SWARM_MODE: \"yes\"</code> environment variable is mandatory when using the Swarm integration.</p>"},{"location":"integrations/#swarm-services","title":"Swarm services","text":"<p>Once the BunkerWeb Swarm stack is set up and running (see autoconf and scheduler logs for more information), you will be able to deploy web applications in the cluster and use labels to dynamically configure BunkerWeb:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"integrations/#namespaces_2","title":"Namespaces","text":"<p>Starting from version <code>1.6.0</code>, BunkerWeb's Autoconf stacks now support namespaces. This feature enables you to manage multiple \"clusters\" of BunkerWeb instances and services on the same Docker host. To take advantage of namespaces, simply set the <code>NAMESPACE</code> label on your services. Here's an example:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the service\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Namespace behavior</p> <p>By default all Autoconf stacks listen to all namespaces. If you want to restrict a stack to specific namespaces, you can set the <code>NAMESPACES</code> environment variable in the <code>bw-autoconf</code> service:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the BunkerWeb instance\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      NAMESPACES: \"my-namespace my-other-namespace\" # Only listen to these namespaces\n      ...\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n...\n</code></pre> <p>Keep in mind that the <code>NAMESPACES</code> environment variable is a space-separated list of namespaces.</p> <p>Namespace specifications</p> <p>There can only be one database and one Scheduler per namespace. If you try to create multiple databases or Schedulers in the same namespace, the configurations will end up conflicting with each other.</p> <p>The Scheduler doesn't need the <code>NAMESPACE</code> label to work properly. It will only need the <code>DATABASE_URI</code> setting properly configured so that it can access the same database as the autoconf service.</p>"},{"location":"integrations/#microsoft-azure","title":"Microsoft Azure","text":"Azure integration <p>Recommended VM size</p> <p>Please be aware while you choose the SKU of the VM. You must select a SKU compatible with Gen2 VM and we recommend starting at B2s or Ds2 series for optimal use.</p> <p>You can easily deploy BunkerWeb on your Azure subscription in several ways:</p> <ul> <li>Azure CLI in Cloud Shell</li> <li>Azure ARM Template</li> <li>Azure portal via the Marketplace</li> </ul> Cloud ShellARM TemplateMarketplace <p>Create a resource group. Replace value <code>RG_NAME</code></p> <pre><code>az group create --name \"RG_NAME\" --location \"LOCATION\"\n</code></pre> <p>Create a VM with <code>Standard_B2s</code> SKU in the location of the resource group. Replace values <code>RG_NAME</code>, <code>VM_NAME</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --vnet-name \"VNET_NAME\" --size Standard_B2s --subnet \"SUBNET_NAME\"\n</code></pre> <p>Full command. Replace values <code>RG_NAME</code>, <code>VM_NAME</code>, <code>LOCATION</code>, <code>HOSTNAME</code>, <code>USERNAME</code>, <code>PUBLIC_IP</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code>, <code>NSG_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --location \"LOCATION\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --computer-name \"HOSTNAME\" --admin-username \"USERNAME\" --public-ip-address \"PUBLIC_IP\" --public-ip-address-allocation Static --size Standard_B2s --public-ip-sku Standard --os-disk-delete-option Delete --nic-delete-option Delete --vnet-name \"VNET_NAME\" --subnet \"SUBNET_NAME\" --nsg \"NSG_NAME\"\n</code></pre> <p>Permissions requirement</p> <p>To deploy a ARM template, you need write access on the resources you're deploying and access to all operations on the Microsoft.Resources/deployments resource type. To deploy a virtual machine, you need Microsoft.Compute/virtualMachines/write and Microsoft.Resources/deployments/* permissions. The what-if operation has the same permission requirements.</p> <p>Deploy the ARM Template:</p> <p></p> <p>Login in Azure portal.</p> <p>Get BunkerWeb from the Create resource menu.</p> <p>You can also go through the Marketplace.</p> <p>You can access the setup wizard by browsing the <code>https://your-ip-address/setup</code> URI of your virtual machine.</p>"},{"location":"plugins/","title":"Plugins","text":"<p>BunkerWeb comes with a plugin system making it possible to easily add new features. Once a plugin is installed, you can manage it using additional settings defined by the plugin.</p>"},{"location":"plugins/#official-plugins","title":"Official plugins","text":"<p>Here is the list of \"official\" plugins that we maintain (see the bunkerweb-plugins repository for more information) :</p> Name Version Description Link ClamAV 1.9 Automatically scans uploaded files with the ClamAV antivirus engine and denies the request when a file is detected as malicious. bunkerweb-plugins/clamav Coraza 1.9 Inspect requests using the Coraza WAF (alternative of ModSecurity). bunkerweb-plugins/coraza Discord 1.9 Send security notifications to a Discord channel using a Webhook. bunkerweb-plugins/discord Slack 1.9 Send security notifications to a Slack channel using a Webhook. bunkerweb-plugins/slack VirusTotal 1.9 Automatically scans uploaded files with the VirusTotal API and denies the request when a file is detected as malicious. bunkerweb-plugins/virustotal WebHook 1.9 Send security notifications to a custom HTTP endpoint using a  Webhook. bunkerweb-plugins/webhook"},{"location":"plugins/#how-to-use-a-plugin","title":"How to use a plugin","text":""},{"location":"plugins/#automatic","title":"Automatic","text":"<p>If you want to quickly install external plugins, you can use the <code>EXTERNAL_PLUGIN_URLS</code> setting. It takes a list of URLs separated by spaces, each pointing to a compressed (zip format) archive containing one or more plugins.</p> <p>You can use the following value if you want to automatically install the official plugins : <code>EXTERNAL_PLUGIN_URLS=https://github.com/bunkerity/bunkerweb-plugins/archive/refs/tags/v1.9.zip</code></p>"},{"location":"plugins/#manual","title":"Manual","text":"<p>The first step is to install the plugin by placing its files inside the corresponding <code>plugins</code> data folder. The procedure depends on your integration :</p> DockerDocker autoconfSwarmKubernetesLinux <p>When using the Docker integration, plugins must be placed in the volume mounted on <code>/data/plugins</code> in the scheduler container.</p> <p>The first thing to do is to create the plugins folder :</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Then, you can drop the plugins of your choice into that folder :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> Using local folder for persistent data <p>The scheduler runs as an unprivileged user with UID 101 and GID 101 inside the container. The reason behind this is security : in case a vulnerability is exploited, the attacker won't have full root (UID/GID 0) privileges. But there is a downside : if you use a local folder for the persistent data, you will need to set the correct permissions so the unprivileged user can write data to it. Something like that should do the trick :</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternatively, if the folder already exists :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>If you are using Docker in rootless mode or podman, UIDs and GIDs in the container will be mapped to different ones in the host. You will first need to check your initial subuid and subgid :</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>For example, if you have a value of 100000, the mapped UID/GID will be 100100 (100000 + 100) :</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Or if the folder already exists :</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Then you can mount the volume when starting your Docker stack :</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>When using the Docker autoconf integration, plugins must be placed in the volume mounted on <code>/data/plugins</code> in the scheduler container.</p> <p>The first thing to do is to create the plugins folder :</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Then, you can drop the plugins of your choice into that folder :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> <p>Because the scheduler runs as an unprivileged user with UID and GID 101, you will need to edit the permissions :</p> <pre><code>chown -R 101:101 ./bw-data\n</code></pre> <p>Then you can mount the volume when starting your Docker stack :</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>When using the Swarm integration, plugins must be placed in the volume mounted on <code>/data/plugins</code> in the scheduler container.</p> <p>Swarm volume</p> <p>Configuring a Swarm volume that will persist when the scheduler service is running on different nodes is not covered is in this documentation. We will assume that you have a shared folder mounted on <code>/shared</code> across all nodes.</p> <p>The first thing to do is to create the plugins folder :</p> <pre><code>mkdir -p /shared/bw-plugins\n</code></pre> <p>Then, you can drop the plugins of your choice into that folder :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /shared/bw-plugins\n</code></pre> <p>Because the scheduler runs as an unprivileged user with UID and GID 101, you will need to edit the permissions :</p> <pre><code>chown -R 101:101 /shared/bw-plugins\n</code></pre> <p>Then you can mount the volume when starting your Swarm stack :</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - /shared/bw-plugins:/data/plugins\n...\n</code></pre> <p>When using the Kubernetes integration, plugins must be placed in the volume mounted on <code>/data/plugins</code> in the scheduler container.</p> <p>The first thing to do is to declare a PersistentVolumeClaim that will contain our plugins data :</p> <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-bunkerweb-plugins\nspec:\n  accessModes:\n    - ReadWriteOnce\nresources:\n  requests:\n    storage: 5Gi\n</code></pre> <p>You can now add the volume mount and an init container to automatically provision the volume :</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-scheduler\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-scheduler\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-scheduler\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-scheduler\n          image: bunkerity/bunkerweb-scheduler:testing\n          imagePullPolicy: Always\n          env:\n            - name: KUBERNETES_MODE\n              value: \"yes\"\n            - name: \"DATABASE_URI\"\n              value: \"mariadb+pymysql://bunkerweb:changeme@svc-bunkerweb-db:3306/db\"\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      initContainers:\n        - name: bunkerweb-scheduler-init\n          image: alpine/git\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"git clone https://github.com/bunkerity/bunkerweb-plugins /data/plugins &amp;&amp; chown -R 101:101 /data/plugins\"]\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      volumes:\n        - name: vol-plugins\n          persistentVolumeClaim:\n            claimName: pvc-bunkerweb-plugins\n</code></pre> <p>When using the Linux integration, plugins must be written to the <code>/etc/bunkerweb/plugins</code> folder :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /etc/bunkerweb/plugins &amp;&amp; \\\nchown -R nginx:nginx /etc/bunkerweb/plugins\n</code></pre>"},{"location":"plugins/#writing-a-plugin","title":"Writing a plugin","text":""},{"location":"plugins/#structure","title":"Structure","text":"<p>Existing plugins</p> <p>If the documentation is not enough, you can have a look at the existing source code of official plugins and the core plugins (already included in BunkerWeb but they are plugins, technically speaking).</p> <p>What a plugin structure looks like: <pre><code>plugin /\n    confs / conf_type / conf_name.conf\n    ui / actions.py\n         hooks.py\n         template.html\n         blueprints / &lt;blueprint_file(s)&gt;\n              templates / &lt;blueprint_template(s)&gt;\n    jobs / my-job.py\n    templates / my-template.json\n          my-template / configs / conf_type / conf_name.conf\n    plugin.lua\n    plugin.json\n</code></pre></p> <ul> <li> <p>conf_name.conf : Add custom NGINX configurations (as Jinja2 templates).</p> </li> <li> <p>actions.py : Script to execute on the Flask server. This script runs in a Flask context, giving you access to libraries and utilities like <code>jinja2</code> and <code>requests</code>.</p> </li> <li> <p>hooks.py : Custom Python file that contains flask's hooks and will be executed when the plugin is loaded.</p> </li> <li> <p>template.html : Custom plugin page accessed via the UI.</p> </li> <li> <p>blueprints folder (within ui):   This folder is used to override existing Flask blueprints or create new ones. Inside, you can include blueprint files and an optional templates subfolder for blueprint-specific templates.</p> </li> <li> <p>jobs py file : Custom Python files executed as jobs by the scheduler.</p> </li> <li> <p>my-template.json : Add custom templates to override the default values of settings and apply custom configurations easily.</p> </li> <li> <p>plugin.lua : Code executed on NGINX using the NGINX LUA module.</p> </li> <li> <p>plugin.json : Metadata, settings, and job definitions for your plugin.</p> </li> </ul>"},{"location":"plugins/#getting-started","title":"Getting started","text":"<p>The first step is to create a folder that will contain the plugin :</p> <pre><code>mkdir myplugin &amp;&amp; \\\ncd myplugin\n</code></pre>"},{"location":"plugins/#metadata","title":"Metadata","text":"<p>A file named plugin.json and written at the root of the plugin folder must contain metadata about the plugin. Here is an example :</p> <pre><code>{\n  \"id\": \"myplugin\",\n  \"name\": \"My Plugin\",\n  \"description\": \"Just an example plugin.\",\n  \"version\": \"1.0\",\n  \"stream\": \"partial\",\n  \"settings\": {\n    \"DUMMY_SETTING\": {\n      \"context\": \"multisite\",\n      \"default\": \"1234\",\n      \"help\": \"Here is the help of the setting.\",\n      \"id\": \"dummy-id\",\n      \"label\": \"Dummy setting\",\n      \"regex\": \"^.*$\",\n      \"type\": \"text\"\n    }\n  },\n  \"jobs\": [\n    {\n      \"name\": \"my-job\",\n      \"file\": \"my-job.py\",\n      \"every\": \"hour\"\n    }\n  ]\n}\n</code></pre> <p>Here are the details of the fields :</p> Field Mandatory Type Description <code>id</code> yes string Internal ID for the plugin : must be unique among other plugins (including \"core\" ones) and contain only lowercase chars. <code>name</code> yes string Name of your plugin. <code>description</code> yes string Description of your plugin. <code>version</code> yes string Version of your plugin. <code>stream</code> yes string Information about stream support : <code>no</code>, <code>yes</code> or <code>partial</code>. <code>settings</code> yes dict List of the settings of your plugin. <code>jobs</code> no list List of the jobs of your plugin. <p>Each setting has the following fields (the key is the ID of the settings used in a configuration) :</p> Field Mandatory Type Description <code>context</code> yes string Context of the setting : <code>multisite</code> or <code>global</code>. <code>default</code> yes string The default value of the setting. <code>help</code> yes string Help text about the plugin (shown in web UI). <code>id</code> yes string Internal ID used by the web UI for HTML elements. <code>label</code> yes string Label shown by the web UI. <code>regex</code> yes string The regex used to validate the value provided by the user. <code>type</code> yes string The type of the field : <code>text</code>, <code>check</code>, <code>select</code> or <code>password</code>. <code>multiple</code> no string Unique ID to group multiple settings with numbers as suffix. <code>select</code> no list List of possible string values when <code>type</code> is <code>select</code>. <p>Each job has the following fields :</p> Field Mandatory Type Description <code>name</code> yes string Name of the job. <code>file</code> yes string Name of the file inside the jobs folder. <code>every</code> yes string Job scheduling frequency : <code>minute</code>, <code>hour</code>, <code>day</code>, <code>week</code> or <code>once</code> (no frequency, only once before (re)generating the configuration)."},{"location":"plugins/#configurations","title":"Configurations","text":"<p>You can add custom NGINX configurations by adding a folder named confs with content similar to the custom configurations. Each subfolder inside the confs will contain jinja2 templates that will be generated and loaded at the corresponding context (<code>http</code>, <code>server-http</code>, <code>default-server-http</code>, <code>stream</code>, <code>server-stream</code>, <code>modsec</code>, <code>modsec-crs</code>, <code>crs-plugins-before</code> and <code>crs-plugins-after</code>).</p> <p>Here is an example for a configuration template file inside the confs/server-http folder named example.conf :</p> <pre><code>location /setting {\n  default_type 'text/plain';\n    content_by_lua_block {\n        ngx.say('{{ DUMMY_SETTING }}')\n    }\n}\n</code></pre> <p><code>{{ DUMMY_SETTING }}</code> will be replaced by the value of the <code>DUMMY_SETTING</code> chosen by the user of the plugin.</p>"},{"location":"plugins/#templates","title":"Templates","text":"<p>Check the templates documentation for more information.</p>"},{"location":"plugins/#lua","title":"LUA","text":""},{"location":"plugins/#main-script","title":"Main script","text":"<p>Under the hood, BunkerWeb is using the NGINX LUA module to execute code within NGINX. Plugins that need to execute code must provide a lua file at the root directory of the plugin folder using the <code>id</code> value of plugin.json as its name. Here is an example named myplugin.lua :</p> <pre><code>local class     = require \"middleclass\"\nlocal plugin    = require \"bunkerweb.plugin\"\nlocal utils     = require \"bunkerweb.utils\"\n\n\nlocal myplugin = class(\"myplugin\", plugin)\n\n\nfunction myplugin:initialize(ctx)\n    plugin.initialize(self, \"myplugin\", ctx)\n    self.dummy = \"dummy\"\nend\n\nfunction myplugin:init()\n    self.logger:log(ngx.NOTICE, \"init called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:set()\n    self.logger:log(ngx.NOTICE, \"set called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:access()\n    self.logger:log(ngx.NOTICE, \"access called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log()\n    self.logger:log(ngx.NOTICE, \"log called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_default()\n    self.logger:log(ngx.NOTICE, \"log_default called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:preread()\n    self.logger:log(ngx.NOTICE, \"preread called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_stream()\n    self.logger:log(ngx.NOTICE, \"log_stream called\")\n    return self:ret(true, \"success\")\nend\n\nreturn myplugin\n</code></pre> <p>The declared functions are automatically called during specific contexts. Here are the details of each function :</p> Function Context Description Return value <code>init</code> init_by_lua Called when NGINX just started or received a reload order. the typical use case is to prepare any data that will be used by your plugin. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li></ul> <code>set</code> set_by_lua Called before each request received by the server.The typical use case is for computing before access phase. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li></ul> <code>access</code> access_by_lua Called on each request received by the server. The typical use case is to do the security checks here and deny the request if needed. <code>ret</code>, <code>msg</code>,<code>status</code>,<code>redirect</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li><li><code>status</code> (number) : interrupt current process and return HTTP status</li><li><code>redirect</code> (URL) : if set will redirect to given URL</li></ul> <code>log</code> log_by_lua Called when a request has finished (and before it gets logged to the access logs). The typical use case is to make stats or compute counters for example. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li></ul> <code>log_default</code> log_by_lua Same as <code>log</code> but only called on the default server. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li></ul> <code>preread</code> preread_by_lua Similar to the <code>access</code> function but for stream mode. <code>ret</code>, <code>msg</code>,<code>status</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li><li><code>status</code> (number) : interrupt current process and return status</li></ul> <code>log_stream</code> log_by_lua Similar to the <code>log</code> function but for stream mode. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean) : true if no error or else false</li><li><code>msg</code> (string) : success or error message</li></ul>"},{"location":"plugins/#libraries","title":"Libraries","text":"<p>All directives from NGINX LUA module and are available and NGINX stream LUA module. On top of that, you can use the LUA libraries included within BunkerWeb : see this script for the complete list.</p> <p>If you need additional libraries, you can put them in the root folder of the plugin and access them by prefixing them with your plugin ID. Here is an example file named mylibrary.lua :</p> <pre><code>local _M = {}\n\n_M.dummy = function ()\n    return \"dummy\"\nend\n\nreturn _M\n</code></pre> <p>And here is how you can use it from the myplugin.lua file :</p> <pre><code>local mylibrary = require \"myplugin.mylibrary\"\n\n...\n\nmylibrary.dummy()\n\n...\n</code></pre>"},{"location":"plugins/#helpers","title":"Helpers","text":"<p>Some helpers modules provide common helpful helpers :</p> <ul> <li><code>self.variables</code> : allows to access and store plugins' attributes</li> <li><code>self.logger</code> : print logs</li> <li><code>bunkerweb.utils</code> : various useful functions</li> <li><code>bunkerweb.datastore</code> : access the global shared data on one instance (key/value store)</li> <li><code>bunkerweb.clusterstore</code> : access a Redis data store shared between BunkerWeb instances (key/value store)</li> </ul> <p>To access the functions, you first need to require the modules :</p> <pre><code>local utils       = require \"bunkerweb.utils\"\nlocal datastore   = require \"bunkerweb.datastore\"\nlocal clustestore = require \"bunkerweb.clustertore\"\n</code></pre> <p>Retrieve a setting value :</p> <pre><code>local myvar = self.variables[\"DUMMY_SETTING\"]\nif not myvar then\n    self.logger:log(ngx.ERR, \"can't retrieve setting DUMMY_SETTING\")\nelse\n    self.logger:log(ngx.NOTICE, \"DUMMY_SETTING = \" .. value)\nend\n</code></pre> <p>Store something in the local cache :</p> <pre><code>local ok, err = self.datastore:set(\"plugin_myplugin_something\", \"somevalue\")\nif not ok then\n    self.logger:log(ngx.ERR, \"can't save plugin_myplugin_something into datastore : \" .. err)\nelse\n    self.logger:log(ngx.NOTICE, \"successfully saved plugin_myplugin_something into datastore\")\nend\n</code></pre> <p>Check if an IP address is global :</p> <pre><code>local ret, err = utils.ip_is_global(ngx.ctx.bw.remote_addr)\nif ret == nil then\n    self.logger:log(ngx.ERR, \"error while checking if IP \" .. ngx.ctx.bw.remote_addr .. \" is global or not : \" .. err)\nelseif not ret then\n    self.logger:log(ngx.NOTICE, \"IP \" .. ngx.ctx.bw.remote_addr .. \" is not global\")\nelse\n    self.logger:log(ngx.NOTICE, \"IP \" .. ngx.ctx.bw.remote_addr .. \" is global\")\nend\n</code></pre> <p>More examples</p> <p>If you want to see the full list of available functions, you can have a look at the files present in the lua directory of the repository.</p>"},{"location":"plugins/#jobs","title":"Jobs","text":"<p>BunkerWeb uses an internal job scheduler for periodic tasks like renewing certificates with certbot, downloading blacklists, downloading MMDB files, ... You can add tasks of your choice by putting them inside a subfolder named jobs and listing them in the plugin.json metadata file. Don't forget to add the execution permissions for everyone to avoid any problems when a user is cloning and installing your plugin.</p>"},{"location":"plugins/#plugin-page","title":"Plugin page","text":"<p>Everything related to the web UI is located inside the subfolder ui as we seen in the previous structure section..</p>"},{"location":"plugins/#prerequisites","title":"Prerequisites","text":"<p>When you want to create a plugin page, you need two files :</p> <ul> <li> <p>template.html that will be accessible with a GET /plugins/&lt;plugin_id&gt;.</p> </li> <li> <p>actions.py where you can add some scripting and logic with a POST /plugins/&lt;plugin_id&gt;. Notice that this file need a function with the same name as the plugin to work. This file is needed even if the function is empty.</p> </li> </ul>"},{"location":"plugins/#basic-example","title":"Basic example","text":"<p>Jinja 2 template</p> <p>The template.html file is a Jinja2 template, please refer to the Jinja2 documentation if needed.</p> <p>We can put aside the actions.py file and start only using the template on a GET situation. The template can access app context and libs, so you can use Jinja, request or flask utils.</p> <p>For example, you can get the request arguments in your template like this :</p> <pre><code>&lt;p&gt;request args : {{ request.args.get() }}.&lt;/p&gt;\n</code></pre>"},{"location":"plugins/#actionspy","title":"Actions.py","text":"<p>CSRF Token</p> <p>Please note that every form submission is protected via a CSRF token, you will need to include the following snippet into your forms : <pre><code>&lt;input type=\"hidden\" name=\"csrf_token\" value=\"{{ csrf_token() }}\" /&gt;\n</code></pre></p> <p>You can power-up your plugin page with additional scripting with the actions.py file when sending a POST /plugins/&lt;plugin_id&gt;.</p> <p>You have two functions by default in actions.py :</p> <p>pre_render function</p> <p>This allows you to retrieve data when you GET the template, and to use the data with the pre_render variable available in Jinja to display content more dynamically.</p> <pre><code>def pre_render(**kwargs)\n  return &lt;pre_render_data&gt;\n</code></pre> <p>BunkerWeb will send you this type of response :</p> <pre><code>return jsonify({\"status\": \"ok|ko\", \"code\" : XXX, \"data\": &lt;pre_render_data&gt;}), 200\n</code></pre> <p>&lt;plugin_id&gt; function</p> <p>This allows you to retrieve data when you make a POST from the template endpoint, which must be used in AJAX.</p> <pre><code>def myplugin(**kwargs)\n  return &lt;plugin_id_data&gt;\n</code></pre> <p>BunkerWeb will send you this type of response :</p> <pre><code>return jsonify({\"message\": \"ok\", \"data\": &lt;plugin_id_data&gt;}), 200\n</code></pre> <p>What you can access from action.py</p> <p>Here are the arguments that are passed and access on action.py functions:</p> <pre><code>function(app=app, args=request.args.to_dict() or request.json or None)\n</code></pre> <p>Available Python Libraries</p> <p>BunkerWeb's Web UI includes a set of pre-installed Python libraries that you can use in your plugin's <code>actions.py</code> or other UI-related scripts. These are available out-of-the-box without needing additional installations.</p> <p>Here's the complete list of included libraries:</p> <ul> <li>bcrypt - Password hashing library</li> <li>biscuit-python - Biscuit authentication tokens</li> <li>certbot - ACME client for Let's Encrypt</li> <li>Flask - Web framework</li> <li>Flask-Login - User session management</li> <li>Flask-Session[cachelib] - Server-side session storage</li> <li>Flask-WTF - Form handling and CSRF protection</li> <li>gunicorn[gthread] - WSGI HTTP server</li> <li>pillow - Image processing</li> <li>psutil - System and process utilities</li> <li>python_dateutil - Date and time utilities</li> <li>qrcode - QR code generation</li> <li>regex - Advanced regular expressions</li> <li>urllib3 - HTTP client</li> <li>user_agents - User agent parsing</li> </ul> <p>Using Libraries in Your Plugin</p> <p>To import and use these libraries in your <code>actions.py</code> file, simply use the standard Python <code>import</code> statement. For example:</p> <pre><code>from flask import request\nimport bcrypt\n</code></pre> External Libraries <p>If you need libraries not listed above, install them inside the <code>ui</code> folder of your plugin and import them using the classical <code>import</code> directive. Ensure compatibility with the existing environment to avoid conflicts.</p> <p>Some examples</p> <ul> <li>Retrieve form submitted data</li> </ul> <pre><code>from flask import request\n\ndef myplugin(**kwargs) :\n    my_form_value = request.form[\"my_form_input\"]\n  return my_form_value\n</code></pre> <ul> <li>Access app config</li> </ul> <p>action.py <pre><code>from flask import request\n\ndef pre_render(**kwargs) :\n    config = kwargs['app'].config[\"CONFIG\"].get_config(methods=False)\n  return config\n</code></pre></p> <p>template <pre><code>&lt;!-- metadata + config --&gt;\n&lt;div&gt;{{ pre_render }}&lt;/div&gt;\n</code></pre></p>"},{"location":"plugins/#hookspy","title":"Hooks.py","text":"<p>This documentation outlines the lifecycle hooks used for managing different stages of a request within the application. Each hook is associated with a specific phase.</p> before_requestafter_requestteardown_requestcontext_processor <p>These hooks are executed before processing an incoming request. They are typically used for pre-processing tasks such as authentication, validation, or logging.</p> <p>If the hook returns a response object, Flask will skip the request handling and return the response directly. This can be useful for short-circuiting the request processing pipeline.</p> <p>Example:</p> <pre><code>from flask import request, Response\n\ndef before_request():\n    print(\"Before-request: Validating request...\", flush=True)\n    # Perform authentication, validation, or logging here\n    if not is_valid_request(request): # We are in the app context\n        return Response(\"Invalid request!\", status=400)\n\ndef is_valid_request(request):\n    # Dummy validation logic\n    return \"user\" in request\n</code></pre> <p>These hooks that run after the request has been processed. They are ideal for post-processing tasks such as cleanup, additional logging, or modifying the response before it is sent back.</p> <p>They receive the response object as an argument and can modify it before returning it. The first after_request hook to return a response will be used as the final response.</p> <p>Example:</p> <pre><code>from flask import request\n\ndef after_request(response):\n    print(\"After-request: Logging response...\", flush=True)\n    # Perform logging, cleanup, or response modifications here\n    log_response(response)\n    return response\n\ndef log_response(response):\n    # Dummy logging logic\n    print(\"Response logged:\", response, flush=True)\n</code></pre> <p>These hooks are invoked when the request context is being torn down. These hooks are used for releasing resources or handling errors that occurred during the request lifecycle.</p> <p>Example:</p> <pre><code>def teardown_request(error=None):\n    print(\"Teardown-request: Cleaning up resources...\", flush=True)\n    # Perform cleanup, release resources, or handle errors here\n    if error:\n        handle_error(error)\n    cleanup_resources()\n\ndef handle_error(error):\n    # Dummy error handling logic\n    print(\"Error encountered:\", error, flush=True)\n\ndef cleanup_resources():\n    # Dummy resource cleanup logic\n    print(\"Resources have been cleaned up.\", flush=True)\n</code></pre> <p>These hooks are used to inject additional context into templates or views. They enrich the runtime context by passing common data (like user information or configuration settings) to the templates.</p> <p>If a context processor returns a dictionary, the keys and values will be added to the context for all templates. This allows you to share data across multiple views or templates.</p> <p>Example:</p> <pre><code>def context_processor() -&gt; dict:\n    print(\"Context-processor: Injecting context data...\", flush=True)\n    # Return a dictionary containing context data for templates/views\n    return {\n        \"current_user\": \"John Doe\",\n        \"app_version\": \"1.0.0\",\n        \"feature_flags\": {\"new_ui\": True}\n    }\n</code></pre> <p>This lifecycle hook design provides a modular and systematic approach to managing various aspects of a request's lifecycle:</p> <ul> <li>Modularity: Each hook is responsible for a distinct phase, ensuring that concerns are separated.</li> <li>Maintainability: Developers can easily add, modify, or remove hook implementations without impacting other parts of the request lifecycle.</li> <li>Extensibility: The framework is flexible, allowing for additional hooks or enhancements as application requirements evolve.</li> </ul> <p>By clearly defining the responsibilities of each hook and their associated logging prefixes, the system ensures that each stage of request processing is transparent and manageable.</p>"},{"location":"plugins/#blueprints","title":"Blueprints","text":"<p>In Flask, blueprints serve as a modular way to organize related components\u2014such as views, templates, and static files\u2014within your application. They allow you to group functionality logically and can be used to create new sections of your app or override existing ones.</p>"},{"location":"plugins/#creating-a-blueprint","title":"Creating a Blueprint","text":"<p>To define a blueprint, you create an instance of the <code>Blueprint</code> class, specifying its name and import path. You then define routes and views associated with this blueprint.</p> <p>Example: Defining a New Blueprint</p> <pre><code>from os.path import dirname\nfrom flask import Blueprint, render_template\n\n# Define the blueprint\nmy_blueprint = Blueprint('my_blueprint', __name__, template_folder=dirname(__file__) + '/templates') # The template_folder is set to avoid conflicts with the original blueprint\n\n# Define a route within the blueprint\n@my_blueprint.route('/my_blueprint')\ndef my_blueprint_page():\n    return render_template('my_blueprint.html')\n</code></pre> <p>In this example, a blueprint named <code>my_blueprint</code> is created, and a route <code>/my_blueprint</code> is defined within it.</p>"},{"location":"plugins/#overriding-an-existing-blueprint","title":"Overriding an Existing Blueprint","text":"<p>Blueprints can also override existing ones to modify or extend functionality. To do this, ensure that the new blueprint has the same name as the one you're overriding and register it after the original.</p> <p>Example: Overriding an Existing Blueprint</p> <pre><code>from os.path import dirname\nfrom flask import Flask, Blueprint\n\n# Original blueprint\ninstances = Blueprint('instances', __name__, template_folder=dirname(__file__) + '/templates') # The template_folder is set to avoid conflicts with the original blueprint\n\n@instances.route('/instances')\ndef override_instances():\n    return \"My new instances page\"\n</code></pre> <p>In this scenario, accessing the URL <code>/instances</code> will display \"My new instances page\" because the <code>instances</code> blueprint, registered last, overrides the original <code>instances</code> blueprint.</p> <p>About overriding</p> <p>Be cautious when overriding existing blueprints, as it can impact the behavior of the application. Ensure that the changes align with the application's requirements and do not introduce unexpected side effects.</p> <p>All existing routes will be removed from he original blueprint, so you will need to re-implement them if needed.</p>"},{"location":"plugins/#naming-conventions","title":"Naming Conventions","text":"<p>Important</p> <p>Ensure the blueprint\u2019s name matches the blueprint variable name, else it will not be considered as a valid blueprint and will not be registered.</p> <p>For consistency and clarity, it's advisable to follow these naming conventions:</p> <ul> <li> <p>Blueprint Names: Use short, all-lowercase names. Underscores can be used for readability, e.g., <code>user_auth</code>.</p> </li> <li> <p>File Names: Match the filename to the blueprint name, ensuring it's all lowercase with underscores as needed, e.g., <code>user_auth.py</code>.</p> </li> </ul> <p>This practice aligns with Python's module naming conventions and helps maintain a clear project structure.</p> <p>Example: Blueprint and File Naming</p> <pre><code>plugin /\n    ui / blueprints / user_auth.py\n                      templates / user_auth.html\n</code></pre> <p>In this structure, <code>user_auth.py</code> contains the <code>user_auth</code> blueprint, and <code>user_auth.html</code> is the associated template, adhering to the recommended naming conventions.</p>"},{"location":"professional-services/","title":"Professional services","text":""},{"location":"professional-services/#why-should-i-get-professional-services","title":"Why should I get professional services?","text":"<p>Since BunkerWeb is a free (as in freedom) software, you have the right to use it freely as long as you respect the AGPLv3 license.</p> <p>You can also upgrade BunkerWeb to the PRO version at any time. By doing so, you will get an enhanced experience to assist you in the security of your web services. Our goal is to help you focus on your business needs. The PRO version is updated regularly and we try our best to gather feedback from enterprises to include the needed features.</p> <p>But dedicating time to a specific technology may not be easy depending on your business priorities. Not to mention that cybersecurity is a complex domain where being both judge and jury is not recommended.</p> <p>Getting professional services in addition to the open-source or PRO version is the ideal solution to cover your business needs. You can focus on your top priorities and rely on a trusted partner when it comes to web security.</p> <p>Please note that professional services are directly offered by Bunkerity, the company maintaining the BunkerWeb project, through our BunkerWeb Panel online platform.</p>"},{"location":"professional-services/#which-professional-services-do-you-offer","title":"Which professional services do you offer?","text":"<p>We offer technical support and consulting around the BunkerWeb solution. By using this service, we will assist you on the technical issues (installation, configuration, false positive, ...). We can also offer custom SLA depending on your needs.</p> <p>According to your needs you have the choice between \"one time\" and subscription offers.</p>"},{"location":"professional-services/#how-can-i-get-more-information","title":"How can I get more information?","text":"<p>You will find more information by visiting the BunkerWeb Panel, our dedicated platform for professional services.</p> <p>Don't hesitate to contact us if you have any questions, we will be more than happy to respond to your needs.</p>"},{"location":"quickstart-guide/","title":"Quickstart guide","text":"<p>Prerequisites</p> <p>We expect that you're already familiar with the core concepts and have followed the integrations instructions for your environment.</p> <p>This quickstart guide assumes that BunkerWeb is accessible from the Internet and that you have configured at least two domains: one for the web UI and one for your web service.</p> <p>System requirements</p> <p>The minimum recommended specifications for BunkerWeb are a machine with 2 (v)CPUs and 8 GB of RAM. Please note that this should be sufficient for testing environments or setups with very few services.</p> <p>For production environments with many services to protect, we recommend at least 4 (v)CPUs and 16 GB of RAM. Resources should be adjusted based on your use case, network traffic, and potential DDoS attacks you may face.</p> <p>It is highly recommended to enable global loading of CRS rules (by setting the <code>USE_MODSECURITY_GLOBAL_CRS</code> parameter to <code>yes</code>) if you are in environments with limited RAM or in production with many services. More details can be found in the advanced usages section of the documentation.</p> <p>This quickstart guide will help you to quickly install BunkerWeb and secure a web service using the web User Interface.</p> <p>Protecting existing web applications already accessible with the HTTP(S) protocol is the main goal of BunkerWeb: it will act as a classical reverse proxy with extra security features.</p> <p>See the examples folder of the repository to get real-world examples.</p>"},{"location":"quickstart-guide/#basic-setup","title":"Basic setup","text":"All-in-oneLinuxDockerDocker autoconfKubernetesSwarm <p>To deploy the all-in-one container, run the following command:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>By default, the container exposes:</p> <ul> <li>8080/tcp for HTTP</li> <li>8443/tcp for HTTPS</li> <li>8443/udp for QUIC</li> <li>7000/tcp for the web UI access without BunkerWeb in front (not recommended for production)</li> </ul> <p>The All-In-One image comes with several built-in services, which can be controlled using environment variables. See the All-In-One (AIO) Image section of the integrations page for more details.</p> <p>Use the Easy Install script to set up BunkerWeb on supported Linux distributions. It automatically installs and configures NGINX, adds the BunkerWeb repository, and sets up the required services.</p> <pre><code># Download the script and its checksum\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Verify the checksum\nsha256sum -c install-bunkerweb.sh.sha256\n\n# If the check is successful, run the script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Security Notice</p> <p>Always verify the script integrity with the provided checksum before executing it.</p> <p>For advanced installation methods (package manager, installation types, non-interactive flags, CrowdSec integration, etc.), see the Linux Integration.</p> <p>Here is the full docker compose file that you can use; please note that we will later connect the web service to the <code>bw-services</code> network:</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n  # Optional: set an API token and mirror it in both containers\n  API_TOKEN: \"\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    # This is the name that will be used to identify the instance in the Scheduler\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    environment:\n      &lt;&lt;: *bw-env # We use the anchor to avoid repeating the same settings for all services\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # Change it if needed\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Redis service for the persistence of reports/bans/stats\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Here is the full docker compose file that you can use; please note that we will later connect the web service to the <code>bw-services</code> network:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # We anchor the environment variables to avoid duplication\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # We set the instance label to allow the autoconf to detect the instance\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # Change it if needed\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Redis service for the persistence of reports/bans/stats\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>The recommended way to install Kubernetes is to use the Helm chart available at <code>https://repo.bunkerweb.io/charts</code>:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>You can then use the <code>bunkerweb</code> helm chart from that repository:</p> <pre><code>helm install mybw bunkerweb/bunkerweb --namespace bunkerweb --create-namespace\n</code></pre> <p>Once installed, you can get the IP address of the <code>LoadBalancer</code> to set up your domains:</p> <pre><code>kubectl -n bunkerweb get svc mybw-external -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>Here is the full docker compose stack file that you can use; please note that we will later connect the web service to the <code>bw-services</code> network:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # We anchor the environment variables to avoid duplication\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # For QUIC / HTTP3 support\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n      UI_HOST: \"http://bw-ui:7000\" # Change it if needed\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"quickstart-guide/#complete-the-setup-wizard","title":"Complete the setup wizard","text":"<p>Accessing the setup wizard</p> <p>You can access the setup wizard by browsing the <code>https://your-fqdn-or-ip-addresss/setup</code> URI of your server.</p>"},{"location":"quickstart-guide/#create-an-administrator-account","title":"Create an Administrator account","text":"<p>You should see a setup page just like this one:</p> <p> </p> Setup Wizard landing page <p>Once you're on the setup page, you can enter the administrator username, email, and password and click on the \"Next\" button.</p>"},{"location":"quickstart-guide/#configure-the-reverse-proxy-https-and-other-advanced-settings","title":"Configure the Reverse Proxy, HTTPS and other advanced settings","text":"Basic setupAdvanced setup <p>The next step will ask you to enter the server name (domain/FQDN) that the web UI will use.</p> <p>You can also choose to enable Let's Encrypt</p> <p> Setup Wizard step 2 </p> <p>The next step will ask you to enter the server name (domain/FQDN) that the web UI will use.</p> <p>You can also choose to enable Let's Encrypt.</p> <p>If you expand the <code>Advanced settings</code> section, you can also configure the following options:</p> <ul> <li>Reverse Proxy: Tweak the Reverse Proxy settings for your administrator interface (e.g., if you want to use a path).</li> <li>Real IP: Configure the Real IP settings to properly identify the client's IP address (e.g., if you are behind a load balancer or a CDN).</li> <li>Custom Certificate: Upload a custom TLS certificate if you don't want to use Let's Encrypt.</li> </ul> <p> Setup Wizard step 2 (advanced) </p>"},{"location":"quickstart-guide/#pro-activation","title":"PRO activation","text":"<p>If you have a PRO license, you can activate it by entering your license key in the <code>Upgrade to PRO</code> section. This will enable the PRO features of BunkerWeb.</p> <p> </p> Setup Wizard PRO step"},{"location":"quickstart-guide/#overview-of-your-settings","title":"Overview of your settings","text":"<p>The last step will give you an overview of the settings you've entered. You can click on the \"Setup\" button to complete the setup.</p> <p> </p> Setup Wizard final step"},{"location":"quickstart-guide/#accessing-the-web-interface","title":"Accessing the web interface","text":"<p>You can now access the web interface by browsing to the domain you configured in the previous step and the URI if you changed it (default is <code>https://your-domain/</code>).</p> <p> </p> Web interface login page <p>You can now log in with the administrator account you created during the setup wizard.</p> <p> </p> Web interface home"},{"location":"quickstart-guide/#creating-a-new-service","title":"Creating a new service","text":"Web UIAll-in-oneLinux variables.env fileDockerDocker autoconf labelsKubernetes annotationsSwarm labels <p>You can create a new service by navigating to the <code>Services</code> section of the web interface and clicking on the <code>\u2795 Create new service</code> button.</p> <p>There are multiple ways of creating a service using the web interface:</p> <ul> <li>The Easy mode will guide you through the process of creating a new service.</li> <li>The Advanced mode will allow you to configure the service with more options.</li> <li>The Raw mode will allow you to enter the configuration directly like editing the <code>variables.env</code> file.</li> </ul> <p>Draft service</p> <p>You can create a draft service to save your progress and come back to it later. Just click on the <code>\ud83c\udf10 Online</code> button to toggle the service to draft mode.</p> Easy modeAdvanced modeRaw mode <p>In this mode, you can choose among the available templates and fill in the required fields.</p> <p> Web interface create service easy </p> <ul> <li>Once you've selected the template, you can fill in the required fields and follow the instructions to create the service.</li> <li>Once you're done configuring the service, you can click on the <code>\ud83d\udcbe Save</code> button to save the configuration.</li> </ul> <p>In this mode, you can configure the service with more options while seeing all the available settings from all the different plugins.</p> <p> Web interface create service advanced </p> <ul> <li>To navigate between the different plugins, you can use the navigation menu on the left side of the page.</li> <li>Each setting has a small piece of information that will help you understand what it does.</li> <li>Once you're done configuring the service, you can click on the <code>\ud83d\udcbe Save</code> button to save the configuration.</li> </ul> <p>In this mode, you can enter the configuration directly like editing the <code>variables.env</code> file.</p> <p> Web interface create service RAW </p> <ul> <li>Once you're done configuring the service, you can click on the <code>\ud83d\udcbe Save</code> button to save the configuration.</li> </ul> <p>\ud83d\ude80 Once you've saved the configuration, you should see your new service in the list of services.</p> <p> Web interface services page </p> <p>If you wish to edit the service, you can click on the service name or the <code>\ud83d\udcdd Edit</code> button.</p> <p>When using the All-in-One image, new services are configured by adding environment variables to the <code>docker run</code> command for the <code>bunkerweb-aio</code> container. If the container is already running, you must stop and remove it, then re-run it with the updated environment variables.</p> <p>Suppose you want to protect an application <code>myapp</code> (running in another container and accessible as <code>http://myapp:8080</code> from BunkerWeb) and make it available at <code>www.example.com</code>. You would add or modify the following environment variables in your <code>docker run</code> command:</p> <pre><code># First, stop and remove the existing container if it's running:\n# docker stop bunkerweb-aio\n# docker rm bunkerweb-aio\n\n# Then, re-run the bunkerweb-aio container with additional/updated environment variables:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  # --- Add/modify these environment variables for your new service ---\n  -e MULTISITE=yes \\\n  -e SERVER_NAME=\"www.example.com\" \\\n  -e \"www.example.com_USE_REVERSE_PROXY=yes\" \\\n  -e \"www.example.com_REVERSE_PROXY_HOST=http://myapp:8080\" \\\n  -e \"www.example.com_REVERSE_PROXY_URL=/\" \\\n  # --- Include any other existing environment variables for UI, Redis, CrowdSec, etc. ---\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Your application container (<code>myapp</code>) and the <code>bunkerweb-aio</code> container must be on the same Docker network for BunkerWeb to reach it using the hostname <code>myapp</code>.</p> <p>Network Setup Example: <pre><code># 1. Create a custom Docker network (if you haven't already):\ndocker network create my-app-network\n\n# 2. Run your application container on this network:\ndocker run -d --name myapp --network my-app-network your-app-image\n\n# 3. Add --network my-app-network to the bunkerweb-aio docker run command:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  --network my-app-network \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n#   ... (all other relevant environment variables as shown in the main example above) ...\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre></p> <p>Make sure to replace <code>myapp</code> with the actual name or IP of your application container and <code>http://myapp:8080</code> with its correct address and port.</p> <p>We assume that you followed the Basic setup and that the Linux integration is running on your machine.</p> <p>You can create a new service by editing the <code>variables.env</code> file located in the <code>/etc/bunkerweb/</code> directory.</p> <pre><code>nano /etc/bunkerweb/variables.env\n</code></pre> <p>You can then add the following configuration:</p> <pre><code>SERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/\nwww.example.com_REVERSE_PROXY_HOST=http://myapp:8080\n</code></pre> <p>You can then reload the <code>bunkerweb-scheduler</code> service to apply the changes.</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>We assume that you followed the Basic setup and that the Docker integration is running on your machine.</p> <p>You must have a network called <code>bw-services</code> so that you can connect your existing application and configure BunkerWeb:</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>After that, you can manually add the service in the docker compose file that you created in the previous step:</p> <pre><code>...\n\nservices:\n  ...\n  bw-scheduler:\n    ...\n    environment:\n      ...\n      SERVER_NAME: \"www.example.com\" # When using the Docker integration, you can set the configuration directly in the scheduler, make sure to set the correct domain name\n      MULTISITE: \"yes\" # Enable multisite mode so you can add multiple services\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://myapp:8080\"\n      ...\n</code></pre> <p>You can then restart the <code>bw-scheduler</code> service to apply the changes.</p> <pre><code>docker compose down bw-scheduler &amp;&amp; docker compose up -d bw-scheduler\n</code></pre> <p>We assume that you followed the Basic setup and that the Docker autoconf integration is running on your machine.</p> <p>You must have a network called <code>bw-services</code> so that you can connect your existing application and configure BunkerWeb with labels:</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Doing so will automatically create a new service with the provided labels as configuration.</p> <p>We assume that you followed the Basic setup and that the Kubernetes stack is running on your cluster.</p> <p>Let's assume that you have a typical Deployment with a Service to access the web application from within the cluster:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app\n  labels:\n    app: app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app\n  template:\n    metadata:\n      labels:\n        app: app\n    spec:\n      containers:\n      - name: app\n        image: nginxdemos/nginx-hello\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app\nspec:\n  selector:\n    app: app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre> <p>Here is the corresponding Ingress definition to serve and protect the web application:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  annotations:\n    bunkerweb.io/DUMMY_SETTING: \"value\"\nspec:\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n              name: svc-app\n              port:\n                number: 80\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>We assume that you followed the Basic setup and that the Swarm stack is running on your cluster and connected to a network called <code>bw-services</code> so that you can connect your existing application and configure BunkerWeb with labels:</p> <pre><code>services:\n  myapp:\n    image: nginxdemos/nginx-hello\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"quickstart-guide/#going-further","title":"Going further","text":"<p>Congratulations! You have just installed BunkerWeb and secured your first web service. Please note that BunkerWeb offers much more, both in terms of security and integrations with other systems and solutions. Here's a list of resources and actions that may help you continue to deepen your knowledge of the solution:</p> <ul> <li>Join the Bunker community: Discord, LinkedIn, GitHub, X (Formerly Twitter)</li> <li>Check out the official blog</li> <li>Explore advanced use cases in the documentation</li> <li>Get in touch with us to discuss your organization's needs</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>BunkerWeb Panel</p> <p>If you are unable to resolve your issue, you can contact us directly via our panel. This centralizes all requests related to the BunkerWeb solution.</p>"},{"location":"troubleshooting/#logs","title":"Logs","text":"<p>When troubleshooting, logs are your best friends. We try our best to provide user-friendly logs to help you understand what's happening.</p> <p>Please note that you can set the <code>LOG_LEVEL</code> to <code>info</code> (default: <code>notice</code>) to increase BunkerWeb\u2019s verbosity.</p> <p>Here is how you can access the logs, depending on your integration :</p> DockerDocker autoconfAll-in-oneSwarmKubernetesLinux <p>List containers</p> <p>To list the running containers, you can use the following command : <pre><code>docker ps\n</code></pre></p> <p>You can use the <code>docker logs</code> command (replace <code>bunkerweb</code> with the name of your container) : <pre><code>docker logs bunkerweb\n</code></pre></p> <p>Here is the docker-compose equivalent (replace <code>bunkerweb</code> with the name of the services declared in the docker-compose.yml file) : <pre><code>docker-compose logs bunkerweb\n</code></pre></p> <p>List containers</p> <p>To list the running containers, you can use the following command : <pre><code>docker ps\n</code></pre></p> <p>You can use the <code>docker logs</code> command (replace <code>bunkerweb</code> and <code>bw-autoconf</code> with the name of your containers) : <pre><code>docker logs bunkerweb\ndocker logs bw-autoconf\n</code></pre></p> <p>Here is the docker-compose equivalent (replace <code>bunkerweb</code> and <code>bw-autoconf</code> with the name of the services declared in the docker-compose.yml file) : <pre><code>docker-compose logs bunkerweb\ndocker-compose logs bw-autoconf\n</code></pre></p> <p>Container name</p> <p>The default container name for the All-in-one image is <code>bunkerweb-aio</code>. If you've used a different name, please adjust the command accordingly.</p> <p>You can use the <code>docker logs</code> command: <pre><code>docker logs bunkerweb-aio\n</code></pre></p> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>List services</p> <p>To list the services, you can use the following command : <pre><code>docker service ls\n</code></pre></p> <p>You can use the <code>docker service logs</code> command (replace <code>bunkerweb</code> and <code>bw-autoconf</code> with the name of your services) : <pre><code>docker service logs bunkerweb\ndocker service logs bw-autoconf\n</code></pre></p> <p>List pods</p> <p>To list the pods, you can use the following command : <pre><code>kubectl get pods\n</code></pre></p> <p>You can use the <code>kubectl logs</code> command (replace <code>bunkerweb</code> and <code>bunkerweb-controler</code> with the name of your pods) : <pre><code>kubectl logs bunkerweb\nkubectl logs bunkerweb-controler\n</code></pre></p> <p>For errors related to BunkerWeb services (e.g., not starting), you can use <code>journalctl</code> : <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre></p> <p>Common logs are located inside the <code>/var/log/bunkerweb</code> directory : <pre><code>cat /var/log/bunkerweb/error.log\ncat /var/log/bunkerweb/access.log\n</code></pre></p>"},{"location":"troubleshooting/#permissions","title":"Permissions","text":"<p>Don't forget that BunkerWeb runs as an unprivileged user for obvious security reasons. Double-check the permissions of files and folders used by BunkerWeb, especially if you use custom configurations (more info here). You will need to set at least RW rights on files and RWX on folders.</p>"},{"location":"troubleshooting/#ip-unban","title":"IP unban","text":"<p>You can manually unban an IP, which is useful when performing tests so that you can contact the internal API of BunkerWeb (replace <code>1.2.3.4</code> with the IP address to unban) :</p> Docker / Docker AutoconfAll-in-oneSwarmKubernetesLinux <p>You can use the <code>docker exec</code> command (replace <code>bw-scheduler</code> with the name of your container) : <pre><code>docker exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Here is the docker-compose equivalent (replace <code>bw-scheduler</code> with the name of the services declared in the docker-compose.yml file) : <pre><code>docker-compose exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Container name</p> <p>The default container name for the All-in-one image is <code>bunkerweb-aio</code>. If you've used a different name, please adjust the command accordingly.</p> <p>You can use the <code>docker exec</code> command: <pre><code>docker exec bunkerweb-aio bwcli unban 1.2.3.4\n</code></pre></p> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>You can use the <code>docker exec</code> command (replace <code>bw-scheduler</code> with the name of your service) : <pre><code>docker exec $(docker ps -q -f name=bw-scheduler) bwcli unban 1.2.3.4\n</code></pre></p> <p>You can use the <code>kubectl exec</code> command (replace <code>bunkerweb-scheduler</code> with the name of your pod) : <pre><code>kubectl exec bunkerweb-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>You can use the <code>bwcli</code> command (as root) : <pre><code>sudo bwcli unban 1.2.3.4\n</code></pre></p>"},{"location":"troubleshooting/#false-positives","title":"False positives","text":""},{"location":"troubleshooting/#detect-only-mode","title":"Detect only mode","text":"<p>For debugging/test purposes, you can set BunkerWeb in detect only mode so it won't block request and will act as a classical reverse proxy.</p>"},{"location":"troubleshooting/#modsecurity","title":"ModSecurity","text":"<p>The default BunkerWeb configuration of ModSecurity is to load the Core Rule Set in anomaly scoring mode with a paranoia level (PL) of 1 :</p> <ul> <li>Each matched rule will increase an anomaly score (so many rules can match a single request)</li> <li>PL1 includes rules with fewer chances of false positives (but less security than PL4)</li> <li>the default threshold for anomaly score is 5 for requests and 4 for responses</li> </ul> <p>Let's take the following logs as an example of ModSecurity detection using default configuration (formatted for better readability) :</p> <pre><code>2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `lfi-os-files.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf\"]\n    [line \"78\"]\n    [id \"930120\"]\n    [rev \"\"]\n    [msg \"OS File Access Attempt\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-lfi\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/255/153/126\"]\n    [tag \"PCI/6.5.4\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `unix-shell.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf\"]\n    [line \"480\"]\n    [id \"932160\"]\n    [rev \"\"]\n    [msg \"Remote Command Execution: Unix Shell Code Found\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-shell\"]\n    [tag \"platform-unix\"]\n    [tag \"attack-rce\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/152/248/88\"]\n    [tag \"PCI/6.5.2\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:urlDecodeUni,t:cmdLine,t:normalizePath,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [error] 85#85: *11 [client 172.17.0.1] ModSecurity: Access denied with code 403 (phase 2). Matched \"Operator `Ge' with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `10' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-949-BLOCKING-EVALUATION.conf\"]\n    [line \"80\"]\n    [id \"949110\"]\n    [rev \"\"]\n    [msg \"Inbound Anomaly Score Exceeded (Total Score: 10)\"]\n    [data \"\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-generic\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n</code></pre> <p>As we can see, there are 3 different logs :</p> <ol> <li>Rule 930120 matched</li> <li>Rule 932160 matched</li> <li>Access denied (rule 949110)</li> </ol> <p>One important thing to understand is that rule 949110 is not a \"real\" one : it's the one that will deny the request because the anomaly threshold is reached (which is 10 in this example). You should never remove the 949110 rule !</p> <p>If it's a false-positive, you should then focus on both 930120 and 932160 rules. ModSecurity and/or CRS tuning is out of the scope of this documentation but don't forget that you can apply custom configurations before and after the CRS is loaded (more info here).</p>"},{"location":"troubleshooting/#bad-behavior","title":"Bad Behavior","text":"<p>A common false-positive case is when the client is banned because of the \"bad behavior\" feature which means that too many suspicious HTTP status codes were generated within a time period (more info here). You should start by reviewing the settings and then edit them according to your web application(s) like removing a suspicious HTTP code, decreasing the count time, increasing the threshold, ...</p>"},{"location":"troubleshooting/#whitelisting","title":"Whitelisting","text":"<p>If you have bots (or admins) that need to access your website, the recommended way to avoid any false positive is to whitelist them using the whitelisting feature. We don't recommend using the <code>WHITELIST_URI*</code> or <code>WHITELIST_USER_AGENT*</code> settings unless they are set to secret and unpredictable values. Common use cases are :</p> <ul> <li>Healthcheck / status bot</li> <li>Callback like IPN or webhook</li> <li>Social media crawler</li> </ul>"},{"location":"troubleshooting/#common-errors","title":"Common errors","text":""},{"location":"troubleshooting/#upstream-sent-too-big-header","title":"Upstream sent too big header","text":"<p>If you see the following error <code>upstream sent too big header while reading response header from upstream</code> in the logs, you will need to tweak the various proxy buffers size using the following settings :</p> <ul> <li><code>PROXY_BUFFERS</code></li> <li><code>PROXY_BUFFER_SIZE</code></li> <li><code>PROXY_BUSY_BUFFERS_SIZE</code></li> </ul>"},{"location":"troubleshooting/#could-not-build-server_names_hash","title":"Could not build server_names_hash","text":"<p>If you see the following error <code>could not build server_names_hash, you should increase server_names_hash_bucket_size</code> in the logs, you will need to tweak the <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> setting.</p>"},{"location":"troubleshooting/#timezone","title":"Timezone","text":"<p>When using container-based integrations, the timezone of the container may not match that of the host machine. To resolve that, you can set the <code>TZ</code> environment variable to the timezone of your choice on your containers (e.g. <code>TZ=Europe/Paris</code>). You will find the list of timezone identifiers here.</p>"},{"location":"troubleshooting/#web-ui","title":"Web UI","text":"<p>In case you forgot your UI credentials or are experiencing 2FA issues, you can connect to the database to regain access.</p>"},{"location":"troubleshooting/#access-database","title":"Access database","text":"SQLiteMariaDB / MySQLPostgreSQL LinuxDockerAll-in-one <p>Install SQLite (Debian/Ubuntu):</p> <pre><code>sudo apt install sqlite3\n</code></pre> <p>Install SQLite (Fedora/RedHat):</p> <pre><code>sudo dnf install sqlite\n</code></pre> <p>Get a shell into your scheduler container :</p> <p>Docker arguments</p> <ul> <li>the <code>-u 0</code> option is to run the command as root (mandatory)</li> <li>the <code>-it</code> options are to run the command interactively (mandatory)</li> <li><code>&lt;bunkerweb_scheduler_container&gt;</code> : the name or ID of your scheduler container</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_scheduler_container&gt; bash\n</code></pre> <p>Install SQLite :</p> <pre><code>apk add sqlite\n</code></pre> <p>Get a shell into your All-in-one container:</p> <p>Docker arguments</p> <ul> <li>the <code>-u 0</code> option is to run the command as root (mandatory).</li> <li>the <code>-it</code> options are to run the command interactively (mandatory).</li> <li><code>bunkerweb-aio</code> is the default container name; adjust if you used a custom name.</li> </ul> <pre><code>docker exec -u 0 -it bunkerweb-aio bash\n</code></pre> <p>Access your database :</p> <p>Database path</p> <p>We assume that you are using the default database path. If you are using a custom path, you will need to adapt the command. For All-in-one, we assume the database is <code>db.sqlite3</code> located in the persistent <code>/data</code> volume (<code>/data/db.sqlite3</code>).</p> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <p>You should see something like this :</p> <pre><code>SQLite version &lt;VER&gt; &lt;DATE&gt;\nEnter \".help\" for usage hints.\nsqlite&gt;\n</code></pre> <p>MariaDB / MySQL only</p> <p>The following steps are only valid for MariaDB / MySQL databases. If you are using another database, please refer to the documentation of your database.</p> <p>Credentials and database name</p> <p>You will need to use the same credentials and database named used in the <code>DATABASE_URI</code> setting.</p> LinuxDockerAll-in-one <p>Access your local database :</p> <pre><code>mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Then enter the database user\u2019s password and you should be able to access your database.</p> <p>Access your database container :</p> <p>Docker arguments</p> <ul> <li>the <code>-u 0</code> option is to run the command as root (mandatory)</li> <li>the <code>-it</code> options are to run the command interactively (mandatory)</li> <li><code>&lt;bunkerweb_db_container&gt;</code> : the name or ID of your database container</li> <li><code>&lt;user&gt;</code> : the database user</li> <li><code>&lt;database&gt;</code> : the database name</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Then enter the database user\u2019s password and you should be able to access your database.</p> <p>The All-in-One image does not include a MariaDB/MySQL server. If you have configured the AIO to use an external MariaDB/MySQL database (by setting the <code>DATABASE_URI</code> environment variable), you should connect to that database directly using standard MySQL client tools.</p> <p>The connection method would be similar to the \"Linux\" tab (if connecting from the host where AIO runs or another machine) or by running a MySQL client in a separate Docker container if preferred, targeting your external database's host and credentials.</p> <p>PostgreSQL only</p> <p>The following steps are only valid for PostgreSQL databases. If you are using another database, please refer to the documentation of your database.</p> <p>Credentials, host and database name</p> <p>You will need to use the same credentials (user/password), host and database name used in the <code>DATABASE_URI</code> setting.</p> LinuxDockerAll-in-one <p>Access your local database:</p> <pre><code>psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>If your database is on another host, include the hostname/IP and port:</p> <pre><code>psql -h &lt;host&gt; -p 5432 -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Then enter the database user\u2019s password and you should be able to access your database.</p> <p>Access your database container:</p> <p>Docker arguments</p> <ul> <li>the <code>-u 0</code> option is to run the command as root (mandatory)</li> <li>the <code>-it</code> options are to run the command interactively (mandatory)</li> <li><code>&lt;bunkerweb_db_container&gt;</code> : the name or ID of your database container</li> <li><code>&lt;user&gt;</code> : the database user</li> <li><code>&lt;database&gt;</code> : the database name</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>If the database is hosted elsewhere, add the <code>-h &lt;host&gt;</code> and <code>-p 5432</code> options accordingly.</p> <p>The All-in-One image does not include a PostgreSQL server. If you have configured the AIO to use an external PostgreSQL database (by setting the <code>DATABASE_URI</code> environment variable), you should connect to that database directly using standard PostgreSQL client tools.</p> <p>The connection method would be similar to the \"Linux\" tab (if connecting from the host where AIO runs or another machine) or by running a PostgreSQL client in a separate Docker container if preferred, targeting your external database's host and credentials.</p>"},{"location":"troubleshooting/#troubleshooting-actions","title":"Troubleshooting actions","text":"<p>Tables schema</p> <p>The schema of the <code>bw_ui_users</code> table is the following:</p> Field Type Null Key Default Extra username varchar(256) NO PRI NULL email varchar(256) YES UNI NULL password varchar(60) NO NULL method enum('ui','scheduler','autoconf','manual','wizard') NO NULL admin tinyint(1) NO NULL theme enum('light','dark') NO NULL language varchar(2) NO NULL totp_secret varchar(256) YES NULL creation_date datetime NO NULL update_date datetime NO NULL Retrieve usernameUpdate admin user passwordDisable 2FA authentication for admin userRefresh 2FA recovery codesExport configuration and anonymized logs <p>Execute the following command to extract data from the <code>bw_ui_users</code> table :</p> <pre><code>SELECT * FROM bw_ui_users;\n</code></pre> <p>You should see something like this :</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>You first need to hash the new password using the bcrypt algorithm.</p> <p>Install the Python bcrypt library :</p> <pre><code>pip install bcrypt\n</code></pre> <p>Generate your hash (replace <code>mypassword</code> with your own password) :</p> <pre><code>python3 -c 'from bcrypt import hashpw, gensalt ; print(hashpw(b\"\"\"mypassword\"\"\", gensalt(rounds=10)).decode(\"utf-8\"))'\n</code></pre> <p>You can update your username / password executing this command :</p> <pre><code>UPDATE bw_ui_users SET password = '&lt;password_hash&gt;' WHERE admin = 1;\n</code></pre> <p>If you check again your <code>bw_ui_users</code> table following this command :</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>You should see something like this :</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>You should now be able to use the new credentials to log into the web UI.</p> <p>You can deactivate 2FA by executing this command :</p> <pre><code>UPDATE bw_ui_users SET totp_secret = NULL WHERE admin = 1;\n</code></pre> <p>If you check again your <code>bw_ui_users</code> table by following this command :</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>You should see something like this :</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light NULL *** *** <p>You should now be able to log into the web UI only using your username and password without 2FA.</p> <p>The recovery codes can be refreshed in your profile page of the web UI under the <code>Security</code> tab.</p> <p>Use the Support page in the Web UI to quickly gather configuration and logs for troubleshooting.</p> <ul> <li>Open the Web UI and go to the Support page.</li> <li>Choose the scope: export the Global configuration or select a specific Service.</li> <li>Click to download the configuration archive for the chosen scope.</li> <li>Optionally download logs: the exported logs are automatically anonymized (all IP addresses and domains are masked).</li> </ul>"},{"location":"troubleshooting/#upload-plugin","title":"Upload plugin","text":"<p>It may not be possible to upload a plugin from the UI in certain situations:</p> <ul> <li>Missing package to manage compressed files on your integration, in which case you will need to add the necessary packages</li> <li>Safari browser : the 'safe mode' may prevent you from being able to add a plugin. You will need to make the necessary changes on your machine</li> </ul>"},{"location":"upgrading/","title":"Upgrading","text":""},{"location":"upgrading/#upgrade-from-16x","title":"Upgrade from 1.6.X","text":""},{"location":"upgrading/#procedure","title":"Procedure","text":""},{"location":"upgrading/#docker","title":"Docker","text":"<ol> <li> <p>Backup the database:</p> <ul> <li>Before proceeding with the database upgrade, ensure that you perform a complete backup of the current state of the database.</li> <li>Use appropriate tools to backup the entire database, including data, schemas, and configurations.</li> </ul> <pre><code>docker exec -it -e BACKUP_DIRECTORY=/path/to/backup/directory &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/backup/directory /path/to/backup/directory\n</code></pre> </li> <li> <p>Upgrade BunkerWeb:</p> <ul> <li> <p>Upgrade BunkerWeb to the latest version.</p> <ol> <li> <p>Update the Docker Compose file: Update the Docker Compose file to use the new version of the BunkerWeb image.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Restart the containers: Restart the containers to apply the changes.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>Check the logs: Check the logs of the scheduler service to ensure that the migration was successful.</p> <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> </li> <li> <p>Verify the database: Verify that the database upgrade was successful by checking the data and configurations in the new database container.</p> </li> </ol>"},{"location":"upgrading/#linux","title":"Linux","text":"Easy upgrade using the install scriptManual <ul> <li> <p>Quick start:</p> <p>To get started, download the installation script and its checksum, then verify the script's integrity before running it.</p> <pre><code>LATEST_VERSION=$(curl -s https://api.github.com/repos/bunkerity/bunkerweb/releases/latest | jq -r .tag_name)\n\n# Download the script and its checksum\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh.sha256\n\n# Verify the checksum\nsha256sum -c install-bunkerweb.sh.sha256\n\n# If the check is successful, run the script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Security Notice</p> <p>Always verify the integrity of the installation script before running it.</p> <p>Download the checksum file and use a tool like <code>sha256sum</code> to confirm the script has not been altered or tampered with.</p> <p>If the checksum verification fails, do not execute the script\u2014it may be unsafe.</p> </li> <li> <p>How it works:</p> <p>The same multi\u2011purpose install script used for fresh installs can also perform an in\u2011place upgrade. When it detects an existing installation and a different target version, it switches to upgrade mode and applies the following workflow:</p> <ol> <li>Detection &amp; validation<ul> <li>Detects OS / version and confirms support matrix.</li> <li>Reads currently installed BunkerWeb version from <code>/usr/share/bunkerweb/VERSION</code>.</li> </ul> </li> <li>Upgrade scenario decision<ul> <li>If the requested version equals the installed one it aborts (unless you explicitly re-run for status).</li> <li>If versions differ it flags an upgrade.</li> </ul> </li> <li>(Optional) Automatic pre\u2011upgrade backup<ul> <li>If <code>bwcli</code> and the scheduler are available and auto\u2011backup is enabled, it creates a backup via the built\u2011in backup plugin.</li> <li>Destination: either the directory you supplied with <code>--backup-dir</code> or a generated path like <code>/var/tmp/bunkerweb-backup-YYYYmmdd-HHMMSS</code>.</li> <li>You can disable this with <code>--no-auto-backup</code> (manual backup then becomes your responsibility).</li> </ul> </li> <li>Service quiescing<ul> <li>Stops <code>bunkerweb</code>, <code>bunkerweb-ui</code>, and <code>bunkerweb-scheduler</code> to ensure a consistent upgrade (matches the manual procedure recommendations).</li> </ul> </li> <li>Package locks removal<ul> <li>Temporarily removes <code>apt-mark hold</code> / <code>dnf versionlock</code> on <code>bunkerweb</code> and <code>nginx</code> so the targeted version can be installed.</li> </ul> </li> <li>Upgrade execution<ul> <li>Installs only the new BunkerWeb package version (NGINX is not reinstalled in upgrade mode unless missing\u2014this avoids touching a correctly pinned NGINX).</li> <li>Re\u2011applies holds/versionlocks to freeze the upgraded versions.</li> </ul> </li> <li>Finalization &amp; status<ul> <li>Displays systemd status for core services and next steps.</li> <li>Leaves your configuration and database intact\u2014only the application code and managed files are updated.</li> </ul> </li> </ol> <p>Key behaviors / notes:</p> <ul> <li>The script does NOT modify your <code>/etc/bunkerweb/variables.env</code> or database content.</li> <li>If automatic backup failed (or was disabled) you can still do a manual restore using the Rollback section below.</li> <li>Upgrade mode intentionally avoids reinstalling or downgrading NGINX outside the supported pinned version already present.</li> <li>Logs for troubleshooting remain in <code>/var/log/bunkerweb/</code>.</li> </ul> <p>Rollback summary:</p> <ul> <li>Use the generated backup directory (or your manual backup) + the steps in the Rollback section to restore DB, then reinstall the previous image / package version and re\u2011lock packages.</li> </ul> </li> <li> <p>Command-Line Options:</p> <p>You can drive unattended upgrades with the same flags used for installation. The most relevant for upgrades:</p> Option Purpose <code>-v, --version &lt;X.Y.Z&gt;</code> Target BunkerWeb version to upgrade to. <code>-y, --yes</code> Non\u2011interactive (assumes upgrade confirmation and enables auto backup unless <code>--no-auto-backup</code>). <code>--backup-dir &lt;PATH&gt;</code> Destination for the automatic pre\u2011upgrade backup. Created if missing. <code>--no-auto-backup</code> Skip automatic backup (NOT recommended). You must have a manual backup. <code>-q, --quiet</code> Suppress output (combine with logging / monitoring). <code>-f, --force</code> Proceed on an otherwise unsupported OS version. <code>--dry-run</code> Show detected environment, intended actions, then exit without changing anything. <p>Examples:</p> <pre><code># Upgrade to testing interactively (will prompt for backup)\nsudo ./install-bunkerweb.sh --version testing\n\n# Non-interactive upgrade with automatic backup to custom directory\nsudo ./install-bunkerweb.sh -v testing --backup-dir /var/backups/bw-2025-01 -y\n\n# Silent unattended upgrade (logs suppressed) \u2013 relies on default auto-backup\nsudo ./install-bunkerweb.sh -v testing -y -q\n\n# Perform a dry run (plan) without applying changes\nsudo ./install-bunkerweb.sh -v testing --dry-run\n\n# Upgrade skipping automatic backup (NOT recommended)\nsudo ./install-bunkerweb.sh -v testing --no-auto-backup -y\n</code></pre> <p>Skipping backups</p> <p>Using <code>--no-auto-backup</code> without having a verified manual backup may result in irreversible data loss if the upgrade encounters issues. Always keep at least one recent, tested backup.</p> </li> </ul> <ol> <li> <p>Backup the database:</p> <ul> <li>Before proceeding with the database upgrade, ensure that you perform a complete backup of the current state of the database.</li> <li>Use appropriate tools to backup the entire database, including data, schemas, and configurations.</li> </ul> Information for Red Hat Enterprise Linux (RHEL) 8.10 users <p>If you are using RHEL 8.10 and plan on using an external database, you will need to install the <code>mysql-community-client</code> package to ensure the <code>mysqldump</code> command is available. You can install the package by executing the following commands:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Install the MySQL repository configuration package</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Enable the MySQL repository</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Install the MySQL client</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Install the PostgreSQL repository configuration package</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Install the PostgreSQL client</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/path/to/backup/directory bwcli plugin backup save\n</code></pre> </li> <li> <p>Upgrade BunkerWeb:</p> <ul> <li> <p>Upgrade BunkerWeb to the latest version.</p> <ol> <li> <p>Stop the services:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Update BunkerWeb:</p> Debian/UbuntuFedora/RedHat <p>First, if you have previously held the BunkerWeb package, unhold it :</p> <p>You can print a list of packages on hold with <code>apt-mark showhold</code></p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Then, you can update the BunkerWeb package :</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>To prevent the BunkerWeb package from upgrading when executing <code>apt upgrade</code>, you can use the following command :</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>More details in the integration Linux page.</p> <p>First, if you have previously held the BunkerWeb package, unhold it :</p> <p>You can print a list of packages on hold with <code>dnf versionlock list</code></p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Then, you can update the BunkerWeb package :</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>To prevent the BunkerWeb package from upgrading when executing <code>dnf upgrade</code>, you can use the following command :</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>More details in the integration Linux page.</p> </li> <li> <p>Start the services:         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         Or reboot the system:         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>Check the logs: Check the logs of the scheduler service to ensure that the migration was successful.</p> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>Verify the database: Verify that the database upgrade was successful by checking the data and configurations in the new database container.</p> </li> </ol>"},{"location":"upgrading/#rollback","title":"Rollback","text":"<p>In case of issues</p> <p>If you encounter any issues during the upgrade, you can rollback to the previous version of the database by restoring the backup taken in step 1.</p> <p>Get support and more information :</p> <ul> <li>Order professional support</li> <li>Create an issue on GitHub</li> <li>Join the BunkerWeb Discord server</li> </ul> DockerLinux <ol> <li> <p>Extract the backup if zipped.</p> <p>Extract the backup zip file first:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Restore the backup.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Remove the existing database file.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Restore the backup.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Fix permissions.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Stop the stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Restore the backup.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;your_password&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Stop the stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Remove the existing database.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recreate the database.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restore the backup.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Stop the stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>Downgrade BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;old_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;old_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;old_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;old_version&gt;\n        ...\n</code></pre> </li> <li> <p>Start the containers.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Extract the backup if zipped.</p> <p>Extract the backup zip file first:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Stop the services.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Restore the backup.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> <ol> <li> <p>Remove the existing database.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recreate the database.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restore the backup.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>Start the services.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Downgrade BunkerWeb.</p> <ul> <li>Downgrade BunkerWeb to the previous version by following the same steps as when upgrading BunkerWeb in the integration Linux page</li> </ul> </li> </ol>"},{"location":"upgrading/#upgrade-from-15x","title":"Upgrade from 1.5.X","text":""},{"location":"upgrading/#what-changed","title":"What changed?","text":""},{"location":"upgrading/#scheduler","title":"Scheduler","text":"<p>Unlike the 1.5.X releases, the Scheduler service no longer uses the docker socket proxy to fetch BunkerWeb's instances. Instead, it uses the new <code>BUNKERWEB_INSTANCES</code> environment variable.</p> <p>About the <code>BUNKERWEB_INSTANCES</code> environment variable</p> <p>This new variable is a list of BunkerWeb instances separated by spaces in this format: <code>http://bunkerweb:5000 bunkerweb1:5000 bunkerweb2:5000 ...</code>. The scheduler will then use this list to fetch the instances' configuration and to send the configuration to them.</p> <ul> <li>The <code>http://</code> prefix is optional.</li> <li>The port is optional and defaults to the value of the <code>API_HTTP_PORT</code> environment variable.</li> <li>The default value of the <code>BUNKERWEB_INSTANCES</code> environment variable is <code>127.0.0.1</code>.</li> </ul> <p>In other words, the new system is fully agnostic and generic: the scheduler is in charge of managing a list of BunkerWeb instances and doesn't need to care about the environment.</p> <p>Autoconf/Kubernetes/Swarm integrations</p> <p>If you are using the <code>Autoconf</code>, <code>Kubernetes</code>, or <code>Swarm</code> integrations, you can set the <code>BUNKERWEB_INSTANCES</code> environment variable to an empty string (so that it doesn't try to send the configuration to the default one which is <code>127.0.0.1</code>).</p> <p>The instances will be automatically fetched by the controller. You can also add custom instances to the list that may not be picked up by the controller.</p> <p>Since the <code>1.6</code>, the Scheduler also have a new built-in healthcheck system, that will check the health of the instances. If an instance becomes unhealthy, the scheduler will stop sending the configuration to it. If the instance becomes healthy again, the scheduler will start sending the configuration to it again.</p>"},{"location":"upgrading/#bunkerweb-container","title":"BunkerWeb container","text":"<p>Another important change is that the settings that were previously declared on the BunkerWeb container are now declared on the scheduler. This means that you'll have to move your settings from the BunkerWeb container to the Scheduler container.</p> <p>While the settings are now declared on the Scheduler container, you'll still need to declare API-related mandatory settings on the BunkerWeb container like the <code>API_WHITELIST_IP</code> setting which is used to whitelist the Scheduler's IP address, so that it can send the configuration to the instance. If you use <code>API_TOKEN</code>, you must also set it on the BunkerWeb container (and mirror it on the Scheduler) to allow authenticated API calls.</p> <p>BunkerWeb's container settings</p> <p>Every API related setting that you declare on the BunkerWeb container have to be mirrored on the Scheduler container so that it keeps working, as the configuration will be overwritten by the Scheduler's generated configuration.</p>"},{"location":"upgrading/#default-values-and-new-settings","title":"Default values and new settings","text":"<p>We tried our best not to change default value but we have added many other settings. It's highly recommended to read the security tuning and settings sections of the documentation.</p>"},{"location":"upgrading/#templates","title":"Templates","text":"<p>We added a new feature called templates. Templates provide a structured and standardized approach to defining settings and custom configurations, check the concepts/templates section for more information.</p>"},{"location":"upgrading/#autoconf-namespaces","title":"Autoconf namespaces","text":"<p>We added a namespace feature to the autoconf integrations. Namespaces allow you to group your instances and apply settings only to them. Check the following sections according to your Integration for more information:</p> <ul> <li>Autoconf/namespaces</li> <li>Kubernetes/namespaces</li> <li>Swarm/namespaces</li> </ul>"},{"location":"upgrading/#procedure_1","title":"Procedure","text":"<ol> <li> <p>Backup the database:</p> <ul> <li>Before proceeding with the database upgrade, ensure that you perform a complete backup of the current state of the database.</li> <li>Use appropriate tools to backup the entire database, including data, schemas, and configurations.</li> </ul> 1.5.7 and later1.5.6 and earlier DockerLinux <pre><code>docker exec -it -e BACKUP_DIRECTORY=/path/to/backup/directory &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/backup/directory /path/to/backup/directory\n</code></pre> Information for Red Hat Enterprise Linux (RHEL) 8.10 users <p>If you are using RHEL 8.10 and plan on using an external database, you will need to install the <code>mysql-community-client</code> package to ensure the <code>mysqldump</code> command is available. You can install the package by executing the following commands:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Install the MySQL repository configuration package</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Enable the MySQL repository</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Install the MySQL client</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Install the PostgreSQL repository configuration package</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Install the PostgreSQL client</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/path/to/backup/directory bwcli plugin backup save\n</code></pre> SQLiteMariaDBMySQLPostgreSQL DockerLinux <p>We first need to install the <code>sqlite</code> package in the container.</p> <pre><code>docker exec -u 0 -it &lt;scheduler_container&gt; apk add sqlite\n</code></pre> <p>Then, backup the database.</p> <pre><code>docker exec -it &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e PGPASSWORD=&lt;database_password&gt; &lt;database_container&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>PGPASSWORD=&lt;database_password&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Upgrade BunkerWeb:</p> <ul> <li> <p>Upgrade BunkerWeb to the latest version.</p> DockerLinux <ol> <li> <p>Update the Docker Compose file: Update the Docker Compose file to use the new version of the BunkerWeb image.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Restart the containers: Restart the containers to apply the changes.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> <ol> <li> <p>Stop the services:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Update BunkerWeb:</p> Debian/UbuntuFedora/RedHat <p>First, if you have previously held the BunkerWeb package, unhold it :</p> <p>You can print a list of packages on hold with <code>apt-mark showhold</code></p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Then, you can update the BunkerWeb package :</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>To prevent the BunkerWeb package from upgrading when executing <code>apt upgrade</code>, you can use the following command :</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>More details in the integration Linux page.</p> <p>First, if you have previously held the BunkerWeb package, unhold it :</p> <p>You can print a list of packages on hold with <code>dnf versionlock list</code></p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Then, you can update the BunkerWeb package :</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>To prevent the BunkerWeb package from upgrading when executing <code>dnf upgrade</code>, you can use the following command :</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>More details in the integration Linux page.</p> </li> <li> <p>Start the services:         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         Or reboot the system:         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>Check the logs: Check the logs of the scheduler service to ensure that the migration was successful.</p> DockerLinux <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>Verify the database: Verify that the database upgrade was successful by checking the data and configurations in the new database container.</p> </li> </ol>"},{"location":"upgrading/#rollback_1","title":"Rollback","text":"<p>In case of issues</p> <p>If you encounter any issues during the upgrade, you can rollback to the previous version of the database by restoring the backup taken in step 1.</p> <p>Get support and more information :</p> <ul> <li>Order professional support</li> <li>Create an issue on GitHub</li> <li>Join the BunkerWeb Discord server</li> </ul> DockerLinux <ol> <li> <p>Extract the backup if zipped.</p> <p>Extract the backup zip file first:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Restore the backup.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Remove the existing database file.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Restore the backup.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Fix permissions.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Stop the stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Restore the backup.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;your_password&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Stop the stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Remove the existing database.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recreate the database.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restore the backup.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Stop the stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>Downgrade BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;old_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;old_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;old_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;old_version&gt;\n        ...\n</code></pre> </li> <li> <p>Start the containers.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Extract the backup if zipped.</p> <p>Extract the backup zip file first:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Stop the services.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Restore the backup.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> <ol> <li> <p>Remove the existing database.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recreate the database.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restore the backup.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>Start the services.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Downgrade BunkerWeb.</p> <ul> <li>Downgrade BunkerWeb to the previous version by following the same steps as when upgrading BunkerWeb in the integration Linux page</li> </ul> </li> </ol>"},{"location":"web-ui/","title":"Web UI","text":""},{"location":"web-ui/#overview","title":"Overview","text":"<p>The \"Web UI\" is a web application that helps you manage your BunkerWeb instance using a user-friendly interface instead of relying solely on the command line.</p> <p>Here is a list of features offered by the web UI:</p> <ul> <li>Get a comprehensive view of blocked attacks</li> <li>Start, stop, restart, and reload your BunkerWeb instance</li> <li>Add, edit, and delete settings for your web applications</li> <li>Add, edit, and delete custom configurations for NGINX and ModSecurity</li> <li>Install and uninstall external plugins</li> <li>Explore cached files</li> <li>Monitor job execution and restart them as needed</li> <li>View logs and search for patterns</li> </ul>"},{"location":"web-ui/#prerequisites","title":"Prerequisites","text":"<p>Since the web UI is a web application, the recommended architecture is to run BunkerWeb in front of it as a reverse proxy. The recommended installation procedure is to use the setup wizard, which will guide you step by step as described in the quickstart guide.</p> <p>Security considerations</p> <p>The security of the web UI is extremely important. If an unauthorized person gains access to the application, not only will they be able to edit your configurations, but they might also execute code in the context of BunkerWeb (for example, via a custom configuration containing LUA code). We highly recommend that you follow minimal security best practices, such as:</p> <ul> <li>Choose a strong password for the login (at least 8 characters, including 1 lowercase letter, 1 uppercase letter, 1 digit, and 1 special character)</li> <li>Place the web UI under a \"hard-to-guess\" URI</li> <li>Enable two-factor authentication (2FA)</li> <li>Do not expose the web UI on the Internet without additional restrictions</li> <li>Apply best practices listed in the advanced usages section of the documentation depending on your use case</li> </ul>"},{"location":"web-ui/#upgrade-to-pro","title":"Upgrade to PRO","text":"<p>BunkerWeb PRO free trial</p> <p>Want to quickly test BunkerWeb PRO for one month? Use the code <code>freetrial</code> when placing your order on the BunkerWeb panel or by clicking here to directly to apply the promo code (will be effective at checkout).</p> <p>Once you have your PRO license key from the BunkerWeb panel, you can paste it into the PRO page of the web UI.</p> <p> </p> Upgrade to PRO from the web UI <p>Upgrade time</p> <p>The PRO version is downloaded in the background by the scheduler, it may take some time to upgrade.</p> <p>When your BunkerWeb instance has upgraded to the PRO version, you will see your license expiration date and the maximum number of services you can protect.</p> <p> </p> PRO license information"},{"location":"web-ui/#accessing-logs","title":"Accessing logs","text":"<p>Beginning with version <code>1.6</code>, the method of accessing logs has changed. This update specifically impacts container-based integrations: the web UI will now read the log files from the <code>/var/log/bunkerweb</code> directory.</p> <p>To keep the logs accessible from the web UI, we recommend that you use a syslog server, such as <code>syslog-ng</code>, to read the logs and create the corresponding files in the <code>/var/log/bunkerweb</code> directory.</p> <p>Using local folder for logs</p> <p>The web UI runs as an unprivileged user with UID 101 and GID 101 inside the container for security reasons: in case a vulnerability is exploited, the attacker won't have full root (UID/GID 0) privileges.</p> <p>However, there is a downside: if you use a local folder for logs, you must set the correct permissions so that the unprivileged user can read the log files. For example:</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nchown root:101 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Alternatively, if the folder already exists:</p> <pre><code>chown -R root:101 bw-logs &amp;&amp; \\\nchmod -R 770 bw-logs\n</code></pre> <p>If you are using Docker in rootless mode or podman, UIDs and GIDs in the container will be mapped to different ones in the host. You will first need to check your initial subuid and subgid:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>For example, if you have a value of 100000, the mapped UID/GID will be 100100 (100000 + 100):</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nsudo chgrp 100100 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Or if the folder already exists:</p> <pre><code>sudo chgrp -R 100100 bw-logs &amp;&amp; \\\nsudo chmod -R 770 bw-logs\n</code></pre>"},{"location":"web-ui/#compose-boilerplates","title":"Compose boilerplates","text":"DockerDocker Autoconf <p>To forward the logs correctly to the <code>/var/log/bunkerweb</code> directory on the Docker integration, you will need to stream the logs to a file using <code>syslog-ng</code>. Here is an example of how to do this:</p> <pre><code>x-bw-env: &amp;bw-env\n  # We anchor the environment variables to avoid duplication\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  # Optional API token when securing API access\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # Change it to a hard-to-guess URI\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the admin user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Bind to low ports\n      - NET_BROADCAST  # Send broadcasts\n      - NET_RAW  # Use raw sockets\n      - DAC_READ_SEARCH  # Read files bypassing permissions\n      - DAC_OVERRIDE  # Override file permissions\n      - CHOWN  # Change ownership\n      - SYSLOG  # Write to system logs\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # This is the syslog-ng configuration file\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Make sure to set the correct IP address\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>To forward the logs correctly to the <code>/var/log/bunkerweb</code> directory on the Autoconf integration, you will need to stream the logs to a file using <code>syslog-ng</code>. Here is an example of how to do this:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # We anchor the environment variables to avoid duplication\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf / ui\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # This is the Docker socket address\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-autoconf\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the admin user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    volumes:\n      - bw-logs:/var/log/bunkerweb\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\" # Change it to a hard-to-guess URI\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Bind to low ports\n      - NET_BROADCAST  # Send broadcasts\n      - NET_RAW  # Use raw sockets\n      - DAC_READ_SEARCH  # Read files bypassing permissions\n      - DAC_OVERRIDE  # Override file permissions\n      - CHOWN  # Change ownership\n      - SYSLOG  # Write to system logs\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # This is the syslog-ng configuration file\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Make sure to set the correct IP address\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre>"},{"location":"web-ui/#syslog-ng-configuration","title":"Syslog-ng configuration","text":"<p>Here is an example of a <code>syslog-ng.conf</code> file that you can use to forward the logs to a file:</p> <pre><code>@version: 4.8\n\n# Source configuration to receive logs from Docker containers\nsource s_net {\n  udp(\n    ip(\"0.0.0.0\")\n  );\n};\n\n# Template to format log messages\ntemplate t_imp {\n  template(\"$MSG\\n\");\n  template_escape(no);\n};\n\n# Destination configuration to write logs to dynamically named files\ndestination d_dyna_file {\n  file(\n    \"/var/log/bunkerweb/${PROGRAM}.log\"\n    template(t_imp)\n    owner(\"101\")\n    group(\"101\")\n    dir_owner(\"root\")\n    dir_group(\"101\")\n    perm(0440)\n    dir_perm(0770)\n    create_dirs(yes)\n  );\n};\n\n# Log path to direct logs to dynamically named files\nlog {\n  source(s_net);\n  destination(d_dyna_file);\n};\n</code></pre>"},{"location":"web-ui/#account-management","title":"Account management","text":"<p>You can access the account management page by clicking on the profile image in the top right corner:</p> <p> </p> Account page access from top right corner"},{"location":"web-ui/#username-password","title":"Username / Password","text":"<p>Lost password/username</p> <p>In case you forgot your UI credentials, you can reset them from the CLI following the steps described in the troubleshooting section.</p> <p>You can update your username or password by filling the dedicated forms in the Security tab. For security reason, you need to enter your current password even if you are connected.</p> <p>Please note that when your username or password is updated, you will be logout from the web UI to log in again.</p> <p> </p> Username / Password form"},{"location":"web-ui/#two-factor-authentication","title":"Two-Factor authentication","text":"<p>Mandatory encryption keys</p> <p>When enabling 2FA, you must provide at least one encryption key. This key will be used to encrypt your TOTP secrets.</p> <p>The recommended way to generate a valid key is to use the <code>passlib</code> package:</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> <p>Set the generated key in the <code>TOTP_ENCRYPTION_KEYS</code> environment variable of the web UI. You can also set multiple keys separated by spaces or as a dictionary (for backward compatibility).</p> <p>Lost secret key</p> <p>In case you lost your secret key, two options are available:</p> <ul> <li>You can recover your account using one of the provided recovery codes when you enabled 2FA (a recovery code can only be used once).</li> <li>You can disable 2FA from the CLI following the steps described in the troubleshooting section.</li> </ul> <p>You can power-up your login security by adding Two-Factor Authentication (2FA) to your account. By doing so, an extra code will be needed in addition to your password.</p> <p>The web UI uses Time based One Time Password (TOTP) as 2FA implementation: using a secret key, the algorithm will generate one time passwords only valid for a short period of time.</p> <p>Any TOTP client such as Google Authenticator, Authy, FreeOTP, ... can be used to store the secret key and generate the codes. Please note that once TOTP is enabled, you won't be able to retrieve it from the web UI.</p> <p>The following steps are needed to enable the TOTP feature from the web UI:</p> <ul> <li>Copy the secret key or use the QR code on your authenticator app</li> <li>Enter the current TOTP code in the 2FA input</li> <li>Enter your current password</li> </ul> <p>Secret key refresh</p> <p>A new secret key is generated each time you visit the page or submit the form. In case something went wrong (e.g.: expired TOTP code), you will need to copy the new secret key to your authenticator app until 2FA is successfully enabled.</p> <p>Recovery codes</p> <p>When you enable 2FA, you will be provided with 5 recovery codes. These codes can be used to recover your account in case you have lost your TOTP secret key. Each code can only be used once. These codes will only be shown once so make sure to store them in a safe place.</p> <p>If you ever lose your recovery codes, you can refresh them via the TOTP section of the account management page. Please note that the old recovery codes will be invalidated.</p> <p>You can enable or disable 2FA and also refresh recovery codes in the Security tab:</p> <p> </p> TOTP enable / disable / refresh recovery codes forms <p>After a successful login/password combination, you will be prompted to enter your TOTP code:</p> <p> </p> 2FA on login page"},{"location":"web-ui/#current-sessions","title":"Current sessions","text":"<p>In the Session tab, you will be able to list and revoke current sessions:</p> <p> </p> Manage sessions"},{"location":"web-ui/#advanced-installation","title":"Advanced installation","text":"<p>The web UI can be deployed and configured without going through the setup wizard process: configuration is done through environment variables, which can be added directly to the containers or in the <code>/etc/bunkerweb/ui.env</code> file in the case of a Linux integration.</p> <p>Web UI specific environment variables</p> <p>The web UI uses the following environment variables:</p> <ul> <li><code>OVERRIDE_ADMIN_CREDS</code>: set it to <code>yes</code> to enable the override even if the admin credentials are already set (default is <code>no</code>).</li> <li><code>ADMIN_USERNAME</code>: username to access the web UI.</li> <li><code>ADMIN_PASSWORD</code>: password to access the web UI.</li> <li><code>FLASK_SECRET</code>: a secret key used to encrypt the session cookie (if not set, a random key will be generated).</li> <li><code>TOTP_ENCRYPTION_KEYS</code> (or <code>TOTP_SECRETS</code>): a list of TOTP encryption keys separated by spaces or a dictionary (e.g.: <code>{\"1\": \"mysecretkey\"}</code> or <code>mysecretkey</code> or <code>mysecretkey mysecretkey1</code>). We strongly recommend you to set this variable if you want to use 2FA, as it will be used to encrypt the TOTP secret keys (if not set, a random number of secret keys will be generated). Check out the passlib documentation for more information.</li> <li><code>UI_LISTEN_ADDR</code> (preferred): the address where the web UI will listen (default is <code>0.0.0.0</code> in Docker images and <code>127.0.0.1</code> on Linux installations). Falls back to <code>LISTEN_ADDR</code> if not set.</li> <li><code>UI_LISTEN_PORT</code> (preferred): the port where the web UI will listen (default is <code>7000</code>). Falls back to <code>LISTEN_PORT</code> if not set.</li> <li><code>MAX_WORKERS</code>: the number of workers used by the web UI (default is the number of CPUs).</li> <li><code>MAX_THREADS</code>: the number of threads used by the web UI (default is <code>MAX_WORKERS</code> * 2).</li> <li><code>FORWARDED_ALLOW_IPS</code>: a list of IP addresses or networks that are allowed to be used in the <code>X-Forwarded-For</code> header (default is <code>*</code> in Docker images and <code>127.0.0.1</code> on Linux installations).</li> <li><code>CHECK_PRIVATE_IP</code>: set it to <code>yes</code> to not disconnect users that have their IP address changed during a session if they are in a private network (default is <code>yes</code>). (Non-private IP addresses are always checked).</li> <li><code>ENABLE_HEALTHCHECK</code>: set it to <code>yes</code> to enable the <code>/healthcheck</code> endpoint that returns a simple JSON response with status information (default is <code>no</code>).</li> </ul> <p>The web UI will use these variables to authenticate you and handle the 2FA feature.</p> <p>Generating recommended secrets</p> <p>To generate a valid ADMIN_PASSWORD, we recommend you to use a password manager or a password generator.</p> <p>You can generate a valid FLASK_SECRET using the following command:</p> <pre><code>python3 -c \"import secrets; print(secrets.token_hex(64))\"\n</code></pre> <p>You can generate valid space-separated TOTP_ENCRYPTION_KEYS using the following command (you will need the <code>passlib</code> package):</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> LinuxDockerDocker autoconfKubernetesSwarm <p>The installation of the web UI using the Linux integration is pretty straightforward because it is installed with BunkerWeb.</p> <p>The web UI comes as systemd service named <code>bunkerweb-ui</code>, please ensure that it's enabled:</p> <pre><code>sudo systemctl enable bunkerweb-ui &amp;&amp; \\\nsudo systemctl status bunkerweb-ui\n</code></pre> <p>A dedicated environment file located at <code>/etc/bunkerweb/ui.env</code> is used to configure the web UI:</p> <pre><code>ADMIN_USERNAME=changeme\nADMIN_PASSWORD=changeme\nTOTP_ENCRYPTION_KEYS=mysecret\n</code></pre> <p>Replace the <code>changeme</code> data with your own values.</p> <p>Remember to set a stronger secret key for the <code>TOTP_ENCRYPTION_KEYS</code>.</p> <p>Each time you edit the <code>/etc/bunkerweb/ui.env</code> file, you will need to restart the service:</p> <pre><code>systemctl restart bunkerweb-ui\n</code></pre> <p>Accessing the web UI through BunkerWeb is a classical reverse proxy setup. Please note that the web UI is listening on the <code>7000</code> port and only on the loopback interface.</p> <p>Here is the <code>/etc/bunkerweb/variables.env</code> boilerplate you can use:</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nSERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_TEMPLATE=ui\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/changeme\nwww.example.com_REVERSE_PROXY_HOST=http://127.0.0.1:7000\n</code></pre> <p>Don't forget to reload the <code>bunkerweb</code> service:</p> <pre><code>systemctl reload bunkerweb\n</code></pre> <p>The web UI can be deployed using a dedicated container which is available on Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternatively, you can also build it yourself:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Accessing the web UI through BunkerWeb is a classical reverse proxy setup. We recommend you to connect BunkerWeb and web UI using a dedicated network (like <code>bw-universe</code> also used by the scheduler) so it won't be on the same network of your web services for obvious security reasons. Please note that the web UI container is listening on the <code>7000</code> port.</p> <p>Database backend</p> <p>If you want another Database backend than MariaDB please refer to the docker-compose files in the misc/integrations folder of the repository.</p> <p>Here is the docker-compose boilerplate that you can use (don't forget to edit the <code>changeme</code> data):</p> <pre><code>x-ui-env: &amp;ui-env\n  # We anchor the environment variables to avoid duplication\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    environment:\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n      API_TOKEN: \"\" # Mirror API_TOKEN if you use it\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # We mirror the API_WHITELIST_IP from the bunkerweb service\n      API_TOKEN: \"\" # Mirror API_TOKEN if you use it\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # Remember to set a stronger URI\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\" # The web UI container is listening on the 7000 port by default\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the changeme user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>The web UI can be deployed using a dedicated container which is available on Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternatively, you can also build it yourself:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Environment variables</p> <p>Please read the Prerequisites section to check out all the environment variables you can set to customize the web UI.</p> <p>Accessing the web UI through BunkerWeb is a classical reverse proxy setup. We recommend you to connect BunkerWeb and web UI using a dedicated network (like <code>bw-universe</code> also used by the scheduler and autoconf) so it won't be on the same network of your web services for obvious security reasons. Please note that the web UI container is listening on the <code>7000</code> port.</p> <p>Database backend</p> <p>If you want another Database backend than MariaDB please refer to the docker-compose files in the misc/integrations folder of the repository.</p> <p>Here is the docker-compose boilerplate that you can use (don't forget to edit the <code>changeme</code> data):</p> <pre><code>x-ui-env: &amp;ui-env\n  # We anchor the environment variables to avoid duplication\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # We set the instance label to allow the autoconf to detect the instance\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the changeme user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    networks:\n      - bw-universe\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>The web UI can be deployed using a dedicated container which is available on Docker Hub and you can deploy as a standard Deployment.</p> <p>Accessing the web UI through BunkerWeb is a classical reverse proxy setup. Network segmentation between web UI and web services is not covered in this documentation. Please note that the web UI container is listening on the <code>7000</code> port.</p> <p>Database backend</p> <p>If you want another Database backend than MariaDB please refer to the yaml files in the misc/integrations folder of the repository.</p> <p>Here is the corresponding part of your values.yaml file that you can use:</p> <pre><code>settings:\n  # Use an existing secret named bunkerweb and containing the following values:\n  # - admin-username\n  # - admin-password\n  # - flask-secret\n  # - totp-secrets\n  existingSecret: \"secret-bunkerweb\"\nui:\n  wizard: false\n  ingress:\n    enabled: true\n    serverName: \"www.example.com\"\n    serverPath: \"/admin\"\n  overrideAdminCreds: \"yes\"\n</code></pre> <p>Deprecated</p> <p>The Swarm integration is deprecated and will be removed in a future release. Please consider using the Kubernetes integration instead.</p> <p>More information can be found in the Swarm integration documentation.</p> <p>The web UI can be deployed using a dedicated container which is available on Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternatively, you can also build it yourself:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Accessing the web UI through BunkerWeb is a classical reverse proxy setup. We recommend you to connect BunkerWeb and web UI using a dedicated network (like <code>bw-universe</code> also used by the scheduler and autoconf) so it won't be on the same network of your web services for obvious security reasons. Please note that the web UI container is listening on the <code>7000</code> port.</p> <p>Database backend</p> <p>If you want another Database backend than MariaDB please refer to the stack files in the misc/integrations folder of the repository.</p> <p>Here is the stack boilerplate that you can use (don't forget to edit the <code>changeme</code> data):</p> <pre><code>x-ui-env: &amp;ui-env\n  # We anchor the environment variables to avoid duplication\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # For QUIC / HTTP3 support\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the changeme user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_TEMPLATE=ui\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"web-ui/#language-support-localization","title":"Language Support &amp; Localization","text":"<p>The BunkerWeb UI supports multiple languages. Translations are managed in the <code>src/ui/app/static/locales</code> directory. The following languages are currently available:</p> <ul> <li>English (en)</li> <li>French (fr)</li> <li>Arabic (ar)</li> <li>Bengali (bn)</li> <li>Spanish (es)</li> <li>Hindi (hi)</li> <li>Portuguese (pt)</li> <li>Russian (ru)</li> <li>Urdu (ur)</li> <li>Chinese (zh)</li> <li>German (de)</li> <li>Italian (it)</li> </ul> <p>See the locales/README.md for details on translation provenance and review status.</p>"},{"location":"web-ui/#contributing-translations","title":"Contributing Translations","text":"<p>We welcome contributions to improve or add new locale files!</p> <p>How to contribute a translation:</p> <ol> <li>Edit the <code>src/ui/app/lang_config.py</code> file to add your language (code, name, flag, english_name).</li> <li>Copy <code>en.json</code> as a template in <code>src/ui/app/static/locales/</code>, rename it to your language code (e.g., <code>de.json</code> for German).</li> <li>Translate the values in your new file.</li> <li>Update the table in <code>locales/README.md</code> to add your language and indicate who created/reviewed it.</li> <li>Submit a pull request.</li> </ol> <p>For updates, edit the relevant file and update the provenance table as needed.</p> <p>See the locales/README.md for full guidelines.</p>"},{"location":"fr/#apercu","title":"Aper\u00e7u","text":"S\u00e9curisez vos services web par d\u00e9faut ! <p>BunkerWeb est un pare-feu applicatif (WAF) open-source de nouvelle g\u00e9n\u00e9ration.</p> <p>En tant que serveur Web complet (bas\u00e9 sur NGINX sous le capot), il prot\u00e8ge vos services Web pour les rendre \"s\u00e9curis\u00e9s par d\u00e9faut\". BunkerWeb s'int\u00e8gre parfaitement \u00e0 vos environnements existants (Linux, Docker, Swarm, Kubernetes, ...) en tant que proxy inverse et est enti\u00e8rement configurable (pas de panique, il y a une interface utilisateur web g\u00e9niale si vous n'aimez pas la CLI) pour r\u00e9pondre \u00e0 vos cas d'utilisation sp\u00e9cifiques. En d'autres termes, la cybers\u00e9curit\u00e9 n'est plus un probl\u00e8me.</p> <p>BunkerWeb inclut  des fonctionnalit\u00e9s de s\u00e9curit\u00e9 primaires  dans le cadre du noyau, mais peut \u00eatre facilement \u00e9tendu avec des fonctionnalit\u00e9s suppl\u00e9mentaires gr\u00e2ce \u00e0 un syst\u00e8me de plugins.</p>"},{"location":"fr/#pourquoi-bunkerweb","title":"Pourquoi BunkerWeb ?","text":"<ul> <li> <p>Int\u00e9gration facile dans les environnements existants: Int\u00e9grez de mani\u00e8re transparente BunkerWeb dans divers environnements tels que Linux, Docker, Swarm, Kubernetes, etc. Profitez d'une transition en douceur et d'une mise en \u0153uvre sans tracas.</p> </li> <li> <p>Hautement personnalisable: Adaptez facilement BunkerWeb \u00e0 vos besoins sp\u00e9cifiques. Activez, d\u00e9sactivez et configurez des fonctionnalit\u00e9s sans effort, ce qui vous permet de personnaliser les param\u00e8tres de s\u00e9curit\u00e9 en fonction de votre cas d'utilisation unique.</p> </li> <li> <p>S\u00e9curis\u00e9 par d\u00e9faut: BunkerWeb fournit une s\u00e9curit\u00e9 minimale pr\u00eate \u00e0 l'emploi et sans tracas pour vos services Web. Faites l'exp\u00e9rience de la tranquillit\u00e9 d'esprit et d'une protection renforc\u00e9e d\u00e8s le d\u00e9part.</p> </li> <li> <p>Interface utilisateur Web impressionnante: Prenez le contr\u00f4le de BunkerWeb plus efficacement gr\u00e2ce \u00e0 l'interface utilisateur Web (UI) exceptionnelle. Naviguez sans effort dans les param\u00e8tres et les configurations gr\u00e2ce \u00e0 une interface graphique conviviale, \u00e9liminant ainsi le besoin d'une interface de ligne de commande (CLI).</p> </li> <li> <p>Syst\u00e8me de plugins: \u00c9tendez les capacit\u00e9s de BunkerWeb pour r\u00e9pondre \u00e0 vos propres cas d'utilisation. Int\u00e9grez de mani\u00e8re transparente des mesures de s\u00e9curit\u00e9 suppl\u00e9mentaires et personnalisez les fonctionnalit\u00e9s de BunkerWeb en fonction de vos besoins sp\u00e9cifiques.</p> </li> <li> <p>Libre comme dans \"libert\u00e9\": BunkerWeb est sous la licence gratuite AGPLv3, embrassant les principes de libert\u00e9 et d'ouverture. Profitez de la libert\u00e9 d'utiliser, de modifier et de distribuer le logiciel, avec le soutien d'une communaut\u00e9 qui vous soutient.</p> </li> <li> <p>Services professionnels: Obtenez une assistance technique, des conseils sur mesure et un d\u00e9veloppement personnalis\u00e9 directement aupr\u00e8s des responsables de BunkerWeb. Visitez le panel BunkerWeb pour plus d'informations.</p> </li> </ul>"},{"location":"fr/#caracteristiques-de-securite","title":"Caract\u00e9ristiques de s\u00e9curit\u00e9","text":"<p>Explorez l'impressionnante gamme de fonctionnalit\u00e9s de s\u00e9curit\u00e9 offertes par BunkerWeb. Bien qu'ils ne soient pas exhaustifs, voici quelques faits saillants notables:</p> <ul> <li> <p>Prise en charge HTTPS avec l'automatisation transparente de Let's Encrypt: S\u00e9curisez facilement vos services Web gr\u00e2ce \u00e0 l'int\u00e9gration automatis\u00e9e de Let's Encrypt, qui garantit une communication crypt\u00e9e entre les clients et votre serveur.</p> </li> <li> <p>S\u00e9curit\u00e9 Web de pointe: b\u00e9n\u00e9ficiez de mesures de s\u00e9curit\u00e9 Web de pointe, notamment des en-t\u00eates de s\u00e9curit\u00e9 HTTP complets, la pr\u00e9vention des fuites de donn\u00e9es et les techniques de renforcement TLS.</p> </li> <li> <p>Le WAF ModSecurity int\u00e9gr\u00e9 avec l'ensemble de r\u00e8gles de base OWASP: Profitez d'une protection renforc\u00e9e contre les attaques d'applications Web gr\u00e2ce \u00e0 l'int\u00e9gration de ModSecurity, renforc\u00e9e par le c\u00e9l\u00e8bre ensemble de r\u00e8gles de base OWASP.</p> </li> <li> <p>Bannissement automatique des comportements \u00e9tranges sur la base de codes d'\u00e9tat HTTP: BunkerWeb identifie et bloque intelligemment les activit\u00e9s suspectes en bannissant automatiquement les comportements qui d\u00e9clenchent des codes d'\u00e9tat HTTP anormaux.</p> </li> <li> <p>Appliquer des limites de connexion et de demande pour les clients: Fixez des limites au nombre de connexions et de demandes des clients, afin d'\u00e9viter l'\u00e9puisement des ressources et de garantir une utilisation \u00e9quitable des ressources du serveur.</p> </li> <li> <p>Bloquez les bots gr\u00e2ce \u00e0 la v\u00e9rification bas\u00e9e sur les d\u00e9fis: tenez les bots malveillants \u00e0 distance en les mettant au d\u00e9fi de r\u00e9soudre des \u00e9nigmes telles que les cookies, les tests JavaScript, les captchas, les hCaptcha, les reCAPTCHA ou les tourniquets, bloquant ainsi efficacement les acc\u00e8s non autoris\u00e9s.</p> </li> <li> <p>Bloquez les adresses IP malveillantes connues \u00e0 l'aide de listes noires externes et de DNSBL: utilisez des listes noires externes et des listes de trous noirs bas\u00e9es sur DNS (DNSBL) pour bloquer de mani\u00e8re proactive les adresses IP malveillantes connues, renfor\u00e7ant ainsi votre d\u00e9fense contre les menaces potentielles.</p> </li> <li> <p>Et bien plus encore...: BunkerWeb regorge d'une pl\u00e9thore de fonctionnalit\u00e9s de s\u00e9curit\u00e9 suppl\u00e9mentaires qui vont au-del\u00e0 de cette liste, vous offrant une protection compl\u00e8te et une tranquillit\u00e9 d'esprit.</p> </li> </ul> <p>Pour en savoir plus sur les principales fonctionnalit\u00e9s de s\u00e9curit\u00e9, nous vous invitons \u00e0 explorer la  section sur le r\u00e9glage de la s\u00e9curit\u00e9 de la documentation. D\u00e9couvrez comment BunkerWeb vous permet d'affiner et d'optimiser les mesures de s\u00e9curit\u00e9 en fonction de vos besoins sp\u00e9cifiques.</p>"},{"location":"fr/#demonstration","title":"D\u00e9monstration","text":"<p>Un site web de d\u00e9monstration prot\u00e9g\u00e9 par BunkerWeb est disponible \u00e0 l'adresse demo.bunkerweb.io. N'h\u00e9sitez pas \u00e0 le visiter et \u00e0 effectuer quelques tests de s\u00e9curit\u00e9.</p>"},{"location":"fr/#interface-utilisateur-web","title":"Interface utilisateur Web","text":"<p>BunkerWeb propose une interface utilisateur optionnelle  pour g\u00e9rer vos instances et leurs configurations. Une d\u00e9mo en ligne en lecture seule est disponible \u00e0 l'adresse demo-ui.bunkerweb.io. N'h\u00e9sitez pas \u00e0 le tester vous-m\u00eame.</p>"},{"location":"fr/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>Vous ne voulez pas auto-h\u00e9berger et g\u00e9rer votre propre instance BunkerWeb ? Vous pourriez \u00eatre int\u00e9ress\u00e9 par BunkerWeb Cloud, notre offre SaaS enti\u00e8rement g\u00e9r\u00e9e pour BunkerWeb.</p> <p>Essayez notre offre BunkerWeb Cloud et acc\u00e9dez \u00e0 :</p> <ul> <li>Une instance BunkerWeb enti\u00e8rement g\u00e9r\u00e9e et h\u00e9berg\u00e9e dans notre cloud</li> <li>Toutes les fonctionnalit\u00e9s de BunkerWeb, y compris les fonctionnalit\u00e9s PRO</li> <li>Une plateforme de surveillance avec tableaux de bord et alertes</li> <li>Support technique pour vous aider dans la configuration</li> </ul> <p>Si vous \u00eates int\u00e9ress\u00e9 par l'offre BunkerWeb Cloud, n'h\u00e9sitez pas \u00e0 nous contacter afin que nous puissions discuter de vos besoins.</p>"},{"location":"fr/#version-pro","title":"Version PRO","text":"<p>BunkerWeb PRO essai gratuit</p> <p>Vous souhaitez tester rapidement BunkerWeb PRO pendant un mois ? Utilisez le code <code>freetrial</code> lors de votre commande sur le Panel BunkerWeb ou en cliquant ici pour appliquer directement le code promo (sera effectif \u00e0 la caisse).</p> <p>Lorsque vous utilisez BunkerWeb, vous avez le choix de la version que vous souhaitez utiliser : open-source ou PRO.</p> <p>Qu'il s'agisse d'une s\u00e9curit\u00e9 renforc\u00e9e, d'une exp\u00e9rience utilisateur enrichie ou d'une surveillance technique, la version BunkerWeb PRO vous permet de profiter pleinement de BunkerWeb et de r\u00e9pondre \u00e0 vos besoins professionnels.</p> <p>Dans la documentation ou l'interface utilisateur, les fonctionnalit\u00e9s PRO sont annot\u00e9es d'une couronne  pour les distinguer de celles int\u00e9gr\u00e9es dans la version open-source.</p> <p>Vous pouvez passer de la version open-source \u00e0 la version PRO facilement et \u00e0 tout moment. Le processus est simple :</p> <ul> <li>R\u00e9clamez votre essai gratuit sur le panneau BunkerWeb en utilisant le <code>freetrial</code> code promo \u00e0 la caisse</li> <li>Une fois connect\u00e9 \u00e0 l'espace client, copiez votre cl\u00e9 de licence PRO</li> <li>Collez votre cl\u00e9 priv\u00e9e dans BunkerWeb \u00e0 l'aide de l'interface utilisateur Web ou d'un param\u00e8tre sp\u00e9cifique</li> </ul> <p>N'h\u00e9sitez pas \u00e0 visiter le panel BunkerWeb ou  \u00e0 nous contacter si vous avez des questions concernant la version PRO.</p>"},{"location":"fr/#services-professionnels","title":"Services professionnels","text":"<p>Tirez le meilleur parti de BunkerWeb en acc\u00e9dant aux services professionnels directement des responsables du projet. De l'assistance technique au conseil et au d\u00e9veloppement sur mesure, nous sommes l\u00e0 pour vous aider \u00e0 s\u00e9curiser vos services web.</p> <p>Vous trouverez plus d'informations en visitant le Panel BunkerWeb, notre plateforme d\u00e9di\u00e9e aux services professionnels.</p> <p>N'h\u00e9sitez pas \u00e0 nous contacter si vous avez des questions. Nous serons plus qu'heureux de r\u00e9pondre \u00e0 vos besoins.</p>"},{"location":"fr/#ecosysteme-communaute-et-ressources","title":"\u00c9cosyst\u00e8me, communaut\u00e9 et ressources","text":"<p>Sites officiels, outils et ressources sur BunkerWeb :</p> <ul> <li>Site Web\u00a0: Obtenez plus d'informations, de nouvelles et d'articles sur BunkerWeb.</li> <li>Panel: Une plate-forme d\u00e9di\u00e9e pour commander et g\u00e9rer des services professionnels (par exemple, le support technique) autour de BunkerWeb.</li> <li>Documentation : Documentation technique de la solution BunkerWeb.</li> <li>D\u00e9mo: Site de d\u00e9monstration de BunkerWeb. N'h\u00e9sitez pas \u00e0 tenter des attaques pour tester la robustesse de la solution.</li> <li>Web UI: D\u00e9mo en ligne en lecture seule de l'interface web de BunkerWeb.</li> <li>Carte des menaces: Cyberattaques en direct bloqu\u00e9es par les instances BunkerWeb dans le monde entier.</li> </ul> <p>Communaut\u00e9 et r\u00e9seaux sociaux :</p> <ul> <li>Discord</li> <li>Lien LinkedIn</li> <li>X (anciennement Twitter)</li> <li>Reddit</li> </ul>"},{"location":"fr/about/","title":"\u00c0 propos","text":""},{"location":"fr/about/#qui-gere-bunkerweb","title":"Qui g\u00e8re BunkerWeb ?","text":"<p>BunkerWeb est maintenu par Bunkerity, une entreprise fran\u00e7aise \ud83c\uddeb\ud83c\uddf7 sp\u00e9cialis\u00e9e dans la cybers\u00e9curit\u00e9 \ud83d\udee1\ufe0f.</p>"},{"location":"fr/about/#avez-vous-une-version-professionnelle","title":"Avez-vous une version professionnelle ?","text":"<p>BunkerWeb PRO essai gratuit</p> <p>Vous souhaitez tester rapidement BunkerWeb PRO pendant un mois ? Utilisez le code <code>freetrial</code> lors de votre commande sur le panneau BunkerWeb ou en cliquant ici pour appliquer directement le code promo (sera effectif \u00e0 la caisse).</p> <p>Oui, nous proposons une version professionnelle de BunkerWeb appel\u00e9e \"BunkerWeb PRO\" avec des fonctionnalit\u00e9s suppl\u00e9mentaires et un support technique (en option).</p> <p>N'h\u00e9sitez pas \u00e0 nous contacter si vous avez des questions, nous serons plus qu'heureux de r\u00e9pondre \u00e0 vos besoins.</p>"},{"location":"fr/about/#offrez-vous-des-services-professionnels","title":"Offrez-vous des services professionnels\u00a0?","text":"<p>Oui, nous offrons des services professionnels li\u00e9s \u00e0 BunkerWeb.</p> <p>Vous pouvez nous contacter pour l'un des points suivants :</p> <ul> <li>Consultation</li> <li>Soutien</li> <li>D\u00e9veloppement sur mesure</li> <li>Partenariats</li> </ul> <p>Nous disposons d'un panel d\u00e9di\u00e9 pour centraliser toutes les demandes professionnelles.</p> <p>Vous pouvez \u00e9galement nous contacter si vous \u00eates int\u00e9ress\u00e9.</p>"},{"location":"fr/about/#ou-obtenir-le-soutien-de-la-communaute","title":"O\u00f9 obtenir le soutien de la communaut\u00e9\u00a0?","text":"<p>Pour obtenir le soutien gratuit de la communaut\u00e9, vous pouvez utiliser les m\u00e9dias suivants :</p> <ul> <li>Le canal #help de BunkerWeb sur le serveur Discord</li> <li>La cat\u00e9gorie d'aide des discussions GitHub</li> <li>Le subreddit /r/BunkerWeb</li> <li>Les forums Server Fault et Super User</li> </ul> <p>Veuillez ne pas utiliser GitHub issues pour demander de l'aide, utilisez-le uniquement pour les rapports de bogues et les demandes de fonctionnalit\u00e9s.</p>"},{"location":"fr/about/#comment-puis-je-contribuer","title":"Comment puis-je contribuer ?","text":"<p>Voici une liste non exhaustive de ce que vous pouvez faire :</p> <ul> <li>Rejoignez le serveur Discord, le subreddit /r/BunkerWeb et les discussions GitHub pour parler du projet et aider les autres</li> <li>Suivez-nous sur LinkedIn, X (anciennement Twitter) et GitHub</li> <li>Signaler les bugs et proposer de nouvelles fonctionnalit\u00e9s \u00e0 l'aide des probl\u00e8mes</li> <li>Contribuer au code \u00e0 l'aide de demandes de tirage</li> <li>\u00c9crivez un plugin g\u00e9nial</li> <li>Parlez de BunkerWeb \u00e0 vos amis/coll\u00e8gues, sur les r\u00e9seaux sociaux, sur votre blog, ...</li> </ul>"},{"location":"fr/about/#comment-signaler-un-probleme-de-securite","title":"Comment signaler un probl\u00e8me de s\u00e9curit\u00e9 ?","text":"<p>N'h\u00e9sitez pas \u00e0 nous contacter au security@bunkerity.com.</p>"},{"location":"fr/advanced/","title":"Utilisations avanc\u00e9es","text":"<p>De nombreux exemples de cas d'utilisation concrets sont disponibles dans le dossier examples du d\u00e9p\u00f4t GitHub.</p> <p>Nous fournissons \u00e9galement de nombreux mod\u00e8les standard, tels que des fichiers YAML pour diverses int\u00e9grations et types de bases de donn\u00e9es. Ceux-ci sont disponibles dans le dossier misc/integrations.</p> <p>Cette section se concentre uniquement sur les utilisations avanc\u00e9es et le r\u00e9glage de la s\u00e9curit\u00e9, consultez la section fonctionnalit\u00e9s de la documentation pour voir tous les param\u00e8tres disponibles.</p>"},{"location":"fr/advanced/#cas-dutilisation","title":"Cas d'utilisation","text":"<p>Tester</p> <p>Pour effectuer des tests rapides lorsque le mode multisite est activ\u00e9 (et si vous n'avez pas les bonnes entr\u00e9es DNS configur\u00e9es pour les domaines), vous pouvez utiliser curl avec l'en-t\u00eate HTTP Host de votre choix : <pre><code>curl -H \"Host: app1.example.com\" http://ip-or-fqdn-of-server\n</code></pre></p> <p>Si vous utilisez HTTPS, vous devrez configurer le SNI : <pre><code>curl -H \"Host: app1.example.com\" --resolve example.com:443:ip-of-server https://example.com\n</code></pre></p>"},{"location":"fr/advanced/#derriere-lequilibreur-de-charge-ou-le-proxy-inverse","title":"Derri\u00e8re l'\u00e9quilibreur de charge ou le proxy inverse","text":"<p>Real IP</p> <p>Lorsque BunkerWeb se trouve lui\u2011m\u00eame derri\u00e8re un \u00e9quilibreur de charge ou un proxy inverse, vous devez le configurer afin qu'il puisse r\u00e9cup\u00e9rer la v\u00e9ritable adresse IP des clients. Si vous ne le faites pas, les fonctionnalit\u00e9s de s\u00e9curit\u00e9 bloqueront l'adresse IP de l'\u00e9quilibreur de charge ou du proxy inverse au lieu de celle du client.</p> <p>BunkerWeb prend en fait en charge deux m\u00e9thodes pour r\u00e9cup\u00e9rer l'adresse IP r\u00e9elle du client :</p> <ul> <li>\u00c0 l'aide de l'ic\u00f4ne <code>PROXY protocol</code></li> <li>\u00c0 l'aide d'un en-t\u00eate HTTP tel que <code>X-Forwarded-For</code></li> </ul> <p>Les param\u00e8tres suivants peuvent \u00eatre utilis\u00e9s :</p> <ul> <li><code>USE_REAL_IP</code> : activer/d\u00e9sactiver la r\u00e9cup\u00e9ration d'IP r\u00e9elle</li> <li><code>USE_PROXY_PROTOCOL</code> : activer/d\u00e9sactiver la prise en charge du protocole PROXY.</li> <li><code>REAL_IP_FROM</code> : liste d'adresses IP/r\u00e9seau de confiance autoris\u00e9es pour nous envoyer la \"vraie IP\"</li> <li><code>REAL_IP_HEADER</code> : l'en-t\u00eate HTTP contenant l'IP r\u00e9elle ou la valeur sp\u00e9ciale <code>proxy_protocol</code> lors de l'utilisation du protocole PROXY</li> </ul> <p>Vous trouverez plus de param\u00e8tres sur l'IP r\u00e9elle dans la section des fonctionnalit\u00e9s de la documentation.</p> En-t\u00eate HTTPProtocole proxy <p>Nous supposerons ce qui suit concernant les \u00e9quilibreurs de charge ou les proxies inverses (vous devrez mettre \u00e0 jour les param\u00e8tres en fonction de votre configuration) :</p> <ul> <li>Ils utilisent l' <code>X-Forwarded-For</code> en-t\u00eate pour d\u00e9finir l'adresse IP r\u00e9elle</li> <li>Ils ont des adresses IP dans les <code>1.2.3.0/24</code> r\u00e9seaux<code>100.64.0.0/10</code> et</li> </ul> Interface utilisateur WebLinuxTout-en-unDockerDocker autoconfKubernetesSwarm <p>Acc\u00e9dez \u00e0 la page Config Globale, s\u00e9lectionnez le plugin Real IP et renseignez les param\u00e8tres suivants :</p> <p>Param\u00e8tres Real IP (en-t\u00eate) via l'interface Web</p> <p>Veuillez noter qu'il est recommand\u00e9 de red\u00e9marrer BunkerWeb lorsque vous modifiez des param\u00e8tres li\u00e9s \u00e0 la r\u00e9cup\u00e9ration de la vraie adresse IP.</p> <p>Vous devrez ajouter ces param\u00e8tres au fichier /etc/bunkerweb/variables.env :</p> <pre><code>...\nUSE_REAL_IP=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=X-Forwarded-For\n...\n</code></pre> <p>Veuillez noter qu'il est recommand\u00e9 de red\u00e9marrer plut\u00f4t que de recharger le service lorsque vous modifiez les param\u00e8tres li\u00e9s \u00e0 la r\u00e9cup\u00e9ration de la vraie adresse IP :</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement lors de l'ex\u00e9cution du conteneur All-in-one :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des conteneurs BunkerWeb et du Scheduler :</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des conteneurs BunkerWeb et du Scheduler :</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des pods BunkerWeb et du Scheduler.</p> <p>Voici la partie correspondante de votre fichier <code>values.yaml</code> que vous pouvez utiliser :</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des services BunkerWeb et scheduler :</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Lire attentivement</p> <p>N'utilisez le protocole <code>PROXY protocol</code> que si vous \u00eates certain que votre \u00e9quilibreur de charge ou proxy inverse l'envoie. Si vous l'activez et qu'il n'est pas utilis\u00e9, vous obtiendrez des erreurs.</p> <p>Nous supposerons ce qui suit concernant les \u00e9quilibreurs de charge ou les proxies inverses (vous devrez adapter les param\u00e8tres en fonction de votre configuration) :</p> <ul> <li>Ils utilisent le <code>PROXY protocol</code> v1 ou v2 pour d\u00e9finir l'adresse IP r\u00e9elle</li> <li>Ils ont des adresses IP dans les r\u00e9seaux <code>1.2.3.0/24</code> et <code>100.64.0.0/10</code></li> </ul> Interface utilisateur WebLinuxTout-en-unDockerDocker autoconfKubernetesSwarm <p>Acc\u00e9dez \u00e0 la page Config Globale, s\u00e9lectionnez le plugin Real IP et renseignez les param\u00e8tres suivants :</p> <p>Param\u00e8tres Real IP (protocole PROXY) via l'interface Web</p> <p>Veuillez noter qu'il est recommand\u00e9 de red\u00e9marrer BunkerWeb lorsque vous modifiez des param\u00e8tres li\u00e9s \u00e0 la r\u00e9cup\u00e9ration de la vraie adresse IP.</p> <p>Vous devrez ajouter ces param\u00e8tres au fichier /etc/bunkerweb/variables.env :</p> <pre><code>...\nUSE_REAL_IP=yes\nUSE_PROXY_PROTOCOL=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=proxy_protocol\n...\n</code></pre> <p>Veuillez noter qu'il est recommand\u00e9 de red\u00e9marrer plut\u00f4t que de recharger le service lors de la configuration des param\u00e8tres li\u00e9s au protocole PROXY :</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement lors de l'ex\u00e9cution du conteneur All-in-one :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e USE_PROXY_PROTOCOL=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des conteneurs BunkerWeb et du Scheduler :</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des conteneurs BunkerWeb et du Scheduler :</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des pods BunkerWeb et du Scheduler.</p> <p>Voici la partie correspondante de votre fichier <code>values.yaml</code> que vous pouvez utiliser :</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement des services BunkerWeb et scheduler :</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p>"},{"location":"fr/advanced/#utilisation-de-mecanismes-de-resolution-dns-personnalises","title":"Utilisation de m\u00e9canismes de r\u00e9solution DNS personnalis\u00e9s","text":"<p>La configuration NGINX de BunkerWeb peut \u00eatre personnalis\u00e9e pour utiliser diff\u00e9rents r\u00e9solveurs DNS en fonction de vos besoins. Cela peut \u00eatre particuli\u00e8rement utile dans divers sc\u00e9narios :</p> <ol> <li>Pour respecter les entr\u00e9es de votre <code>/etc/hosts</code> fichier local</li> <li>Lorsque vous devez utiliser des serveurs DNS personnalis\u00e9s pour certains domaines</li> <li>Pour s'int\u00e9grer \u00e0 des solutions de mise en cache DNS locales</li> </ol>"},{"location":"fr/advanced/#utilisation-de-systemd-resolved","title":"Utilisation de systemd-resolved","text":"<p>De nombreux syst\u00e8mes Linux modernes utilisent <code>systemd-resolved</code> la r\u00e9solution DNS. Si vous souhaitez que BunkerWeb respecte le contenu de votre <code>/etc/hosts</code> fichier et utilise le m\u00e9canisme de r\u00e9solution DNS du syst\u00e8me, vous pouvez le configurer pour utiliser le service DNS local r\u00e9solu par systemd.</p> <p>Pour v\u00e9rifier que systemd-resolved est en cours d'ex\u00e9cution sur votre syst\u00e8me, vous pouvez utiliser :</p> <pre><code>systemctl status systemd-resolved\n</code></pre> <p>Pour activer systemd-resolved comme r\u00e9solveur DNS dans BunkerWeb, d\u00e9finissez le <code>DNS_RESOLVERS</code> param\u00e8tre sur <code>127.0.0.53</code>, qui est l'adresse d'\u00e9coute par d\u00e9faut pour systemd-resolved :</p> Interface utilisateur WebLinux <p>Acc\u00e9dez \u00e0 la page Config Globale et d\u00e9finissez les r\u00e9solveurs DNS sur <code>127.0.0.53</code></p> <p>Param\u00e8tres des r\u00e9solveurs DNS via l'interface Web</p> <p>Vous devrez modifier le fichier /etc/bunkerweb/variables.env :</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.53\n...\n</code></pre> <p>Apr\u00e8s avoir effectu\u00e9 cette modification, rechargez le Scheduler pour appliquer la configuration :</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre>"},{"location":"fr/advanced/#utilisation-de-dnsmasq","title":"Utilisation de dnsmasq","text":"<p>dnsmasq est un serveur DNS, DHCP et TFTP l\u00e9ger qui est couramment utilis\u00e9 pour la mise en cache et la personnalisation du DNS local. C'est particuli\u00e8rement utile lorsque vous avez besoin de plus de contr\u00f4le sur votre r\u00e9solution DNS que celui fourni par systemd-resolved.</p> LinuxTout-en-unDocker <p>Tout d'abord, installez et configurez dnsmasq sur votre syst\u00e8me Linux\u00a0:</p> Debian/UbuntuRHEL/Fedora <pre><code># Install dnsmasq\nsudo apt-get update &amp;&amp; sudo apt-get install dnsmasq\n\n# Configure dnsmasq to listen only on localhost\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Add custom DNS entries if needed\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# Restart dnsmasq\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <pre><code># Install dnsmasq\nsudo dnf install dnsmasq\n\n# Configure dnsmasq to listen only on localhost\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Add custom DNS entries if needed\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# Restart dnsmasq\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <p>Ensuite, configurez BunkerWeb pour utiliser dnsmasq en d\u00e9finissant <code>DNS_RESOLVERS</code> sur <code>127.0.0.1</code> :</p> Web UILinux <p>Acc\u00e9dez \u00e0 la page Config Globale et s\u00e9lectionnez le plugin NGINX, puis d\u00e9finissez les r\u00e9solveurs DNS sur <code>127.0.0.1</code>.</p> <p>Param\u00e8tres des r\u00e9solveurs DNS via l'interface Web</p> <p>Vous devrez modifier le fichier <code>/etc/bunkerweb/variables.env</code> :</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.1\n...\n</code></pre> <p>Apr\u00e8s avoir effectu\u00e9 cette modification, rechargez le Scheduler pour appliquer la configuration :</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre> <p>Lorsque vous utilisez l'image All-in-one, ex\u00e9cutez dnsmasq dans un conteneur s\u00e9par\u00e9 et configurez BunkerWeb pour l'utiliser :</p> <pre><code># Create a custom network for DNS communication\ndocker network create bw-dns\n\n# Run dnsmasq container using dockurr/dnsmasq with Quad9 DNS\n# Quad9 provides security-focused DNS resolution with malware blocking\ndocker run -d \\\n    --name dnsmasq \\\n    --network bw-dns \\\n    -e DNS1=\"9.9.9.9\" \\\n    -e DNS2=\"149.112.112.112\" \\\n    -p 53:53/udp \\\n    -p 53:53/tcp \\\n    --cap-add=NET_ADMIN \\\n    --restart=always \\\n    dockurr/dnsmasq\n\n# Run BunkerWeb All-in-one with dnsmasq DNS resolver\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network bw-dns \\\n    -v bw-storage:/data \\\n    -e DNS_RESOLVERS=\"dnsmasq\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ajoutez un service dnsmasq \u00e0 votre fichier docker-compose et configurez BunkerWeb pour l'utiliser\u00a0:</p> <pre><code>services:\n  dnsmasq:\n    image: dockurr/dnsmasq\n    container_name: dnsmasq\n    environment:\n      # Using Quad9 DNS servers for enhanced security and privacy\n      # Primary: 9.9.9.9 (Quad9 with malware blocking)\n      # Secondary: 149.112.112.112 (Quad9 backup server)\n      DNS1: \"9.9.9.9\"\n      DNS2: \"149.112.112.112\"\n    ports:\n      - 53:53/udp\n      - 53:53/tcp\n    cap_add:\n      - NET_ADMIN\n    restart: always\n    networks:\n      - bw-dns\n\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-services\n      - bw-dns\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-dns\n\nnetworks:\n  # ...existing networks...\n  bw-dns:\n    name: bw-dns\n</code></pre>"},{"location":"fr/advanced/#configurations-personnalisees","title":"Configurations personnalis\u00e9es","text":"<p>Pour personnaliser et ajouter des configurations personnalis\u00e9es \u00e0 BunkerWeb, vous pouvez profiter de sa base NGINX. Des configurations NGINX personnalis\u00e9es peuvent \u00eatre ajout\u00e9es dans diff\u00e9rents contextes NGINX, y compris des configurations pour le pare-feu d'applications Web (WAF) ModSecurity, qui est un composant central de BunkerWeb. Vous trouverez plus de d\u00e9tails sur les configurations de ModSecurity ici.</p> <p>Voici les types de configurations personnalis\u00e9es disponibles :</p> <ul> <li>http : Configurations au niveau HTTP de NGINX.</li> <li>server-http : configurations au niveau HTTP/Server de NGINX.</li> <li>default-server-http: configurations au niveau du serveur de NGINX, en particulier pour le \"serveur par d\u00e9faut\" lorsque le nom de client fourni ne correspond \u00e0 aucun nom de serveur dans <code>SERVER_NAME</code>.</li> <li>modsec-crs: Configurations appliqu\u00e9es avant le chargement de l'ensemble de r\u00e8gles de base OWASP.</li> <li>modsec: configurations appliqu\u00e9es apr\u00e8s le chargement de l'ensemble de r\u00e8gles de base OWASP ou utilis\u00e9es lorsque l'ensemble de r\u00e8gles de base n'est pas charg\u00e9.</li> <li>crs-plugins-before: Configurations pour les plugins CRS, appliqu\u00e9es avant le chargement des plugins CRS.</li> <li>crs-plugins-after: Configurations pour les plugins CRS, appliqu\u00e9es apr\u00e8s le chargement des plugins CRS.</li> <li>stream : Configurations au niveau du flux de NGINX.</li> <li>server-stream : Configurations au niveau Stream/Server de NGINX.</li> </ul> <p>Les configurations personnalis\u00e9es peuvent \u00eatre appliqu\u00e9es globalement ou sp\u00e9cifiquement pour un serveur particulier, en fonction du contexte applicable et de l'activation ou non du mode multisite .</p> <p>La m\u00e9thode d'application des configurations personnalis\u00e9es d\u00e9pend de l'int\u00e9gration utilis\u00e9e. Cependant, le processus sous-jacent implique l'ajout de fichiers avec le <code>.conf</code> suffixe \u00e0 des dossiers sp\u00e9cifiques. Pour appliquer une configuration personnalis\u00e9e \u00e0 un serveur sp\u00e9cifique, le fichier doit \u00eatre plac\u00e9 dans un sous-dossier nomm\u00e9 d'apr\u00e8s le nom du serveur principal.</p> <p>Certaines int\u00e9grations offrent des moyens plus pratiques d'appliquer des configurations, par exemple \u00e0 l'aide de Configs dans Docker Swarm ou de ConfigMap dans Kubernetes. Ces options offrent des approches plus simples pour la gestion et l'application des configurations.</p> Interface utilisateur WebLinuxTout-en-unDockerDocker autoconfKubernetesSwarm <p>Acc\u00e9dez \u00e0 la page Configs, cliquez sur Create new custom config, puis choisissez s'il s'agit d'une configuration globale ou sp\u00e9cifique \u00e0 un service, le type de configuration et le nom de la configuration :</p> <p>Configurations personnalis\u00e9es via l'interface Web</p> <p>N'oubliez pas de cliquer sur le bouton <code>\ud83d\udcbe Enregistrer</code>.</p> <p>Lorsque vous utilisez l'int\u00e9gration Linux, les configurations personnalis\u00e9es doivent \u00eatre \u00e9crites dans le dossier <code>/etc/bunkerweb/configs</code>.</p> <p>Voici un exemple pour server-http/hello-world.conf :</p> <pre><code>location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\n</code></pre> <p>Comme BunkerWeb s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 (nginx:nginx), vous devrez modifier les permissions :</p> <pre><code>chown -R root:nginx /etc/bunkerweb/configs &amp;&amp; \\\nchmod -R 770 /etc/bunkerweb/configs\n</code></pre> <p>V\u00e9rifions maintenant l'\u00e9tat du Scheduler :</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>S'ils sont d\u00e9j\u00e0 en cours d'ex\u00e9cution, nous pouvons le recharger :</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Sinon, nous devrons le d\u00e9marrer :</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Lorsque vous utilisez l'image Tout-en-un, vous avez deux options pour ajouter des configurations personnalis\u00e9es :</p> <ul> <li>Utilisation de param\u00e8tres sp\u00e9cifiques <code>*_CUSTOM_CONF_*</code> comme variables d'environnement lors de l'ex\u00e9cution du conteneur (recommand\u00e9).</li> <li>\u00c9criture <code>.conf</code> de fichiers dans le <code>/data/configs/</code> r\u00e9pertoire du volume mont\u00e9 sur <code>/data</code>.</li> </ul> <p>Utilisation des param\u00e8tres (variables d'environnement)</p> <p>Les param\u00e8tres \u00e0 utiliser doivent suivre le sch\u00e9ma <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code>:</p> <ul> <li><code>&lt;SITE&gt;</code> : Nom du serveur primaire facultatif si le mode multisite est activ\u00e9 et que la configuration doit \u00eatre appliqu\u00e9e \u00e0 un service sp\u00e9cifique.</li> <li><code>&lt;TYPE&gt;</code> : Le type de configuration, les valeurs accept\u00e9es sont <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code> <code>MODSEC</code> <code>MODSEC_CRS</code> <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code> <code>STREAM</code> , et <code>SERVER_STREAM</code>.</li> <li><code>&lt;NAME&gt;</code> : Le nom de la configuration sans le <code>.conf</code> suffixe.</li> </ul> <p>Voici un exemple fictif lors de l'ex\u00e9cution du conteneur All-in-one :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e \"CUSTOM_CONF_SERVER_HTTP_hello-world=location /hello { \\\n        default_type 'text/plain'; \\\n        content_by_lua_block { \\\n          ngx.say('world'); \\\n        } \\\n      }\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Veuillez noter que si votre conteneur est d\u00e9j\u00e0 cr\u00e9\u00e9, vous devrez le supprimer et le recr\u00e9er pour que les nouvelles variables d'environnement soient appliqu\u00e9es.</p> <p>Utilisation de fichiers</p> <p>La premi\u00e8re chose \u00e0 faire est de cr\u00e9er les dossiers :</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Vous pouvez maintenant \u00e9crire vos configurations :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>\u00c9tant donn\u00e9 que le Scheduler s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 avec UID et GID 101, vous devrez modifier les autorisations :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Au d\u00e9marrage du conteneur de l'ordonnanceur, vous devrez monter le dossier sur /data :</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v ./bw-data:/data \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Lorsque vous utilisez l'int\u00e9gration Docker, vous avez deux options pour ajouter des configurations personnalis\u00e9es :</p> <ul> <li>Utilisation de param\u00e8tres sp\u00e9cifiques <code>*_CUSTOM_CONF_*</code> comme variables d'environnement (recommand\u00e9)</li> <li>\u00c9criture des fichiers .conf sur le volume mont\u00e9 sur /data de l'ordonnanceur</li> </ul> <p>Utilisation des param\u00e8tres</p> <p>Les param\u00e8tres \u00e0 utiliser doivent suivre le sch\u00e9ma <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> :</p> <ul> <li><code>&lt;SITE&gt;</code> : nom de serveur primaire facultatif si le mode multisite est activ\u00e9 et que la configuration doit \u00eatre appliqu\u00e9e \u00e0 un service sp\u00e9cifique</li> <li><code>&lt;TYPE&gt;</code> : le type de configuration, les valeurs accept\u00e9es sont <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code> <code>SERVER_HTTP</code> <code>MODSEC</code> <code>MODSEC_CRS</code> <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> , et <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code> : le nom de config sans le suffixe .conf</li> </ul> <p>Voici un exemple factice utilisant un fichier docker-compose :</p> <pre><code>...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  environment:\n    - |\n      CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n          ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Utilisation de fichiers</p> <p>La premi\u00e8re chose \u00e0 faire est de cr\u00e9er les dossiers :</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Vous pouvez maintenant \u00e9crire vos configurations :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>\u00c9tant donn\u00e9 que le Scheduler s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 avec UID et GID 101, vous devrez modifier les autorisations :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Au d\u00e9marrage du conteneur de l'ordonnanceur, vous devrez monter le dossier sur /data :</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>Lorsque vous utilisez l'int\u00e9gration Docker autoconf, vous avez deux options pour ajouter des configurations personnalis\u00e9es :</p> <ul> <li>Utilisation de param\u00e8tres sp\u00e9cifiques <code>*_CUSTOM_CONF_*</code> comme \u00e9tiquettes (le plus simple)</li> <li>\u00c9criture des fichiers .conf sur le volume mont\u00e9 sur /data de l'ordonnanceur</li> </ul> <p>Utilisation des \u00e9tiquettes</p> <p>Limitations de l'utilisation des \u00e9tiquettes</p> <p>Lorsque vous utilisez des \u00e9tiquettes avec l'int\u00e9gration Docker autoconf, vous ne pouvez appliquer des configurations personnalis\u00e9es que pour le service web correspondant. L'application de http, default-server-http, stream ou de toute configuration globale (comme server-http ou server-stream pour tous les services) n'est pas possible : vous devrez monter des fichiers \u00e0 cet effet.</p> <p>Les \u00e9tiquettes \u00e0 utiliser doivent suivre le mod\u00e8le <code>bunkerweb.CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> :</p> <ul> <li><code>&lt;TYPE&gt;</code> : le type de configuration, les valeurs accept\u00e9es sont <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code> <code>CRS_PLUGINS_AFTER</code> et <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code> : le nom de config sans le suffixe .conf</li> </ul> <p>Voici un exemple factice utilisant un fichier docker-compose :</p> <pre><code>myapp:\n  image: nginxdemos/nginx-hello\n  labels:\n    - |\n      bunkerweb.CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n            ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Utilisation de fichiers</p> <p>La premi\u00e8re chose \u00e0 faire est de cr\u00e9er les dossiers :</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Vous pouvez maintenant \u00e9crire vos configurations :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>\u00c9tant donn\u00e9 que le Scheduler s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 avec UID et GID 101, vous devrez modifier les autorisations :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Au d\u00e9marrage du conteneur de l'ordonnanceur, vous devrez monter le dossier sur /data :</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>Lors de l'utilisation de l'int\u00e9gration Kubernetes, les configurations personnalis\u00e9es sont g\u00e9r\u00e9es \u00e0 l'aide de ConfigMap.</p> <p>Pour simplifier, vous n'avez m\u00eame pas besoin d'attacher le ConfigMap \u00e0 un Pod (par ex. comme variable d'environnement ou volume) : le Pod d'autoconf \u00e9coute les \u00e9v\u00e9nements ConfigMap et mettra \u00e0 jour les configurations personnalis\u00e9es lorsque n\u00e9cessaire.</p> <p>Lors de la cr\u00e9ation d'un ConfigMap, vous devrez ajouter des labels sp\u00e9ciaux :</p> <ul> <li>bunkerweb.io/CONFIG_TYPE : doit \u00eatre d\u00e9fini sur un type de configuration personnalis\u00e9 valide (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream ou server-stream)</li> <li>bunkerweb.io/CONFIG_SITE : d\u00e9fini sur un nom de serveur pour appliquer la configuration \u00e0 ce serveur sp\u00e9cifique (facultatif, sera appliqu\u00e9 globalement s'il n'est pas d\u00e9fini)</li> </ul> <p>Voici l'exemple :</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-all-server-http\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"server-http\"\ndata:\n  myconf: |\n  location /hello {\n    default_type 'text/plain';\n    content_by_lua_block {\n      ngx.say('world')\n    }\n  }\n</code></pre> <p>Custom Extra Config</p> <p>Depuis la version <code>1.6.0</code>, vous pouvez ajouter/remplacer des param\u00e8tres \u00e0 l'aide de l'annotation <code>bunkerweb.io/CONFIG_TYPE=settings</code>. En voici un exemple :</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-extra-settings\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"settings\"\ndata:\n  USE_ANTIBOT: \"captcha\" # multisite setting that will be applied to all services that do not override it\n  USE_REDIS: \"yes\" # global setting that will be applied globally\n  ...\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Lorsque vous utilisez l'Swarm integration, les configurations personnalis\u00e9es sont g\u00e9r\u00e9es \u00e0 l'aide des Docker Configs.</p> <p>Pour simplifier, vous n'avez m\u00eame pas besoin d'attacher le Config \u00e0 un service : le service d'autoconf \u00e9coute les \u00e9v\u00e9nements Config et mettra \u00e0 jour les configurations personnalis\u00e9es lorsque n\u00e9cessaire.</p> <p>Lors de la cr\u00e9ation d'un Config, vous devrez ajouter des labels sp\u00e9ciaux :</p> <ul> <li>bunkerweb.CONFIG_TYPE : doit \u00eatre d\u00e9fini sur un type de configuration personnalis\u00e9 valide (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream ou server-stream)</li> <li>bunkerweb.CONFIG_SITE : d\u00e9fini sur un nom de serveur pour appliquer la configuration \u00e0 ce serveur sp\u00e9cifique (facultatif, sera appliqu\u00e9 globalement s'il n'est pas d\u00e9fini)</li> </ul> <p>Voici l'exemple :</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" | docker config create -l bunkerweb.CONFIG_TYPE=server-http my-config -\n</code></pre> <p>Il n'y a pas de m\u00e9canisme de mise \u00e0 jour : l'alternative est de supprimer une configuration existante \u00e0 l'aide puis de <code>docker config rm</code> la recr\u00e9er.</p>"},{"location":"fr/advanced/#execution-de-nombreux-services-en-production","title":"Ex\u00e9cution de nombreux services en production","text":""},{"location":"fr/advanced/#crs-mondial","title":"CRS mondial","text":"<p>Plugins CRS</p> <p>Lorsque le SCR est charg\u00e9 globalement, les plug-ins SCR ne sont pas pris en charge. Si vous avez besoin de les utiliser, vous devrez charger le SCR par service.</p> <p>Si vous utilisez BunkerWeb en production avec un grand nombre de services, et que vous activez la fonctionnalit\u00e9 ModSecurity globalement avec des r\u00e8gles CRS, le temps n\u00e9cessaire pour charger les configurations BunkerWeb peut devenir trop long, ce qui peut entra\u00eener un d\u00e9lai d'expiration.</p> <p>La solution de contournement consiste \u00e0 charger les r\u00e8gles CRS globalement plut\u00f4t que par service. Ce comportement n'est pas activ\u00e9 par d\u00e9faut pour des raisons de compatibilit\u00e9 descendante et parce qu'il pr\u00e9sente un inconv\u00e9nient : si vous activez le chargement des r\u00e8gles CRS globales, il ne sera plus possible de d\u00e9finir des r\u00e8gles modsec-crs (ex\u00e9cut\u00e9es avant les r\u00e8gles CRS) par service. Cependant, cette limitation peut \u00eatre contourn\u00e9e en \u00e9crivant des r\u00e8gles d'exclusion globales <code>modsec-crs</code> comme suit :</p> <pre><code>SecRule REQUEST_FILENAME \"@rx ^/somewhere$\" \"nolog,phase:4,allow,id:1010,chain\"\nSecRule REQUEST_HEADERS:Host \"@rx ^app1\\.example\\.com$\" \"nolog\"\n</code></pre> <p>Vous pouvez activer le chargement global du SCR en d\u00e9finissant <code>USE_MODSECURITY_GLOBAL_CRS</code> la valeur . <code>yes</code></p>"},{"location":"fr/advanced/#ajuster-max_allowed_packet-pour-mariadbmysql","title":"Ajuster max_allowed_packet pour MariaDB/MySQL","text":"<p>Il semble que la valeur par d\u00e9faut du <code>max_allowed_packet</code> param\u00e8tre dans les serveurs de bases de donn\u00e9es MariaDB et MySQL ne soit pas suffisante lors de l'utilisation de BunkerWeb avec un grand nombre de services.</p> <p>Si vous rencontrez des erreurs comme celle-ci, en particulier sur le Scheduler :</p> <pre><code>[Warning] Aborted connection 5 to db: 'db' user: 'bunkerweb' host: '172.20.0.4' (Got a packet bigger than 'max_allowed_packet' bytes)\n</code></pre> <p>Vous devrez augmenter le <code>max_allowed_packet</code> sur votre serveur de base de donn\u00e9es.</p>"},{"location":"fr/advanced/#persistance-des-interdictions-et-des-signalements","title":"Persistance des interdictions et des signalements","text":"<p>Par d\u00e9faut, BunkerWeb stocke les bannissements et les rapports dans un magasin de donn\u00e9es Lua local. Bien que simple et efficace, cette configuration signifie que des donn\u00e9es sont perdues lors du red\u00e9marrage de l'instance. Pour vous assurer que les bannissements et les rapports persistent lors des red\u00e9marrages, vous pouvez configurer BunkerWeb pour utiliser un  serveur Redis ou Valkey distant  .</p> <p>Pourquoi utiliser Redis/Valkey ?</p> <p>Redis et Valkey sont de puissants magasins de donn\u00e9es en m\u00e9moire couramment utilis\u00e9s comme bases de donn\u00e9es, caches et courtiers de messages. Ils sont hautement \u00e9volutifs et prennent en charge une vari\u00e9t\u00e9 de structures de donn\u00e9es, notamment :</p> <ul> <li>Cha\u00eenes: paires cl\u00e9-valeur de base.</li> <li>Hachages: paires champ-valeur au sein d'une seule cl\u00e9.</li> <li>Listes: collections ordonn\u00e9es de cha\u00eenes.</li> <li>Ensembles: collections non ordonn\u00e9es de cha\u00eenes uniques.</li> <li>Ensembles tri\u00e9s: Collections ordonn\u00e9es avec partitions.</li> </ul> <p>En tirant parti de Redis ou de Valkey, BunkerWeb peut stocker de mani\u00e8re persistante les bannissements, les rapports et les donn\u00e9es de cache, garantissant ainsi la durabilit\u00e9 et l'\u00e9volutivit\u00e9.</p> <p>Activation de la prise en charge Redis/Valkey</p> <p>Pour activer la prise en charge de Redis ou Valkey, configurez les param\u00e8tres suivants dans votre fichier de configuration BunkerWeb :</p> <pre><code># Enable Redis/Valkey support\nUSE_REDIS=yes\n\n# Redis/Valkey server hostname or IP address\nREDIS_HOST=&lt;hostname&gt;\n\n# Redis/Valkey server port number (default: 6379)\nREDIS_PORT=6379\n\n# Redis/Valkey database number (default: 0)\nREDIS_DATABASE=0\n</code></pre> <ul> <li><code>USE_REDIS</code>: R\u00e9glez sur <code>yes</code> pour activer l'int\u00e9gration Redis/Valkey.</li> <li><code>REDIS_HOST</code>: Sp\u00e9cifiez le nom d'h\u00f4te ou l'adresse IP du serveur Redis/Valkey.</li> <li><code>REDIS_PORT</code>: Sp\u00e9cifiez le num\u00e9ro de port pour le serveur Redis/Valkey. La valeur par d\u00e9faut est <code>6379</code>.</li> <li><code>REDIS_DATABASE</code>: Indiquez le num\u00e9ro de base de donn\u00e9es Redis/Valkey \u00e0 utiliser. La valeur par d\u00e9faut est <code>0</code>.</li> </ul> <p>Si vous avez besoin de param\u00e8tres plus avanc\u00e9s, tels que l'authentification, la prise en charge SSL/TLS ou le mode Sentinel, reportez-vous \u00e0 la documentation sur les param\u00e8tres du plug-in Redis pour obtenir des conseils d\u00e9taill\u00e9s.</p>"},{"location":"fr/advanced/#proteger-les-applications-udptcp","title":"Prot\u00e9ger les applications UDP/TCP","text":"<p>Fonctionnalit\u00e9 exp\u00e9rimentale</p> <p>This feature is not production-ready. Feel free to test it and report us any bug using issues in the GitHub repository.</p> <p>BunkerWeb offre la possibilit\u00e9 de fonctionner comme un proxy inverse UDP/TCP g\u00e9n\u00e9rique, ce qui vous permet de prot\u00e9ger toutes les applications bas\u00e9es sur le r\u00e9seau fonctionnant au moins sur la couche 4 du mod\u00e8le OSI. Au lieu d'utiliser le module HTTP \"classique\", BunkerWeb exploite le module de flux de NGINX.</p> <p>Il est important de noter que tous les param\u00e8tres et fonctionnalit\u00e9s de s\u00e9curit\u00e9 ne sont pas disponibles lors de l'utilisation du module de flux. Vous trouverez de plus amples informations \u00e0 ce sujet dans les sections des fonctionnalit\u00e9s de la documentation.</p> <p>La configuration d'un proxy inverse de base est assez similaire \u00e0 la configuration HTTP, car elle implique l'utilisation des m\u00eames param\u00e8tres : <code>USE_REVERSE_PROXY=yes</code> et <code>REVERSE_PROXY_HOST=myapp:9000</code>. M\u00eame lorsque BunkerWeb est positionn\u00e9 derri\u00e8re un \u00e9quilibreur de charge, les param\u00e8tres restent les m\u00eames (le protocole PROXY \u00e9tant l'option prise en charge pour des raisons \u00e9videntes).</p> <p>En plus de cela, les param\u00e8tres sp\u00e9cifiques suivants sont utilis\u00e9s :</p> <ul> <li><code>SERVER_TYPE=stream</code> : activer  le <code>stream</code> mode (UDP/TCP g\u00e9n\u00e9rique) au lieu d' <code>http</code> un (qui est la valeur par d\u00e9faut)</li> <li><code>LISTEN_STREAM_PORT=4242</code> : le port d'\u00e9coute \"simple\" (sans SSL/TLS) sur lequel BunkerWeb \u00e9coutera</li> <li><code>LISTEN_STREAM_PORT_SSL=4343</code> : le port d'\u00e9coute \"ssl/tls\" sur lequel BunkerWeb \u00e9coutera</li> <li><code>USE_UDP=no</code> : \u00e9couter et transf\u00e9rer les paquets UDP au lieu de TCP</li> </ul> <p>Pour la liste compl\u00e8te des param\u00e8tres concernant <code>stream</code> le  mode, veuillez vous r\u00e9f\u00e9rer \u00e0 la sections des fonctionnalit\u00e9s de la documentation.</p> <p>Plusieurs ports d'\u00e9coute</p> <p>Depuis la version <code>1.6.0</code>, BunkerWeb prend en charge plusieurs ports d'\u00e9coute pour le mode <code>stream</code>. Vous pouvez les sp\u00e9cifier \u00e0 l'aide des param\u00e8tres <code>LISTEN_STREAM_PORT</code> et <code>LISTEN_STREAM_PORT_SSL</code>.</p> <p>Voici un exemple :</p> <pre><code>...\nLISTEN_STREAM_PORT=4242\nLISTEN_STREAM_PORT_SSL=4343\nLISTEN_STREAM_PORT_1=4244\nLISTEN_STREAM_PORT_SSL_1=4344\n...\n</code></pre> Tout-en-unDockerDocker autoconfKubernetesLinuxSwarm <p>Vous devrez ajouter ces param\u00e8tres aux variables d'environnement lors de l'ex\u00e9cution du conteneur All-in-one. Vous devrez \u00e9galement exposer les ports de stream.</p> <p>Cet exemple configure BunkerWeb pour agir comme proxy inverse pour deux applications bas\u00e9es sur le mode stream : <code>app1.example.com</code> et <code>app2.example.com</code>.</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e SERVICE_UI=\"no\" \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e USE_REVERSE_PROXY=\"yes\" \\\n    -e SERVER_TYPE=\"stream\" \\\n    -e app1.example.com_REVERSE_PROXY_HOST=\"myapp1:9000\" \\\n    -e app1.example.com_LISTEN_STREAM_PORT=\"10000\" \\\n    -e app2.example.com_REVERSE_PROXY_HOST=\"myapp2:9000\" \\\n    -e app2.example.com_LISTEN_STREAM_PORT=\"20000\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    -p 10000:10000/tcp \\\n    -p 20000:20000/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Veuillez noter que si votre conteneur existe d\u00e9j\u00e0, vous devrez le supprimer et le recr\u00e9er afin que les nouvelles variables d'environnement soient prises en compte.</p> <p>Vos applications (<code>myapp1</code>, <code>myapp2</code>) doivent s'ex\u00e9cuter dans des conteneurs s\u00e9par\u00e9s (ou \u00eatre autrement accessibles) et leurs noms d'h\u00f4te/adresses IP (par ex. <code>myapp1</code>, <code>myapp2</code> utilis\u00e9s dans <code>_REVERSE_PROXY_HOST</code>) doivent \u00eatre r\u00e9solubles et atteignables depuis le conteneur <code>bunkerweb-aio</code>. Cela implique g\u00e9n\u00e9ralement de les connecter \u00e0 un r\u00e9seau Docker partag\u00e9.</p> <p>D\u00e9sactiver le service UI</p> <p>Il est recommand\u00e9 de d\u00e9sactiver le service d'interface Web (par exemple en d\u00e9finissant la variable d'environnement <code>SERVICE_UI=no</code>) car l'interface Web n'est pas compatible avec <code>SERVER_TYPE=stream</code>.</p> <p>Lors de l'utilisation de l'int\u00e9gration Docker, la mani\u00e8re la plus simple de prot\u00e9ger des applications r\u00e9seau existantes est d'ajouter les services au r\u00e9seau <code>bw-services</code> :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for all services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n  # Jeton API optionnel pour les appels API authentifi\u00e9s\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      USE_REVERSE_PROXY: \"yes\" # Will be applied to all services\n      SERVER_TYPE: \"stream\" # Will be applied to all services\n      app1.example.com_REVERSE_PROXY_HOST: \"myapp1:9000\"\n      app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n      app2.example.com_REVERSE_PROXY_HOST: \"myapp2:9000\"\n      app2.example.com_LISTEN_STREAM_PORT: \"20000\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Avant d'ex\u00e9cuter la pile de l'int\u00e9gration Docker autoconf sur votre machine, vous devrez modifier les ports :</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n...\n</code></pre> <p>Une fois la pile en cours d'ex\u00e9cution, vous pouvez connecter vos applications existantes au r\u00e9seau <code>bw-services</code> et configurer BunkerWeb avec des <code>labels</code> :</p> <pre><code>services:\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app1.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app2.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Fonctionnalit\u00e9 exp\u00e9rimentale</p> <p>Actuellement, les Ingresses ne prennent pas en charge le mode <code>stream</code>. Ce que nous proposons ici est une solution de contournement pour le faire fonctionner.</p> <p>N'h\u00e9sitez pas \u00e0 le tester et \u00e0 nous signaler tout bug en ouvrant une issue via issues du d\u00e9p\u00f4t GitHub.</p> <p>Avant d'ex\u00e9cuter la pile de l'int\u00e9gration Kubernetes sur votre machine, vous devrez ouvrir les ports sur votre \u00e9quilibreur de charge :</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: lb\nspec:\n  type: LoadBalancer\n  ports:\n    - name: http # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      port: 80\n      targetPort: 8080\n    - name: app1\n      port: 10000\n      targetPort: 10000\n    - name: app2\n      port: 20000\n      targetPort: 20000\n  selector:\n    app: bunkerweb\n</code></pre> <p>Une fois la pile en cours d'ex\u00e9cution, vous pouvez cr\u00e9er vos ressources Ingress :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  namespace: services\n  annotations:\n    bunkerweb.io/SERVER_TYPE: \"stream\" # Will be applied to all services\n    bunkerweb.io/app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n    bunkerweb.io/app2.example.com_LISTEN_STREAM_PORT: \"20000\"\nspec:\n  rules:\n    - host: app1.example.com\n      http:\n        paths:\n          - path: / # This isn't used in stream mode but is required\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app1\n                port:\n                  number: 9000\n    - host: app2.example.com\n      http:\n        paths:\n          - path: / # This isn't used in stream mode but is required\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app2\n                port:\n                  number: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app1\n  namespace: services\n  labels:\n    app: app1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app1\n  template:\n    metadata:\n      labels:\n        app: app1\n    spec:\n      containers:\n        - name: app1\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app1\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app1\n  namespace: services\nspec:\n  selector:\n    app: app1\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app2\n  namespace: services\n  labels:\n    app: app2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app2\n  template:\n    metadata:\n      labels:\n        app: app2\n    spec:\n      containers:\n        - name: app2\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app2\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app2\n  namespace: services\nspec:\n  selector:\n    app: app2\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n</code></pre> <p>Vous devrez ajouter ces param\u00e8tres au fichier /etc/bunkerweb/variables.env :</p> <pre><code>...\nSERVER_NAME=app1.example.com app2.example.com\nMULTISITE=yes\nUSE_REVERSE_PROXY=yes\nSERVER_TYPE=stream\napp1.example.com_REVERSE_PROXY_HOST=myapp1.domain.or.ip:9000\napp1.example.com_LISTEN_STREAM_PORT=10000\napp2.example.com_REVERSE_PROXY_HOST=myapp2.domain.or.ip:9000\napp2.example.com_LISTEN_STREAM_PORT=20000\n...\n</code></pre> <p>V\u00e9rifions maintenant l'\u00e9tat du Scheduler :</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>S'ils sont d\u00e9j\u00e0 en cours d'ex\u00e9cution, nous pouvons le recharger :</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Sinon, nous devrons le d\u00e9marrer :</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Avant d'ex\u00e9cuter la pile de l'int\u00e9gration Swarm sur votre machine, vous devrez modifier les ports :</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      # Keep it if you want to use Let's Encrypt automation when using http challenge type\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      # app1\n      - published: 10000\n        target: 10000\n        mode: host\n        protocol: tcp\n      # app2\n      - published: 20000\n        target: 20000\n        mode: host\n        protocol: tcp\n...\n</code></pre> <p>Une fois la pile en cours d'ex\u00e9cution, vous pouvez connecter vos applications existantes au r\u00e9seau <code>bw-services</code> et configurer BunkerWeb \u00e0 l'aide d'\u00e9tiquettes :</p> <pre><code>services:\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"fr/advanced/#le-php","title":"Le PHP","text":"<p>Fonctionnalit\u00e9 exp\u00e9rimentale</p> <p>Pour le moment, le support PHP avec BunkerWeb est encore en version b\u00eata et nous vous recommandons d'utiliser une architecture de proxy inverse si vous le pouvez. D'ailleurs, PHP n'est pas du tout pris en charge pour certaines int\u00e9grations comme Kubernetes.</p> <p>BunkerWeb prend en charge PHP en utilisant des  instances PHP-FPM externes ou  distantes. Nous supposerons que vous \u00eates d\u00e9j\u00e0 familiaris\u00e9 avec la gestion de ce type de services.</p> <p>Les param\u00e8tres suivants peuvent \u00eatre utilis\u00e9s :</p> <ul> <li><code>REMOTE_PHP</code> : Nom d'h\u00f4te de l'instance PHP-FPM distante.</li> <li><code>REMOTE_PHP_PATH</code> : Dossier racine contenant les fichiers dans l'instance PHP-FPM distante.</li> <li><code>REMOTE_PHP_PORT</code> : Port de l'instance PHP-FPM distante (9000 par d\u00e9faut).</li> <li><code>LOCAL_PHP</code> : Chemin d'acc\u00e8s au fichier socket local de l'instance PHP-FPM.</li> <li><code>LOCAL_PHP_PATH</code> : Dossier racine contenant les fichiers dans l'instance locale PHP-FPM.</li> </ul> Tout-en-unDockerDocker autoconfKubernetesLinuxSwarm <p>Lorsque vous utilisez l'image Tout-en-un, pour prendre en charge les applications PHP, vous devrez :</p> <ul> <li>Montez vos fichiers PHP dans le <code>/var/www/html</code> dossier de BunkerWeb.</li> <li>Configurez un conteneur PHP-FPM pour votre application et montez le dossier contenant les fichiers PHP.</li> <li>Utilisez les param\u00e8tres sp\u00e9cifiques <code>REMOTE_PHP</code> et <code>REMOTE_PHP_PATH</code> comme variables d'environnement lors de l'ex\u00e9cution de BunkerWeb.</li> </ul> <p>Si vous activez le mode multisite, vous devrez cr\u00e9er des r\u00e9pertoires distincts pour chacune de vos applications. Chaque sous-r\u00e9pertoire doit \u00eatre nomm\u00e9 \u00e0 l'aide de la premi\u00e8re valeur de <code>SERVER_NAME</code>. Voici un exemple fictif :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app2.example.com\n    \u2514\u2500\u2500 index.php\n\n2 directories, 2 files\n</code></pre> <p>Nous supposerons que vos applications PHP se trouvent dans un dossier nomm\u00e9 <code>www</code>. Veuillez noter que vous devrez corriger les permissions pour que BunkerWeb (UID/GID 101) puisse au moins lire les fichiers et lister les dossiers et PHP-FPM (UID/GID 33 si vous utilisez l' <code>php:fpm</code> image) soit le propri\u00e9taire des fichiers et dossiers :</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Vous pouvez maintenant ex\u00e9cuter BunkerWeb, le configurer pour votre application PHP et \u00e9galement ex\u00e9cuter les applications PHP. Vous devrez cr\u00e9er un r\u00e9seau Docker personnalis\u00e9 pour permettre \u00e0 BunkerWeb de communiquer avec vos conteneurs PHP-FPM.</p> <pre><code># Create a custom network\ndocker network create php-network\n\n# Run PHP-FPM containers\ndocker run -d --name myapp1-php --network php-network -v ./www/app1.example.com:/app php:fpm\ndocker run -d --name myapp2-php --network php-network -v ./www/app2.example.com:/app php:fpm\n\n# Run BunkerWeb All-in-one\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network php-network \\\n    -v ./www:/var/www/html \\\n    -v bw-storage:/data \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e REMOTE_PHP_PATH=\"/app\" \\\n    -e app1.example.com_REMOTE_PHP=\"myapp1-php\" \\\n    -e app2.example.com_REMOTE_PHP=\"myapp2-php\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Veuillez noter que si votre conteneur est d\u00e9j\u00e0 cr\u00e9\u00e9, vous devrez le supprimer et le recr\u00e9er pour que les nouvelles variables d'environnement soient appliqu\u00e9es.</p> <p>Lors de l'utilisation de l'int\u00e9gration Docker, pour prendre en charge les applications PHP, vous devrez :</p> <ul> <li>Montez vos fichiers PHP dans le <code>/var/www/html</code> dossier de BunkerWeb</li> <li>Configurez un conteneur PHP-FPM pour votre application et montez le dossier contenant les fichiers PHP</li> <li>Utilisez les param\u00e8tres sp\u00e9cifiques <code>REMOTE_PHP</code> et <code>REMOTE_PHP_PATH</code> comme variables d'environnement lors du d\u00e9marrage de BunkerWeb</li> </ul> <p>Si vous activez le mode multisite, vous devrez cr\u00e9er des r\u00e9pertoires distincts pour chacune de vos applications. Chaque sous-r\u00e9pertoire doit \u00eatre nomm\u00e9 \u00e0 l'aide de la premi\u00e8re valeur de <code>SERVER_NAME</code>. Voici un exemple fictif :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>Nous supposerons que vos applications PHP se trouvent dans un dossier nomm\u00e9 <code>www</code>. Veuillez noter que vous devrez corriger les permissions pour que BunkerWeb (UID/GID 101) puisse au moins lire les fichiers et lister les dossiers et PHP-FPM (UID/GID 33 si vous utilisez l' <code>php:fpm</code> image) soit le propri\u00e9taire des fichiers et dossiers :</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Vous pouvez maintenant ex\u00e9cuter BunkerWeb, le configurer pour votre application PHP et \u00e9galement ex\u00e9cuter les applications PHP :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for all services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      REMOTE_PHP_PATH: \"/app\" # Will be applied to all services thanks to the MULTISITE setting\n      app1.example.com_REMOTE_PHP: \"myapp1\"\n      app2.example.com_REMOTE_PHP: \"myapp2\"\n      app3.example.com_REMOTE_PHP: \"myapp3\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: php:fpm\n    volumes:\n      - ./www/app1.example.com:/app\n    networks:\n      - bw-services\n\n  myapp2:\n    image: php:fpm\n    volumes:\n      - ./www/app2.example.com:/app\n    networks:\n      - bw-services\n\n  myapp3:\n    image: php:fpm\n    volumes:\n      - ./www/app3.example.com:/app\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Mode multisite activ\u00e9</p> <p>L'int\u00e9gration Docker autoconf implique l'utilisation du mode multisite : prot\u00e9ger une application PHP \u00e9quivaut \u00e0 prot\u00e9ger plusieurs.</p> <p>Lors de l'utilisation de l'int\u00e9gration Docker autoconf, pour prendre en charge les applications PHP, vous devrez :</p> <ul> <li>Montez vos fichiers PHP dans le <code>/var/www/html</code> dossier de BunkerWeb</li> <li>Configurez un conteneur PHP-FPM pour vos applications et montez le dossier contenant les applications PHP</li> <li>Utilisez les param\u00e8tres sp\u00e9cifiques <code>REMOTE_PHP</code> et <code>REMOTE_PHP_PATH</code> comme \u00e9tiquettes pour votre conteneur PHP-FPM</li> </ul> <p>Comme l'autoconf de Docker implique d'utiliser le mode multisite, vous devrez cr\u00e9er des r\u00e9pertoires distincts pour chacune de vos applications. Chaque sous-r\u00e9pertoire doit \u00eatre nomm\u00e9 \u00e0 l'aide de la premi\u00e8re valeur de <code>SERVER_NAME</code>. Voici un exemple fictif :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>Une fois les dossiers cr\u00e9\u00e9s, copiez vos fichiers et corrigez les permissions afin que BunkerWeb (UID/GID 101) puisse au moins lire les fichiers et lister les dossiers et PHP-FPM (UID/GID 33 si vous utilisez l' <code>php:fpm</code> image) soit le propri\u00e9taire des fichiers et dossiers :</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Lorsque vous d\u00e9marrez la pile autoconf de BunkerWeb, montez le <code>www</code> dossier dans <code>/var/www/html</code> le  conteneur Scheduler :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for all services\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # The Docker socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Vous pouvez maintenant cr\u00e9er vos conteneurs PHP-FPM, monter les bons sous-dossiers et utiliser des libell\u00e9s pour configurer BunkerWeb :</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp1\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp2\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      labels:\n        - \"bunkerweb.SERVER_NAME=app3.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp3\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>PHP n'est pas pris en charge pour Kubernetes</p> <p>L'int\u00e9gration Kubernetes permet la configuration via Ingress et le contr\u00f4leur BunkerWeb ne prend actuellement en charge que les applications HTTP.</p> <p>Nous supposerons que vous avez d\u00e9j\u00e0 la pile d'int\u00e9gration Linux integration en cours d'ex\u00e9cution sur votre machine.</p> <p>Par d\u00e9faut, BunkerWeb recherchera les fichiers web dans le dossier /var/www/html. Vous pouvez l'utiliser pour stocker vos applications PHP. Veuillez noter que vous devrez configurer votre service PHP-FPM pour d\u00e9finir l'utilisateur/groupe des processus en cours et le fichier de socket UNIX utilis\u00e9 pour communiquer avec BunkerWeb.</p> <p>Tout d'abord, assurez-vous que votre instance PHP-FPM peut acc\u00e9der aux fichiers situ\u00e9s dans /var/www/html et que BunkerWeb peut acc\u00e9der au fichier de socket UNIX afin de communiquer avec PHP-FPM. Il est recommand\u00e9 d'utiliser un utilisateur distinct tel que www-data pour le service PHP-FPM et d'autoriser le groupe nginx \u00e0 acc\u00e9der au fichier de socket UNIX. Voici la configuration PHP-FPM correspondante :</p> <pre><code>...\n[www]\nuser = www-data\ngroup = www-data\nlisten = /run/php/php-fpm.sock\nlisten.owner = www-data\nlisten.group = nginx\nlisten.mode = 0660\n...\n</code></pre> <p>N'oubliez pas de red\u00e9marrer votre service PHP-FPM :</p> <pre><code>systemctl restart php-fpm\n</code></pre> <p>Si vous activez le mode multisite, vous devrez cr\u00e9er des r\u00e9pertoires distincts pour chacune de vos applications. Chaque sous-r\u00e9pertoire doit \u00eatre nomm\u00e9 en utilisant la premi\u00e8re valeur de <code>SERVER_NAME</code>. Voici un exemple fictif :</p> <pre><code>/var/www/html\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>Veuillez noter que vous devrez corriger les permissions afin que BunkerWeb (groupe <code>nginx</code>) puisse au moins lire les fichiers et lister les dossiers, et que PHP-FPM (utilisateur <code>www-data</code>, qui peut varier selon votre syst\u00e8me) soit le propri\u00e9taire des fichiers et dossiers\u00a0:</p> <pre><code>chown -R www-data:nginx /var/www/html &amp;&amp; \\\nfind /var/www/html -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /var/www/html -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Vous pouvez maintenant \u00e9diter le fichier <code>/etc/bunkerweb/variable.env</code> :</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nMULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\napp1.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp1.example.com_LOCAL_PHP_PATH=/var/www/html/app1.example.com\napp2.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp2.example.com_LOCAL_PHP_PATH=/var/www/html/app2.example.com\napp3.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp3.example.com_LOCAL_PHP_PATH=/var/www/html/app3.example.com\n</code></pre> <p>V\u00e9rifions maintenant l'\u00e9tat du Scheduler :</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>S'il est d\u00e9j\u00e0 en cours d'ex\u00e9cution, nous pouvons le recharger :</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Sinon, nous devrons le d\u00e9marrer :</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Mode multisite activ\u00e9</p> <p>L'int\u00e9gration Swarm implique l'utilisation du mode multisite : prot\u00e9ger une application PHP \u00e9quivaut \u00e0 prot\u00e9ger plusieurs applications.</p> <p>Volume partag\u00e9</p> <p>L'utilisation de PHP avec l'int\u00e9gration Docker Swarm n\u00e9cessite un volume partag\u00e9 entre toutes les instances BunkerWeb et PHP-FPM, ce qui n'est pas couvert dans cette documentation.</p> <p>Lors de l'utilisation de l'int\u00e9gration Swarm, pour prendre en charge les applications PHP, vous devrez :</p> <ul> <li>Montez vos fichiers PHP dans le <code>/var/www/html</code> dossier de BunkerWeb</li> <li>Configurez un conteneur PHP-FPM pour vos applications et montez le dossier contenant les applications PHP</li> <li>Utilisez les param\u00e8tres sp\u00e9cifiques <code>REMOTE_PHP</code> et <code>REMOTE_PHP_PATH</code> comme \u00e9tiquettes pour votre conteneur PHP-FPM</li> </ul> <p>\u00c9tant donn\u00e9 que l'int\u00e9gration de Swarm implique l'utilisation du mode multisite, vous devrez cr\u00e9er des r\u00e9pertoires distincts pour chacune de vos applications. Chaque sous-r\u00e9pertoire doit \u00eatre nomm\u00e9 \u00e0 l'aide de la premi\u00e8re valeur de <code>SERVER_NAME</code>. Voici un exemple fictif :</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directories, 3 files\n</code></pre> <p>\u00c0 titre d'exemple, nous consid\u00e9rerons que vous avez un dossier partag\u00e9 mont\u00e9 sur vos n\u0153uds de travail sur le point de <code>/shared</code> terminaison.</p> <p>Une fois les dossiers cr\u00e9\u00e9s, copiez vos fichiers et corrigez les permissions afin que BunkerWeb (UID/GID 101) puisse au moins lire les fichiers et lister les dossiers et PHP-FPM (UID/GID 33 si vous utilisez l' <code>php:fpm</code> image) soit le propri\u00e9taire des fichiers et dossiers :</p> <pre><code>chown -R 33:101 /shared/www &amp;&amp; \\\nfind /shared/www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /shared/www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Lorsque vous d\u00e9marrez la pile BunkerWeb, montez le dossier /shared/www sur /var/www/html dans le conteneur Scheduler :</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    volumes:\n      - /shared/www:/var/www/html\n...\n</code></pre> <p>Vous pouvez maintenant cr\u00e9er vos services PHP-FPM, monter les sous-dossiers appropri\u00e9s et utiliser des labels pour configurer BunkerWeb :</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app1.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp1\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app2.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp2\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app3.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp3\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"fr/advanced/#ipv6","title":"IPv6","text":"<p>Fonctionnalit\u00e9 exp\u00e9rimentale</p> <p>Cette fonctionnalit\u00e9 n'est pas pr\u00eate pour la production. N'h\u00e9sitez pas \u00e0 la tester et \u00e0 nous signaler tout bug via les issues du d\u00e9p\u00f4t GitHub.</p> <p>Par d\u00e9faut, BunkerWeb n'\u00e9coutera que les adresses IPv4 et n'utilisera pas IPv6 pour les communications r\u00e9seau. Si vous souhaitez activer la prise en charge d'IPv6, vous devez d\u00e9finir <code>USE_IPV6=yes</code>. Veuillez noter que la configuration IPv6 de votre r\u00e9seau et de votre environnement n'entre pas dans le champ d'application de cette documentation.</p> Docker / Autoconf / SwarmLinux <p>Tout d'abord, vous devrez configurer le d\u00e9mon Docker pour activer la prise en charge d'IPv6 pour les conteneurs et utiliser ip6tables si n\u00e9cessaire. Voici une configuration d'exemple pour votre fichier /etc/docker/daemon.json :</p> <pre><code>{\n  \"experimental\": true,\n  \"ipv6\": true,\n  \"ip6tables\": true,\n  \"fixed-cidr-v6\": \"fd00:dead:beef::/48\"\n}\n</code></pre> <p>Vous pouvez maintenant red\u00e9marrer le service Docker pour appliquer les modifications :</p> <pre><code>systemctl restart docker\n</code></pre> <p>Une fois Docker configur\u00e9 pour prendre en charge IPv6, vous pouvez ajouter le param\u00e8tre <code>USE_IPV6</code> et configurer le r\u00e9seau bw-services pour IPv6 :</p> <pre><code>services:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      USE_IPv6: \"yes\"\n\n...\n\nnetworks:\n  bw-services:\n    name: bw-services\n    enable_ipv6: true\n    ipam:\n      config:\n        - subnet: fd00:13:37::/48\n          gateway: fd00:13:37::1\n\n...\n</code></pre> <p>Vous devrez ajouter ces param\u00e8tres au fichier /etc/bunkerweb/variables.env :</p> <pre><code>...\nUSE_IPV6=yes\n...\n</code></pre> <p>V\u00e9rifions maintenant l'\u00e9tat de BunkerWeb :</p> <pre><code>systemctl status bunkerweb\n</code></pre> <p>S'il est d\u00e9j\u00e0 en cours d'ex\u00e9cution, nous pouvons le red\u00e9marrer :</p> <pre><code>systemctl restart bunkerweb\n</code></pre> <p>Sinon, nous devrons le d\u00e9marrer :</p> <pre><code>systemctl start bunkerweb\n</code></pre>"},{"location":"fr/advanced/#reglage-de-la-securite","title":"R\u00e9glage de la s\u00e9curit\u00e9","text":"<p>BunkerWeb offre de nombreuses fonctionnalit\u00e9s de s\u00e9curit\u00e9 que vous pouvez configurer avec les fonctionnalit\u00e9s. M\u00eame si les valeurs par d\u00e9faut des param\u00e8tres assurent une \"s\u00e9curit\u00e9 par d\u00e9faut\" minimale, nous vous recommandons vivement de les r\u00e9gler. Ce faisant, vous serez en mesure de vous assurer du niveau de s\u00e9curit\u00e9 de votre choix, mais aussi de g\u00e9rer les faux positifs.</p> <p>Autres fonctionnalit\u00e9s</p> <p>Cette section se concentre uniquement sur le r\u00e9glage de la s\u00e9curit\u00e9, voir la section fonctionnalit\u00e9s de la documentation pour d'autres param\u00e8tres.</p> <p> </p> Vue d'ensemble et ordre des plugins de s\u00e9curit\u00e9 de base"},{"location":"fr/advanced/#integration-de-la-console-crowdsec","title":"Int\u00e9gration de la console CrowdSec","text":"<p>Si vous n'\u00eates pas d\u00e9j\u00e0 familier avec l'int\u00e9gration de la console CrowdSec, CrowdSec exploite l'intelligence participative pour lutter contre les cybermenaces. Consid\u00e9rez-le comme le \"Waze de la cybers\u00e9curit\u00e9\" : lorsqu'un serveur est attaqu\u00e9, les autres syst\u00e8mes du monde entier sont alert\u00e9s et prot\u00e9g\u00e9s contre les m\u00eames attaquants. Vous pouvez en savoir plus \u00e0 ce sujet ici.</p> <p>F\u00e9licitations, votre instance BunkerWeb est maintenant inscrite dans votre console CrowdSec !</p> <p>Conseil professionnel : Lorsque vous consultez vos alertes, cliquez sur l'option \"colonnes\" et cochez la case \"contexte\" pour acc\u00e9der aux donn\u00e9es sp\u00e9cifiques \u00e0 BunkerWeb.</p> <p> </p> Donn\u00e9es BunkerWeb affich\u00e9es dans la colonne de contexte"},{"location":"fr/advanced/#surveillance-et-rapports","title":"Surveillance et rapports","text":""},{"location":"fr/advanced/#monitoring-pro","title":"Monitoring  (PRO)","text":"<p>Prise en charge de STREAM </p> <p>Le plugin de surveillance vous permet de collecter et de r\u00e9cup\u00e9rer des m\u00e9triques sur BunkerWeb. En l'activant, votre ou vos instances commenceront \u00e0 collecter diverses donn\u00e9es li\u00e9es aux attaques, aux requ\u00eates et aux performances. Vous pouvez ensuite les r\u00e9cup\u00e9rer en appelant r\u00e9guli\u00e8rement le point de terminaison de l' <code>/monitoring</code> API ou en utilisant d'autres plugins comme celui de l'exportateur Prometheus.</p> <p>Liste des fonctionnalit\u00e9s</p> <ul> <li>Permettre la collecte de diverses m\u00e9triques BunkerWeb</li> <li>R\u00e9cup\u00e9rer des m\u00e9triques \u00e0 partir de l'API</li> <li>Utilisation en combinaison avec d'autres plugins (par exemple Prometheus exporter)</li> <li>D\u00e9di\u00e9e \u00e0 la page d'interface utilisateur pour surveiller vos instances</li> </ul> <p>Liste des param\u00e8tres</p> R\u00e9glage D\u00e9faut Contexte Multiple Description <code>USE_MONITORING</code> <code>yes</code> global Non Activez la surveillance de BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global Non Taille du dictionnaire pour stocker les m\u00e9triques de surveillance."},{"location":"fr/advanced/#prometheus-exporter-pro","title":"Prometheus exporter  (PRO)","text":"<p>Prise en charge de STREAM </p> <p>Le plugin d'exportation Prometheus ajoute un exportateur Prometheus sur votre ou vos instances BunkerWeb. Lorsqu'elle est activ\u00e9e, vous pouvez configurer votre ou vos instances Prometheus pour r\u00e9cup\u00e9rer un point de terminaison sp\u00e9cifique sur Bunkerweb et collecter des m\u00e9triques internes.</p> <p>Nous fournissons \u00e9galement un tableau de bord Grafana que vous pouvez importer dans votre propre instance et connecter \u00e0 votre propre source de donn\u00e9es Prometheus.</p> <p>Veuillez noter que l'utilisation du plugin d'exportation Prometheus n\u00e9cessite d'activer le plugin de surveillance (<code>USE_MONITORING=yes</code>)</p> <p>Liste des fonctionnalit\u00e9s</p> <ul> <li>L'exportateur Prometheus fournit des m\u00e9triques internes \u00e0 BunkerWeb</li> <li>Port d\u00e9di\u00e9 et configurable, IP et URL d'\u00e9coute</li> <li>Liste blanche IP/r\u00e9seau pour une s\u00e9curit\u00e9 maximale</li> </ul> <p>Liste des param\u00e8tres</p> R\u00e9glage Dd\u00e9faut Contexte Multiple Description <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global Non Activez l'exportation Prometheus. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global Non IP d'\u00e9coute de l'exportateur Prometheus. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global Non Port d'\u00e9coute de l'exportateur Prometheus. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global Non URL HTTP de l'exportateur Prometheus. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global Non Liste des adresses IP/r\u00e9seaux autoris\u00e9s \u00e0 contacter le point de terminaison de l'exportateur Prometheus."},{"location":"fr/advanced/#reporting-pro","title":"Reporting  (PRO)","text":"<p>Prise en charge de STREAM </p> <p>Plugin de surveillance n\u00e9cessaire</p> <p>Ce plug-in n\u00e9cessite l'installation et l'activation du plug-in Monitoring Pro avec le <code>USE_MONITORING</code> param\u00e8tre d\u00e9fini sur <code>yes</code>.</p> <p>Le plugin Reporting fournit une solution compl\u00e8te pour la communication r\u00e9guli\u00e8re de donn\u00e9es importantes de BunkerWeb, y compris les statistiques mondiales, les attaques, les bannissements, les demandes, les raisons et les informations AS. Il offre un large \u00e9ventail de fonctionnalit\u00e9s, notamment la cr\u00e9ation automatique de rapports, des options de personnalisation et une int\u00e9gration transparente avec le plugin monitoring pro. Avec le plugin Reporting, vous pouvez facilement g\u00e9n\u00e9rer et g\u00e9rer des rapports pour surveiller les performances et la s\u00e9curit\u00e9 de votre application.</p> <p>Liste des fonctionnalit\u00e9s</p> <ul> <li>Rapports r\u00e9guliers sur les donn\u00e9es importantes de BunkerWeb, y compris les statistiques mondiales, les attaques, les bannissements, les demandes, les raisons et les informations sur les SA.</li> <li>Int\u00e9gration avec le plug-in Monitoring Pro pour une int\u00e9gration transparente et des capacit\u00e9s de reporting am\u00e9lior\u00e9es.</li> <li>Prise en charge des webhooks (classique, Discord et Slack) pour les notifications en temps r\u00e9el.</li> <li>Prise en charge de SMTP pour les notifications par e-mail.</li> <li>Options de configuration pour plus de personnalisation et de flexibilit\u00e9.</li> </ul> <p>Liste des param\u00e8tres</p> R\u00e9glage Faire d\u00e9faut Contexte Description <code>USE_REPORTING_SMTP</code> <code>no</code> global Activez l'envoi du rapport par e-mail. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global Activez l'envoi du rapport via le webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global La fr\u00e9quence \u00e0 laquelle les rapports sont envoy\u00e9s. <code>REPORTING_WEBHOOK_URLS</code> global Liste des URL de webhook pour recevoir le rapport en Markdown (s\u00e9par\u00e9es par des espaces). <code>REPORTING_SMTP_EMAILS</code> global Liste des adresses e-mail pour recevoir le rapport au format HTML (s\u00e9par\u00e9es par des espaces). <code>REPORTING_SMTP_HOST</code> global Serveur h\u00f4te utilis\u00e9 pour l'envoi SMTP. <code>REPORTING_SMTP_PORT</code> <code>465</code> global Port utilis\u00e9 pour SMTP. Veuillez noter qu'il existe diff\u00e9rentes normes en fonction du type de connexion (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global L'adresse e-mail utilis\u00e9e comme exp\u00e9diteur. Notez que 2FA doit \u00eatre d\u00e9sactiv\u00e9 pour cette adresse e-mail. <code>REPORTING_SMTP_FROM_USER</code> global Valeur d'authentification de l'utilisateur pour l'envoi via l'adresse e-mail de l'exp\u00e9diteur. <code>REPORTING_SMTP_FROM_PASSWORD</code> global La valeur d'authentification par mot de passe pour l'envoi via l'adresse e-mail de l'exp\u00e9diteur. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global D\u00e9terminez s'il faut ou non utiliser une connexion s\u00e9curis\u00e9e pour SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global La ligne d'objet de l'e-mail. <p>Information et comportement</p> <ul> <li>cas <code>USE_REPORTING_SMTP</code> est d\u00e9fini sur <code>yes</code>, le param\u00e8tre <code>REPORTING_SMTP_EMAILS</code> doit \u00eatre d\u00e9fini.</li> <li>cas <code>USE_REPORTING_WEBHOOK</code> est d\u00e9fini sur <code>yes</code>, le param\u00e8tre <code>REPORTING_WEBHOOK_URLS</code> doit \u00eatre d\u00e9fini.</li> <li>Les valeurs accept\u00e9es pour <code>REPORTING_SCHEDULE</code> sont <code>daily</code>, <code>weekly</code> et <code>monthly</code>.</li> <li>cas aucun <code>REPORTING_SMTP_FROM_USER</code> et <code>REPORTING_SMTP_FROM_PASSWORD</code> ne sont d\u00e9finis, le plugin essaiera d'envoyer l'e-mail sans authentification.</li> <li>cas <code>REPORTING_SMTP_FROM_USER</code> n'est pas d\u00e9fini mais <code>REPORTING_SMTP_FROM_PASSWORD</code> est d\u00e9fini, le plugin utilisera le <code>REPORTING_SMTP_FROM_EMAIL</code> comme nom d'utilisateur.</li> <li>En cas d'\u00e9chec du travail, le plug-in r\u00e9essaiera d'envoyer le rapport lors de la prochaine ex\u00e9cution.</li> </ul>"},{"location":"fr/advanced/#sauvegarde-et-restauration","title":"Sauvegarde et restauration","text":""},{"location":"fr/advanced/#backup-s3-pro","title":"Backup S3  (PRO)","text":"<p>Prise en charge STREAM </p> <p>L'outil Backup S3 automatise de mani\u00e8re transparente la protection des donn\u00e9es, \u00e0 l'instar du plug-in de sauvegarde communautaire. Cependant, il se distingue par le stockage s\u00e9curis\u00e9 des sauvegardes directement dans un compartiment S3.</p> <p>En activant cette fonctionnalit\u00e9, vous prot\u00e9gez de mani\u00e8re proactive l'int\u00e9grit\u00e9 de vos donn\u00e9es. Le stockage \u00e0 distance des sauvegardes prot\u00e8ge les informations cruciales contre les menaces telles que ** les pannes mat\u00e9rielles, les cyberattaques ou les catastrophes naturelles. Cela garantit \u00e0 la fois la s\u00e9curit\u00e9 et la disponibilit\u00e9, ce qui permet une r\u00e9cup\u00e9ration rapide en cas ** d'\u00e9v\u00e9nements inattendus, pr\u00e9servant la continuit\u00e9 op\u00e9rationnelle et garantissant la tranquillit\u00e9 d'esprit.</p> Informations pour les utilisateurs de Red Hat Enterprise Linux (RHEL) 8.9 <p>Si vous utilisez RHEL 8.9 et que vous pr\u00e9voyez d'utiliser une base de donn\u00e9es externe, vous devez installer le <code>mysql-community-client</code> package pour vous assurer que la <code>mysqldump</code> commande est disponible. Vous pouvez installer le package en ex\u00e9cutant les commandes suivantes :</p> MySQL/MariaDBPostgreSQL <ol> <li>Installez le paquet de configuration du d\u00e9p\u00f4t MySQL</li> </ol> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> <ol> <li>Activez le d\u00e9p\u00f4t MySQL</li> </ol> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> <ol> <li>Installez le client MySQL</li> </ol> <pre><code>sudo dnf install mysql-community-client\n</code></pre> <ol> <li>Installez le paquet de configuration du d\u00e9p\u00f4t PostgreSQL</li> </ol> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> <ol> <li>Installez le client PostgreSQL</li> </ol> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> <p>Liste des fonctionnalit\u00e9s</p> <ul> <li>Sauvegarde automatique des donn\u00e9es dans un compartiment S3</li> <li>Options de planification flexibles : quotidienne, hebdomadaire ou mensuelle</li> <li>Gestion de la rotation pour contr\u00f4ler le nombre de sauvegardes \u00e0 conserver</li> <li>Niveau de compression personnalisable pour les fichiers de sauvegarde</li> </ul> <p>Liste des param\u00e8tres</p> R\u00e9glage Faire d\u00e9faut Contexte Description <code>USE_BACKUP_S3</code> <code>no</code> global Activer ou d\u00e9sactiver la fonction de sauvegarde S3 <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global La fr\u00e9quence de la sauvegarde <code>BACKUP_S3_ROTATION</code> <code>7</code> global Le nombre de sauvegardes \u00e0 conserver <code>BACKUP_S3_ENDPOINT</code> global Le point de terminaison S3 <code>BACKUP_S3_BUCKET</code> global Le godet S3 <code>BACKUP_S3_DIR</code> global L'annuaire S3 <code>BACKUP_S3_REGION</code> global La r\u00e9gion S3 <code>BACKUP_S3_ACCESS_KEY_ID</code> global L'ID de la cl\u00e9 d'acc\u00e8s S3 <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global Le secret de la cl\u00e9 d'acc\u00e8s S3 <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global Le niveau de compression du fichier zip de sauvegarde"},{"location":"fr/advanced/#sauvegarde-manuelle","title":"Sauvegarde manuelle","text":"<p>Pour lancer manuellement une sauvegarde, ex\u00e9cutez la commande suivante :</p> LinuxDocker <pre><code>bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Cette commande cr\u00e9e une sauvegarde de votre base de donn\u00e9es et la stocke dans le compartiment S3 sp\u00e9cifi\u00e9 dans le <code>BACKUP_S3_BUCKET</code> param\u00e8tre.</p> <p>Vous pouvez \u00e9galement sp\u00e9cifier un compartiment S3 personnalis\u00e9 pour la sauvegarde en fournissant la variable d' <code>BACKUP_S3_BUCKET</code> environnement lors de l'ex\u00e9cution de la commande :</p> LinuxDocker <pre><code>BACKUP_S3_BUCKET=your-bucket-name bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it -e BACKUP_S3_BUCKET=your-bucket-name &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Sp\u00e9cifications pour MariaDB/MySQL</p> <p>Si vous utilisez MariaDB/MySQL, vous pouvez rencontrer l'erreur suivante lors de la sauvegarde de votre base de donn\u00e9es :</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>Pour r\u00e9soudre ce probl\u00e8me, vous pouvez ex\u00e9cuter la commande suivante pour changer le plugin d'authentification en <code>mysql_native_password</code> :</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>Si vous utilisez l'int\u00e9gration Docker, vous pouvez ajouter la commande suivante au fichier <code>docker-compose.yml</code> pour changer automatiquement le plugin d'authentification :</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"fr/advanced/#restauration-manuelle","title":"Restauration manuelle","text":"<p>Pour lancer manuellement une restauration, ex\u00e9cutez la commande suivante :</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre> <p>Cette commande cr\u00e9e une sauvegarde temporaire de votre base de donn\u00e9es dans le compartiment S3 sp\u00e9cifi\u00e9 dans le <code>BACKUP_S3_BUCKET</code> param\u00e8tre et restaure votre base de donn\u00e9es \u00e0 la derni\u00e8re sauvegarde disponible dans le compartiment.</p> <p>Vous pouvez \u00e9galement sp\u00e9cifier un fichier de sauvegarde personnalis\u00e9 pour la restauration en fournissant le chemin d'acc\u00e8s \u00e0 celui-ci en tant qu'argument lors de l'ex\u00e9cution de la commande :</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore s3_backup_file.zip\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup restore s3_backup_file.zip\n</code></pre> <p>En cas de panne</p> <p>Don't worry if the restore fails, you can always restore your database to the previous state by executing the command again as a backup is created before the restore:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre>"},{"location":"fr/advanced/#migration-pro","title":"Migration  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Le plug-in de migration r\u00e9volutionne les transferts de configuration BunkerWeb entre les instances gr\u00e2ce \u00e0 son interface Web conviviale, simplifiant ainsi l'ensemble du parcours de migration. Que vous mettiez \u00e0 niveau des syst\u00e8mes, que vous fassiez \u00e9voluer une infrastructure ou que vous transformiez d'environnement, cet outil vous permet de transf\u00e9rer sans effort les param\u00e8tres, les pr\u00e9f\u00e9rences et les donn\u00e9es avec une facilit\u00e9 et une confiance in\u00e9gal\u00e9es. Dites adieu aux processus manuels fastidieux et bonjour \u00e0 une exp\u00e9rience de migration transparente et sans tracas.</p> <p>Liste des fonctionnalit\u00e9s</p> <ul> <li> <p>Migration sans effort : Transf\u00e9rez facilement les configurations BunkerWeb entre les instances sans les complexit\u00e9s des proc\u00e9dures manuelles.</p> </li> <li> <p>Interface Web intuitive : Naviguez sans effort dans le processus de migration gr\u00e2ce \u00e0 une interface Web conviviale con\u00e7ue pour un fonctionnement intuitif.</p> </li> <li> <p>Compatibilit\u00e9 entre bases de donn\u00e9es : profitez d'une migration transparente sur diverses plates-formes de bases de donn\u00e9es, notamment SQLite, MySQL, MariaDB et PostgreSQL, garantissant la compatibilit\u00e9 avec votre environnement de base de donn\u00e9es pr\u00e9f\u00e9r\u00e9.</p> </li> </ul>"},{"location":"fr/advanced/#creer-un-fichier-de-migration","title":"Cr\u00e9er un fichier de migration","text":"<p>Pour cr\u00e9er manuellement un fichier de migration, ex\u00e9cutez la commande suivante :</p> LinuxDocker <pre><code>bwcli plugin migration create /path/to/migration/file\n</code></pre> <ol> <li> <p>Cr\u00e9ez un fichier de migration :</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration create /path/to/migration/file\n</code></pre> </li> <li> <p>Copiez le fichier de migration sur votre ordinateur local :</p> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/migration/file /path/to/migration/file\n</code></pre> </li> </ol> <p>Cette commande cr\u00e9era une sauvegarde de votre base de donn\u00e9es et la stockera dans le r\u00e9pertoire de sauvegarde sp\u00e9cifi\u00e9 dans la commande.</p> <p>Sp\u00e9cifications pour MariaDB/MySQL</p> <p>Si vous utilisez MariaDB/MySQL, vous pouvez rencontrer l'erreur suivante lors de la sauvegarde de votre base de donn\u00e9es :</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>Pour r\u00e9soudre ce probl\u00e8me, vous pouvez ex\u00e9cuter la commande suivante pour changer le plugin d'authentification en <code>mysql_native_password</code> :</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>Si vous utilisez l'int\u00e9gration Docker, vous pouvez ajouter la commande suivante au fichier <code>docker-compose.yml</code> pour changer automatiquement le plugin d'authentification :</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"fr/advanced/#initialiser-une-migration","title":"Initialiser une migration","text":"<p>Pour initialiser manuellement une migration, ex\u00e9cutez la commande suivante :</p> LinuxDockerTout-en-un <pre><code>bwcli plugin migration migrate /path/to/migration/file\n</code></pre> <ol> <li> <p>Copiez le fichier de migration dans le conteneur :</p> <pre><code>docker cp /path/to/migration/file &lt;scheduler_container&gt;:/path/to/migration/file\n</code></pre> </li> <li> <p>Initialisez la migration :</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration migrate /path/to/migration/file\n</code></pre> </li> </ol> <ol> <li> <p>Copiez le fichier de migration dans le conteneur :</p> <pre><code>docker cp /path/to/migration/file bunkerweb-aio:/path/to/migration/file\n</code></pre> </li> <li> <p>Initialisez la migration :</p> <pre><code>docker exec -it bunkerweb-aio bwcli plugin migration migrate /path/to/migration/file\n</code></pre> </li> </ol> <p>Cette commande migre de mani\u00e8re transparente vos donn\u00e9es BunkerWeb pour qu'elles correspondent pr\u00e9cis\u00e9ment \u00e0 la configuration d\u00e9crite dans le fichier de migration.</p>"},{"location":"fr/advanced/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>Prise en charge de STREAM </p> <p>Le  plug-in anti-DDoS offre une protection avanc\u00e9e contre les attaques par d\u00e9ni de service distribu\u00e9 (DDoS) en surveillant, analysant et filtrant le trafic suspect en temps r\u00e9el.</p> <p>En utilisant un m\u00e9canisme de fen\u00eatre glissante, le plugin maintient un dictionnaire en m\u00e9moire des horodatages des requ\u00eates pour d\u00e9tecter les pics de trafic anormaux \u00e0 partir d'adresses IP individuelles. En fonction du mode de s\u00e9curit\u00e9 configur\u00e9, il peut soit bloquer les connexions incrimin\u00e9es, soit consigner l'activit\u00e9 suspecte pour un examen plus approfondi.</p>"},{"location":"fr/advanced/#fonctionnalites","title":"Fonctionnalit\u00e9s","text":"<ul> <li>Analyse du trafic en temps r\u00e9el : surveille en permanence les demandes entrantes pour d\u00e9tecter les attaques DDoS potentielles.</li> <li>M\u00e9canisme de fen\u00eatre glissante : suit l'activit\u00e9 r\u00e9cente des demandes dans une fen\u00eatre de temps configurable.</li> <li>Seuils configurables : vous permet de d\u00e9finir le nombre maximum de requ\u00eates suspectes par IP.</li> <li>Logique de blocage avanc\u00e9e : \u00e9value \u00e0 la fois le nombre de requ\u00eates par IP et le nombre d'adresses IP distinctes d\u00e9passant le seuil.</li> <li>Modes de s\u00e9curit\u00e9 flexibles : choisissez entre le blocage imm\u00e9diat de la connexion ou le mode de d\u00e9tection uniquement (journalisation).</li> <li>Magasin de donn\u00e9es en m\u00e9moire optimis\u00e9 : Garantit des recherches \u00e0 grande vitesse et un suivi efficace des m\u00e9triques.</li> <li>Entretien m\u00e9nager automatique : efface p\u00e9riodiquement les donn\u00e9es obsol\u00e8tes pour maintenir des performances optimales.</li> </ul>"},{"location":"fr/advanced/#configuration","title":"Configuration","text":"<p>Personnalisez le comportement du plug-in \u00e0 l'aide des param\u00e8tres suivants :</p> R\u00e9glage Faire d\u00e9faut Contexte Multiple Description <code>USE_ANTIDDOS</code> <code>no</code> global Non Activez ou d\u00e9sactivez la protection anti-DDoS. R\u00e9glez sur <code>\"yes\"</code> pour activer le plugin. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global Non Taille de la banque de donn\u00e9es en m\u00e9moire pour le suivi des m\u00e9triques DDoS (par exemple, <code>10M</code>, <code>500k</code>). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global Non Nombre maximum de requ\u00eates suspectes autoris\u00e9es par IP dans la fen\u00eatre de temps d\u00e9finie. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global Non Fen\u00eatre de temps en secondes pendant laquelle les demandes suspectes sont comptabilis\u00e9es. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global Non Codes d'\u00e9tat HTTP consid\u00e9r\u00e9s comme suspects et utilis\u00e9s pour d\u00e9clencher des actions anti-DDoS. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global Non Nombre minimum d'adresses IP distinctes qui doivent d\u00e9passer le seuil avant d'appliquer le mode de blocage."},{"location":"fr/advanced/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ul> <li>R\u00e9glage du seuil : ajustez <code>ANTIDDOS_THRESHOLD</code> et <code>ANTIDDOS_WINDOW_TIME</code> en fonction de vos mod\u00e8les de trafic typiques.</li> <li>R\u00e9vision du code d'\u00e9tat : mettez r\u00e9guli\u00e8rement \u00e0 jour <code>ANTIDDOS_STATUS_CODES</code> pour capturer les comportements suspects nouveaux ou en \u00e9volution.</li> <li>Surveillance : analysez r\u00e9guli\u00e8rement les journaux et les m\u00e9triques pour affiner les param\u00e8tres et am\u00e9liorer la protection globale.</li> </ul>"},{"location":"fr/advanced/#gestionnaire-dutilisateurs-pro","title":"Gestionnaire d'utilisateurs  (PRO)","text":"<p>Le plug-in de gestion des utilisateurs offre une interface robuste pour l'administration des comptes d'utilisateurs au sein de votre syst\u00e8me.</p> <p>Avec ce plugin, les administrateurs peuvent sans effort cr\u00e9er, mettre \u00e0 jour et d\u00e9sactiver des comptes utilisateurs, g\u00e9rer les r\u00f4les des utilisateurs, basculer l'authentification \u00e0 deux facteurs (2FA) et afficher des informations d\u00e9taill\u00e9es sur les utilisateurs telles que les horodatages de la derni\u00e8re connexion et les statuts des comptes (actif ou inactif). Con\u00e7u dans un souci de s\u00e9curit\u00e9 et de facilit\u00e9 d'utilisation, ce plug-in simplifie les t\u00e2ches de gestion des utilisateurs tout en garantissant la conformit\u00e9 et l'auditabilit\u00e9.</p>"},{"location":"fr/advanced/#fonctionnalites_1","title":"Fonctionnalit\u00e9s","text":"<ul> <li>Op\u00e9rations de compte d'utilisateur : importez au format CSV/XSLX, cr\u00e9ez, modifiez et supprimez des comptes d'utilisateur en toute simplicit\u00e9.</li> <li>Contr\u00f4le d'acc\u00e8s bas\u00e9 sur les r\u00f4les : Attribuez et modifiez les r\u00f4les d'utilisateur pour g\u00e9rer les autorisations et les niveaux d'acc\u00e8s.</li> <li>Gestion 2FA : d\u00e9sactivez l'authentification \u00e0 deux facteurs en fonction des d\u00e9cisions administratives.</li> <li>Informations compl\u00e8tes sur les utilisateurs : surveillez les donn\u00e9es cl\u00e9s des utilisateurs, notamment les heures de derni\u00e8re connexion, les dates de cr\u00e9ation de compte et le statut actif/inactif.</li> <li>Journalisation des audits : conservez une piste d'audit pour toutes les actions de gestion des utilisateurs afin d'am\u00e9liorer la s\u00e9curit\u00e9 et la conformit\u00e9.</li> </ul> Page Gestionnaire d'utilisateurs Gestionnaire d'utilisateurs - Cr\u00e9er un formulaire d'utilisateur Gestionnaire d'utilisateurs - Page Activit\u00e9s"},{"location":"fr/advanced/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>Le plugin Easy Resolve vous permet de rem\u00e9dier rapidement aux faux positifs et aux probl\u00e8mes r\u00e9currents directement depuis la page Rapports. Il transforme les actions guid\u00e9es \"R\u00e9soudre\" en mises \u00e0 jour de configuration s\u00fbres et \u00e9tendues\u2014sans \u00e9dition manuelle.</p>"},{"location":"fr/advanced/#fonctionnalites_2","title":"Fonctionnalit\u00e9s","text":"<ul> <li>Actions en un clic depuis les Rapports et les d\u00e9tails des rapports.</li> <li>Suggestions contextuelles pour ModSecurity, blacklist et DNSBL.</li> <li>G\u00e9n\u00e8re des exclusions ModSecurity s\u00fbres ou met \u00e0 jour les listes d'ignorance.</li> <li>Applique les changements au niveau du service ou global avec v\u00e9rifications des permissions.</li> <li>Ouverture automatique optionnelle de la page de configuration li\u00e9e apr\u00e8s application.</li> </ul> Page Rapports - avec Easy Resolve R\u00e9soudre ModSecurity R\u00e9soudre DNSBL Blacklist - IP Blacklist - User\u2011Agent Blacklist - rDNS Blacklist - ASN Blacklist - URI"},{"location":"fr/api/#apercu","title":"Aper\u00e7u","text":"<p>L'API de BunkerWeb est le plan de contr\u00f4le utilis\u00e9 pour g\u00e9rer les instances BunkerWeb de mani\u00e8re programmatique : lister et g\u00e9rer les instances, les recharger/arr\u00eater, g\u00e9rer les bannissements, les plugins, les t\u00e2ches, les configurations, et plus encore. Elle expose une application FastAPI document\u00e9e avec une authentification forte, une gestion des autorisations et une limitation de d\u00e9bit.</p> <p>Ouvrez la documentation interactive sur <code>/docs</code> (ou <code>&lt;root_path&gt;/docs</code> si vous avez d\u00e9fini <code>API_ROOT_PATH</code>). Le sch\u00e9ma OpenAPI est disponible sur <code>/openapi.json</code>.</p> <p>S\u00e9curit\u00e9</p> <p>L'API est un plan de contr\u00f4le privil\u00e9gi\u00e9. Ne l'exposez pas sur l'Internet public sans protections suppl\u00e9mentaires.</p> <p>Au minimum, restreignez les adresses IP sources (<code>API_WHITELIST_IPS</code>), activez l'authentification (<code>API_TOKEN</code> ou des utilisateurs API + Biscuit), et envisagez de la placer derri\u00e8re BunkerWeb avec une URL difficile \u00e0 deviner et des contr\u00f4les d'acc\u00e8s suppl\u00e9mentaires.</p>"},{"location":"fr/api/#prerequis","title":"Pr\u00e9requis","text":"<p>Le service API n\u00e9cessite un acc\u00e8s \u00e0 la base de donn\u00e9es de BunkerWeb (<code>DATABASE_URI</code>). Il est g\u00e9n\u00e9ralement d\u00e9ploy\u00e9 aux c\u00f4t\u00e9s du Planificateur (Scheduler) et, optionnellement, de l'Interface Web (Web UI). La configuration recommand\u00e9e est d'ex\u00e9cuter BunkerWeb en tant que reverse proxy en amont et d'isoler l'API sur un r\u00e9seau interne.</p> <p>Consultez l'assistant et les conseils d'architecture dans le guide de d\u00e9marrage rapide.</p>"},{"location":"fr/api/#points-cles","title":"Points cl\u00e9s","text":"<ul> <li>Gestion des instances : diffuse les actions op\u00e9rationnelles aux instances d\u00e9couvertes.</li> <li>Authentification forte : Basic pour les administrateurs, jeton Bearer pour un acc\u00e8s admin complet, ou jeton Biscuit pour des permissions granulaires.</li> <li>Liste blanche d'IP et limitation de d\u00e9bit flexible par route.</li> <li>Signaux standards de sant\u00e9/disponibilit\u00e9 (<code>health</code>/<code>readiness</code>) et v\u00e9rifications de s\u00e9curit\u00e9 au d\u00e9marrage.</li> </ul>"},{"location":"fr/api/#modeles-de-configuration-docker-compose","title":"Mod\u00e8les de configuration Docker Compose","text":"DockerDocker Autoconf <p>Exposer l'API en reverse proxy sous <code>/api</code> avec BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # Liste blanche commune pour le plan de contr\u00f4le des instances (BunkerWeb/Scheduler)\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\"  # Doit correspondre au nom de service de l'instance\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      # Reverse proxy pour l'API sur /api\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/api\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-api:8888\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Utilisez un mot de passe robuste\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"                      # Liste blanche de l'API\n      API_TOKEN: \"secret\"                                                 # Jeton optionnel pour acc\u00e8s admin complet\n      API_ROOT_PATH: \"/api\"                                               # Doit correspondre au chemin du reverse proxy\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # \u00c9vite les probl\u00e8mes avec les requ\u00eates volumineuses\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"  # Utilisez un mot de passe robuste\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Identique \u00e0 ci-dessus, mais en utilisant le service Autoconf pour d\u00e9couvrir et configurer automatiquement les services. L'API est expos\u00e9e sous <code>/api</code> gr\u00e2ce aux labels sur le conteneur de l'API.</p> <pre><code>x-api-env: &amp;api-env\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Utilisez un mot de passe robuste\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *api-env\n      BUNKERWEB_INSTANCES: \"\"    # D\u00e9couvert par Autoconf\n      SERVER_NAME: \"\"            # Rempli via les labels\n      MULTISITE: \"yes\"           # Obligatoire avec Autoconf\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *api-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      &lt;&lt;: *api-env\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      API_TOKEN: \"secret\"\n      API_ROOT_PATH: \"/api\"\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/api\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-api:8888\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: unless-stopped\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Chemin du reverse proxy</p> <p>Gardez le chemin de l'API difficile \u00e0 deviner et combinez-le avec la liste blanche et l'authentification de l'API.</p> <p>Si vous exposez d\u00e9j\u00e0 une autre application sur le m\u00eame nom de serveur avec un mod\u00e8le (par ex. <code>USE_TEMPLATE</code>), pr\u00e9f\u00e9rez un nom d'h\u00f4te distinct pour l'API afin d'\u00e9viter les conflits.</p>"},{"location":"fr/api/#all-in-one","title":"All-In-One","text":"<p>Si vous utilisez l'image All-In-One, l'API peut \u00eatre activ\u00e9e en d\u00e9finissant <code>SERVICE_API=yes</code>:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre>"},{"location":"fr/api/#authentification","title":"Authentification","text":"<p>M\u00e9thodes support\u00e9es pour authentifier les requ\u00eates :</p> <ul> <li>Basic admin : Lorsque les identifiants appartiennent \u00e0 un utilisateur admin de l'API, les points d'acc\u00e8s prot\u00e9g\u00e9s acceptent <code>Authorization: Basic &lt;base64(username:password)&gt;</code>.</li> <li>Bearer admin (jeton global) : Si <code>API_TOKEN</code> est configur\u00e9, <code>Authorization: Bearer &lt;API_TOKEN&gt;</code> accorde un acc\u00e8s complet.</li> <li>Jeton Biscuit (recommand\u00e9) : Obtenez un jeton depuis <code>POST /auth</code> en utilisant des identifiants Basic ou un corps de requ\u00eate JSON/formulaire contenant <code>username</code> et <code>password</code>. Utilisez le jeton retourn\u00e9 comme <code>Authorization: Bearer &lt;token&gt;</code> pour les appels suivants.</li> </ul> <p>Exemple : obtenir un jeton Biscuit, lister les instances, puis les recharger toutes.</p> <pre><code># 1) Obtenir un jeton Biscuit avec des identifiants admin\nTOKEN=$(curl -s -X POST -u admin:changeme http://api.example.com/auth | jq -r .token)\n\n# 2) Lister les instances\ncurl -H \"Authorization: Bearer $TOKEN\" http://api.example.com/instances\n\n# 3) Recharger la configuration sur toutes les instances (sans test)\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n     \"http://api.example.com/instances/reload?test=no\"\n</code></pre>"},{"location":"fr/api/#jetons-biscuit-fonctionnement-et-verifications","title":"Jetons Biscuit : fonctionnement et v\u00e9rifications","text":"<p>Les jetons int\u00e8grent des \"faits\" (facts) comme <code>user(&lt;username&gt;)</code>, <code>client_ip(&lt;ip&gt;)</code>, <code>domain(&lt;host&gt;)</code>, et un r\u00f4le g\u00e9n\u00e9ral <code>role(\"api_user\", [\"read\", \"write\"])</code> d\u00e9riv\u00e9 des permissions de la base de donn\u00e9es. Les administrateurs incluent <code>admin(true)</code> tandis que les non-administrateurs ont des faits granulaires comme <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code>.</p> <p>L'autorisation fait correspondre la route/m\u00e9thode aux permissions requises ; <code>admin(true)</code> est toujours accept\u00e9. En l'absence de faits granulaires, le syst\u00e8me se base sur le r\u00f4le g\u00e9n\u00e9ral : <code>GET</code>/<code>HEAD</code>/<code>OPTIONS</code> n\u00e9cessitent <code>read</code> ; les verbes d'\u00e9criture n\u00e9cessitent <code>write</code>.</p> <p>Les cl\u00e9s sont stock\u00e9es dans <code>/var/lib/bunkerweb/.api_biscuit_private_key</code> et <code>/var/lib/bunkerweb/.api_biscuit_public_key</code>. Vous pouvez aussi fournir <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> via des variables d'environnement ; si ni les fichiers ni les variables ne sont d\u00e9finis, l'API g\u00e9n\u00e8re et sauvegarde une paire de cl\u00e9s au d\u00e9marrage.</p>"},{"location":"fr/api/#permissions-acl","title":"Permissions (ACL)","text":"<p>Cette API supporte deux niveaux d'autorisation :</p> <ul> <li>R\u00f4le g\u00e9n\u00e9ral : Les jetons contiennent <code>role(\"api_user\", [\"read\"[, \"write\"]])</code> pour les points d'acc\u00e8s sans correspondance granulaire. <code>read</code> correspond \u00e0 GET/HEAD/OPTIONS ; <code>write</code> correspond \u00e0 POST/PUT/PATCH/DELETE.</li> <li>ACL granulaire : Les jetons int\u00e8grent <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code> et les routes d\u00e9clarent ce qu'elles exigent. <code>admin(true)</code> contourne toutes les v\u00e9rifications.</li> </ul> <p>Types de ressources support\u00e9s : <code>instances</code>, <code>global_config</code>, <code>services</code>, <code>configs</code>, <code>plugins</code>, <code>cache</code>, <code>bans</code>, <code>jobs</code>.</p> <p>Noms des permissions par type de ressource :</p> <ul> <li>instances: <code>instances_read</code>, <code>instances_update</code>, <code>instances_delete</code>, <code>instances_create</code>, <code>instances_execute</code></li> <li>global_config: <code>global_config_read</code>, <code>global_config_update</code></li> <li>services: <code>service_read</code>, <code>service_create</code>, <code>service_update</code>, <code>service_delete</code>, <code>service_convert</code>, <code>service_export</code></li> <li>configs: <code>configs_read</code>, <code>config_read</code>, <code>config_create</code>, <code>config_update</code>, <code>config_delete</code></li> <li>plugins: <code>plugin_read</code>, <code>plugin_create</code>, <code>plugin_delete</code></li> <li>cache: <code>cache_read</code>, <code>cache_delete</code></li> <li>bans: <code>ban_read</code>, <code>ban_update</code>, <code>ban_delete</code>, <code>ban_created</code></li> <li>jobs: <code>job_read</code>, <code>job_run</code></li> </ul> <p>ID de ressource : Pour les v\u00e9rifications granulaires, le deuxi\u00e8me segment de l'URL est trait\u00e9 comme <code>resource_id</code> lorsque c'est pertinent. Exemples : <code>/services/{service}</code> -&gt; <code>{service}</code> ; <code>/configs/{service}/...</code> -&gt; <code>{service}</code>. Utilisez <code>\"*\"</code> (ou omettez) pour accorder la permission globalement pour un type de ressource.</p> <p>Configuration des utilisateurs et des ACL :</p> <ul> <li>Utilisateur admin : D\u00e9finissez <code>API_USERNAME</code> et <code>API_PASSWORD</code> pour cr\u00e9er le premier administrateur au d\u00e9marrage. Pour renouveler les identifiants plus tard, d\u00e9finissez <code>OVERRIDE_API_CREDS=yes</code> (ou assurez-vous que l'admin a \u00e9t\u00e9 cr\u00e9\u00e9 avec la m\u00e9thode <code>manual</code>). Il n'y a qu'un seul admin ; les tentatives suppl\u00e9mentaires de cr\u00e9ation basculent vers la cr\u00e9ation d'un utilisateur non-admin.</li> <li>Utilisateurs non-admin et permissions : Fournissez <code>API_ACL_BOOTSTRAP_FILE</code> pointant vers un fichier JSON, ou montez-le sur <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>. L'API le lit au d\u00e9marrage pour cr\u00e9er/mettre \u00e0 jour les utilisateurs et les permissions.</li> <li>Fichier cache ACL : Un r\u00e9sum\u00e9 en lecture seule est \u00e9crit dans <code>/var/lib/bunkerweb/api_acl.json</code> au d\u00e9marrage pour introspection ; l'autorisation \u00e9value les permissions stock\u00e9es en base de donn\u00e9es et int\u00e9gr\u00e9es dans le jeton Biscuit.</li> </ul> <p>Exemples de JSON de bootstrap (les deux formats sont support\u00e9s) :</p> <pre><code>{\n  \"users\": {\n    \"ci\": {\n      \"admin\": false,\n      \"password\": \"M0tDeP@sseF0rt!\",\n      \"permissions\": {\n        \"services\": {\n          \"*\": { \"service_read\": true },\n          \"app-frontend\": { \"service_update\": true, \"service_delete\": false }\n        },\n        \"configs\": {\n          \"app-frontend\": { \"config_read\": true, \"config_update\": true }\n        }\n      }\n    },\n    \"ops\": {\n      \"admin\": false,\n      \"password_hash\": \"$2b$13$...hash-bcrypt...\",\n      \"permissions\": {\n        \"instances\": { \"*\": { \"instances_execute\": true } },\n        \"jobs\": { \"*\": { \"job_run\": true } }\n      }\n    }\n  }\n}\n</code></pre> <p>Ou en format liste :</p> <pre><code>{\n  \"users\": [\n    {\n      \"username\": \"ci\",\n      \"password\": \"M0tDeP@sseF0rt!\",\n      \"permissions\": [\n        { \"resource_type\": \"services\", \"resource_id\": \"*\", \"permission\": \"service_read\" },\n        { \"resource_type\": \"services\", \"resource_id\": \"app-frontend\", \"permission\": \"service_update\" }\n      ]\n    }\n  ]\n}\n</code></pre> <p>Notes : - Les mots de passe peuvent \u00eatre en clair (<code>password</code>) ou bcrypt (<code>password_hash</code> / <code>password_bcrypt</code>). Les mots de passe en clair trop faibles sont rejet\u00e9s en dehors des builds de d\u00e9bogage ; si manquant, un mot de passe al\u00e9atoire est g\u00e9n\u00e9r\u00e9 et un avertissement est journalis\u00e9. - <code>resource_id: \"*\"</code> (ou null/vide) accorde la permission globalement pour ce type de ressource. - Les mots de passe des utilisateurs existants peuvent \u00eatre mis \u00e0 jour et des permissions suppl\u00e9mentaires peuvent \u00eatre appliqu\u00e9es via le bootstrap.</p>"},{"location":"fr/api/#reference-des-fonctionnalites","title":"R\u00e9f\u00e9rence des fonctionnalit\u00e9s","text":"<p>L'API est organis\u00e9e par routeurs th\u00e9matiques. Utilisez les sections ci-dessous comme un aper\u00e7u des capacit\u00e9s ; le sch\u00e9ma interactif sur <code>/docs</code> documente en d\u00e9tail les mod\u00e8les de requ\u00eate/r\u00e9ponse.</p>"},{"location":"fr/api/#cur-et-authentification","title":"C\u0153ur et authentification","text":"<ul> <li><code>GET /ping</code>, <code>GET /health</code> : sondes de vivacit\u00e9 l\u00e9g\u00e8res pour le service API lui-m\u00eame.</li> <li><code>POST /auth</code> : \u00e9changez des identifiants Basic (ou le jeton admin global) contre un jeton Biscuit. Accepte JSON, formulaire, ou les en-t\u00eates <code>Authorization</code>. Les admins peuvent aussi continuer \u00e0 utiliser l'authentification HTTP Basic sur les routes prot\u00e9g\u00e9es.</li> </ul>"},{"location":"fr/api/#plan-de-controle-des-instances","title":"Plan de contr\u00f4le des instances","text":"<ul> <li><code>GET /instances</code> : liste les instances enregistr\u00e9es, avec horodatages, m\u00e9thode d'enregistrement et m\u00e9tadonn\u00e9es.</li> <li><code>POST /instances</code> : enregistre une nouvelle instance g\u00e9r\u00e9e par l'API (nom d'h\u00f4te, port optionnel, nom de serveur, nom descriptif, m\u00e9thode).</li> <li><code>GET /instances/{hostname}</code>, <code>PATCH /instances/{hostname}</code>, <code>DELETE /instances/{hostname}</code> : inspecte, met \u00e0 jour les champs modifiables, ou supprime les instances g\u00e9r\u00e9es par l'API.</li> <li><code>DELETE /instances</code> : suppression en masse ; ignore les instances non g\u00e9r\u00e9es par l'API et les signale dans <code>skipped</code>.</li> <li><code>GET /instances/ping</code> et <code>GET /instances/{hostname}/ping</code> : v\u00e9rifications de sant\u00e9 sur toutes les instances ou une seule.</li> <li><code>POST /instances/reload?test=yes|no</code>, <code>POST /instances/{hostname}/reload</code> : d\u00e9clenche le rechargement de la configuration (le mode test effectue une validation \u00e0 blanc).</li> <li><code>POST /instances/stop</code>, <code>POST /instances/{hostname}/stop</code> : relaie les commandes d'arr\u00eat aux instances.</li> </ul>"},{"location":"fr/api/#configuration-globale","title":"Configuration globale","text":"<ul> <li><code>GET /global_config</code> : r\u00e9cup\u00e8re les param\u00e8tres non-d\u00e9faut (utilisez <code>full=true</code> pour la configuration compl\u00e8te, <code>methods=true</code> pour inclure la provenance).</li> <li><code>PATCH /global_config</code> : cr\u00e9e ou met \u00e0 jour les param\u00e8tres globaux g\u00e9r\u00e9s par l'API (<code>method=\"api\"</code>) ; les erreurs de validation signalent les cl\u00e9s inconnues ou en lecture seule.</li> </ul>"},{"location":"fr/api/#cycle-de-vie-des-services","title":"Cycle de vie des services","text":"<ul> <li><code>GET /services</code> : \u00e9num\u00e8re les services avec leurs m\u00e9tadonn\u00e9es, y compris le statut de brouillon et les horodatages.</li> <li><code>GET /services/{service}</code> : r\u00e9cup\u00e8re les surcharges non-d\u00e9faut (<code>full=false</code>) ou la configuration compl\u00e8te (<code>full=true</code>) pour un service.</li> <li><code>POST /services</code> : cr\u00e9e des services, optionnellement en tant que brouillon, et initialise des variables pr\u00e9fix\u00e9es (<code>{service}_{KEY}</code>). Met \u00e0 jour la liste <code>SERVER_NAME</code> de mani\u00e8re atomique.</li> <li><code>PATCH /services/{service}</code> : renomme les services, bascule le statut brouillon/en ligne, et met \u00e0 jour les variables pr\u00e9fix\u00e9es. Ignore les modifications directes de <code>SERVER_NAME</code> dans <code>variables</code> par s\u00e9curit\u00e9.</li> <li><code>DELETE /services/{service}</code> : supprime un service et ses cl\u00e9s de configuration d\u00e9riv\u00e9es.</li> <li><code>POST /services/{service}/convert?convert_to=online|draft</code> : bascule rapidement entre les \u00e9tats brouillon/en ligne sans modifier d'autres variables.</li> </ul>"},{"location":"fr/api/#extraits-de-configuration-personnalises","title":"Extraits de configuration personnalis\u00e9s","text":"<ul> <li><code>GET /configs</code> : liste les fragments de configuration personnalis\u00e9s (hooks HTTP/server/stream/ModSecurity/CRS) pour un service (<code>service=global</code> par d\u00e9faut). <code>with_data=true</code> int\u00e8gre le contenu UTF-8 s'il est affichable.</li> <li><code>POST /configs</code> et <code>POST /configs/upload</code> : cr\u00e9e de nouveaux extraits depuis des donn\u00e9es JSON ou des fichiers t\u00e9l\u00e9vers\u00e9s. Types accept\u00e9s : <code>http</code>, <code>server_http</code>, <code>default_server_http</code>, <code>modsec</code>, <code>modsec_crs</code>, <code>stream</code>, <code>server_stream</code>, et les hooks de plugins CRS. Les noms doivent correspondre \u00e0 <code>^[\\w_-]{1,64}$</code>.</li> <li><code>GET /configs/{service}/{type}/{name}</code> : r\u00e9cup\u00e8re un extrait avec son contenu optionnel (<code>with_data=true</code>).</li> <li><code>PATCH /configs/{service}/{type}/{name}</code> et <code>PATCH .../upload</code> : met \u00e0 jour ou d\u00e9place les extraits g\u00e9r\u00e9s par l'API ; les entr\u00e9es g\u00e9r\u00e9es par mod\u00e8le ou fichier restent en lecture seule.</li> <li><code>DELETE /configs</code> et <code>DELETE /configs/{service}/{type}/{name}</code> : supprime les extraits g\u00e9r\u00e9s par l'API tout en pr\u00e9servant ceux g\u00e9r\u00e9s par mod\u00e8le, retournant une liste <code>skipped</code> pour les entr\u00e9es ignor\u00e9es.</li> </ul>"},{"location":"fr/api/#orchestration-des-bannissements","title":"Orchestration des bannissements","text":"<ul> <li><code>GET /bans</code> : agr\u00e8ge les bannissements actifs signal\u00e9s par toutes les instances.</li> <li><code>POST /bans</code> ou <code>POST /bans/ban</code> : applique un ou plusieurs bannissements. Les donn\u00e9es peuvent \u00eatre des objets JSON, des tableaux, ou du JSON sous forme de cha\u00eene. <code>service</code> est optionnel ; si omis, le bannissement est global.</li> <li><code>POST /bans/unban</code> ou <code>DELETE /bans</code> : supprime des bannissements globalement ou par service en utilisant les m\u00eames formats de donn\u00e9es flexibles.</li> </ul>"},{"location":"fr/api/#gestion-des-plugins","title":"Gestion des plugins","text":"<ul> <li><code>GET /plugins?type=all|external|ui|pro</code> : liste les plugins avec leurs m\u00e9tadonn\u00e9es ; <code>with_data=true</code> inclut les octets du paquet si disponibles.</li> <li><code>POST /plugins/upload</code> : installe des plugins UI depuis des archives <code>.zip</code>, <code>.tar.gz</code>, ou <code>.tar.xz</code>. Les archives peuvent contenir plusieurs plugins si chacun a un <code>plugin.json</code>.</li> <li><code>DELETE /plugins/{id}</code> : supprime un plugin UI par son ID (<code>^[\\w.-]{4,64}$</code>).</li> </ul>"},{"location":"fr/api/#cache-et-execution-des-taches","title":"Cache et ex\u00e9cution des t\u00e2ches","text":"<ul> <li><code>GET /cache</code> : liste les artefacts en cache produits par les t\u00e2ches du planificateur, filtr\u00e9s par service, ID de plugin, ou nom de t\u00e2che. <code>with_data=true</code> inclut le contenu des fichiers s'il est affichable.</li> <li><code>GET /cache/{service}/{plugin}/{job}/{file}</code> : r\u00e9cup\u00e8re un fichier de cache sp\u00e9cifique (<code>download=true</code> le t\u00e9l\u00e9charge en pi\u00e8ce jointe).</li> <li><code>DELETE /cache</code> ou <code>DELETE /cache/{service}/{plugin}/{job}/{file}</code> : supprime des fichiers de cache et notifie le planificateur des plugins affect\u00e9s.</li> <li><code>GET /jobs</code> : inspecte les t\u00e2ches connues, les m\u00e9tadonn\u00e9es de leur planification, et les r\u00e9sum\u00e9s du cache.</li> <li><code>POST /jobs/run</code> : demande l'ex\u00e9cution d'une t\u00e2che en marquant le ou les plugins associ\u00e9s comme modifi\u00e9s.</li> </ul>"},{"location":"fr/api/#notes-operationnelles","title":"Notes op\u00e9rationnelles","text":"<ul> <li>Les points d'acc\u00e8s en \u00e9criture persistent dans la base de donn\u00e9es partag\u00e9e ; les instances r\u00e9cup\u00e8rent les changements via la synchronisation du planificateur ou apr\u00e8s un <code>/instances/reload</code>.</li> <li>Les erreurs sont normalis\u00e9es en <code>{ \"status\": \"error\", \"message\": \"...\" }</code> avec des codes de statut HTTP appropri\u00e9s (422 validation, 404 non trouv\u00e9, 403 ACL, 5xx erreurs en amont).</li> </ul>"},{"location":"fr/api/#limitation-de-debit","title":"Limitation de d\u00e9bit","text":"<p>La limitation de d\u00e9bit par client est g\u00e9r\u00e9e par SlowAPI. Activez/d\u00e9sactivez et configurez les limites via des variables d'environnement ou <code>/etc/bunkerweb/api.yml</code>.</p> <ul> <li><code>API_RATE_LIMIT_ENABLED</code> (d\u00e9faut : <code>yes</code>)</li> <li>Limite par d\u00e9faut : <code>API_RATE_LIMIT_TIMES</code> par <code>API_RATE_LIMIT_SECONDS</code> (ex. <code>100</code> par <code>60</code>)</li> <li><code>API_RATE_LIMIT_RULES</code> : JSON/CSV en ligne, ou un chemin vers un fichier YAML/JSON avec des r\u00e8gles par route</li> <li>Stockage : en m\u00e9moire ou Redis/Valkey lorsque <code>USE_REDIS=yes</code> et les variables <code>REDIS_*</code> sont fournies (Sentinel support\u00e9)</li> <li>En-t\u00eates : <code>API_RATE_LIMIT_HEADERS_ENABLED</code> (d\u00e9faut : <code>yes</code>)</li> </ul> <p>Exemple de YAML (mont\u00e9 dans <code>/etc/bunkerweb/api.yml</code>) :</p> <pre><code>API_RATE_LIMIT_ENABLED: yes\nAPI_RATE_LIMIT_DEFAULTS: [\"200/minute\"]\nAPI_RATE_LIMIT_RULES:\n  - path: \"/auth\"\n    methods: \"POST\"\n    times: 10\n    seconds: 60\n  - path: \"/instances*\"\n    methods: \"GET|POST\"\n    times: 100\n    seconds: 60\n</code></pre>"},{"location":"fr/api/#configuration","title":"Configuration","text":"<p>Vous pouvez configurer l'API via des variables d'environnement, des secrets Docker, et les fichiers optionnels <code>/etc/bunkerweb/api.yml</code> ou <code>/etc/bunkerweb/api.env</code>. Param\u00e8tres cl\u00e9s :</p> <ul> <li>Docs &amp; sch\u00e9ma : <code>API_DOCS_URL</code>, <code>API_REDOC_URL</code>, <code>API_OPENAPI_URL</code>, <code>API_ROOT_PATH</code>.</li> <li>Authentification de base : <code>API_TOKEN</code> (jeton Bearer admin), <code>API_USERNAME</code>/<code>API_PASSWORD</code> (cr\u00e9er/mettre \u00e0 jour l'admin), <code>OVERRIDE_API_CREDS</code>.</li> <li>ACL et utilisateurs : <code>API_ACL_BOOTSTRAP_FILE</code> (chemin JSON).</li> <li>Politique Biscuit : <code>API_BISCUIT_TTL_SECONDS</code> (0/d\u00e9sactiv\u00e9 d\u00e9sactive la dur\u00e9e de vie), <code>CHECK_PRIVATE_IP</code> (lie le jeton \u00e0 l'IP du client sauf si priv\u00e9e).</li> <li>Liste blanche IP : <code>API_WHITELIST_ENABLED</code>, <code>API_WHITELIST_IPS</code>.</li> <li>Limitation de d\u00e9bit (c\u0153ur) : <code>API_RATE_LIMIT_ENABLED</code>, <code>API_RATE_LIMIT_TIMES</code>, <code>API_RATE_LIMIT_SECONDS</code>, <code>API_RATE_LIMIT_HEADERS_ENABLED</code>.</li> <li>Limitation de d\u00e9bit (avanc\u00e9) : <code>API_RATE_LIMIT_AUTH_TIMES</code>, <code>API_RATE_LIMIT_AUTH_SECONDS</code>, <code>API_RATE_LIMIT_RULES</code>, <code>API_RATE_LIMIT_DEFAULTS</code>, <code>API_RATE_LIMIT_APPLICATION_LIMITS</code>, <code>API_RATE_LIMIT_STRATEGY</code>, <code>API_RATE_LIMIT_KEY</code>, <code>API_RATE_LIMIT_EXEMPT_IPS</code>, <code>API_RATE_LIMIT_STORAGE_OPTIONS</code>.</li> <li>Stockage de la limitation de d\u00e9bit : en m\u00e9moire ou Redis/Valkey lorsque <code>USE_REDIS=yes</code> et les param\u00e8tres Redis comme <code>REDIS_HOST</code>, <code>REDIS_PORT</code>, etc., sont d\u00e9finis. Voir la table des param\u00e8tres Redis dans <code>docs/features.md</code>.</li> <li>R\u00e9seau/TLS : <code>API_LISTEN_ADDR</code>, <code>API_LISTEN_PORT</code>, <code>API_FORWARDED_ALLOW_IPS</code>, <code>API_SSL_ENABLED</code>, <code>API_SSL_CERTFILE</code>, <code>API_SSL_KEYFILE</code>, <code>API_SSL_CA_CERTS</code>.</li> </ul>"},{"location":"fr/api/#comment-la-configuration-est-chargee","title":"Comment la configuration est charg\u00e9e","text":"<p>Priorit\u00e9 du plus \u00e9lev\u00e9 au plus bas :</p> <ol> <li>Variables d'environnement (ex. <code>environment:</code> du conteneur ou variables shell export\u00e9es)</li> <li>Fichiers secrets sous <code>/run/secrets</code> (secrets Docker/K8s ; les noms de fichiers correspondent aux noms de variables)</li> <li>Fichier YAML \u00e0 l'adresse <code>/etc/bunkerweb/api.yml</code></li> <li>Fichier d'environnement \u00e0 l'adresse <code>/etc/bunkerweb/api.env</code> (lignes <code>cl\u00e9=valeur</code>)</li> <li>Valeurs par d\u00e9faut int\u00e9gr\u00e9es</li> </ol> <p>Notes : - Le YAML supporte l'inclusion de fichiers secrets avec <code>&lt;file:chemin/relatif&gt;</code>; le chemin est r\u00e9solu par rapport \u00e0 <code>/run/secrets</code>. - Mettez les URL de la documentation \u00e0 <code>off</code>/<code>disabled</code>/<code>none</code> pour d\u00e9sactiver les points d'acc\u00e8s (ex. <code>API_DOCS_URL=off</code>). - Si <code>API_SSL_ENABLED=yes</code>, vous devez aussi d\u00e9finir <code>API_SSL_CERTFILE</code> et <code>API_SSL_KEYFILE</code>. - Si Redis est activ\u00e9 (<code>USE_REDIS=yes</code>), fournissez les d\u00e9tails de connexion ; voir la section Redis dans <code>docs/features.md</code>.</p>"},{"location":"fr/api/#authentification-et-utilisateurs","title":"Authentification et utilisateurs","text":"<ul> <li>Bootstrap admin : d\u00e9finissez <code>API_USERNAME</code> et <code>API_PASSWORD</code> pour cr\u00e9er le premier admin. Pour r\u00e9appliquer plus tard, d\u00e9finissez <code>OVERRIDE_API_CREDS=yes</code>.</li> <li>Non-admins et permissions : fournissez <code>API_ACL_BOOTSTRAP_FILE</code> avec un chemin JSON (ou montez-le sur <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>). Le fichier peut lister des utilisateurs et des permissions granulaires.</li> <li>Cl\u00e9s Biscuit : d\u00e9finissez <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> ou montez des fichiers sur <code>/var/lib/bunkerweb/.api_biscuit_public_key</code> et <code>/var/lib/bunkerweb/.api_biscuit_private_key</code>. Si rien n'est fourni, l'API g\u00e9n\u00e8re et sauvegarde une paire de cl\u00e9s au d\u00e9marrage.</li> </ul>"},{"location":"fr/api/#tls-et-reseau","title":"TLS et r\u00e9seau","text":"<ul> <li>Adresse/port d'\u00e9coute : <code>API_LISTEN_ADDR</code> (d\u00e9faut <code>0.0.0.0</code>), <code>API_LISTEN_PORT</code> (d\u00e9faut <code>8888</code>).</li> <li>Reverse proxies : d\u00e9finissez <code>API_FORWARDED_ALLOW_IPS</code> avec les IPs des proxys pour que Gunicorn fasse confiance aux en-t\u00eates <code>X-Forwarded-*</code>.</li> <li>Terminaison TLS dans l'API : <code>API_SSL_ENABLED=yes</code> plus <code>API_SSL_CERTFILE</code> et <code>API_SSL_KEYFILE</code> ; optionnellement <code>API_SSL_CA_CERTS</code>.</li> </ul>"},{"location":"fr/api/#limitation-de-debit-configurations-rapides","title":"Limitation de d\u00e9bit : configurations rapides","text":"<ul> <li>D\u00e9sactiver globalement : <code>API_RATE_LIMIT_ENABLED=no</code></li> <li>D\u00e9finir une limite globale simple : <code>API_RATE_LIMIT_TIMES=100</code>, <code>API_RATE_LIMIT_SECONDS=60</code></li> <li>R\u00e8gles par route : d\u00e9finissez <code>API_RATE_LIMIT_RULES</code> sur un chemin de fichier JSON/YAML ou du YAML en ligne dans <code>/etc/bunkerweb/api.yml</code>.</li> </ul> <p>S\u00e9curit\u00e9 au d\u00e9marrage</p> <p>L'API se termine si aucun chemin d'authentification n'est configur\u00e9 (pas de cl\u00e9s Biscuit, pas d'utilisateur admin, et pas de <code>API_TOKEN</code>). Assurez-vous qu'au moins une m\u00e9thode est d\u00e9finie avant de d\u00e9marrer.</p> <p>Chemin racine et proxys</p> <p>Si vous d\u00e9ployez l'API derri\u00e8re BunkerWeb sur une sous-URL, d\u00e9finissez <code>API_ROOT_PATH</code> sur ce chemin pour que <code>/docs</code> et les routes relatives fonctionnent correctement.</p>"},{"location":"fr/api/#operations","title":"Op\u00e9rations","text":"<ul> <li>Sant\u00e9 : <code>GET /health</code> renvoie <code>{\"status\":\"ok\"}</code> lorsque le service est d\u00e9marr\u00e9.</li> <li>Service Linux : une unit\u00e9 <code>systemd</code> nomm\u00e9e <code>bunkerweb-api.service</code> est fournie. Personnalisez via <code>/etc/bunkerweb/api.env</code> et g\u00e9rez avec <code>systemctl</code>.</li> <li>S\u00e9curit\u00e9 au d\u00e9marrage : l'API \u00e9choue rapidement si aucun chemin d'authentification n'est disponible (pas de cl\u00e9s Biscuit, pas d'utilisateur admin, pas de <code>API_TOKEN</code>). Les erreurs sont \u00e9crites dans <code>/var/tmp/bunkerweb/api.error</code>.</li> </ul>"},{"location":"fr/concepts/#architecture","title":"Architecture","text":"<p>Au sein de votre infrastructure, BunkerWeb agit comme un proxy inverse devant vos services web. L'architecture typique consiste \u00e0 acc\u00e9der \u00e0 BunkerWeb \u00e0 partir d'Internet, qui transmet ensuite les demandes au service d'application appropri\u00e9 sur un r\u00e9seau s\u00e9curis\u00e9.</p> <p>L'utilisation de BunkerWeb de cette mani\u00e8re (architecture classique de proxy inverse) avec le d\u00e9chargement TLS et les politiques de s\u00e9curit\u00e9 centralis\u00e9es am\u00e9liore les performances en r\u00e9duisant la surcharge de chiffrement sur les serveurs backend tout en garantissant un contr\u00f4le d'acc\u00e8s coh\u00e9rent, l'att\u00e9nuation des menaces et l'application de la conformit\u00e9 dans tous les services.</p>"},{"location":"fr/concepts/#integrations","title":"Int\u00e9grations","text":"<p>Le premier concept est l'int\u00e9gration de BunkerWeb dans l'environnement cible. Nous pr\u00e9f\u00e9rons utiliser le mot \"int\u00e9gration\" au lieu de \"installation\" car l'un des objectifs de BunkerWeb est de s'int\u00e9grer de mani\u00e8re transparente dans les environnements existants.</p> <p>Les int\u00e9grations suivantes sont officiellement prises en charge:</p> <ul> <li>Docker</li> <li>Linux</li> <li>Docker autoconf</li> <li>Kubernetes</li> <li>Swarm</li> </ul> <p>Si vous pensez qu'une nouvelle int\u00e9gration doit \u00eatre prise en charge, n'h\u00e9sitez pas \u00e0 ouvrir un nouveau ticket sur le d\u00e9p\u00f4t GitHub.</p> <p>Aller plus loin</p> <p>Les d\u00e9tails techniques de toutes les int\u00e9grations de BunkerWeb sont disponibles dans la section Int\u00e9grations de la documentation.</p>"},{"location":"fr/concepts/#parametres","title":"Param\u00e8tres","text":"<p>Param\u00e8tres BunkerWeb PRO</p> <p>Certains plugins sont r\u00e9serv\u00e9s \u00e0 la version PRO. Vous souhaitez tester rapidement BunkerWeb PRO pendant un mois ? Utilisez le code <code>freetrial</code> lors de votre commande sur le panneau BunkerWeb ou en cliquant ici pour appliquer directement le code promo (sera effectif \u00e0 la caisse).</p> <p>Une fois BunkerWeb int\u00e9gr\u00e9 \u00e0 votre environnement, vous devrez le configurer pour servir et prot\u00e9ger vos applications Web.</p> <p>La configuration de BunkerWeb se fait \u00e0 l'aide de ce que nous appelons des \"param\u00e8tres\" ou des \"variables\". Chaque param\u00e8tre est identifi\u00e9 par un nom tel que <code>AUTO_LETS_ENCRYPT</code> ou <code>USE_ANTIBOT</code>. Vous pouvez attribuer des valeurs \u00e0 ces param\u00e8tres pour configurer BunkerWeb.</p> <p>Voici un exemple factice de configuration BunkerWeb:</p> <pre><code>SERVER_NAME=www.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_ANTIBOT=captcha\nREFERRER_POLICY=no-referrer\nUSE_MODSECURITY=no\nUSE_GZIP=yes\nUSE_BROTLI=no\n</code></pre> <p>Veuillez noter que si vous utilisez l'interface utilisateur Web, les noms des param\u00e8tres sont \u00e9galement affich\u00e9s en plus d'une \u00e9tiquette \"conviviale\":</p> <p> </p> Nom des param\u00e8tres dans l'interface utilisateur web <p>Vous pouvez \u00e9galement utiliser la barre de recherche et sp\u00e9cifier directement un nom de param\u00e8tre:</p> <p> </p> Recherche de param\u00e8tres dans l'interface utilisateur Web <p>Aller plus loin</p> <p>La liste compl\u00e8te des param\u00e8tres disponibles, avec leurs descriptions et valeurs possibles, est disponible dans la section Fonctionnalit\u00e9s de la documentation.</p>"},{"location":"fr/concepts/#mode-multisite","title":"Mode multisite","text":"<p>Comprendre le mode multisite est essentiel lors de l'utilisation de BunkerWeb. Comme notre objectif principal est la protection des applications web, notre solution est intimement li\u00e9e au concept d'\u00ab h\u00f4tes virtuels \u00bb ou \u00ab vhosts \u00bb (plus d'informations ici). Ces h\u00f4tes virtuels permettent de diffuser plusieurs applications Web \u00e0 partir d'une seule instance ou d'un seul cluster.</p> <p>Par d\u00e9faut, le mode multisite est d\u00e9sactiv\u00e9 sur BunkerWeb. Cela signifie qu'une seule application web sera servie et que tous les param\u00e8tres lui seront appliqu\u00e9s. Cette configuration est id\u00e9ale lorsque vous avez une seule application \u00e0 prot\u00e9ger, car vous n'avez pas besoin de vous soucier des configurations multisites.</p> <p>Cependant, lorsque le mode multisite est activ\u00e9, BunkerWeb devient capable de servir et de prot\u00e9ger plusieurs applications Web. Chaque application Web est identifi\u00e9e par un nom de serveur unique et poss\u00e8de son propre ensemble de param\u00e8tres. Ce mode s'av\u00e8re avantageux lorsque vous avez plusieurs applications \u00e0 s\u00e9curiser et que vous pr\u00e9f\u00e9rez utiliser une seule instance (ou un cluster) de BunkerWeb.</p> <p>L'activation du mode multisite est contr\u00f4l\u00e9e par le <code>MULTISITE</code> param\u00e8tre, qui peut \u00eatre d\u00e9fini pour <code>yes</code> l'activer ou <code>no</code> pour le garder d\u00e9sactiv\u00e9 (valeur par d\u00e9faut).</p> <p>Chaque param\u00e8tre de BunkerWeb a un contexte sp\u00e9cifique qui d\u00e9termine o\u00f9 il peut \u00eatre appliqu\u00e9. Si le contexte est d\u00e9fini sur \u00ab global \u00bb, le param\u00e8tre ne peut pas \u00eatre appliqu\u00e9 par serveur ou site, mais \u00e0 l'ensemble de la configuration. D'autre part, si le contexte est \u00ab multisite \u00bb, le param\u00e8tre peut \u00eatre appliqu\u00e9 globalement et par serveur. Pour d\u00e9finir un param\u00e8tre multisite pour un serveur sp\u00e9cifique, il suffit d'ajouter le nom du serveur en tant que pr\u00e9fixe au nom du param\u00e8tre. Par exemple, <code>app1.example.com_AUTO_LETS_ENCRYPT</code> ou <code>app2.example.com_USE_ANTIBOT</code> sont des exemples de d\u00e9finition de noms avec des pr\u00e9fixes de nom de serveur. Lorsqu'un param\u00e8tre multisite est d\u00e9fini globalement sans pr\u00e9fixe de serveur, tous les serveurs h\u00e9ritent de ce param\u00e8tre. Toutefois, des serveurs individuels peuvent toujours remplacer le param\u00e8tre si le m\u00eame param\u00e8tre est d\u00e9fini avec un pr\u00e9fixe de nom de serveur.</p> <p>Comprendre les subtilit\u00e9s du mode multisite et de ses param\u00e8tres associ\u00e9s vous permet d'adapter le comportement de BunkerWeb \u00e0 vos besoins sp\u00e9cifiques, garantissant ainsi une protection optimale de vos applications Web.</p> <p>Voici un exemple factice de configuration BunkerWeb multisite:</p> <pre><code>MULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_GZIP=yes\nUSE_BROTLI=yes\napp1.example.com_USE_ANTIBOT=javascript\napp1.example.com_USE_MODSECURITY=no\napp2.example.com_USE_ANTIBOT=cookie\napp2.example.com_WHITELIST_COUNTRY=FR\napp3.example.com_USE_BAD_BEHAVIOR=no\n</code></pre> <p>Veuillez noter que le mode multisite est implicite lors de l'utilisation de l'interface utilisateur Web. Vous avez la possibilit\u00e9 d'appliquer des configurations directement \u00e0 vos services ou de d\u00e9finir une configuration globale qui sera appliqu\u00e9e \u00e0 tous vos services (vous pouvez toujours appliquer des exceptions directement \u00e0 des services sp\u00e9cifiques):</p> <p> </p> Appliquer un param\u00e8tre \u00e0 tous les services \u00e0 partir de l'interface utilisateur web <p>Aller plus loin</p> <p>Vous trouverez des exemples concrets du mode multisite dans la section Utilisations avanc\u00e9es de la documentation et dans le r\u00e9pertoire examples du d\u00e9p\u00f4t.</p>"},{"location":"fr/concepts/#configurations-personnalisees","title":"Configurations personnalis\u00e9es","text":"<p>Pour relever des d\u00e9fis uniques et r\u00e9pondre \u00e0 des cas d'utilisation sp\u00e9cifiques, BunkerWeb offre la flexibilit\u00e9 de configurations personnalis\u00e9es. Bien que les param\u00e8tres fournis et les plug-ins externes couvrent un large \u00e9ventail de sc\u00e9narios, il peut y avoir des situations qui n\u00e9cessitent une personnalisation suppl\u00e9mentaire.</p> <p>BunkerWeb est construit sur le c\u00e9l\u00e8bre serveur Web NGINX, qui fournit un syst\u00e8me de configuration puissant. Cela signifie que vous pouvez tirer parti des capacit\u00e9s de configuration de NGINX pour r\u00e9pondre \u00e0 vos besoins sp\u00e9cifiques. Des configurations NGINX personnalis\u00e9es peuvent \u00eatre incluses dans divers contextes tels que HTTP ou serveur, ce qui vous permet d'affiner le comportement de BunkerWeb en fonction de vos besoins. Que vous ayez besoin de personnaliser les param\u00e8tres globaux ou d'appliquer des configurations \u00e0 des blocs de serveur sp\u00e9cifiques, BunkerWeb vous permet d'optimiser son comportement pour s'aligner parfaitement sur votre cas d'utilisation.</p> <p>Un autre composant int\u00e9gral de BunkerWeb est le pare-feu d'application Web ModSecurity. Avec les configurations personnalis\u00e9es, vous avez la possibilit\u00e9 de traiter les faux positifs ou d'ajouter des r\u00e8gles personnalis\u00e9es pour am\u00e9liorer encore la protection fournie par ModSecurity. Ces configurations personnalis\u00e9es vous permettent d'affiner le comportement du pare-feu et de vous assurer qu'il s'aligne sur les exigences sp\u00e9cifiques de vos applications Web.</p> <p>En tirant parti de configurations personnalis\u00e9es, vous d\u00e9bloquez un monde de possibilit\u00e9s pour adapter le comportement et les mesures de s\u00e9curit\u00e9 de BunkerWeb pr\u00e9cis\u00e9ment \u00e0 vos besoins. Qu'il s'agisse d'ajuster les configurations NGINX ou d'affiner ModSecurity, BunkerWeb offre la flexibilit\u00e9 n\u00e9cessaire pour relever efficacement vos d\u00e9fis uniques.</p> <p>La gestion des configurations personnalis\u00e9es \u00e0 partir de l'interface utilisateur web se fait via le ** menu Configs**:</p> <p> </p> G\u00e9rer les configurations personnalis\u00e9es \u00e0 partir de l'interface utilisateur web <p>Aller plus loin</p> <p>Vous trouverez des exemples concrets de configurations personnalis\u00e9es dans la section Utilisations avanc\u00e9es de la documentation et dans le r\u00e9pertoire examples du d\u00e9p\u00f4t.</p>"},{"location":"fr/concepts/#base-de-donnees","title":"Base de donn\u00e9es","text":"<p>BunkerWeb stocke en toute s\u00e9curit\u00e9 sa configuration actuelle dans une base de donn\u00e9es backend, qui contient des donn\u00e9es essentielles pour un fonctionnement sans faille. Les informations suivantes sont stock\u00e9es dans la base de donn\u00e9es:</p> <ul> <li> <p>Param\u00e8tres pour tous les services\u00a0: La base de donn\u00e9es contient les param\u00e8tres d\u00e9finis pour tous les services fournis par BunkerWeb. Cela garantit que vos configurations et pr\u00e9f\u00e9rences sont pr\u00e9serv\u00e9es et facilement accessibles.</p> </li> <li> <p>Configurations personnalis\u00e9es: toutes les configurations personnalis\u00e9es que vous cr\u00e9ez sont \u00e9galement stock\u00e9es dans la base de donn\u00e9es principale. Cela inclut des param\u00e8tres personnalis\u00e9s et des modifications adapt\u00e9es \u00e0 vos besoins sp\u00e9cifiques.</p> </li> <li> <p>Instances BunkerWeb: Les informations sur les instances BunkerWeb, y compris leur configuration et les d\u00e9tails pertinents, sont stock\u00e9es dans la base de donn\u00e9es. Cela permet de g\u00e9rer et de surveiller facilement plusieurs instances, le cas \u00e9ch\u00e9ant.</p> </li> <li> <p>M\u00e9tadonn\u00e9es sur l'ex\u00e9cution des t\u00e2ches: La base de donn\u00e9es stocke les m\u00e9tadonn\u00e9es li\u00e9es \u00e0 l'ex\u00e9cution de diverses t\u00e2ches au sein de BunkerWeb. Cela inclut des informations sur les t\u00e2ches planifi\u00e9es, les processus de maintenance et d'autres activit\u00e9s automatis\u00e9es.</p> </li> <li> <p>Fichiers mis en cache: BunkerWeb utilise des m\u00e9canismes de mise en cache pour am\u00e9liorer les performances. La base de donn\u00e9es contient les fichiers mis en cache, ce qui garantit une r\u00e9cup\u00e9ration et une distribution efficaces des ressources fr\u00e9quemment utilis\u00e9es.</p> </li> </ul> <p>Chaque fois que vous modifiez un param\u00e8tre ou ajoutez une nouvelle configuration, BunkerWeb stocke automatiquement les modifications dans la base de donn\u00e9es, garantissant ainsi la persistance et la coh\u00e9rence des donn\u00e9es. BunkerWeb prend en charge plusieurs options de base de donn\u00e9es backend, notamment SQLite, MariaDB, MySQL et PostgreSQL.</p> <p>La configuration de la base de donn\u00e9es est simple \u00e0 l'aide du <code>DATABASE_URI</code> param\u00e8tre, qui suit les formats sp\u00e9cifi\u00e9s pour chaque base de donn\u00e9es prise en charge:</p> <p>Avertissement</p> <p>Lors de l'utilisation de l'int\u00e9gration Docker, vous devez d\u00e9finir la <code>DATABASE_URI</code> variable d'environnement dans tous les conteneurs BunkerWeb (\u00e0 l'exception du conteneur BunkerWeb lui-m\u00eame), afin de vous assurer que tous les composants peuvent acc\u00e9der correctement \u00e0 la base de donn\u00e9es. Ceci est crucial pour maintenir l'int\u00e9grit\u00e9 et la fonctionnalit\u00e9 du syst\u00e8me.</p> <p>In all cases, ensure that <code>DATABASE_URI</code> is set before starting BunkerWeb, as it is required for proper operation.</p> <ul> <li>SQLite: <code>sqlite:///var/lib/bunkerweb/db.sqlite3</code></li> <li>MariaDB: <code>mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>MySQL: <code>mysql+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>PostgreSQL\u00a0: <code>postgresql://bunkerweb:changeme@bw-db:5432/db</code></li> </ul> <p>En sp\u00e9cifiant l'URI de base de donn\u00e9es appropri\u00e9e dans la configuration, vous pouvez int\u00e9grer de mani\u00e8re transparente BunkerWeb \u00e0 votre backend de base de donn\u00e9es pr\u00e9f\u00e9r\u00e9, garantissant ainsi un stockage efficace et fiable de vos donn\u00e9es de configuration.</p> <p> </p> Sch\u00e9ma de base de donn\u00e9es"},{"location":"fr/concepts/#programmateur","title":"Programmateur","text":"<p>Pour une coordination et une automatisation sans faille, BunkerWeb utilise un service sp\u00e9cialis\u00e9 connu sous le nom de planificateur. Le planificateur joue un r\u00f4le essentiel dans le bon fonctionnement en effectuant les t\u00e2ches suivantes:</p> <ul> <li> <p>Stockage des param\u00e8tres et des configurations personnalis\u00e9es: le planificateur est responsable du stockage de tous les param\u00e8tres et configurations personnalis\u00e9es dans la base de donn\u00e9es principale. Cela centralise les donn\u00e9es de configuration, ce qui les rend facilement accessibles et g\u00e9rables.</p> </li> <li> <p>Ex\u00e9cution de diverses t\u00e2ches (travaux): le planificateur g\u00e8re l'ex\u00e9cution de diverses t\u00e2ches, appel\u00e9es travaux. Ces t\u00e2ches englobent une gamme d'activit\u00e9s, telles que la maintenance p\u00e9riodique, les mises \u00e0 jour programm\u00e9es ou toute autre t\u00e2che automatis\u00e9e requise par BunkerWeb.</p> </li> <li> <p>G\u00e9n\u00e9ration de la configuration BunkerWeb: Le planificateur g\u00e9n\u00e8re une configuration qui est facilement comprise par BunkerWeb. Cette configuration est d\u00e9riv\u00e9e des param\u00e8tres stock\u00e9s et des configurations personnalis\u00e9es, ce qui garantit que l'ensemble du syst\u00e8me fonctionne de mani\u00e8re coh\u00e9rente.</p> </li> <li> <p>Agir en tant qu'interm\u00e9diaire pour d'autres services: Le planificateur agit en tant qu'interm\u00e9diaire, facilitant la communication et la coordination entre les diff\u00e9rents composants de BunkerWeb. Il s'interface avec des services tels que l'interface utilisateur web ou l'autoconf, assurant un flux continu d'informations et d'\u00e9change de donn\u00e9es.</p> </li> </ul> <p>En substance, le planificateur sert de cerveau \u00e0 BunkerWeb, orchestrant diverses op\u00e9rations et assurant le bon fonctionnement du syst\u00e8me.</p> <p>Selon l'approche d'int\u00e9gration, l'environnement d'ex\u00e9cution du planificateur peut diff\u00e9rer. Dans les int\u00e9grations bas\u00e9es sur des conteneurs, le planificateur est ex\u00e9cut\u00e9 dans son conteneur d\u00e9di\u00e9, ce qui offre isolation et flexibilit\u00e9. D'autre part, pour les int\u00e9grations bas\u00e9es sur Linux, le planificateur est autonome au sein du service bunkerweb, ce qui simplifie le processus de d\u00e9ploiement et de gestion.</p> <p>En utilisant le planificateur, BunkerWeb rationalise l'automatisation et la coordination des t\u00e2ches essentielles, permettant un fonctionnement efficace et fiable de l'ensemble du syst\u00e8me.</p> <p>Si vous utilisez l'interface utilisateur Web, vous pouvez g\u00e9rer les t\u00e2ches du planificateur en cliquant sur T\u00e2ches dans le menu:</p> <p> </p> G\u00e9rer les t\u00e2ches \u00e0 partir de l'interface utilisateur web <p>V\u00e9rification de l'\u00e9tat des instances</p> <p>Depuis la version 1.6.0, le planificateur dispose d'un syst\u00e8me de v\u00e9rification de l'\u00e9tat int\u00e9gr\u00e9 qui surveille l'\u00e9tat des instances. Si une instance devient d\u00e9fectueuse, le planificateur cessera de lui envoyer la configuration. Si l'instance redevient saine, le planificateur reprend l'envoi de la configuration.</p> <p>L'intervalle de v\u00e9rification de l'\u00e9tat est d\u00e9fini par la <code>HEALTHCHECK_INTERVAL</code> variable d'environnement, avec une valeur par d\u00e9faut de <code>30</code>, ce qui signifie que le planificateur v\u00e9rifiera l'\u00e9tat des instances toutes les 30 secondes.</p>"},{"location":"fr/concepts/#modeles","title":"Mod\u00e8les","text":"<p>BunkerWeb exploite la puissance des mod\u00e8les pour simplifier le processus de configuration et am\u00e9liorer la flexibilit\u00e9. Les mod\u00e8les offrent une approche structur\u00e9e et standardis\u00e9e de la d\u00e9finition des param\u00e8tres et des configurations personnalis\u00e9es, garantissant ainsi la coh\u00e9rence et la facilit\u00e9 d'utilisation.</p> <ul> <li> <p>Mod\u00e8les pr\u00e9d\u00e9finis: la version communautaire propose trois mod\u00e8les pr\u00e9d\u00e9finis qui encapsulent les configurations et param\u00e8tres personnalis\u00e9s courants. Ces mod\u00e8les servent de point de d\u00e9part pour la configuration de BunkerWeb, permettant une configuration et un d\u00e9ploiement rapides. Les mod\u00e8les pr\u00e9d\u00e9finis sont les suivants:</p> <ul> <li>low: mod\u00e8le de base qui fournit des param\u00e8tres essentiels pour la protection des applications Web.</li> <li>medium: un mod\u00e8le \u00e9quilibr\u00e9 qui offre un m\u00e9lange de fonctionnalit\u00e9s de s\u00e9curit\u00e9 et d'optimisations de performances.</li> <li>\u00e9lev\u00e9: mod\u00e8le avanc\u00e9 qui met l'accent sur des mesures de s\u00e9curit\u00e9 robustes et une protection compl\u00e8te.</li> </ul> </li> <li> <p>Mod\u00e8les personnalis\u00e9s: En plus des mod\u00e8les pr\u00e9d\u00e9finis, BunkerWeb permet aux utilisateurs de cr\u00e9er des mod\u00e8les personnalis\u00e9s adapt\u00e9s \u00e0 leurs besoins sp\u00e9cifiques. Les mod\u00e8les personnalis\u00e9s permettent d'affiner les param\u00e8tres et les configurations personnalis\u00e9es, garantissant que BunkerWeb s'aligne parfaitement sur les besoins de l'utilisateur.</p> </li> </ul> <p>Avec l'interface utilisateur Web, les mod\u00e8les sont disponibles en mode facile lorsque vous ajoutez ou modifiez un service:</p> <p> </p> Utilisation des mod\u00e8les \u00e0 partir de l'interface utilisateur web <p>Cr\u00e9ation de mod\u00e8les personnalis\u00e9s</p> <p>La cr\u00e9ation d'un mod\u00e8le personnalis\u00e9 est un processus simple qui implique la d\u00e9finition des param\u00e8tres, des configurations personnalis\u00e9es et des \u00e9tapes souhait\u00e9s dans un format structur\u00e9.</p> <ul> <li>Structure du mod\u00e8le: un mod\u00e8le personnalis\u00e9 se compose d'un nom, d'une s\u00e9rie de param\u00e8tres, de configurations personnalis\u00e9es et d'\u00e9tapes facultatives. La structure du mod\u00e8le est d\u00e9finie dans un fichier JSON qui respecte le format sp\u00e9cifi\u00e9. Les principaux composants d'un mod\u00e8le personnalis\u00e9 sont les suivants:</li> <li>Param\u00e8tres: Un param\u00e8tre est d\u00e9fini avec un nom et la valeur correspondante. Cette valeur remplacera la valeur par d\u00e9faut du param\u00e8tre. Seuls les param\u00e8tres multisites sont pris en charge.</li> <li>Configurations: une configuration personnalis\u00e9e est un chemin d'acc\u00e8s \u00e0 un fichier de configuration NGINX qui sera inclus en tant que configuration personnalis\u00e9e. Pour savoir o\u00f9 placer le fichier de configuration personnalis\u00e9, r\u00e9f\u00e9rez-vous \u00e0 l'exemple de l'arborescence d'un plugin ci-dessous. Seuls les types de configuration multisite sont pris en charge.</li> <li>\u00c9tapes: une \u00e9tape contient un titre, un sous-titre, des param\u00e8tres et des configurations personnalis\u00e9es. Chaque \u00e9tape repr\u00e9sente une \u00e9tape de configuration que l'utilisateur peut suivre pour configurer BunkerWeb selon le mod\u00e8le personnalis\u00e9 dans l'interface utilisateur Web.</li> </ul> <p>Sp\u00e9cifications des \u00e9tapes</p> <p>Si des \u00e9tapes sont d\u00e9clar\u00e9es, il n'est pas obligatoire d'inclure tous les param\u00e8tres et configurations personnalis\u00e9es dans les sections <code>settings</code> et <code>configs</code>. Gardez \u00e0 l'esprit que les param\u00e8tres ou configurations personnalis\u00e9es d\u00e9clar\u00e9s dans une \u00e9tape pourront \u00eatre modifi\u00e9s par l'utilisateur dans l'interface utilisateur Web.</p> <ul> <li> <p>Fichier mod\u00e8le: le mod\u00e8le personnalis\u00e9 est d\u00e9fini dans un fichier JSON dans un <code>templates</code> dossier \u00e0 l'int\u00e9rieur du r\u00e9pertoire du plugin qui adh\u00e8re \u00e0 la structure sp\u00e9cifi\u00e9e. Le fichier mod\u00e8le contient un nom, les param\u00e8tres, les configurations personnalis\u00e9es et les \u00e9tapes requises pour configurer BunkerWeb selon les pr\u00e9f\u00e9rences de l'utilisateur.</p> </li> <li> <p>S\u00e9lection d'un mod\u00e8le: une fois le mod\u00e8le personnalis\u00e9 d\u00e9fini, les utilisateurs peuvent le s\u00e9lectionner pendant le processus de configuration en mode facile d'un service dans l'interface utilisateur Web. Un mod\u00e8le peut \u00e9galement \u00eatre s\u00e9lectionn\u00e9 avec le <code>USE_TEMPLATE</code> param\u00e8tre dans la configuration. Le nom du fichier mod\u00e8le (sans l' <code>.json</code> extension) doit \u00eatre sp\u00e9cifi\u00e9 comme valeur du <code>USE_TEMPLATE</code> param\u00e8tre.</p> </li> </ul> <p>Exemple de fichier mod\u00e8le personnalis\u00e9: <pre><code>{\n    \"name\": \"template name\",\n    // optional\n    \"settings\": {\n        \"SETTING_1\": \"value\",\n        \"SETTING_2\": \"value\"\n    },\n    // optional\n    \"configs\": [\n        \"modsec/false_positives.conf\",\n        \"modsec/non_editable.conf\",\n        \"modsec-crs/custom_rules.conf\"\n    ],\n    // optional\n    \"steps\": [\n        {\n            \"title\": \"Title 1\",\n            \"subtitle\": \"subtitle 1\",\n            \"settings\": [\n                \"SETTING_1\"\n            ],\n            \"configs\": [\n                \"modsec-crs/custom_rules.conf\"\n            ]\n        },\n        {\n            \"title\": \"Title 2\",\n            \"subtitle\": \"subtitle 2\",\n            \"settings\": [\n                \"SETTING_2\"\n            ],\n            \"configs\": [\n                \"modsec/false_positives.conf\"\n            ]\n        }\n    ]\n}\n</code></pre></p> <p>Exemple d'arborescence d'un plugin incluant des mod\u00e8les personnalis\u00e9s: <pre><code>.\n\u251c\u2500\u2500 plugin.json\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 my_other_template.json\n    \u251c\u2500\u2500 my_template\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 configs\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 modsec\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 false_positives.conf\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 non_editable.conf\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 modsec-crs\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 custom_rules.conf\n    \u2514\u2500\u2500 my_template.json\n</code></pre></p>"},{"location":"fr/features/","title":"Fonctionnalit\u00e9s","text":"<p>Cette section contient la liste compl\u00e8te des param\u00e8tres pris en charge par BunkerWeb. Si vous n\u2019\u00eates pas encore familier avec BunkerWeb, commencez par lire la section concepts de la documentation. Suivez ensuite les instructions de votre int\u00e9gration pour appliquer les param\u00e8tres.</p>"},{"location":"fr/features/#parametres-globaux","title":"Param\u00e8tres globaux","text":"<p>Prise en charge STREAM </p> <p>Le plugin General fournit le cadre de configuration de base de BunkerWeb, vous permettant de d\u00e9finir les param\u00e8tres essentiels qui r\u00e9gissent la protection et la distribution de vos services web. Ce plugin fondamental g\u00e8re des aspects cl\u00e9s tels que les modes de s\u00e9curit\u00e9, les valeurs par d\u00e9faut du serveur, le comportement de journalisation et les param\u00e8tres op\u00e9rationnels critiques pour l\u2019ensemble de l\u2019\u00e9cosyst\u00e8me BunkerWeb.</p> <p>Comment \u00e7a marche :</p> <ol> <li>Au d\u00e9marrage de BunkerWeb, le plugin General charge et applique vos param\u00e8tres de configuration principaux.</li> <li>Les modes de s\u00e9curit\u00e9 sont d\u00e9finis globalement ou par site, d\u00e9terminant le niveau de protection appliqu\u00e9.</li> <li>Les param\u00e8tres par d\u00e9faut du serveur \u00e9tablissent des valeurs de repli pour toute configuration multisite non sp\u00e9cifi\u00e9e.</li> <li>Les param\u00e8tres de journalisation contr\u00f4lent les informations enregistr\u00e9es et leur format.</li> <li>Ces param\u00e8tres constituent la base sur laquelle s\u2019appuient tous les autres plugins et fonctionnalit\u00e9s de BunkerWeb.</li> </ol>"},{"location":"fr/features/#mode-multisite","title":"Mode multisite","text":"<p>Lorsque <code>MULTISITE</code> vaut <code>yes</code>, BunkerWeb peut h\u00e9berger et prot\u00e9ger plusieurs sites web, chacun avec sa propre configuration. Ce mode est utile notamment pour :</p> <ul> <li>H\u00e9berger plusieurs domaines aux configurations distinctes</li> <li>Ex\u00e9cuter plusieurs applications avec des exigences de s\u00e9curit\u00e9 diff\u00e9rentes</li> <li>Appliquer des politiques de s\u00e9curit\u00e9 adapt\u00e9es \u00e0 diff\u00e9rents services</li> </ul> <p>En mode multisite, chaque site est identifi\u00e9 par un <code>SERVER_NAME</code> unique. Pour appliquer des param\u00e8tres sp\u00e9cifiques \u00e0 un site, pr\u00e9fixez le nom du param\u00e8tre par le <code>SERVER_NAME</code> principal. Par exemple :</p> <ul> <li><code>www.example.com_USE_ANTIBOT=captcha</code> active le CAPTCHA pour <code>www.example.com</code>.</li> <li><code>myapp.example.com_USE_GZIP=yes</code> active la compression GZIP pour <code>myapp.example.com</code>.</li> </ul> <p>Cette approche garantit que les param\u00e8tres sont appliqu\u00e9s au bon site dans un environnement multisite.</p>"},{"location":"fr/features/#parametres-multiples","title":"Param\u00e8tres multiples","text":"<p>Certains param\u00e8tres de BunkerWeb supportent plusieurs configurations pour une m\u00eame fonctionnalit\u00e9. Pour d\u00e9finir plusieurs groupes de param\u00e8tres, ajoutez un suffixe num\u00e9rique au nom du param\u00e8tre. Par exemple :</p> <ul> <li><code>REVERSE_PROXY_URL_1=/subdir</code> et <code>REVERSE_PROXY_HOST_1=http://myhost1</code> d\u00e9finissent le premier reverse proxy.</li> <li><code>REVERSE_PROXY_URL_2=/anotherdir</code> et <code>REVERSE_PROXY_HOST_2=http://myhost2</code> d\u00e9finissent le second reverse proxy.</li> </ul> <p>Ce mod\u00e8le permet de g\u00e9rer plusieurs configurations pour des fonctionnalit\u00e9s comme les reverse proxies, les ports, ou d\u2019autres param\u00e8tres n\u00e9cessitant des valeurs distinctes selon les cas d\u2019usage.</p>"},{"location":"fr/features/#modes-de-securite","title":"Modes de s\u00e9curit\u00e9","text":"<p>Le param\u00e8tre <code>SECURITY_MODE</code> d\u00e9termine la fa\u00e7on dont BunkerWeb g\u00e8re les menaces d\u00e9tect\u00e9es. Ce m\u00e9canisme flexible vous permet de choisir entre la surveillance et le blocage actif des activit\u00e9s suspectes, selon vos besoins :</p> <ul> <li><code>detect</code> : Enregistre les menaces potentielles sans les bloquer. Utile pour analyser les faux positifs sans perturber les utilisateurs l\u00e9gitimes.</li> <li><code>block</code> (par d\u00e9faut) : Bloque activement les menaces d\u00e9tect\u00e9es tout en journalisant les incidents pour prot\u00e9ger votre application.</li> </ul> <p>Passer en mode <code>detect</code> aide \u00e0 identifier et corriger les faux positifs sans impacter les clients l\u00e9gitimes. Une fois ces probl\u00e8mes r\u00e9solus, repassez en mode <code>block</code> pour une protection compl\u00e8te.</p>"},{"location":"fr/features/#parametres-de-configuration","title":"Param\u00e8tres de configuration","text":"Param\u00e8tres principauxParam\u00e8tres APIParam\u00e8tres r\u00e9seau et portsParam\u00e8tres serveur StreamParam\u00e8tres des workersParam\u00e8tres m\u00e9moireParam\u00e8tres de journalisationParam\u00e8tres d\u2019int\u00e9grationParam\u00e8tres Nginx Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>SERVER_NAME</code> <code>www.example.com</code> multisite Non Domaine principal : Nom de domaine principal pour ce site. Requis en mode multisite. <code>BUNKERWEB_INSTANCES</code> <code>127.0.0.1</code> global Non Instances BunkerWeb : Liste des instances BunkerWeb s\u00e9par\u00e9es par des espaces. <code>MULTISITE</code> <code>no</code> global Non Sites multiples : D\u00e9finir \u00e0 <code>yes</code> pour h\u00e9berger plusieurs sites avec des configurations diff\u00e9rentes. <code>SECURITY_MODE</code> <code>block</code> multisite Non Niveau de s\u00e9curit\u00e9 : <code>detect</code> ou <code>block</code> pour contr\u00f4ler l\u2019application de la s\u00e9curit\u00e9. <code>SERVER_TYPE</code> <code>http</code> multisite Non Type de serveur : D\u00e9finit si le serveur est de type <code>http</code> ou <code>stream</code>. Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_API</code> <code>yes</code> global Non Activer l\u2019API : Active l\u2019API pour piloter BunkerWeb. <code>API_HTTP_PORT</code> <code>5000</code> global Non Port de l\u2019API : Num\u00e9ro de port d\u2019\u00e9coute de l\u2019API. <code>API_HTTPS_PORT</code> <code>6000</code> global Non Port HTTPS de l\u2019API : Num\u00e9ro de port d\u2019\u00e9coute (TLS) de l\u2019API. <code>API_LISTEN_HTTP</code> <code>yes</code> global Non \u00c9coute HTTP de l\u2019API : Active l\u2019\u00e9coute HTTP pour l\u2019API. <code>API_LISTEN_HTTPS</code> <code>no</code> global Non \u00c9coute HTTPS de l\u2019API : Active l\u2019\u00e9coute HTTPS (TLS) pour l\u2019API. <code>API_LISTEN_IP</code> <code>0.0.0.0</code> global Non IP d\u2019\u00e9coute de l\u2019API : Adresse IP d\u2019\u00e9coute de l\u2019API. <code>API_SERVER_NAME</code> <code>bwapi</code> global Non Nom de serveur de l\u2019API : Nom de serveur (vhost) pour l\u2019API. <code>API_WHITELIST_IP</code> <code>127.0.0.0/8</code> global Non Liste blanche API : Liste IP/r\u00e9seaux autoris\u00e9s \u00e0 contacter l\u2019API. <code>API_TOKEN</code> global Non Jeton d\u2019acc\u00e8s API (optionnel) : Si d\u00e9fini, chaque requ\u00eate API doit inclure <code>Authorization: Bearer &lt;token&gt;</code>. <p>Remarque : pour des raisons d\u2019amor\u00e7age, si vous activez <code>API_TOKEN</code>, vous devez le d\u00e9finir dans l\u2019environnement \u00e0 la fois de l\u2019instance BunkerWeb et du Scheduler. Le Scheduler ajoute automatiquement l\u2019en-t\u00eate <code>Authorization</code> quand <code>API_TOKEN</code> est pr\u00e9sent dans son environnement. S\u2019il n\u2019est pas d\u00e9fini, aucun en-t\u00eate n\u2019est envoy\u00e9 et BunkerWeb n\u2019applique pas l\u2019authentification par jeton. Vous pouvez exposer l\u2019API en HTTPS en d\u00e9finissant <code>API_LISTEN_HTTPS=yes</code> (port : <code>API_HTTPS_PORT</code>, <code>6000</code> par d\u00e9faut).</p> <p>Exemple de test avec curl (remplacez le jeton et l\u2019h\u00f4te) :</p> <pre><code>curl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://&lt;bunkerweb-host&gt;:5000/ping\n\ncurl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     --insecure \\\n     https://&lt;bunkerweb-host&gt;:6000/ping\n</code></pre> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>HTTP_PORT</code> <code>8080</code> global Oui Port HTTP : Num\u00e9ro de port pour le trafic HTTP. <code>HTTPS_PORT</code> <code>8443</code> global Oui Port HTTPS : Num\u00e9ro de port pour le trafic HTTPS. <code>USE_IPV6</code> <code>no</code> global Non Support IPv6 : Active la connectivit\u00e9 IPv6. <code>DNS_RESOLVERS</code> <code>127.0.0.11</code> global Non R\u00e9solveurs DNS : Adresses des r\u00e9solveurs \u00e0 utiliser. Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>LISTEN_STREAM</code> <code>yes</code> multisite Non \u00c9coute stream : Active l\u2019\u00e9coute non-ssl (pass-through). <code>LISTEN_STREAM_PORT</code> <code>1337</code> multisite Oui Port stream : Port d\u2019\u00e9coute pour le non-ssl (pass-through). <code>LISTEN_STREAM_PORT_SSL</code> <code>4242</code> multisite Oui Port stream SSL : Port d\u2019\u00e9coute pour le SSL (pass-through). <code>USE_TCP</code> <code>yes</code> multisite Non \u00c9coute TCP : Active l\u2019\u00e9coute TCP (stream). <code>USE_UDP</code> <code>no</code> multisite Non \u00c9coute UDP : Active l\u2019\u00e9coute UDP (stream). Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>WORKER_PROCESSES</code> <code>auto</code> global Non Processus workers : Nombre de processus workers. <code>auto</code> utilise le nombre de c\u0153urs. <code>WORKER_CONNECTIONS</code> <code>1024</code> global Non Connexions par worker : Nombre maximal de connexions par worker. <code>WORKER_RLIMIT_NOFILE</code> <code>2048</code> global Non Limite descripteurs : Nombre maximal de fichiers ouverts par worker. Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>WORKERLOCK_MEMORY_SIZE</code> <code>48k</code> global Non M\u00e9moire workerlock : Taille de lua_shared_dict pour l\u2019initialisation des workers. <code>DATASTORE_MEMORY_SIZE</code> <code>64m</code> global Non M\u00e9moire datastore : Taille du datastore interne. <code>CACHESTORE_MEMORY_SIZE</code> <code>64m</code> global Non M\u00e9moire cachestore : Taille du cache interne. <code>CACHESTORE_IPC_MEMORY_SIZE</code> <code>16m</code> global Non M\u00e9moire cachestore IPC : Taille du cache interne (IPC). <code>CACHESTORE_MISS_MEMORY_SIZE</code> <code>16m</code> global Non M\u00e9moire cachestore miss : Taille du cache interne (miss). <code>CACHESTORE_LOCKS_MEMORY_SIZE</code> <code>16m</code> global Non M\u00e9moire cachestore locks : Taille du cache interne (locks). Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>LOG_FORMAT</code> <code>$host $remote_addr - $request_id $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\"</code> global Non Format des logs : Format utilis\u00e9 pour les logs d\u2019acc\u00e8s. <code>LOG_LEVEL</code> <code>notice</code> global Non Niveau de logs : Verbosit\u00e9 des logs d\u2019erreur. Options : <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>error</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <code>TIMERS_LOG_LEVEL</code> <code>debug</code> global Non Niveau des timers : Niveau de log pour les timers. Options : <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>err</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <p>Bonnes pratiques de journalisation</p> <ul> <li>En production, utilisez les niveaux <code>notice</code>, <code>warn</code> ou <code>error</code> pour limiter le volume de logs.</li> <li>Pour le d\u00e9pannage, passez temporairement le niveau \u00e0 <code>debug</code> pour obtenir plus de d\u00e9tails.</li> </ul> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>AUTOCONF_MODE</code> <code>no</code> global Non Mode Autoconf : Active l\u2019int\u00e9gration Docker Autoconf. <code>SWARM_MODE</code> <code>no</code> global Non Mode Swarm : Active l\u2019int\u00e9gration Docker Swarm. <code>KUBERNETES_MODE</code> <code>no</code> global Non Mode Kubernetes : Active l\u2019int\u00e9gration Kubernetes. <code>USE_TEMPLATE</code> multisite Non Utiliser un template : Mod\u00e8le de configuration qui surcharge les valeurs par d\u00e9faut de certains param\u00e8tres. Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>NGINX_PREFIX</code> <code>/etc/nginx/</code> global Non Pr\u00e9fixe Nginx : R\u00e9pertoire o\u00f9 NGINX va chercher les configurations. <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> global Non Taille du hash : Valeur pour la directive server_names_hash_bucket_size."},{"location":"fr/features/#exemples-de-configuration","title":"Exemples de configuration","text":"Configuration de base (production)Mode d\u00e9veloppementConfiguration multisiteConfiguration serveur Stream <p>Configuration standard pour un site de production avec une s\u00e9curit\u00e9 stricte :</p> <pre><code>SECURITY_MODE: \"block\"\nSERVER_NAME: \"example.com\"\nLOG_LEVEL: \"notice\"\n</code></pre> <p>Configuration pour un environnement de d\u00e9veloppement avec journalisation d\u00e9taill\u00e9e :</p> <pre><code>SECURITY_MODE: \"detect\"\nSERVER_NAME: \"dev.example.com\"\nLOG_LEVEL: \"debug\"\n</code></pre> <p>Configuration pour h\u00e9berger plusieurs sites :</p> <pre><code>MULTISITE: \"yes\"\n\n# Premier site\nsite1.example.com_SERVER_NAME: \"site1.example.com\"\nsite1.example.com_SECURITY_MODE: \"block\"\n\n# Second site\nsite2.example.com_SERVER_NAME: \"site2.example.com\"\nsite2.example.com_SECURITY_MODE: \"detect\"\n</code></pre> <p>Configuration pour un serveur TCP/UDP :</p> <pre><code>SERVER_TYPE: \"stream\"\nSERVER_NAME: \"stream.example.com\"\nLISTEN_STREAM: \"yes\"\nLISTEN_STREAM_PORT: \"1337\"\nUSE_TCP: \"yes\"\nUSE_UDP: \"no\"\n</code></pre>"},{"location":"fr/features/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Provides enhanced protection against DDoS attacks by analyzing and filtering suspicious traffic.</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_ANTIDDOS</code> <code>no</code> global non Enable or disable anti DDoS protection to mitigate high traffic spikes. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global non Size of in-memory storage for DDoS metrics (e.g., 10M, 500k). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global non Maximum suspicious requests allowed from a single IP before blocking. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global non Time window (seconds) to detect abnormal request patterns. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global non HTTP status codes treated as suspicious for DDoS analysis. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global non Minimum distinct IP count before enabling anti DDoS measures."},{"location":"fr/features/#antibot","title":"Antibot","text":"<p>Prise en charge STREAM </p> <p>Les attaquants utilisent souvent des outils automatis\u00e9s (bots) pour tenter d\u2019exploiter votre site. Pour s\u2019en prot\u00e9ger, BunkerWeb inclut une fonctionnalit\u00e9 \u00ab Antibot \u00bb qui demande aux utilisateurs de prouver qu\u2019ils sont humains. Si un utilisateur r\u00e9ussit le d\u00e9fi, il obtient l\u2019acc\u00e8s \u00e0 votre site. Cette fonctionnalit\u00e9 est d\u00e9sactiv\u00e9e par d\u00e9faut.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Lorsqu\u2019un utilisateur visite votre site, BunkerWeb v\u00e9rifie s\u2019il a d\u00e9j\u00e0 r\u00e9ussi un d\u00e9fi antibot.</li> <li>Sinon, l\u2019utilisateur est redirig\u00e9 vers une page de d\u00e9fi.</li> <li>L\u2019utilisateur doit compl\u00e9ter le d\u00e9fi (ex. r\u00e9soudre un CAPTCHA, ex\u00e9cuter du JavaScript).</li> <li>Si le d\u00e9fi est r\u00e9ussi, l\u2019utilisateur est redirig\u00e9 vers la page initialement demand\u00e9e et peut naviguer normalement.</li> </ol>"},{"location":"fr/features/#comment-lutiliser","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour activer et configurer Antibot\u00a0:</p> <ol> <li>Choisir un type de d\u00e9fi\u00a0: d\u00e9cidez du m\u00e9canisme \u00e0 utiliser (ex. captcha, hcaptcha, javascript).</li> <li>Activer la fonctionnalit\u00e9\u00a0: d\u00e9finissez le param\u00e8tre <code>USE_ANTIBOT</code> sur le type choisi dans votre configuration BunkerWeb.</li> <li>Configurer les param\u00e8tres\u00a0: ajustez les autres param\u00e8tres <code>ANTIBOT_*</code> si n\u00e9cessaire. Pour reCAPTCHA, hCaptcha, Turnstile et mCaptcha, cr\u00e9ez un compte aupr\u00e8s du service choisi et obtenez des cl\u00e9s API.</li> <li>Important\u00a0: assurez\u2011vous que <code>ANTIBOT_URI</code> est une URL unique de votre site et qu\u2019elle n\u2019est pas utilis\u00e9e ailleurs.</li> </ol> <p>\u00c0 propos du param\u00e8tre <code>ANTIBOT_URI</code></p> <p>Assurez\u2011vous que <code>ANTIBOT_URI</code> est une URL unique de votre site et qu\u2019elle n\u2019est pas utilis\u00e9e ailleurs.</p> <p>Sessions en environnement cluster</p> <p>La fonction antibot utilise des cookies pour suivre si un utilisateur a compl\u00e9t\u00e9 le d\u00e9fi. Si vous ex\u00e9cutez BunkerWeb en cluster (plusieurs instances), vous devez configurer correctement la gestion des sessions\u00a0: d\u00e9finissez <code>SESSIONS_SECRET</code> et <code>SESSIONS_NAME</code> avec les m\u00eames valeurs sur toutes les instances BunkerWeb. Sinon, les utilisateurs pourront \u00eatre invit\u00e9s \u00e0 r\u00e9p\u00e9ter le d\u00e9fi. Plus d\u2019informations sur la configuration des sessions ici.</p>"},{"location":"fr/features/#parametres-communs","title":"Param\u00e8tres communs","text":"<p>Les param\u00e8tres suivants sont partag\u00e9s par tous les m\u00e9canismes de d\u00e9fi\u00a0:</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>ANTIBOT_URI</code> <code>/challenge</code> multisite non URL du d\u00e9fi\u00a0: l\u2019URL vers laquelle les utilisateurs sont redirig\u00e9s pour compl\u00e9ter le d\u00e9fi. Veillez \u00e0 ce que cette URL ne soit pas utilis\u00e9e pour autre chose. <code>ANTIBOT_TIME_RESOLVE</code> <code>60</code> multisite non D\u00e9lai du d\u00e9fi\u00a0: temps maximum (en secondes) pour compl\u00e9ter le d\u00e9fi. Au\u2011del\u00e0, un nouveau d\u00e9fi est g\u00e9n\u00e9r\u00e9. <code>ANTIBOT_TIME_VALID</code> <code>86400</code> multisite non Validit\u00e9 du d\u00e9fi\u00a0: dur\u00e9e (en secondes) pendant laquelle un d\u00e9fi r\u00e9ussi reste valide. Pass\u00e9 ce d\u00e9lai, un nouveau d\u00e9fi sera requis."},{"location":"fr/features/#exclure-du-trafic-des-defis","title":"Exclure du trafic des d\u00e9fis","text":"<p>BunkerWeb permet d\u2019indiquer certains utilisateurs, IP ou requ\u00eates qui doivent contourner totalement le d\u00e9fi antibot. Utile pour des services de confiance, r\u00e9seaux internes ou des pages \u00e0 laisser toujours accessibles\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>ANTIBOT_IGNORE_URI</code> multisite non URL exclues\u00a0: liste d\u2019expressions r\u00e9guli\u00e8res d\u2019URI s\u00e9par\u00e9es par des espaces qui doivent contourner le d\u00e9fi. <code>ANTIBOT_IGNORE_IP</code> multisite non IP exclues\u00a0: liste d\u2019adresses IP ou de plages CIDR s\u00e9par\u00e9es par des espaces qui doivent contourner le d\u00e9fi. <code>ANTIBOT_IGNORE_RDNS</code> multisite non rDNS exclu\u00a0: liste de suffixes de DNS invers\u00e9s s\u00e9par\u00e9s par des espaces qui doivent contourner le d\u00e9fi. <code>ANTIBOT_RDNS_GLOBAL</code> <code>yes</code> multisite non IP publiques uniquement\u00a0: si <code>yes</code>, ne faire des v\u00e9rifications rDNS que sur des IP publiques. <code>ANTIBOT_IGNORE_ASN</code> multisite non ASN exclus\u00a0: liste de num\u00e9ros d\u2019ASN s\u00e9par\u00e9s par des espaces qui doivent contourner le d\u00e9fi. <code>ANTIBOT_IGNORE_USER_AGENT</code> multisite non User\u2011Agents exclus\u00a0: liste de motifs regex d\u2019User\u2011Agent s\u00e9par\u00e9s par des espaces qui doivent contourner le d\u00e9fi. <p>Exemples\u00a0:</p> <ul> <li> <p><code>ANTIBOT_IGNORE_URI: \"^/api/ ^/webhook/ ^/assets/\"</code>   Exclut toutes les URI commen\u00e7ant par <code>/api/</code>, <code>/webhook/</code> ou <code>/assets/</code>.</p> </li> <li> <p><code>ANTIBOT_IGNORE_IP: \"192.168.1.0/24 10.0.0.1\"</code>   Exclut le r\u00e9seau interne <code>192.168.1.0/24</code> et l\u2019IP sp\u00e9cifique <code>10.0.0.1</code>.</p> </li> <li> <p><code>ANTIBOT_IGNORE_RDNS: \".googlebot.com .bingbot.com\"</code>   Exclut les requ\u00eates provenant d\u2019h\u00f4tes dont le DNS invers\u00e9 se termine par <code>googlebot.com</code> ou <code>bingbot.com</code>.</p> </li> <li> <p><code>ANTIBOT_IGNORE_ASN: \"15169 8075\"</code>   Exclut les requ\u00eates des ASN 15169 (Google) et 8075 (Microsoft).</p> </li> <li> <p><code>ANTIBOT_IGNORE_USER_AGENT: \"^Mozilla.+Chrome.+Safari\"</code>   Exclut les requ\u00eates dont le User-Agent correspond au motif regex sp\u00e9cifi\u00e9.</p> </li> </ul>"},{"location":"fr/features/#mecanismes-de-defi","title":"M\u00e9canismes de d\u00e9fi","text":"CookieJavaScriptCaptchareCAPTCHAhCaptchaTurnstilemCaptcha <p>Le d\u00e9fi Cookie est un m\u00e9canisme l\u00e9ger qui repose sur l\u2019installation d\u2019un cookie dans le navigateur de l\u2019utilisateur. Lorsqu\u2019un utilisateur acc\u00e8de au site, le serveur envoie un cookie au client. Lors des requ\u00eates suivantes, le serveur v\u00e9rifie la pr\u00e9sence de ce cookie pour confirmer que l\u2019utilisateur est l\u00e9gitime. Cette m\u00e9thode est simple et efficace pour une protection de base contre les bots sans n\u00e9cessiter d\u2019interaction suppl\u00e9mentaire de l\u2019utilisateur.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Le serveur g\u00e9n\u00e8re un cookie unique et l\u2019envoie au client.</li> <li>Le client doit renvoyer le cookie dans les requ\u00eates suivantes.</li> <li>Si le cookie est manquant ou invalide, l\u2019utilisateur est redirig\u00e9 vers la page de d\u00e9fi.</li> </ol> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>cookie</code> pour activer ce m\u00e9canisme. <p>Le d\u00e9fi JavaScript demande au client de r\u00e9soudre une t\u00e2che de calcul en utilisant JavaScript. Ce m\u00e9canisme garantit que le client a activ\u00e9 JavaScript et peut ex\u00e9cuter le code requis, ce qui est g\u00e9n\u00e9ralement hors de port\u00e9e de la plupart des bots.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Le serveur envoie un script JavaScript au client.</li> <li>Le script effectue une t\u00e2che de calcul (par exemple, un hachage) et soumet le r\u00e9sultat au serveur.</li> <li>Le serveur v\u00e9rifie le r\u00e9sultat pour confirmer la l\u00e9gitimit\u00e9 du client.</li> </ol> <p>Fonctionnalit\u00e9s cl\u00e9s\u00a0:</p> <ul> <li>Le d\u00e9fi g\u00e9n\u00e8re dynamiquement une t\u00e2che unique pour chaque client.</li> <li>La t\u00e2che de calcul implique un hachage avec des conditions sp\u00e9cifiques (par exemple, trouver un hachage avec un certain pr\u00e9fixe).</li> </ul> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>javascript</code> pour activer ce m\u00e9canisme. <p>Le d\u00e9fi Captcha est un m\u00e9canisme maison qui g\u00e9n\u00e8re des d\u00e9fis bas\u00e9s sur des images, enti\u00e8rement h\u00e9berg\u00e9s dans votre environnement BunkerWeb. Il teste la capacit\u00e9 des utilisateurs \u00e0 reconna\u00eetre et interpr\u00e9ter des caract\u00e8res al\u00e9atoires, garantissant que les bots automatis\u00e9s sont bloqu\u00e9s efficacement sans d\u00e9pendre de services externes.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Le serveur g\u00e9n\u00e8re une image CAPTCHA contenant des caract\u00e8res al\u00e9atoires.</li> <li>L\u2019utilisateur doit saisir les caract\u00e8res affich\u00e9s dans l\u2019image dans un champ de texte.</li> <li>Le serveur valide la saisie de l\u2019utilisateur par rapport au CAPTCHA g\u00e9n\u00e9r\u00e9.</li> </ol> <p>Fonctionnalit\u00e9s cl\u00e9s\u00a0:</p> <ul> <li>Enti\u00e8rement auto-h\u00e9berg\u00e9, \u00e9liminant le besoin d\u2019API tierces.</li> <li>Les d\u00e9fis g\u00e9n\u00e9r\u00e9s dynamiquement assurent l\u2019unicit\u00e9 pour chaque session utilisateur.</li> <li>Utilise un jeu de caract\u00e8res personnalisable pour la g\u00e9n\u00e9ration du CAPTCHA.</li> </ul> <p>Caract\u00e8res pris en charge\u00a0:</p> <p>Le syst\u00e8me CAPTCHA prend en charge les types de caract\u00e8res suivants\u00a0:</p> <ul> <li>Lettres\u00a0: Toutes les lettres minuscules (a-z) et majuscules (A-Z)</li> <li>Chiffres\u00a0: 2, 3, 4, 5, 6, 7, 8, 9 (exclut 0 et 1 pour \u00e9viter toute confusion)</li> <li>Caract\u00e8res sp\u00e9ciaux\u00a0: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code></li> </ul> <p>Pour obtenir la liste compl\u00e8te des caract\u00e8res pris en charge, consultez la table des caract\u00e8res de la police utilis\u00e9e pour le CAPTCHA.</p> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>captcha</code> pour activer ce m\u00e9canisme. <code>ANTIBOT_CAPTCHA_ALPHABET</code> <code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code> multisite non Alphabet du Captcha\u00a0: une cha\u00eene de caract\u00e8res \u00e0 utiliser pour g\u00e9n\u00e9rer le CAPTCHA. Caract\u00e8res pris en charge\u00a0: toutes les lettres (a-z, A-Z), les chiffres 2-9 (exclut 0 et 1), et les caract\u00e8res sp\u00e9ciaux\u00a0: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code> <p>reCAPTCHA de Google propose une validation des utilisateurs qui s\u2019ex\u00e9cute en arri\u00e8re\u2011plan (v3) pour attribuer un score bas\u00e9 sur le comportement. Un score inf\u00e9rieur au seuil configur\u00e9 d\u00e9clenchera une v\u00e9rification suppl\u00e9mentaire ou bloquera la requ\u00eate. Pour les d\u00e9fis visibles (v2), les utilisateurs doivent interagir avec le widget reCAPTCHA avant de continuer.</p> <p>Il existe d\u00e9sormais deux mani\u00e8res d\u2019int\u00e9grer reCAPTCHA\u00a0: - La version classique (cl\u00e9s site/secret, point de terminaison de v\u00e9rification v2/v3) - La nouvelle version utilisant Google Cloud (ID de projet + cl\u00e9 API). La version classique reste disponible et peut \u00eatre activ\u00e9e avec <code>ANTIBOT_RECAPTCHA_CLASSIC</code>.</p> <p>Pour la version classique, obtenez vos cl\u00e9s de site et secr\u00e8te depuis la console d\u2019administration de Google reCAPTCHA. Pour la nouvelle version, cr\u00e9ez une cl\u00e9 reCAPTCHA dans votre projet Google Cloud et utilisez l\u2019ID du projet ainsi qu\u2019une cl\u00e9 API (voir la console reCAPTCHA de Google Cloud). Une cl\u00e9 de site est toujours requise.</p> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>recaptcha</code> pour activer ce m\u00e9canisme. <code>ANTIBOT_RECAPTCHA_CLASSIC</code> <code>yes</code> multisite non Utiliser reCAPTCHA classique. Mettre \u00e0 <code>no</code> pour utiliser la nouvelle version bas\u00e9e sur Google Cloud. <code>ANTIBOT_RECAPTCHA_SITEKEY</code> multisite non Cl\u00e9 de site reCAPTCHA. Requise pour les deux versions. <code>ANTIBOT_RECAPTCHA_SECRET</code> multisite non Cl\u00e9 secr\u00e8te reCAPTCHA. Requise pour la version classique uniquement. <code>ANTIBOT_RECAPTCHA_PROJECT_ID</code> multisite non ID de projet Google Cloud. Requis pour la nouvelle version uniquement. <code>ANTIBOT_RECAPTCHA_API_KEY</code> multisite non Cl\u00e9 API Google Cloud utilis\u00e9e pour appeler l\u2019API reCAPTCHA Enterprise. Requise pour la nouvelle version uniquement. <code>ANTIBOT_RECAPTCHA_JA3</code> multisite non Empreinte TLS JA3 optionnelle \u00e0 inclure dans les \u00e9valuations Enterprise. <code>ANTIBOT_RECAPTCHA_JA4</code> multisite non Empreinte TLS JA4 optionnelle \u00e0 inclure dans les \u00e9valuations Enterprise. <code>ANTIBOT_RECAPTCHA_SCORE</code> <code>0.7</code> multisite non Score minimum requis pour passer (s\u2019applique \u00e0 la v3 classique et \u00e0 la nouvelle version). <p>Lorsqu\u2019il est activ\u00e9, hCaptcha offre une alternative efficace \u00e0 reCAPTCHA en v\u00e9rifiant les interactions des utilisateurs sans reposer sur un m\u00e9canisme de score. Il met les utilisateurs au d\u00e9fi avec un test simple et interactif pour confirmer leur l\u00e9gitimit\u00e9.</p> <p>Pour int\u00e9grer hCaptcha avec BunkerWeb, vous devez obtenir les informations d\u2019identification n\u00e9cessaires depuis le tableau de bord hCaptcha sur hCaptcha. Ces informations incluent une cl\u00e9 de site et une cl\u00e9 secr\u00e8te.</p> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>hcaptcha</code> pour activer ce m\u00e9canisme. <code>ANTIBOT_HCAPTCHA_SITEKEY</code> multisite non Cl\u00e9 site hCaptcha. <code>ANTIBOT_HCAPTCHA_SECRET</code> multisite non Cl\u00e9 secr\u00e8te hCaptcha. <p>Turnstile est un m\u00e9canisme de d\u00e9fi moderne et respectueux de la vie priv\u00e9e qui s\u2019appuie sur la technologie de Cloudflare pour d\u00e9tecter et bloquer le trafic automatis\u00e9. Il valide les interactions des utilisateurs de mani\u00e8re transparente et en arri\u00e8re-plan, r\u00e9duisant les frictions pour les utilisateurs l\u00e9gitimes tout en d\u00e9courageant efficacement les bots.</p> <p>Pour int\u00e9grer Turnstile avec BunkerWeb, assurez-vous d\u2019obtenir les informations d\u2019identification n\u00e9cessaires depuis Cloudflare Turnstile.</p> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>turnstile</code> pour activer ce m\u00e9canisme. <code>ANTIBOT_TURNSTILE_SITEKEY</code> multisite non Cl\u00e9 site Turnstile (Cloudflare). <code>ANTIBOT_TURNSTILE_SECRET</code> multisite non Cl\u00e9 secr\u00e8te Turnstile (Cloudflare). <p>mCaptcha est un m\u00e9canisme de d\u00e9fi CAPTCHA alternatif qui v\u00e9rifie la l\u00e9gitimit\u00e9 des utilisateurs en pr\u00e9sentant un test interactif similaire \u00e0 d\u2019autres solutions antibot. Lorsqu\u2019il est activ\u00e9, il met les utilisateurs au d\u00e9fi avec un CAPTCHA fourni par mCaptcha, s\u2019assurant que seuls les utilisateurs authentiques contournent les contr\u00f4les de s\u00e9curit\u00e9 automatis\u00e9s.</p> <p>mCaptcha est con\u00e7u dans le respect de la vie priv\u00e9e. Il est enti\u00e8rement conforme au RGPD, garantissant que toutes les donn\u00e9es des utilisateurs impliqu\u00e9es dans le processus de d\u00e9fi respectent des normes strictes de protection des donn\u00e9es. De plus, mCaptcha offre la flexibilit\u00e9 d\u2019\u00eatre auto-h\u00e9berg\u00e9, permettant aux organisations de garder un contr\u00f4le total sur leurs donn\u00e9es et leur infrastructure. Cette capacit\u00e9 d\u2019auto-h\u00e9bergement am\u00e9liore non seulement la confidentialit\u00e9, mais optimise \u00e9galement les performances et la personnalisation pour r\u00e9pondre aux besoins sp\u00e9cifiques de d\u00e9ploiement.</p> <p>Pour int\u00e9grer mCaptcha avec BunkerWeb, vous devez obtenir les informations d\u2019identification n\u00e9cessaires depuis la plateforme mCaptcha ou votre propre fournisseur. Ces informations incluent une cl\u00e9 de site et une cl\u00e9 secr\u00e8te pour la v\u00e9rification.</p> <p>Param\u00e8tres\u00a0:</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ANTIBOT</code> <code>no</code> multisite non Activer Antibot\u00a0: d\u00e9finir sur <code>mcaptcha</code> pour activer ce m\u00e9canisme. <code>ANTIBOT_MCAPTCHA_SITEKEY</code> multisite non Cl\u00e9 site mCaptcha. <code>ANTIBOT_MCAPTCHA_SECRET</code> multisite non Cl\u00e9 secr\u00e8te mCaptcha. <code>ANTIBOT_MCAPTCHA_URL</code> <code>https://demo.mcaptcha.org</code> multisite non Domaine \u00e0 utiliser pour mCaptcha. <p>Reportez\u2011vous aux Param\u00e8tres communs pour les options suppl\u00e9mentaires.</p>"},{"location":"fr/features/#exemples-de-configuration_1","title":"Exemples de configuration","text":"D\u00e9fi Cookie <pre><code>USE_ANTIBOT: \"cookie\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> D\u00e9fi JavaScript <pre><code>USE_ANTIBOT: \"javascript\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> D\u00e9fi Captcha <pre><code>USE_ANTIBOT: \"captcha\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\nANTIBOT_CAPTCHA_ALPHABET: \"23456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n</code></pre> <p>Remarque\u00a0: l\u2019exemple ci\u2011dessus utilise les chiffres 2\u20119 et toutes les lettres, fr\u00e9quemment utilis\u00e9s pour les CAPTCHA. Vous pouvez personnaliser l\u2019alphabet pour inclure des caract\u00e8res sp\u00e9ciaux si n\u00e9cessaire.</p> D\u00e9fi reCAPTCHA ClassiqueD\u00e9fi reCAPTCHA (nouveau)D\u00e9fi hCaptcha <p>Exemple de configuration pour le reCAPTCHA classique (cl\u00e9s site/secret) :</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"yes\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Exemple de configuration pour le nouveau reCAPTCHA bas\u00e9 sur Google Cloud (ID de projet + cl\u00e9 API) :</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"no\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_PROJECT_ID: \"your-gcp-project-id\"\nANTIBOT_RECAPTCHA_API_KEY: \"your-gcp-api-key\"\n# Empreintes optionnelles pour am\u00e9liorer les \u00e9valuations Enterprise\n# ANTIBOT_RECAPTCHA_JA3: \"&lt;empreinte-ja3&gt;\"\n# ANTIBOT_RECAPTCHA_JA4: \"&lt;empreinte-ja4&gt;\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <pre><code>USE_ANTIBOT: \"hcaptcha\"\nANTIBOT_HCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_HCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> D\u00e9fi Turnstile <pre><code>USE_ANTIBOT: \"turnstile\"\nANTIBOT_TURNSTILE_SITEKEY: \"your-site-key\"\nANTIBOT_TURNSTILE_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> D\u00e9fi mCaptcha <pre><code>USE_ANTIBOT: \"mcaptcha\"\nANTIBOT_MCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_MCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_MCAPTCHA_URL: \"https://demo.mcaptcha.org\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre>"},{"location":"fr/features/#auth-basic","title":"Auth basic","text":"<p>Prise en charge STREAM </p> <p>Le plugin Auth Basic fournit une authentification HTTP Basic pour prot\u00e9ger votre site ou certaines ressources. Les utilisateurs doivent saisir un identifiant et un mot de passe avant d\u2019acc\u00e9der au contenu prot\u00e9g\u00e9. Simple \u00e0 mettre en place et largement support\u00e9 par les navigateurs.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Sur une zone prot\u00e9g\u00e9e, le serveur envoie un d\u00e9fi d\u2019authentification.</li> <li>Le navigateur affiche une bo\u00eete de connexion.</li> <li>L\u2019utilisateur saisit ses identifiants, envoy\u00e9s au serveur.</li> <li>Valides\u00a0? Acc\u00e8s accord\u00e9. Invalides\u00a0? R\u00e9ponse 401 Unauthorized.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_1","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_AUTH_BASIC: yes</code>.</li> <li>Port\u00e9e\u00a0: <code>AUTH_BASIC_LOCATION</code> = <code>sitewide</code> (tout le site) ou un chemin (ex. <code>/admin</code>).</li> <li>Identifiants\u00a0: configurez <code>AUTH_BASIC_USER</code> et <code>AUTH_BASIC_PASSWORD</code> (plusieurs paires possibles).</li> <li>Message\u00a0: optionnel, ajustez <code>AUTH_BASIC_TEXT</code>.</li> </ol>"},{"location":"fr/features/#parametres","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_AUTH_BASIC</code> <code>no</code> multisite non Activer l\u2019authentification Basic. <code>AUTH_BASIC_LOCATION</code> <code>sitewide</code> multisite non Port\u00e9e\u00a0: <code>sitewide</code> ou un chemin (ex. <code>/admin</code>). <code>AUTH_BASIC_USER</code> <code>changeme</code> multisite oui Nom d\u2019utilisateur. Plusieurs paires peuvent \u00eatre d\u00e9finies. <code>AUTH_BASIC_PASSWORD</code> <code>changeme</code> multisite oui Mot de passe correspondant \u00e0 chaque utilisateur. <code>AUTH_BASIC_TEXT</code> <code>Restricted area</code> multisite non Message affich\u00e9 dans l\u2019invite d\u2019authentification. <p>S\u00e9curit\u00e9</p> <p>Les identifiants sont encod\u00e9s Base64, pas chiffr\u00e9s. Utilisez toujours HTTPS avec l\u2019authentification Basic.</p> <p>Plusieurs comptes</p> <p>D\u00e9finissez des paires <code>AUTH_BASIC_USER[_n]</code>/<code>AUTH_BASIC_PASSWORD[_n]</code> pour g\u00e9rer plusieurs utilisateurs.</p>"},{"location":"fr/features/#exemples","title":"Exemples","text":"Tout le site <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> Zone sp\u00e9cifique <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"/admin/\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> Utilisateurs multiples <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_TEXT: \"Staff Area\"\n\n# Premier utilisateur\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"admin_password\"\n\n# Deuxi\u00e8me utilisateur\nAUTH_BASIC_USER_2: \"editor\"\nAUTH_BASIC_PASSWORD_2: \"editor_password\"\n\n# Troisi\u00e8me utilisateur\nAUTH_BASIC_USER_3: \"viewer\"\nAUTH_BASIC_PASSWORD_3: \"viewer_password\"\n</code></pre>"},{"location":"fr/features/#backup","title":"Backup","text":"<p>Prise en charge STREAM </p> <p>Le plugin Backup fournit des sauvegardes automatis\u00e9es pour prot\u00e9ger vos donn\u00e9es BunkerWeb. Il cr\u00e9e des sauvegardes r\u00e9guli\u00e8res selon une planification d\u00e9finie, stock\u00e9es dans un emplacement d\u00e9di\u00e9, avec rotation automatique et commandes CLI pour g\u00e9rer manuellement.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>La base est sauvegard\u00e9e automatiquement selon la fr\u00e9quence (quotidienne, hebdomadaire, mensuelle).</li> <li>Les sauvegardes sont stock\u00e9es dans un r\u00e9pertoire d\u00e9di\u00e9.</li> <li>Les anciennes sauvegardes sont supprim\u00e9es selon la politique de r\u00e9tention.</li> <li>Vous pouvez cr\u00e9er, lister et restaurer manuellement des sauvegardes.</li> <li>Avant toute restauration, un snapshot de l\u2019\u00e9tat courant est cr\u00e9\u00e9 automatiquement.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_2","title":"Comment l\u2019utiliser","text":"<ol> <li>Activation\u00a0: <code>USE_BACKUP</code> (activ\u00e9 par d\u00e9faut).</li> <li>Planification\u00a0: <code>BACKUP_SCHEDULE</code>.</li> <li>R\u00e9tention\u00a0: <code>BACKUP_ROTATION</code>.</li> <li>Emplacement\u00a0: <code>BACKUP_DIRECTORY</code>.</li> <li>CLI\u00a0: utilisez <code>bwcli plugin backup</code>.</li> </ol>"},{"location":"fr/features/#parametres_1","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_BACKUP</code> <code>yes</code> global non Activer les sauvegardes automatiques. <code>BACKUP_SCHEDULE</code> <code>daily</code> global non Fr\u00e9quence\u00a0: <code>daily</code>, <code>weekly</code>, <code>monthly</code>. <code>BACKUP_ROTATION</code> <code>7</code> global non R\u00e9tention\u00a0: nombre de fichiers \u00e0 conserver. Au\u2011del\u00e0, suppression automatique. <code>BACKUP_DIRECTORY</code> <code>/var/lib/bunkerweb/backups</code> global non R\u00e9pertoire de stockage des sauvegardes."},{"location":"fr/features/#interface-en-ligne-de-commande","title":"Interface en ligne de commande","text":"<pre><code>bwcli plugin backup list        # Lister\nbwcli plugin backup save        # Sauvegarde manuelle\nbwcli plugin backup save --directory /chemin/perso   # Emplacement personnalis\u00e9\nbwcli plugin backup restore     # Restaurer la plus r\u00e9cente\nbwcli plugin backup restore /chemin/backup-sqlite-YYYY-MM-DD_HH-MM-SS.zip   # Restaurer via fichier\n</code></pre> <p>S\u00e9curit\u00e9</p> <p>Avant toute restauration, un backup de l\u2019\u00e9tat courant est cr\u00e9\u00e9 automatiquement dans un emplacement temporaire.</p> <p>Compatibilit\u00e9 bases</p> <p>Supporte SQLite, MySQL/MariaDB, PostgreSQL. Oracle non pris en charge pour sauvegarde/restauration.</p>"},{"location":"fr/features/#exemples_1","title":"Exemples","text":"<p>=== \"Quotidien, r\u00e9tention 7 jours\" (d\u00e9faut)</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"daily\"\nBACKUP_ROTATION: \"7\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> Hebdomadaire, r\u00e9tention \u00e9tendue <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"weekly\"\nBACKUP_ROTATION: \"12\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> Mensuel, emplacement personnalis\u00e9 <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"monthly\"\nBACKUP_ROTATION: \"24\"\nBACKUP_DIRECTORY: \"/mnt/backup-drive/bunkerweb-backups\"\n</code></pre>"},{"location":"fr/features/#backup-s3-pro","title":"Backup S3  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Automatically backup your data to an S3 bucket</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_BACKUP_S3</code> <code>no</code> global non Enable or disable the S3 backup feature <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global non The frequency of the backup <code>BACKUP_S3_ROTATION</code> <code>7</code> global non The number of backups to keep <code>BACKUP_S3_ENDPOINT</code> global non The S3 endpoint <code>BACKUP_S3_BUCKET</code> global non The S3 bucket <code>BACKUP_S3_DIR</code> global non The S3 directory <code>BACKUP_S3_REGION</code> global non The S3 region <code>BACKUP_S3_ACCESS_KEY_ID</code> global non The S3 access key ID <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global non The S3 access key secret <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global non The compression level of the backup zip file"},{"location":"fr/features/#bad-behavior","title":"Bad behavior","text":"<p>Prise en charge STREAM </p> <p>Le plugin Bad Behavior prot\u00e8ge votre site en d\u00e9tectant et bannissant automatiquement les IP qui g\u00e9n\u00e8rent trop d\u2019erreurs (codes HTTP \u00ab\u00a0mauvais\u00a0\u00bb) sur une p\u00e9riode donn\u00e9e. Utile contre la force brute, les scrapers, scanners et activit\u00e9s malveillantes.</p> <p>Les attaquants d\u00e9clenchent fr\u00e9quemment des codes \u00ab\u00a0suspects\u00a0\u00bb lors de sondes ou d\u2019exploitation \u2014 bien plus qu\u2019un utilisateur normal sur une m\u00eame p\u00e9riode. En d\u00e9tectant ce comportement, BunkerWeb bannit l\u2019IP fautive.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Le plugin surveille les r\u00e9ponses HTTP.</li> <li>\u00c0 chaque code \u00ab\u00a0mauvais\u00a0\u00bb (400, 401, 403, 404, \u2026), le compteur de l\u2019IP augmente.</li> <li>Au\u2011del\u00e0 du seuil et dans la fen\u00eatre configur\u00e9e, l\u2019IP est bannie.</li> <li>Le bannissement peut \u00eatre au niveau service (site) ou global (tous les sites).</li> <li>Les bans expirent apr\u00e8s la dur\u00e9e configur\u00e9e (ou sont permanents avec <code>0</code>).</li> </ol>"},{"location":"fr/features/#comment-lutiliser_3","title":"Comment l\u2019utiliser","text":"<ol> <li>Activation\u00a0: <code>USE_BAD_BEHAVIOR</code> (activ\u00e9 par d\u00e9faut).</li> <li>Codes \u00e0 compter\u00a0: <code>BAD_BEHAVIOR_STATUS_CODES</code>.</li> <li>Seuil\u00a0: <code>BAD_BEHAVIOR_THRESHOLD</code>.</li> <li>Fen\u00eatre et dur\u00e9e de ban\u00a0: <code>BAD_BEHAVIOR_COUNT_TIME</code>, <code>BAD_BEHAVIOR_BAN_TIME</code>.</li> <li>Port\u00e9e\u00a0: <code>BAD_BEHAVIOR_BAN_SCOPE</code> (<code>service</code> ou <code>global</code>).</li> </ol> <p>Mode stream</p> <p>En mode stream, seul <code>444</code> est consid\u00e9r\u00e9 comme \u00ab\u00a0mauvais\u00a0\u00bb.</p>"},{"location":"fr/features/#parametres_2","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_BAD_BEHAVIOR</code> <code>yes</code> multisite non Activer la d\u00e9tection et le bannissement. <code>BAD_BEHAVIOR_STATUS_CODES</code> <code>400 401 403 404 405 429 444</code> multisite non Codes HTTP consid\u00e9r\u00e9s \u00ab\u00a0mauvais\u00a0\u00bb. <code>BAD_BEHAVIOR_THRESHOLD</code> <code>10</code> multisite non Seuil de r\u00e9ponses \u00ab\u00a0mauvaises\u00a0\u00bb avant bannissement. <code>BAD_BEHAVIOR_COUNT_TIME</code> <code>60</code> multisite non Fen\u00eatre de comptage (secondes). <code>BAD_BEHAVIOR_BAN_TIME</code> <code>86400</code> multisite non Dur\u00e9e du ban en secondes (<code>0</code>\u00a0= permanent). <code>BAD_BEHAVIOR_BAN_SCOPE</code> <code>service</code> global non Port\u00e9e du ban\u00a0: site courant (<code>service</code>) ou global (<code>global</code>). <p>Faux positifs</p> <p>Un seuil/fen\u00eatre trop bas peut bannir des utilisateurs l\u00e9gitimes. D\u00e9marrez conservateur et ajustez.</p>"},{"location":"fr/features/#exemples_2","title":"Exemples","text":"D\u00e9faut <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"86400\"\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> Strict <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444 500 502 503\"\nBAD_BEHAVIOR_THRESHOLD: \"5\"\nBAD_BEHAVIOR_COUNT_TIME: \"120\"\nBAD_BEHAVIOR_BAN_TIME: \"604800\"\nBAD_BEHAVIOR_BAN_SCOPE: \"global\"\n</code></pre> Tol\u00e9rant <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"401 403 429\"\nBAD_BEHAVIOR_THRESHOLD: \"20\"\nBAD_BEHAVIOR_COUNT_TIME: \"30\"\nBAD_BEHAVIOR_BAN_TIME: \"3600\"\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> Ban permanent <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"0\"\nBAD_BEHAVIOR_BAN_SCOPE: \"global\"\n</code></pre>"},{"location":"fr/features/#blacklist","title":"Blacklist","text":"<p>Prise en charge STREAM </p> <p>Le plugin Blacklist prot\u00e8ge votre site en bloquant l\u2019acc\u00e8s selon divers attributs client. Cette fonctionnalit\u00e9 d\u00e9fend contre les entit\u00e9s malveillantes connues, les scanners et les visiteurs suspects en refusant l\u2019acc\u00e8s en fonction des adresses IP, des r\u00e9seaux, des entr\u00e9es DNS invers\u00e9es (rDNS), des ASN, des user-agents et de motifs d\u2019URI sp\u00e9cifiques.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Le plugin v\u00e9rifie les requ\u00eates entrantes par rapport \u00e0 plusieurs crit\u00e8res de liste noire (adresses IP, r\u00e9seaux, rDNS, ASN, User-Agent ou motifs d\u2019URI).</li> <li>Les listes noires peuvent \u00eatre sp\u00e9cifi\u00e9es directement dans votre configuration ou charg\u00e9es depuis des URL externes.</li> <li>Si un visiteur correspond \u00e0 une r\u00e8gle de la liste noire (et ne correspond \u00e0 aucune r\u00e8gle d\u2019ignorance), l\u2019acc\u00e8s est refus\u00e9.</li> <li>Les listes noires sont mises \u00e0 jour automatiquement \u00e0 intervalles r\u00e9guliers \u00e0 partir des URL configur\u00e9es.</li> <li>Vous pouvez personnaliser pr\u00e9cis\u00e9ment quels crit\u00e8res sont v\u00e9rifi\u00e9s et ignor\u00e9s en fonction de vos besoins de s\u00e9curit\u00e9 sp\u00e9cifiques.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_4","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour configurer et utiliser la fonctionnalit\u00e9 Blacklist\u00a0:</p> <ol> <li>Activer la fonctionnalit\u00e9\u00a0: La fonctionnalit\u00e9 Blacklist est activ\u00e9e par d\u00e9faut. Si n\u00e9cessaire, vous pouvez la contr\u00f4ler avec le param\u00e8tre <code>USE_BLACKLIST</code>.</li> <li>Configurer les r\u00e8gles de blocage\u00a0: D\u00e9finissez quelles IP, quels r\u00e9seaux, quels motifs rDNS, quels ASN, quels User-Agents ou quelles URI doivent \u00eatre bloqu\u00e9s.</li> <li>Mettre en place des r\u00e8gles d\u2019ignorance\u00a0: Sp\u00e9cifiez les exceptions qui doivent contourner les v\u00e9rifications de la liste noire.</li> <li>Ajouter des sources externes\u00a0: Configurez des URL pour t\u00e9l\u00e9charger et mettre \u00e0 jour automatiquement les donn\u00e9es de la liste noire.</li> <li>Surveiller l\u2019efficacit\u00e9\u00a0: Consultez l'interface web pour voir les statistiques sur les requ\u00eates bloqu\u00e9es.</li> </ol> <p>Mode stream</p> <p>En mode stream, seules les v\u00e9rifications par IP, rDNS et ASN seront effectu\u00e9es.</p>"},{"location":"fr/features/#parametres-de-configuration_1","title":"Param\u00e8tres de configuration","text":"<p>G\u00e9n\u00e9ral</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_BLACKLIST</code> <code>yes</code> multisite non Activer la Blacklist\u00a0: Mettre \u00e0 <code>yes</code> pour activer la fonctionnalit\u00e9 de liste noire. <code>BLACKLIST_COMMUNITY_LISTS</code> <code>ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents</code> multisite non Listes noires communautaires\u00a0: S\u00e9lectionnez des listes noires pr\u00e9-configur\u00e9es et maintenues par la communaut\u00e9 \u00e0 inclure dans le blocage. Listes noires communautaires <p>Ce que \u00e7a fait\u00a0: Vous permet d\u2019ajouter rapidement des listes noires bien entretenues et sourc\u00e9es par la communaut\u00e9 sans avoir \u00e0 configurer manuellement les URL.</p> <pre><code>Le param\u00e8tre `BLACKLIST_COMMUNITY_LISTS` vous permet de choisir parmi des sources de listes noires s\u00e9lectionn\u00e9es. Les options disponibles incluent\u00a0:\n\n| ID                                        | Description                                                                                                                                                                                                             | Source                                                                                                                         |\n| ----------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `ip:laurent-minne-data-shield-aggressive` | Data-Shield IPv4 Blocklist. DST = Europa                                                                                                                                                                                | `https://raw.githubusercontent.com/duggytuxy/Data-Shield_IPv4_Blocklist/refs/heads/main/prod_data-shield_ipv4_blocklist.txt`   |\n| `ip:danmeuk-tor-exit`                     | Adresses IP des n\u0153uds de sortie Tor (dan.me.uk)                                                                                                                                                                         | `https://www.dan.me.uk/torlist/?exit`                                                                                          |\n| `ua:mitchellkrogza-bad-user-agents`       | Nginx Block Bad Bots, Spam Referrer Blocker, Vulnerability Scanners, User-Agents, Malware, Adware, Ransomware, Malicious Sites, avec anti-DDOS, Wordpress Theme Detector Blocking et Fail2Ban Jail for Repeat Offenders | `https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list` |\n\n**Configuration\u00a0:** Sp\u00e9cifiez plusieurs listes s\u00e9par\u00e9es par des espaces. Par exemple\u00a0:\n```yaml\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n```\n\n!!! tip \"Listes communautaires vs configuration manuelle\"\n    Les listes noires communautaires offrent un moyen pratique de d\u00e9marrer avec des sources de listes noires \u00e9prouv\u00e9es. Vous pouvez les utiliser en parall\u00e8le de configurations manuelles d\u2019URL pour une flexibilit\u00e9 maximale.\n</code></pre> Adresse IP <p>Ce que \u00e7a fait\u00a0: Bloque les visiteurs en fonction de leur adresse IP ou de leur r\u00e9seau.</p> <pre><code>| Param\u00e8tre                  | D\u00e9faut                                | Contexte  | Multiple | Description                                                                                                                     |\n| -------------------------- | ------------------------------------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_IP`             |                                       | multisite | non      | **Liste noire d\u2019IP\u00a0:** Liste d\u2019adresses IP ou de r\u00e9seaux (notation CIDR) \u00e0 bloquer, s\u00e9par\u00e9s par des espaces.                    |\n| `BLACKLIST_IGNORE_IP`      |                                       | multisite | non      | **Liste d\u2019ignorance d\u2019IP\u00a0:** Liste d\u2019adresses IP ou de r\u00e9seaux qui doivent contourner les v\u00e9rifications de la liste noire d\u2019IP. |\n| `BLACKLIST_IP_URLS`        | `https://www.dan.me.uk/torlist/?exit` | multisite | non      | **URL de listes noires d\u2019IP\u00a0:** Liste d\u2019URL contenant des adresses IP ou des r\u00e9seaux \u00e0 bloquer, s\u00e9par\u00e9s par des espaces.        |\n| `BLACKLIST_IGNORE_IP_URLS` |                                       | multisite | non      | **URL de listes d\u2019ignorance d\u2019IP\u00a0:** Liste d\u2019URL contenant des adresses IP ou des r\u00e9seaux \u00e0 ignorer.                            |\n\nLe param\u00e8tre par d\u00e9faut `BLACKLIST_IP_URLS` inclut une URL qui fournit une **liste des n\u0153uds de sortie Tor connus**. C\u2019est une source courante de trafic malveillant et un bon point de d\u00e9part pour de nombreux sites.\n</code></pre> Reverse DNS <p>Ce que \u00e7a fait\u00a0: Bloque les visiteurs en fonction de leur nom de domaine invers\u00e9. C\u2019est utile pour bloquer les scanners et les crawlers connus en se basant sur les domaines de leur organisation.</p> <pre><code>| Param\u00e8tre                    | D\u00e9faut                  | Contexte  | Multiple | Description                                                                                                                    |\n| ---------------------------- | ----------------------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `BLACKLIST_RDNS`             | `.shodan.io .censys.io` | multisite | non      | **Liste noire rDNS\u00a0:** Liste de suffixes de DNS invers\u00e9 \u00e0 bloquer, s\u00e9par\u00e9s par des espaces.                                    |\n| `BLACKLIST_RDNS_GLOBAL`      | `yes`                   | multisite | non      | **rDNS global uniquement\u00a0:** N\u2019effectue des v\u00e9rifications rDNS que sur les adresses IP globales si mis \u00e0 `yes`.                |\n| `BLACKLIST_IGNORE_RDNS`      |                         | multisite | non      | **Liste d\u2019ignorance rDNS\u00a0:** Liste de suffixes de DNS invers\u00e9 qui doivent contourner les v\u00e9rifications de la liste noire rDNS. |\n| `BLACKLIST_RDNS_URLS`        |                         | multisite | non      | **URL de listes noires rDNS\u00a0:** Liste d\u2019URL contenant des suffixes de DNS invers\u00e9 \u00e0 bloquer.                                   |\n| `BLACKLIST_IGNORE_RDNS_URLS` |                         | multisite | non      | **URL de listes d\u2019ignorance rDNS\u00a0:** Liste d\u2019URL contenant des suffixes de DNS invers\u00e9 \u00e0 ignorer.                              |\n\nLe param\u00e8tre par d\u00e9faut `BLACKLIST_RDNS` inclut des domaines de scanners courants comme **Shodan** et **Censys**. Ils sont souvent utilis\u00e9s par des chercheurs en s\u00e9curit\u00e9 et des scanners pour identifier des sites vuln\u00e9rables.\n</code></pre> ASN <p>Ce que \u00e7a fait\u00a0: Bloque les visiteurs provenant de fournisseurs de r\u00e9seaux sp\u00e9cifiques. Les ASN sont comme des codes postaux pour Internet\u2014ils identifient \u00e0 quel fournisseur ou organisation une IP appartient.</p> <pre><code>| Param\u00e8tre                   | D\u00e9faut | Contexte  | Multiple | Description                                                                                                 |\n| --------------------------- | ------ | --------- | -------- | ----------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_ASN`             |        | multisite | non      | **Liste noire d\u2019ASN\u00a0:** Liste de num\u00e9ros de syst\u00e8mes autonomes \u00e0 bloquer, s\u00e9par\u00e9s par des espaces.          |\n| `BLACKLIST_IGNORE_ASN`      |        | multisite | non      | **Liste d\u2019ignorance d\u2019ASN\u00a0:** Liste d\u2019ASN qui doivent contourner les v\u00e9rifications de la liste noire d\u2019ASN. |\n| `BLACKLIST_ASN_URLS`        |        | multisite | non      | **URL de listes noires d\u2019ASN\u00a0:** Liste d\u2019URL contenant des ASN \u00e0 bloquer.                                   |\n| `BLACKLIST_IGNORE_ASN_URLS` |        | multisite | non      | **URL de listes d\u2019ignorance d\u2019ASN\u00a0:** Liste d\u2019URL contenant des ASN \u00e0 ignorer.                              |\n</code></pre> User-Agent <p>Ce que \u00e7a fait\u00a0: Bloque les visiteurs en fonction du navigateur ou de l\u2019outil qu\u2019ils pr\u00e9tendent utiliser. C\u2019est efficace contre les bots qui s\u2019identifient honn\u00eatement (comme \"ScannerBot\" ou \"WebHarvestTool\").</p> <pre><code>| Param\u00e8tre                          | D\u00e9faut                                                                                                                         | Contexte  | Multiple | Description                                                                                                                                   |\n| ---------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ | --------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_USER_AGENT`             |                                                                                                                                | multisite | non      | **Liste noire de User-Agent\u00a0:** Liste de motifs de User-Agent (regex PCRE) \u00e0 bloquer, s\u00e9par\u00e9s par des espaces.                                |\n| `BLACKLIST_IGNORE_USER_AGENT`      |                                                                                                                                | multisite | non      | **Liste d\u2019ignorance de User-Agent\u00a0:** Liste de motifs de User-Agent qui doivent contourner les v\u00e9rifications de la liste noire de User-Agent. |\n| `BLACKLIST_USER_AGENT_URLS`        | `https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list` | multisite | non      | **URL de listes noires de User-Agent\u00a0:** Liste d\u2019URL contenant des motifs de User-Agent \u00e0 bloquer.                                            |\n| `BLACKLIST_IGNORE_USER_AGENT_URLS` |                                                                                                                                | multisite | non      | **URL de listes d\u2019ignorance de User-Agent\u00a0:** Liste d\u2019URL contenant des motifs de User-Agent \u00e0 ignorer.                                       |\n\nLe param\u00e8tre par d\u00e9faut `BLACKLIST_USER_AGENT_URLS` inclut une URL qui fournit une **liste de user agents malveillants connus**. Ils sont souvent utilis\u00e9s par des bots et des scanners malveillants pour identifier des sites vuln\u00e9rables.\n</code></pre> URI <p>Ce que \u00e7a fait\u00a0: Bloque les requ\u00eates vers des URL sp\u00e9cifiques de votre site. C\u2019est utile pour bloquer les tentatives d\u2019acc\u00e8s aux pages d\u2019administration, aux formulaires de connexion ou \u00e0 d\u2019autres zones sensibles qui pourraient \u00eatre cibl\u00e9es.</p> <pre><code>| Param\u00e8tre                   | D\u00e9faut | Contexte  | Multiple | Description                                                                                                           |\n| --------------------------- | ------ | --------- | -------- | --------------------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_URI`             |        | multisite | non      | **Liste noire d\u2019URI\u00a0:** Liste de motifs d\u2019URI (regex PCRE) \u00e0 bloquer, s\u00e9par\u00e9s par des espaces.                        |\n| `BLACKLIST_IGNORE_URI`      |        | multisite | non      | **Liste d\u2019ignorance d\u2019URI\u00a0:** Liste de motifs d\u2019URI qui doivent contourner les v\u00e9rifications de la liste noire d\u2019URI. |\n| `BLACKLIST_URI_URLS`        |        | multisite | non      | **URL de listes noires d\u2019URI\u00a0:** Liste d\u2019URL contenant des motifs d\u2019URI \u00e0 bloquer.                                    |\n| `BLACKLIST_IGNORE_URI_URLS` |        | multisite | non      | **URL de listes d\u2019ignorance d\u2019URI\u00a0:** Liste d\u2019URL contenant des motifs d\u2019URI \u00e0 ignorer.                               |\n</code></pre> <p>Support des formats d\u2019URL</p> <p>Tous les param\u00e8tres <code>*_URLS</code> supportent les URL HTTP/HTTPS ainsi que les chemins de fichiers locaux en utilisant le pr\u00e9fixe <code>file:///</code>. L\u2019authentification basique est support\u00e9e en utilisant le format <code>http://user:pass@url</code>.</p> <p>Mises \u00e0 jour r\u00e9guli\u00e8res</p> <p>Les listes noires provenant d\u2019URL sont automatiquement t\u00e9l\u00e9charg\u00e9es et mises \u00e0 jour toutes les heures pour garantir que votre protection reste \u00e0 jour contre les derni\u00e8res menaces.</p>"},{"location":"fr/features/#exemples-de-configuration_2","title":"Exemples de configuration","text":"Protection de base par IP et User-AgentProtection avanc\u00e9e avec des r\u00e8gles personnalis\u00e9esUtilisation de fichiers locaux <p>Une configuration simple qui bloque les n\u0153uds de sortie Tor connus et les user agents malveillants courants en utilisant les listes noires communautaires\u00a0:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n</code></pre> <p>Alternativement, vous pouvez utiliser une configuration manuelle par URL\u00a0:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Une configuration plus compl\u00e8te avec des entr\u00e9es de liste noire personnalis\u00e9es et des exceptions\u00a0:</p> <pre><code>USE_BLACKLIST: \"yes\"\n\n# Entr\u00e9es de liste noire personnalis\u00e9es\nBLACKLIST_IP: \"192.168.1.100 203.0.113.0/24\"\nBLACKLIST_RDNS: \".shodan.io .censys.io .scanner.com\"\nBLACKLIST_ASN: \"16509 14618\"  # ASN d'AWS et d'Amazon\nBLACKLIST_USER_AGENT: \"(?:\\b)SemrushBot(?:\\b) (?:\\b)AhrefsBot(?:\\b)\"\nBLACKLIST_URI: \"^/wp-login\\.php$ ^/administrator/\"\n\n# R\u00e8gles d'ignorance personnalis\u00e9es\nBLACKLIST_IGNORE_IP: \"192.168.1.200 203.0.113.42\"\n\n# Sources de listes noires externes\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit https://www.spamhaus.org/drop/drop.txt\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Configuration utilisant des fichiers locaux pour les listes noires\u00a0:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"file:///chemin/vers/ip-blacklist.txt\"\nBLACKLIST_RDNS_URLS: \"file:///chemin/vers/rdns-blacklist.txt\"\nBLACKLIST_ASN_URLS: \"file:///chemin/vers/asn-blacklist.txt\"\nBLACKLIST_USER_AGENT_URLS: \"file:///chemin/vers/user-agent-blacklist.txt\"\nBLACKLIST_URI_URLS: \"file:///chemin/vers/uri-blacklist.txt\"\n</code></pre>"},{"location":"fr/features/#brotli","title":"Brotli","text":"<p>Prise en charge STREAM </p> <p>Le plugin Brotli active la compression des r\u00e9ponses HTTP avec l\u2019algorithme Brotli. Il r\u00e9duit l\u2019usage de bande passante et acc\u00e9l\u00e8re le chargement en compressant le contenu avant l\u2019envoi au navigateur.</p> <p>Par rapport \u00e0 gzip, Brotli atteint g\u00e9n\u00e9ralement de meilleurs taux de compression, pour des fichiers plus petits et une livraison plus rapide.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 la requ\u00eate d\u2019un client, BunkerWeb v\u00e9rifie si le navigateur supporte Brotli.</li> <li>Si oui, la r\u00e9ponse est compress\u00e9e au niveau configur\u00e9 (<code>BROTLI_COMP_LEVEL</code>).</li> <li>Les en\u2011t\u00eates appropri\u00e9s indiquent la compression Brotli.</li> <li>Le navigateur d\u00e9compresse avant affichage.</li> <li>Bande passante et temps de chargement diminuent.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_5","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_BROTLI: yes</code> (d\u00e9sactiv\u00e9 par d\u00e9faut).</li> <li>Types MIME\u00a0: d\u00e9finir les contenus \u00e0 compresser via <code>BROTLI_TYPES</code>.</li> <li>Taille minimale\u00a0: <code>BROTLI_MIN_LENGTH</code> pour \u00e9viter de compresser les petites r\u00e9ponses.</li> <li>Niveau de compression\u00a0: <code>BROTLI_COMP_LEVEL</code> pour l\u2019\u00e9quilibre vitesse/ratio.</li> </ol>"},{"location":"fr/features/#parametres_3","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_BROTLI</code> <code>no</code> multisite non Activer la compression Brotli. <code>BROTLI_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> multisite non Types MIME compress\u00e9s. <code>BROTLI_MIN_LENGTH</code> <code>1000</code> multisite non Taille minimale (octets) pour appliquer la compression. <code>BROTLI_COMP_LEVEL</code> <code>6</code> multisite non Niveau 0\u201311\u00a0: plus haut = meilleure compression mais plus de CPU. <p>Niveau de compression</p> <p><code>6</code> offre un bon compromis. Pour du statique et CPU disponible\u00a0: 9\u201311. Pour du dynamique ou CPU contraint\u00a0: 4\u20135.</p>"},{"location":"fr/features/#exemples_3","title":"Exemples","text":"Basique <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json application/xml application/xhtml+xml text/css text/html text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"6\"\n</code></pre> Compression maximale <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"500\"\nBROTLI_COMP_LEVEL: \"11\"\n</code></pre> Performance \u00e9quilibr\u00e9e <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"4\"\n</code></pre>"},{"location":"fr/features/#bunkernet","title":"BunkerNet","text":"<p>Prise en charge STREAM </p> <p>Le plugin BunkerNet permet le partage collectif de renseignements sur les menaces entre instances BunkerWeb, cr\u00e9ant un r\u00e9seau de protection contre les acteurs malveillants. En y participant, votre instance b\u00e9n\u00e9ficie d\u2019une base mondiale de menaces et y contribue de fa\u00e7on anonyme.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Votre instance s\u2019enregistre automatiquement aupr\u00e8s de l\u2019API BunkerNet et re\u00e7oit un identifiant unique.</li> <li>\u00c0 chaque IP/comportement malveillant bloqu\u00e9, l\u2019information est signal\u00e9e anonymement \u00e0 BunkerNet.</li> <li>BunkerNet agr\u00e8ge l\u2019intelligence de toutes les instances et diffuse une base consolid\u00e9e.</li> <li>Votre instance t\u00e9l\u00e9charge r\u00e9guli\u00e8rement la base \u00e0 jour.</li> <li>Cette intelligence collective permet de bloquer proactivement des IP d\u00e9j\u00e0 malveillantes ailleurs.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_6","title":"Comment l\u2019utiliser","text":"<ol> <li>Activation\u00a0: <code>USE_BUNKERNET</code> (activ\u00e9 par d\u00e9faut).</li> <li>Enregistrement initial\u00a0: effectu\u00e9 automatiquement au premier d\u00e9marrage.</li> <li>Mises \u00e0 jour\u00a0: t\u00e9l\u00e9chargement automatique et r\u00e9gulier de la base.</li> <li>Signalement\u00a0: contribution automatique lors de blocages d\u2019IP.</li> <li>Suivi\u00a0: statistiques visibles dans la web UI.</li> </ol>"},{"location":"fr/features/#parametres_4","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_BUNKERNET</code> <code>yes</code> multisite non Activer la participation BunkerNet. <code>BUNKERNET_SERVER</code> <code>https://api.bunkerweb.io</code> global non URL de l\u2019API BunkerNet. <p>Confidentialit\u00e9</p> <p>Seules les donn\u00e9es n\u00e9cessaires \u00e0 l\u2019identification de la menace sont partag\u00e9es (IP, raison du blocage, contexte minimal).</p>"},{"location":"fr/features/#integration-crowdsec-console","title":"Int\u00e9gration CrowdSec Console","text":"<p>Gr\u00e2ce au partenariat avec CrowdSec, vous pouvez inscrire vos instances BunkerWeb dans votre CrowdSec Console et visualiser les attaques bloqu\u00e9es.</p> <p>\u00c9tapes principales\u00a0:</p> <ol> <li>Cr\u00e9ez un compte CrowdSec Console et r\u00e9cup\u00e9rez la cl\u00e9 d\u2019enr\u00f4lement.</li> <li>R\u00e9cup\u00e9rez votre BunkerNet ID (BunkerNet activ\u00e9).</li> <li>Commandez le service gratuit \u00ab\u00a0BunkerNet / CrowdSec\u00a0\u00bb sur le Panel et fournissez l\u2019ID et la cl\u00e9.</li> <li>Acceptez le nouvel engine dans la Console.</li> </ol>"},{"location":"fr/features/#exemples_4","title":"Exemples","text":"Configuration par d\u00e9faut (recommand\u00e9e) <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://api.bunkerweb.io\"\n</code></pre> D\u00e9sactivation <pre><code>USE_BUNKERNET: \"no\"\n</code></pre> Serveur personnalis\u00e9 <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://bunkernet.example.com\"\n</code></pre>"},{"location":"fr/features/#cors","title":"CORS","text":"<p>Prise en charge STREAM </p> <p>Le plugin CORS active le partage de ressources entre origines (Cross\u2011Origin Resource Sharing) de mani\u00e8re contr\u00f4l\u00e9e. Il permet de partager vos ressources avec des domaines tiers de confiance en d\u00e9finissant pr\u00e9cis\u00e9ment origines, m\u00e9thodes et en\u2011t\u00eates autoris\u00e9s.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Pour une requ\u00eate cross\u2011origin, le navigateur envoie d\u2019abord une requ\u00eate \u00ab\u00a0preflight\u00a0\u00bb <code>OPTIONS</code>.</li> <li>BunkerWeb v\u00e9rifie si l\u2019origine est autoris\u00e9e.</li> <li>Si oui, il renvoie les en\u2011t\u00eates CORS appropri\u00e9s d\u00e9crivant ce qui est permis.</li> <li>Sinon, la requ\u00eate est refus\u00e9e ou servie sans en\u2011t\u00eates CORS selon la configuration.</li> <li>Des politiques suppl\u00e9mentaires (COEP/COOP/CORP) peuvent renforcer la s\u00e9curit\u00e9.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_7","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_CORS: yes</code> (d\u00e9sactiv\u00e9 par d\u00e9faut).</li> <li>Origines\u00a0: <code>CORS_ALLOW_ORIGIN</code> (regex PCRE, <code>*</code> tous, <code>self</code> m\u00eame origine).</li> <li>M\u00e9thodes\u00a0: <code>CORS_ALLOW_METHODS</code>.</li> <li>En\u2011t\u00eates\u00a0: <code>CORS_ALLOW_HEADERS</code>.</li> <li>Identifiants\u00a0: <code>CORS_ALLOW_CREDENTIALS</code> pour autoriser cookies/auth.</li> </ol>"},{"location":"fr/features/#parametres_5","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_CORS</code> <code>no</code> multisite non Activer CORS. <code>CORS_ALLOW_ORIGIN</code> <code>self</code> multisite non Origines autoris\u00e9es (regex PCRE). <code>*</code> = toute origine, <code>self</code> = m\u00eame origine. <code>CORS_ALLOW_METHODS</code> <code>GET, POST, OPTIONS</code> multisite non M\u00e9thodes autoris\u00e9es. <code>CORS_ALLOW_HEADERS</code> <code>DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range</code> multisite non En\u2011t\u00eates autoris\u00e9s c\u00f4t\u00e9 requ\u00eate. <code>CORS_ALLOW_CREDENTIALS</code> <code>no</code> multisite non Autoriser les identifiants (cookies, auth HTTP). <code>CORS_EXPOSE_HEADERS</code> <code>Content-Length,Content-Range</code> multisite non En\u2011t\u00eates expos\u00e9s c\u00f4t\u00e9 r\u00e9ponse. <code>CROSS_ORIGIN_OPENER_POLICY</code> <code>same-origin</code> multisite non Politique COOP. <code>CROSS_ORIGIN_EMBEDDER_POLICY</code> <code>require-corp</code> multisite non Politique COEP. <code>CROSS_ORIGIN_RESOURCE_POLICY</code> <code>same-site</code> multisite non Politique CORP. <code>CORS_MAX_AGE</code> <code>86400</code> multisite non Dur\u00e9e de cache du preflight (secondes). <code>CORS_DENY_REQUEST</code> <code>yes</code> multisite non Refuser les origines non autoris\u00e9es avec un code d\u2019erreur. <p>Optimiser le preflight</p> <p>Augmenter <code>CORS_MAX_AGE</code> r\u00e9duit la fr\u00e9quence des preflights (par d\u00e9faut 24h).</p> <p>S\u00e9curit\u00e9</p> <p>Soyez prudent avec <code>CORS_ALLOW_ORIGIN: *</code> et/ou <code>CORS_ALLOW_CREDENTIALS: yes</code>. Pr\u00e9f\u00e9rez lister explicitement les origines de confiance.</p>"},{"location":"fr/features/#exemples_5","title":"Exemples","text":"Configuration basique <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"self\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> API publique <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"*\"\nCORS_ALLOW_METHODS: \"GET, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, X-API-Key\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"3600\"\nCORS_DENY_REQUEST: \"no\"\n</code></pre> Plusieurs domaines de confiance <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(app|api|dashboard)\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, DELETE, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Requested-With\"\nCORS_ALLOW_CREDENTIALS: \"yes\"\nCORS_EXPOSE_HEADERS: \"Content-Length, Content-Range, X-RateLimit-Remaining\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> Wildcard sous\u2011domaine <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://.*\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> Multiples motifs de domaine <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(.*\\\\.example\\\\.com|.*\\\\.trusted-partner\\\\.org|api\\\\.third-party\\\\.net)$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Custom-Header\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre>"},{"location":"fr/features/#client-cache","title":"Client cache","text":"<p>Prise en charge STREAM </p> <p>Le plugin Client Cache optimise les performances en contr\u00f4lant la mise en cache des contenus statiques par les navigateurs. Il r\u00e9duit la bande passante, la charge serveur et acc\u00e9l\u00e8re les temps de chargement en instruisant les navigateurs \u00e0 conserver localement images, CSS, JS, etc., plut\u00f4t que de les ret\u00e9l\u00e9charger \u00e0 chaque visite.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Une fois activ\u00e9, BunkerWeb ajoute des en\u2011t\u00eates Cache-Control aux r\u00e9ponses des fichiers statiques.</li> <li>Ces en\u2011t\u00eates indiquent aux navigateurs pendant combien de temps conserver localement le contenu.</li> <li>Pour les extensions sp\u00e9cifi\u00e9es (images, CSS, JS\u2026), BunkerWeb applique la politique de cache configur\u00e9e.</li> <li>Les ETags (optionnels) fournissent un m\u00e9canisme de validation suppl\u00e9mentaire.</li> <li>Lors des visites suivantes, le navigateur r\u00e9utilise les fichiers en cache, acc\u00e9l\u00e9rant le chargement.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_8","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: mettez <code>USE_CLIENT_CACHE</code> \u00e0 <code>yes</code> (d\u00e9sactiv\u00e9 par d\u00e9faut).</li> <li>Extensions\u00a0: d\u00e9finissez <code>CLIENT_CACHE_EXTENSIONS</code> pour les types de fichiers \u00e0 mettre en cache.</li> <li>Directives Cache-Control\u00a0: personnalisez <code>CLIENT_CACHE_CONTROL</code>.</li> <li>ETag\u00a0: activez ou non via <code>CLIENT_CACHE_ETAG</code>.</li> </ol>"},{"location":"fr/features/#parametres_6","title":"Param\u00e8tres","text":"<p>| Param\u00e8tre                 | D\u00e9faut                     | Contexte  | Multiple | Description                                                  | | ------------------------- | -------------------------- | --------- | -------- | ------------------------------------------------------------ | --- | | <code>USE_CLIENT_CACHE</code>        | <code>no</code>                       | multisite | non      | Activer la mise en cache c\u00f4t\u00e9 client des fichiers statiques. | | <code>CLIENT_CACHE_EXTENSIONS</code> | <code>jpg                       | jpeg      | png      | bmp                                                          | ico | svg | tif | css | js | otf | ttf | eot | woff | woff2</code> | global | non | Extensions mises en cache (s\u00e9par\u00e9es par <code>|</code>). | | <code>CLIENT_CACHE_CONTROL</code>    | <code>public, max-age=15552000</code> | multisite | non      | Valeur de l\u2019en\u2011t\u00eate HTTP Cache-Control.                      | | <code>CLIENT_CACHE_ETAG</code>       | <code>yes</code>                      | multisite | non      | Envoi d\u2019un ETag pour les ressources statiques.               |</p> <p>Optimiser le cache</p> <p>Contenu fr\u00e9quemment mis \u00e0 jour\u00a0: dur\u00e9e plus courte. Contenu versionn\u00e9 ou peu changeant\u00a0: dur\u00e9e plus longue. La valeur par d\u00e9faut (180\u00a0jours) convient souvent.</p>"},{"location":"fr/features/#exemples_6","title":"Exemples","text":"Basique <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|gif|css|js|svg|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=86400\"\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> Agressif <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2|pdf|xml|txt\"\nCLIENT_CACHE_CONTROL: \"public, max-age=31536000, immutable\"\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> Mixte <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=604800\"\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre>"},{"location":"fr/features/#country","title":"Country","text":"<p>Prise en charge STREAM </p> <p>Le plugin Country active le g\u00e9o\u2011blocage et permet de restreindre l\u2019acc\u00e8s selon la localisation g\u00e9ographique des visiteurs. Utile pour la conformit\u00e9 r\u00e9gionale, limiter la fraude associ\u00e9e \u00e0 des zones \u00e0 risque et appliquer des restrictions de contenu selon les fronti\u00e8res.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 chaque visite, BunkerWeb d\u00e9termine le pays d\u2019origine via l\u2019adresse IP.</li> <li>Votre configuration d\u00e9finit une liste blanche (autoris\u00e9s) ou noire (bloqu\u00e9s).</li> <li>En liste blanche\u00a0: seuls les pays list\u00e9s sont autoris\u00e9s.</li> <li>En liste noire\u00a0: les pays list\u00e9s sont refus\u00e9s.</li> <li>Le r\u00e9sultat est mis en cache pour les visites r\u00e9p\u00e9t\u00e9es.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_9","title":"Comment l\u2019utiliser","text":"<ol> <li>Strat\u00e9gie\u00a0: choisir liste blanche (peu de pays autoris\u00e9s) ou liste noire (bloquer certains pays).</li> <li>Codes pays\u00a0: ajoutez des codes ISO\u00a03166\u20111 alpha\u20112 (US, GB, FR) \u00e0 <code>WHITELIST_COUNTRY</code> ou <code>BLACKLIST_COUNTRY</code>.</li> <li>Application\u00a0: une fois configur\u00e9, la restriction s\u2019applique \u00e0 tous les visiteurs.</li> <li>Suivi\u00a0: consultez la web UI pour les statistiques par pays.</li> </ol>"},{"location":"fr/features/#parametres_7","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>WHITELIST_COUNTRY</code> multisite non Liste blanche\u00a0: codes pays ISO\u00a03166\u20111 alpha\u20112 s\u00e9par\u00e9s par des espaces. Seuls ces pays sont autoris\u00e9s. <code>BLACKLIST_COUNTRY</code> multisite non Liste noire\u00a0: codes pays ISO\u00a03166\u20111 alpha\u20112 s\u00e9par\u00e9s par des espaces. Ces pays sont bloqu\u00e9s. <p>Liste blanche vs noire</p> <p>Liste blanche\u00a0: acc\u00e8s restreint \u00e0 quelques pays. Liste noire\u00a0: bloquer des r\u00e9gions probl\u00e9matiques et autoriser le reste.</p> <p>Priorit\u00e9</p> <p>Si une liste blanche et une liste noire sont d\u00e9finies, la liste blanche a priorit\u00e9\u00a0: si le pays n\u2019y figure pas, l\u2019acc\u00e8s est refus\u00e9.</p> <p>D\u00e9tection du pays</p> <p>BunkerWeb utilise la base mmdb db\u2011ip lite.</p>"},{"location":"fr/features/#exemples_7","title":"Exemples","text":"Liste blanche uniquement <pre><code>WHITELIST_COUNTRY: \"US CA GB\"\n</code></pre> Liste noire uniquement <pre><code>BLACKLIST_COUNTRY: \"RU CN KP\"\n</code></pre> UE uniquement <pre><code>WHITELIST_COUNTRY: \"AT BE BG HR CY CZ DK EE FI FR DE GR HU IE IT LV LT LU MT NL PL PT RO SK SI ES SE\"\n</code></pre> Blocage pays \u00e0 risque <pre><code>BLACKLIST_COUNTRY: \"RU CN KP IR SY\"\n</code></pre>"},{"location":"fr/features/#crowdsec","title":"CrowdSec","text":"<p>Prise en charge STREAM </p> <p></p> <p>Le plugin CrowdSec int\u00e8gre BunkerWeb avec le moteur de s\u00e9curit\u00e9 CrowdSec, fournissant une couche de protection suppl\u00e9mentaire contre diverses cybermenaces. Ce plugin agit comme un bouncer CrowdSec, refusant les requ\u00eates en fonction des d\u00e9cisions de l'API CrowdSec.</p> <p>CrowdSec est un moteur de s\u00e9curit\u00e9 moderne et open-source qui d\u00e9tecte et bloque les adresses IP malveillantes en se basant sur l'analyse comportementale et l'intelligence collective de sa communaut\u00e9. Vous pouvez \u00e9galement configurer des sc\u00e9narios pour bannir automatiquement les adresses IP en fonction de comportements suspects, b\u00e9n\u00e9ficiant ainsi d'une liste noire participative.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Le moteur CrowdSec analyse les journaux et d\u00e9tecte les activit\u00e9s suspectes sur votre infrastructure.</li> <li>Lorsqu'une activit\u00e9 malveillante est d\u00e9tect\u00e9e, CrowdSec cr\u00e9e une d\u00e9cision pour bloquer l'adresse IP incrimin\u00e9e.</li> <li>BunkerWeb, agissant comme un bouncer, interroge l'API locale de CrowdSec pour obtenir des d\u00e9cisions concernant les requ\u00eates entrantes.</li> <li>Si l'adresse IP d'un client fait l'objet d'une d\u00e9cision de blocage active, BunkerWeb refuse l'acc\u00e8s aux services prot\u00e9g\u00e9s.</li> <li>En option, le composant de s\u00e9curit\u00e9 applicative (Application Security Component) peut effectuer une inspection approfondie des requ\u00eates pour une s\u00e9curit\u00e9 renforc\u00e9e.</li> </ol> <p>B\u00e9n\u00e9fices cl\u00e9s</p> <ol> <li>S\u00e9curit\u00e9 communautaire : B\u00e9n\u00e9ficiez des renseignements sur les menaces partag\u00e9s par la communaut\u00e9 des utilisateurs de CrowdSec.</li> <li>Analyse comportementale : D\u00e9tectez les attaques sophistiqu\u00e9es bas\u00e9es sur des mod\u00e8les de comportement, et non uniquement sur des signatures.</li> <li>Int\u00e9gration l\u00e9g\u00e8re : Impact minimal sur les performances de votre instance BunkerWeb.</li> <li>Protection multi-niveaux : Combinez la d\u00e9fense p\u00e9rim\u00e9trique (blocage d'IP) avec la s\u00e9curit\u00e9 applicative pour une protection en profondeur.</li> </ol>"},{"location":"fr/features/#mise-en-place","title":"Mise en place","text":"Docker <p>Fichier d'acquisition</p> <pre><code>Vous devrez ex\u00e9cuter une instance de CrowdSec et la configurer pour analyser les journaux de BunkerWeb. Comme BunkerWeb est bas\u00e9 sur NGINX, vous pouvez utiliser la valeur `nginx` pour le param\u00e8tre `type` dans votre fichier d'acquisition (en supposant que les journaux de BunkerWeb sont stock\u00e9s tels quels sans donn\u00e9es suppl\u00e9mentaires) :\n\n```yaml\nfilenames:\n  - /var/log/bunkerweb.log\nlabels:\n  type: nginx\n```\n\n**Composant de s\u00e9curit\u00e9 applicative (*optionnel*)**\n\nCrowdSec fournit \u00e9galement un [Composant de s\u00e9curit\u00e9 applicative](https://docs.crowdsec.net/docs/appsec/intro?utm_source=external-docs&amp;utm_medium=cta&amp;utm_campaign=bunker-web-docs) qui peut \u00eatre utilis\u00e9 pour prot\u00e9ger votre application contre les attaques. Si vous souhaitez l'utiliser, vous devez cr\u00e9er un autre fichier d'acquisition pour le composant AppSec :\n\n```yaml\nappsec_config: crowdsecurity/appsec-default\nlabels:\n  type: appsec\nlisten_addr: 0.0.0.0:7422\nsource: appsec\n```\n\n**Syslog**\n\nPour les int\u00e9grations bas\u00e9es sur des conteneurs, nous recommandons de rediriger les journaux du conteneur BunkerWeb vers un service syslog afin que CrowdSec puisse y acc\u00e9der facilement. Voici un exemple de configuration pour syslog-ng qui stockera les journaux bruts provenant de BunkerWeb dans un fichier local `/var/log/bunkerweb.log` :\n\n```syslog\n@version: 4.8\n\nsource s_net {\n    udp(\n        ip(\"0.0.0.0\")\n    );\n};\n\ntemplate t_imp {\n    template(\"$MSG\\n\");\n    template_escape(no);\n};\n\ndestination d_file {\n    file(\"/var/log/bunkerweb.log\" template(t_imp));\n};\n\nlog {\n    source(s_net);\n    destination(d_file);\n};\n```\n\n**Docker Compose**\n\nVoici le mod\u00e8le docker-compose que vous pouvez utiliser (n'oubliez pas de mettre \u00e0 jour la cl\u00e9 du bouncer) :\n\n```yaml\nx-bw-env: &amp;bw-env\n  # Nous utilisons une ancre pour \u00e9viter de r\u00e9p\u00e9ter les m\u00eames param\u00e8tres pour les deux services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Assurez-vous de d\u00e9finir la bonne plage IP pour que le planificateur puisse envoyer la configuration \u00e0 l'instance\n\nservices:\n  bunkerweb:\n    # C'est le nom qui sera utilis\u00e9 pour identifier l'instance dans le planificateur\n    image: bunkerity/bunkerweb:1.6.5-rc3\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # Pour le support QUIC / HTTP3\n    environment:\n      &lt;&lt;: *bw-env # Nous utilisons l'ancre pour \u00e9viter de r\u00e9p\u00e9ter les m\u00eames param\u00e8tres pour tous les services\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog # Envoyer les journaux \u00e0 syslog\n      options:\n        syslog-address: \"udp://10.20.30.254:514\" # L'adresse IP du service syslog\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:1.6.5-rc3\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Assurez-vous de d\u00e9finir le nom correct de l'instance\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # N'oubliez pas de d\u00e9finir un mot de passe plus fort pour la base de donn\u00e9es\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      USE_CROWDSEC: \"yes\"\n      CROWDSEC_API: \"http://crowdsec:8080\" # C'est l'adresse de l'API du conteneur CrowdSec dans le m\u00eame r\u00e9seau\n      CROWDSEC_APPSEC_URL: \"http://crowdsec:7422\" # Commentez si vous ne voulez pas utiliser le composant AppSec\n      CROWDSEC_API_KEY: \"s3cr3tb0unc3rk3y\" # N'oubliez pas de d\u00e9finir une cl\u00e9 plus forte pour le bouncer\n    volumes:\n      - bw-storage:/data # Ceci est utilis\u00e9 pour persister le cache et d'autres donn\u00e9es comme les sauvegardes\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Nous d\u00e9finissons la taille maximale des paquets autoris\u00e9s pour \u00e9viter les probl\u00e8mes avec les grosses requ\u00eates\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # N'oubliez pas de d\u00e9finir un mot de passe plus fort pour la base de donn\u00e9es\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  crowdsec:\n    image: crowdsecurity/crowdsec:v1.7.0 # Utilisez la derni\u00e8re version mais \u00e9pinglez toujours la version pour une meilleure stabilit\u00e9/s\u00e9curit\u00e9\n    volumes:\n      - cs-data:/var/lib/crowdsec/data # Pour persister les donn\u00e9es de CrowdSec\n      - bw-logs:/var/log:ro # Les journaux de BunkerWeb \u00e0 analyser par CrowdSec\n      - ./acquis.yaml:/etc/crowdsec/acquis.yaml # Le fichier d'acquisition pour les journaux de BunkerWeb\n      - ./appsec.yaml:/etc/crowdsec/acquis.d/appsec.yaml # Commentez si vous ne voulez pas utiliser le composant AppSec\n    environment:\n      BOUNCER_KEY_bunkerweb: \"s3cr3tb0unc3rk3y\" # N'oubliez pas de d\u00e9finir une cl\u00e9 plus forte pour le bouncer\n      COLLECTIONS: \"crowdsecurity/nginx crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules\"\n      #   COLLECTIONS: \"crowdsecurity/nginx\" # Si vous ne voulez pas utiliser le composant AppSec, utilisez plut\u00f4t cette ligne\n    networks:\n      - bw-universe\n\n  syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Lier aux ports bas\n      - NET_BROADCAST  # Envoyer des diffusions\n      - NET_RAW  # Utiliser des sockets brutes\n      - DAC_READ_SEARCH  # Lire les fichiers en contournant les autorisations\n      - DAC_OVERRIDE  # Outrepasser les autorisations de fichiers\n      - CHOWN  # Changer le propri\u00e9taire\n      - SYSLOG  # \u00c9crire dans les journaux syst\u00e8me\n    volumes:\n      - bw-logs:/var/log/bunkerweb # C'est le volume utilis\u00e9 pour stocker les journaux\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # C'est le fichier de configuration de syslog-ng\n    networks:\n        bw-universe:\n          ipv4_address: 10.20.30.254\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n  cs-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Assurez-vous de d\u00e9finir la bonne plage IP pour que le planificateur puisse envoyer la configuration \u00e0 l'instance\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n```\n</code></pre> LinuxAll-in-one <p>Vous devez installer CrowdSec et le configurer pour analyser les journaux de BunkerWeb. Suivez la documentation officielle.</p> <p>Pour permettre \u00e0 CrowdSec d'analyser les journaux de BunkerWeb, ajoutez les lignes suivantes \u00e0 votre fichier d'acquisition situ\u00e9 \u00e0 <code>/etc/crowdsec/acquis.yaml</code> :</p> <pre><code>filenames:\n  - /var/log/bunkerweb/access.log\n  - /var/log/bunkerweb/error.log\n  - /var/log/bunkerweb/modsec_audit.log\nlabels:\n    type: nginx\n</code></pre> <p>Maintenant, ajoutez votre bouncer personnalis\u00e9 \u00e0 l'API CrowdSec en utilisant l'outil <code>cscli</code> :</p> <pre><code>sudo cscli bouncers add crowdsec-bunkerweb-bouncer/v1.6\n</code></pre> <p>Cl\u00e9 API</p> <p>Conservez la cl\u00e9 g\u00e9n\u00e9r\u00e9e par la commande <code>cscli</code> ; vous en aurez besoin plus tard.</p> <p>Ensuite, red\u00e9marrez le service CrowdSec :</p> <pre><code>sudo systemctl restart crowdsec\n</code></pre> <p>Composant de s\u00e9curit\u00e9 applicative (optionnel)</p> <p>Si vous souhaitez utiliser le composant AppSec, vous devez cr\u00e9er un autre fichier d'acquisition pour celui-ci, situ\u00e9 \u00e0 <code>/etc/crowdsec/acquis.d/appsec.yaml</code> :</p> <pre><code>appsec_config: crowdsecurity/appsec-default\nlabels:\n    type: appsec\nlisten_addr: 127.0.0.1:7422\nsource: appsec\n</code></pre> <p>Vous devrez \u00e9galement installer les collections du composant AppSec :</p> <pre><code>sudo cscli collections install crowdsecurity/appsec-virtual-patching\nsudo cscli collections install crowdsecurity/appsec-generic-rules\n</code></pre> <p>Enfin, red\u00e9marrez le service CrowdSec :</p> <pre><code>sudo systemctl restart crowdsec\n</code></pre> <p>Param\u00e8tres</p> <p>Configurez le plugin en ajoutant les param\u00e8tres suivants \u00e0 votre fichier de configuration BunkerWeb :</p> <pre><code>USE_CROWDSEC=yes\nCROWDSEC_API=http://127.0.0.1:8080\nCROWDSEC_API_KEY=&lt;La cl\u00e9 fournie par cscli&gt;\n# Commentez si vous ne voulez pas utiliser le composant AppSec\nCROWDSEC_APPSEC_URL=http://127.0.0.1:7422\n</code></pre> <p>Enfin, rechargez le service BunkerWeb :</p> <pre><code>sudo systemctl reload bunkerweb\n</code></pre> <p>L'image Docker BunkerWeb All-In-One (AIO) est livr\u00e9e avec CrowdSec enti\u00e8rement int\u00e9gr\u00e9. Vous n'avez pas besoin de configurer une instance CrowdSec s\u00e9par\u00e9e ou de configurer manuellement les fichiers d'acquisition pour les journaux de BunkerWeb lorsque vous utilisez l'agent CrowdSec interne.</p> <p>R\u00e9f\u00e9rez-vous \u00e0 la documentation d'int\u00e9gration de l'image All-In-One (AIO).</p>"},{"location":"fr/features/#parametres-de-configuration_2","title":"Param\u00e8tres de configuration","text":"Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_CROWDSEC</code> <code>no</code> multisite no Activer CrowdSec : Mettre \u00e0 <code>yes</code> pour activer le bouncer CrowdSec. <code>CROWDSEC_API</code> <code>http://crowdsec:8080</code> global no URL de l'API CrowdSec : L'adresse du service de l'API locale de CrowdSec. <code>CROWDSEC_API_KEY</code> global no Cl\u00e9 API CrowdSec : La cl\u00e9 API pour s'authentifier aupr\u00e8s de l'API CrowdSec, obtenue avec <code>cscli bouncers add</code>. <code>CROWDSEC_MODE</code> <code>live</code> global no Mode de fonctionnement : Soit <code>live</code> (interroge l'API pour chaque requ\u00eate) ou <code>stream</code> (met en cache p\u00e9riodiquement toutes les d\u00e9cisions). <code>CROWDSEC_ENABLE_INTERNAL</code> <code>no</code> global no Trafic interne : Mettre \u00e0 <code>yes</code> pour v\u00e9rifier le trafic interne par rapport aux d\u00e9cisions de CrowdSec. <code>CROWDSEC_REQUEST_TIMEOUT</code> <code>1000</code> global no D\u00e9lai d'attente de la requ\u00eate : D\u00e9lai d'attente en millisecondes pour les requ\u00eates HTTP vers l'API locale de CrowdSec en mode live. <code>CROWDSEC_EXCLUDE_LOCATION</code> global no Emplacements exclus : Liste d'emplacements (URI) s\u00e9par\u00e9s par des virgules \u00e0 exclure des v\u00e9rifications de CrowdSec. <code>CROWDSEC_CACHE_EXPIRATION</code> <code>1</code> global no Expiration du cache : Le temps d'expiration du cache en secondes pour les d\u00e9cisions IP en mode live. <code>CROWDSEC_UPDATE_FREQUENCY</code> <code>10</code> global no Fr\u00e9quence de mise \u00e0 jour : \u00c0 quelle fr\u00e9quence (en secondes) r\u00e9cup\u00e9rer les d\u00e9cisions nouvelles/expir\u00e9es de l'API CrowdSec en mode stream."},{"location":"fr/features/#parametres-du-composant-de-securite-applicative","title":"Param\u00e8tres du composant de s\u00e9curit\u00e9 applicative","text":"Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>CROWDSEC_APPSEC_URL</code> global no URL AppSec : L'URL du composant de s\u00e9curit\u00e9 applicative de CrowdSec. Laisser vide pour d\u00e9sactiver AppSec. <code>CROWDSEC_APPSEC_FAILURE_ACTION</code> <code>passthrough</code> global no Action en cas d'\u00e9chec : Action \u00e0 entreprendre lorsque AppSec renvoie une erreur. Peut \u00eatre <code>passthrough</code> ou <code>deny</code>. <code>CROWDSEC_APPSEC_CONNECT_TIMEOUT</code> <code>100</code> global no D\u00e9lai de connexion : Le d\u00e9lai d'attente en millisecondes pour se connecter au composant AppSec. <code>CROWDSEC_APPSEC_SEND_TIMEOUT</code> <code>100</code> global no D\u00e9lai d'envoi : Le d\u00e9lai d'attente en millisecondes pour envoyer des donn\u00e9es au composant AppSec. <code>CROWDSEC_APPSEC_PROCESS_TIMEOUT</code> <code>500</code> global no D\u00e9lai de traitement : Le d\u00e9lai d'attente en millisecondes pour traiter la requ\u00eate dans le composant AppSec. <code>CROWDSEC_ALWAYS_SEND_TO_APPSEC</code> <code>no</code> global no Toujours envoyer : Mettre \u00e0 <code>yes</code> pour toujours envoyer les requ\u00eates \u00e0 AppSec, m\u00eame s'il y a une d\u00e9cision au niveau de l'IP. <code>CROWDSEC_APPSEC_SSL_VERIFY</code> <code>no</code> global no V\u00e9rification SSL : Mettre \u00e0 <code>yes</code> pour v\u00e9rifier le certificat SSL du composant AppSec. <p>!!! info \"\u00c0 propos des modes de fonctionnement\" - Le mode Live interroge l'API CrowdSec pour chaque requ\u00eate entrante, offrant une protection en temps r\u00e9el au prix d'une latence plus \u00e9lev\u00e9e. - Le mode Stream t\u00e9l\u00e9charge p\u00e9riodiquement toutes les d\u00e9cisions de l'API CrowdSec et les met en cache localement, r\u00e9duisant la latence avec un l\u00e9ger retard dans l'application des nouvelles d\u00e9cisions.</p>"},{"location":"fr/features/#exemples-de-configurations","title":"Exemples de configurations","text":"Configuration de baseConfiguration avanc\u00e9e avec AppSec <p>C'est une configuration simple pour lorsque CrowdSec s'ex\u00e9cute sur le m\u00eame h\u00f4te :</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"your-api-key-here\"\nCROWDSEC_MODE: \"live\"\n</code></pre> <p>Une configuration plus compl\u00e8te incluant le composant de s\u00e9curit\u00e9 applicative :</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"your-api-key-here\"\nCROWDSEC_MODE: \"stream\"\nCROWDSEC_UPDATE_FREQUENCY: \"30\"\nCROWDSEC_EXCLUDE_LOCATION: \"/health,/metrics\"\n\n# Configuration AppSec\nCROWDSEC_APPSEC_URL: \"http://crowdsec:7422\"\nCROWDSEC_APPSEC_FAILURE_ACTION: \"deny\"\nCROWDSEC_ALWAYS_SEND_TO_APPSEC: \"yes\"\nCROWDSEC_APPSEC_SSL_VERIFY: \"yes\"\n</code></pre>"},{"location":"fr/features/#custom-ssl-certificate","title":"Custom SSL certificate","text":"<p>Prise en charge STREAM </p> <p>Le plugin Certificat SSL personnalis\u00e9 permet d\u2019utiliser vos propres certificats SSL/TLS avec BunkerWeb, au lieu de ceux g\u00e9n\u00e9r\u00e9s automatiquement. Utile si vous poss\u00e9dez d\u00e9j\u00e0 des certificats d\u2019une AC de confiance, avez des besoins sp\u00e9cifiques ou centralisez la gestion des certificats.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Vous fournissez le certificat et la cl\u00e9 priv\u00e9e (chemins de fichiers ou donn\u00e9es en base64/PEM).</li> <li>BunkerWeb valide le format et l\u2019utilisabilit\u00e9 des fichiers.</li> <li>Lors d\u2019une connexion s\u00e9curis\u00e9e, BunkerWeb sert votre certificat personnalis\u00e9.</li> <li>La validit\u00e9 est surveill\u00e9e et des alertes sont \u00e9mises avant expiration.</li> <li>Vous gardez le contr\u00f4le total sur le cycle de vie des certificats.</li> </ol> <p>Surveillance automatique</p> <p>Avec <code>USE_CUSTOM_SSL: yes</code>, BunkerWeb surveille le certificat <code>CUSTOM_SSL_CERT</code>, d\u00e9tecte les changements et recharge NGINX si n\u00e9cessaire.</p>"},{"location":"fr/features/#comment-lutiliser_10","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_CUSTOM_SSL: yes</code>.</li> <li>M\u00e9thode\u00a0: fichiers vs donn\u00e9es, priorit\u00e9 via <code>CUSTOM_SSL_CERT_PRIORITY</code>.</li> <li>Fichiers\u00a0: fournissez les chemins du certificat et de la cl\u00e9 priv\u00e9e.</li> <li>Donn\u00e9es\u00a0: fournissez les cha\u00eenes base64 ou PEM en clair.</li> </ol> <p>Mode stream</p> <p>En mode stream, configurez <code>LISTEN_STREAM_PORT_SSL</code> pour le port SSL/TLS.</p>"},{"location":"fr/features/#parametres_8","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_CUSTOM_SSL</code> <code>no</code> multisite non Activer l\u2019usage d\u2019un certificat personnalis\u00e9. <code>CUSTOM_SSL_CERT_PRIORITY</code> <code>file</code> multisite non Priorit\u00e9 des sources\u00a0: <code>file</code> (fichiers) ou <code>data</code> (donn\u00e9es). <code>CUSTOM_SSL_CERT</code> multisite non Chemin complet vers le certificat (ou bundle). <code>CUSTOM_SSL_KEY</code> multisite non Chemin complet vers la cl\u00e9 priv\u00e9e. <code>CUSTOM_SSL_CERT_DATA</code> multisite non Donn\u00e9es du certificat (base64 ou PEM en clair). <code>CUSTOM_SSL_KEY_DATA</code> multisite non Donn\u00e9es de la cl\u00e9 priv\u00e9e (base64 ou PEM en clair). <p>S\u00e9curit\u00e9</p> <p>Prot\u00e9gez la cl\u00e9 priv\u00e9e (droits adapt\u00e9s, lisible par le scheduler BunkerWeb uniquement).</p> <p>Format</p> <p>Les certificats doivent \u00eatre au format PEM. Convertissez si n\u00e9cessaire.</p> <p>Cha\u00eenes de certification</p> <p>Si une cha\u00eene interm\u00e9diaire est n\u00e9cessaire, fournissez le bundle complet dans l\u2019ordre (certificat puis interm\u00e9diaires).</p>"},{"location":"fr/features/#exemples_8","title":"Exemples","text":"Fichiers <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/path/to/your/certificate.pem\"\nCUSTOM_SSL_KEY: \"/path/to/your/private-key.pem\"\n</code></pre> Donn\u00e9es base64 <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...\"\n</code></pre> PEM en clair <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: |\n  -----BEGIN CERTIFICATE-----\n  MIIDdzCCAl+gAwIBAgIUJH...certificate content...AAAA\n  -----END CERTIFICATE-----\nCUSTOM_SSL_KEY_DATA: |\n  -----BEGIN PRIVATE KEY-----\n  MIIEvQIBADAN...key content...AAAA\n  -----END PRIVATE KEY-----\n</code></pre> Fallback <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/path/to/your/certificate.pem\"\nCUSTOM_SSL_KEY: \"/path/to/your/private-key.pem\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...\"\n</code></pre>"},{"location":"fr/features/#dnsbl","title":"DNSBL","text":"<p>Prise en charge STREAM </p> <p>Le plugin DNSBL (Domain Name System Blacklist) prot\u00e8ge contre les IP malveillantes connues en v\u00e9rifiant l\u2019adresse IP du client aupr\u00e8s de serveurs DNSBL externes. Cette fonctionnalit\u00e9 aide \u00e0 se pr\u00e9munir du spam, des botnets et de diverses menaces en s\u2019appuyant on des listes communautaires d\u2019IP probl\u00e9matiques.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Lorsqu\u2019un client se connecte \u00e0 votre site, BunkerWeb interroge les serveurs DNSBL que vous avez choisis via le protocole DNS.</li> <li>La v\u00e9rification s\u2019effectue en envoyant une requ\u00eate DNS invers\u00e9e \u00e0 chaque serveur DNSBL avec l\u2019IP du client.</li> <li>Si un serveur DNSBL confirme que l\u2019IP du client est list\u00e9e comme malveillante, BunkerWeb bannit automatiquement ce client, emp\u00eachant les menaces potentielles d\u2019atteindre votre application.</li> <li>Les r\u00e9sultats sont mis en cache pour am\u00e9liorer les performances pour les visites r\u00e9p\u00e9t\u00e9es depuis la m\u00eame IP.</li> <li>Les recherches sont asynchrones pour minimiser l\u2019impact sur le temps de chargement.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_11","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour configurer et utiliser la fonctionnalit\u00e9 DNSBL :</p> <ol> <li>Activer la fonction : La fonction DNSBL est d\u00e9sactiv\u00e9e par d\u00e9faut. Passez <code>USE_DNSBL</code> \u00e0 <code>yes</code> pour l'activer.</li> <li>Configurer les serveurs DNSBL : Ajoutez les noms de domaine des services DNSBL que vous souhaitez utiliser dans le param\u00e8tre <code>DNSBL_LIST</code>.</li> <li>Appliquer les param\u00e8tres : Une fois configur\u00e9, BunkerWeb v\u00e9rifiera automatiquement les connexions entrantes aupr\u00e8s des serveurs DNSBL sp\u00e9cifi\u00e9s.</li> <li>Surveiller l'efficacit\u00e9 : Consultez la web UI pour voir les statistiques des requ\u00eates bloqu\u00e9es par les v\u00e9rifications DNSBL.</li> </ol>"},{"location":"fr/features/#parametres-de-configuration_3","title":"Param\u00e8tres de configuration","text":"<p>G\u00e9n\u00e9ral</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_DNSBL</code> <code>no</code> multisite non Activer DNSBL : mettre \u00e0 <code>yes</code> pour activer les v\u00e9rifications DNSBL pour les connexions entrantes. <code>DNSBL_LIST</code> <code>bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org</code> global non Serveurs DNSBL : liste des domaines de serveurs DNSBL \u00e0 v\u00e9rifier, s\u00e9par\u00e9s par des espaces. <p>Listes d\u2019exception</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>DNSBL_IGNORE_IP</code> `` multisite oui IP/CIDR s\u00e9par\u00e9s par des espaces pour lesquels ignorer les v\u00e9rifications DNSBL (liste blanche). <code>DNSBL_IGNORE_IP_URLS</code> `` multisite oui URL s\u00e9par\u00e9es par des espaces fournissant des IP/CIDR \u00e0 ignorer. Supporte <code>http(s)://</code> et <code>file://</code>. <p>Choisir des serveurs DNSBL</p> <p>Choisissez des fournisseurs DNSBL r\u00e9put\u00e9s pour minimiser les faux positifs. La liste par d\u00e9faut inclut des services bien \u00e9tablis qui conviennent \u00e0 la plupart des sites web :</p> <pre><code>- **bl.blocklist.de :** Liste les IP qui ont \u00e9t\u00e9 d\u00e9tect\u00e9es en train d'attaquer d'autres serveurs.\n- **sbl.spamhaus.org :** Se concentre sur les sources de spam et autres activit\u00e9s malveillantes.\n- **xbl.spamhaus.org :** Cible les syst\u00e8mes infect\u00e9s, tels que les machines compromises ou les proxys ouverts.\n</code></pre> <p>Principe de fonctionnement de DNSBL</p> <p>Les serveurs DNSBL fonctionnent en r\u00e9pondant \u00e0 des requ\u00eates DNS sp\u00e9cialement format\u00e9es. Lorsque BunkerWeb v\u00e9rifie une adresse IP, il inverse l'IP et y ajoute le nom de domaine du DNSBL. Si la requ\u00eate DNS r\u00e9sultante renvoie une r\u00e9ponse de \u00ab succ\u00e8s \u00bb, l'IP est consid\u00e9r\u00e9e comme \u00e9tant sur la liste noire.</p> <p>Consid\u00e9rations sur la performance</p> <p>Bien que BunkerWeb optimise les recherches DNSBL pour la performance, l'ajout d'un grand nombre de serveurs DNSBL pourrait potentiellement impacter les temps de r\u00e9ponse. Commencez avec quelques serveurs DNSBL r\u00e9put\u00e9s et surveillez la performance avant d'en ajouter d'autres.</p>"},{"location":"fr/features/#exemples-de-configuration_3","title":"Exemples de configuration","text":"Configuration de baseConfiguration minimaleExclure des IP de confianceUtiliser des URL distantesUtiliser des fichiers locaux <p>Une configuration simple utilisant les serveurs DNSBL par d\u00e9faut :</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org\"\n</code></pre> <p>Une configuration minimale se concentrant sur les services DNSBL les plus fiables :</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\n</code></pre> <p>Cette configuration utilise uniquement :</p> <ul> <li>zen.spamhaus.org : La liste combin\u00e9e de Spamhaus est souvent consid\u00e9r\u00e9e comme suffisante en tant que solution autonome en raison de sa large couverture et de sa r\u00e9putation de pr\u00e9cision. Elle combine les listes SBL, XBL et PBL en une seule requ\u00eate, la rendant efficace et compl\u00e8te.</li> </ul> <p>Vous pouvez exclure certains clients des v\u00e9rifications DNSBL via des valeurs statiques et/ou des fichiers distants :</p> <ul> <li><code>DNSBL_IGNORE_IP</code> : Ajoutez des IP et des plages CIDR s\u00e9par\u00e9es par des espaces. Exemple : <code>192.0.2.10 203.0.113.0/24 2001:db8::/32</code>.</li> <li><code>DNSBL_IGNORE_IP_URLS</code> : Fournissez des URL dont le contenu liste une IP/CIDR par ligne. Les commentaires commen\u00e7ant par <code>#</code> ou <code>;</code> sont ignor\u00e9s. Les entr\u00e9es en double sont d\u00e9dupliqu\u00e9es.</li> </ul> <p>Quand une IP cliente correspond \u00e0 la liste d\u2019exclusion, BunkerWeb saute les requ\u00eates DNSBL et met en cache le r\u00e9sultat \u00ab ok \u00bb pour acc\u00e9l\u00e9rer les requ\u00eates suivantes.</p> <p>La t\u00e2che <code>dnsbl-download</code> t\u00e9l\u00e9charge et met en cache les IP \u00e0 ignorer toutes les heures :</p> <ul> <li>Protocoles : <code>https://</code>, <code>http://</code> et chemins locaux <code>file://</code>.</li> <li>Un cache par URL avec une somme de contr\u00f4le emp\u00eache les t\u00e9l\u00e9chargements redondants (d\u00e9lai de gr\u00e2ce d'1 heure).</li> <li>Fichier fusionn\u00e9 par service : <code>/var/cache/bunkerweb/dnsbl/&lt;service&gt;/IGNORE_IP.list</code>.</li> <li>Charg\u00e9 au d\u00e9marrage et fusionn\u00e9 avec <code>DNSBL_IGNORE_IP</code>.</li> </ul> <p>Exemple combinant des sources statiques et des URL :</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP: \"10.0.0.0/8 192.168.0.0/16 2001:db8::/32\"\nDNSBL_IGNORE_IP_URLS: \"https://exemple.com/allow-cidrs.txt file:///etc/bunkerweb/dnsbl/ignore.txt\"\n</code></pre> <p>Chargez des IP \u00e0 ignorer depuis des fichiers locaux en utilisant des URL <code>file://</code> :</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP_URLS: \"file:///etc/bunkerweb/dnsbl/ignore.txt file:///opt/data/allow-cidrs.txt\"\n</code></pre>"},{"location":"fr/features/#database","title":"Database","text":"<p>Prise en charge STREAM </p> <p>Le plugin Base de donn\u00e9es fournit une int\u00e9gration robuste pour BunkerWeb en permettant le stockage centralis\u00e9 et la gestion des donn\u00e9es de configuration, des journaux et d\u2019autres informations essentielles.</p> <p>Ce composant c\u0153ur prend en charge plusieurs moteurs\u00a0: SQLite, PostgreSQL, MySQL/MariaDB et Oracle, afin de choisir la solution la mieux adapt\u00e9e \u00e0 votre environnement et \u00e0 vos besoins.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>BunkerWeb se connecte \u00e0 la base configur\u00e9e via une URI au format SQLAlchemy.</li> <li>Les donn\u00e9es de configuration critiques, les informations d\u2019ex\u00e9cution et les journaux des jobs sont stock\u00e9s de mani\u00e8re s\u00e9curis\u00e9e en base.</li> <li>Des t\u00e2ches de maintenance automatiques optimisent la base en g\u00e9rant la croissance et en purgeant les enregistrements exc\u00e9dentaires.</li> <li>Pour la haute disponibilit\u00e9, vous pouvez configurer une URI en lecture seule servant de bascule et/ou pour d\u00e9lester les lectures.</li> <li>Les op\u00e9rations base de donn\u00e9es sont journalis\u00e9es selon le niveau de log sp\u00e9cifi\u00e9, offrant la visibilit\u00e9 adapt\u00e9e.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_12","title":"Comment l\u2019utiliser","text":"<p>\u00c9tapes pour configurer la base de donn\u00e9es\u00a0:</p> <ol> <li>Choisir un moteur\u00a0: SQLite (par d\u00e9faut), PostgreSQL, MySQL/MariaDB ou Oracle.</li> <li>Configurer l\u2019URI\u00a0: renseignez <code>DATABASE_URI</code> (format SQLAlchemy) pour la base principale.</li> <li>Optionnel\u00a0: <code>DATABASE_URI_READONLY</code> pour les op\u00e9rations en lecture seule ou en secours.</li> </ol>"},{"location":"fr/features/#parametres_9","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>DATABASE_URI</code> <code>sqlite:////var/lib/bunkerweb/db.sqlite3</code> global non URI principale de connexion (format SQLAlchemy). <code>DATABASE_URI_READONLY</code> global non URI optionnelle en lecture seule (offload/HA). <code>DATABASE_LOG_LEVEL</code> <code>warning</code> global non Niveau de verbosit\u00e9 des logs DB\u00a0: <code>debug</code>, <code>info</code>, <code>warn</code>, <code>warning</code>, <code>error</code>. <code>DATABASE_MAX_JOBS_RUNS</code> <code>10000</code> global non Nombre max d\u2019entr\u00e9es de runs de jobs conserv\u00e9es avant purge automatique. <p>!!! tip \"Choix du moteur\" - SQLite (d\u00e9faut)\u00a0: simple et fichier unique, id\u00e9al mono\u2011n\u0153ud/tests. - PostgreSQL\u00a0: recommand\u00e9 en production multi\u2011instances (robustesse, concurrence). - MySQL/MariaDB\u00a0: alternative solide aux capacit\u00e9s proches de PostgreSQL. - Oracle\u00a0: adapt\u00e9 aux environnements d\u2019entreprise standardis\u00e9s sur Oracle.</p> <p>!!! info \"Format SQLAlchemy\" - SQLite\u00a0: <code>sqlite:////chemin/vers/database.sqlite3</code> - PostgreSQL\u00a0: <code>postgresql://user:password@h\u00f4te:port/base</code> - MySQL/MariaDB\u00a0: <code>mysql://user:password@h\u00f4te:port/base</code> ou <code>mariadb://user:password@h\u00f4te:port/base</code> - Oracle\u00a0: <code>oracle://user:password@h\u00f4te:port/base</code></p> <p>Maintenance</p> <p>Une t\u00e2che quotidienne purge automatiquement les runs de jobs exc\u00e9dentaires selon <code>DATABASE_MAX_JOBS_RUNS</code> pour \u00e9viter une croissance illimit\u00e9e tout en conservant un historique utile.</p>"},{"location":"fr/features/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Provides a simpler way to fix false positives in reports.</p>"},{"location":"fr/features/#errors","title":"Errors","text":"<p>Prise en charge STREAM </p> <p>Le plugin Errors fournit une gestion personnalisable des erreurs HTTP, afin de d\u00e9finir l\u2019apparence des r\u00e9ponses d\u2019erreur pour vos utilisateurs. Vous pouvez ainsi afficher des pages d\u2019erreur claires et coh\u00e9rentes avec votre identit\u00e9, plut\u00f4t que les pages techniques par d\u00e9faut du serveur.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Quand une erreur HTTP survient (ex. 400, 404, 500), BunkerWeb intercepte la r\u00e9ponse.</li> <li>\u00c0 la place de la page par d\u00e9faut, BunkerWeb affiche une page personnalis\u00e9e et soign\u00e9e.</li> <li>Les pages d\u2019erreur sont configurables\u00a0: vous pouvez fournir un fichier HTML par code d\u2019erreur. Les fichiers doivent \u00eatre plac\u00e9s dans le r\u00e9pertoire d\u00e9fini par <code>ROOT_FOLDER</code> (voir le plugin Misc).</li> <li>Par d\u00e9faut, <code>ROOT_FOLDER</code> vaut <code>/var/www/html/{server_name}</code>.</li> <li>En mode multisite, chaque site a son propre <code>ROOT_FOLDER</code>\u00a0; placez les pages d\u2019erreur dans le dossier correspondant \u00e0 chaque site.</li> <li>Les pages par d\u00e9faut expliquent clairement le probl\u00e8me et sugg\u00e8rent des actions possibles.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_13","title":"Comment l\u2019utiliser","text":"<ol> <li>D\u00e9finir les pages personnalis\u00e9es\u00a0: utilisez <code>ERRORS</code> pour associer des codes HTTP \u00e0 des fichiers HTML (dans <code>ROOT_FOLDER</code>).</li> <li>Configurer vos pages\u00a0: utilisez celles de BunkerWeb par d\u00e9faut ou vos propres fichiers.</li> <li>D\u00e9finir les codes intercept\u00e9s\u00a0: avec <code>INTERCEPTED_ERROR_CODES</code>, choisissez les codes toujours g\u00e9r\u00e9s par BunkerWeb.</li> <li>Laissez BunkerWeb faire le reste\u00a0: la gestion d\u2019erreurs sera appliqu\u00e9e automatiquement.</li> </ol>"},{"location":"fr/features/#parametres_10","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>ERRORS</code> multisite non Pages d\u2019erreur personnalis\u00e9es\u00a0: paires <code>CODE=/chemin/page.html</code>. <code>INTERCEPTED_ERROR_CODES</code> <code>400 401 403 404 405 413 429 500 501 502 503 504</code> multisite non Codes intercept\u00e9s\u00a0: liste de codes g\u00e9r\u00e9s avec la page par d\u00e9faut si aucune page personnalis\u00e9e n\u2019est d\u00e9finie. <p>Conception des pages</p> <p>Les pages par d\u00e9faut sont claires et p\u00e9dagogiques\u00a0: description de l\u2019erreur, causes possibles, actions sugg\u00e9r\u00e9es et rep\u00e8res visuels.</p> <p>!!! info \"Types d\u2019erreurs\" - 4xx (c\u00f4t\u00e9 client)\u00a0: requ\u00eates invalides, ressource inexistante, authentification manquante\u2026 - 5xx (c\u00f4t\u00e9 serveur)\u00a0: impossibilit\u00e9 de traiter une requ\u00eate valide (erreur interne, indisponibilit\u00e9 temporaire\u2026).</p>"},{"location":"fr/features/#exemples_9","title":"Exemples","text":"Gestion par d\u00e9faut <pre><code>INTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> Pages personnalis\u00e9es <pre><code>ERRORS: \"404=/custom/404.html 500=/custom/500.html\"\nINTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> Gestion s\u00e9lective <pre><code>INTERCEPTED_ERROR_CODES: \"404 500\"\n</code></pre>"},{"location":"fr/features/#greylist","title":"Greylist","text":"<p>Prise en charge STREAM </p> <p>Le plugin Greylist adopte une approche flexible\u00a0: il autorise l\u2019acc\u00e8s aux visiteurs correspondant \u00e0 des crit\u00e8res donn\u00e9s tout en maintenant les contr\u00f4les de s\u00e9curit\u00e9. Contrairement aux listes noire/blanche, il cr\u00e9e un juste milieu.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Vous d\u00e9finissez des crit\u00e8res (IP, r\u00e9seaux, rDNS, ASN, User\u2011Agent, motifs d\u2019URI).</li> <li>Un visiteur qui correspond est autoris\u00e9, mais reste soumis aux autres contr\u00f4les.</li> <li>S\u2019il ne correspond \u00e0 aucun crit\u00e8re greylist, l\u2019acc\u00e8s est refus\u00e9.</li> <li>Des sources externes peuvent alimenter automatiquement la liste.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_14","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_GREYLIST: yes</code>.</li> <li>R\u00e8gles\u00a0: d\u00e9finissez IP/r\u00e9seaux, rDNS, ASN, User\u2011Agent ou URIs.</li> <li>Sources externes\u00a0: optionnel, configurez des URLs pour mises \u00e0 jour.</li> <li>Suivi\u00a0: consultez la web UI.</li> </ol> <p>!!! tip \"Comportement d\u2019acc\u00e8s\" - Visiteurs greylist\u00a0: acc\u00e8s autoris\u00e9 mais contr\u00f4les appliqu\u00e9s. - Autres visiteurs\u00a0: acc\u00e8s refus\u00e9.</p> <p>Mode stream</p> <p>En mode stream, seuls IP, rDNS et ASN sont pris en compte.</p>"},{"location":"fr/features/#parametres_11","title":"Param\u00e8tres","text":"<p>G\u00e9n\u00e9ral</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_GREYLIST</code> <code>no</code> multisite non Activer la greylist. Adresse IP Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>GREYLIST_IP</code> multisite non Liste d\u2019IP/r\u00e9seaux (CIDR) \u00e0 greylist, s\u00e9par\u00e9s par des espaces. <code>GREYLIST_IP_URLS</code> multisite non URLs contenant des IP/r\u00e9seaux \u00e0 greylist. Reverse DNS Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>GREYLIST_RDNS</code> multisite non Suffixes de DNS invers\u00e9s \u00e0 greylist. <code>GREYLIST_RDNS_GLOBAL</code> <code>yes</code> multisite non V\u00e9rifier seulement les IP globales si <code>yes</code>. <code>GREYLIST_RDNS_URLS</code> multisite non URLs contenant des suffixes rDNS \u00e0 greylist. ASN Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>GREYLIST_ASN</code> multisite non Num\u00e9ros d\u2019AS \u00e0 greylist (s\u00e9par\u00e9s par des espaces). <code>GREYLIST_ASN_URLS</code> multisite non URLs contenant des AS \u00e0 greylist. User\u2011Agent Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>GREYLIST_USER_AGENT</code> multisite non Motifs (regex PCRE) d\u2019User\u2011Agent \u00e0 greylist. <code>GREYLIST_USER_AGENT_URLS</code> multisite non URLs contenant des motifs d\u2019User\u2011Agent \u00e0 greylist. URI Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>GREYLIST_URI</code> multisite non Motifs d\u2019URI (regex PCRE) \u00e0 greylist. <code>GREYLIST_URI_URLS</code> multisite non URLs contenant des motifs d\u2019URI \u00e0 greylist. <p>Format d\u2019URL</p> <p>Les param\u00e8tres <code>*_URLS</code> supportent HTTP/HTTPS et <code>file:///</code>. Auth basique possible avec <code>http://user:pass@url</code>.</p> <p>Mises \u00e0 jour</p> <p>Les listes r\u00e9cup\u00e9r\u00e9es par URL sont mises \u00e0 jour automatiquement toutes les heures.</p>"},{"location":"fr/features/#gzip","title":"Gzip","text":"<p>Prise en charge STREAM </p> <p>Le plugin GZIP compresse les r\u00e9ponses HTTP avec l\u2019algorithme gzip pour r\u00e9duire la bande passante et acc\u00e9l\u00e9rer le chargement des pages.</p>"},{"location":"fr/features/#fonctionnement","title":"Fonctionnement","text":"<ol> <li>BunkerWeb d\u00e9tecte si le client supporte gzip.</li> <li>Si oui, la r\u00e9ponse est compress\u00e9e au niveau configur\u00e9.</li> <li>Les en\u2011t\u00eates indiquent l\u2019usage de gzip.</li> <li>Le navigateur d\u00e9compresse avant l\u2019affichage.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_15","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_GZIP: yes</code> (d\u00e9sactiv\u00e9 par d\u00e9faut).</li> <li>Types MIME\u00a0: d\u00e9finir <code>GZIP_TYPES</code>.</li> <li>Taille minimale\u00a0: <code>GZIP_MIN_LENGTH</code> pour \u00e9viter les tr\u00e8s petits fichiers.</li> <li>Niveau de compression\u00a0: <code>GZIP_COMP_LEVEL</code> (1\u20139).</li> <li>Contenu proxifi\u00e9\u00a0: ajuster <code>GZIP_PROXIED</code>.</li> </ol>"},{"location":"fr/features/#parametres_12","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_GZIP</code> <code>no</code> multisite non Activer la compression gzip. <code>GZIP_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> multisite non Types MIME compress\u00e9s. <code>GZIP_MIN_LENGTH</code> <code>1000</code> multisite non Taille minimale (octets) pour appliquer la compression. <code>GZIP_COMP_LEVEL</code> <code>5</code> multisite non Niveau 1\u20139\u00a0: plus haut = meilleure compression mais plus de CPU. <code>GZIP_PROXIED</code> <code>no-cache no-store private expired auth</code> multisite non Pr\u00e9cise quels contenus proxifi\u00e9s doivent \u00eatre compress\u00e9s selon les en\u2011t\u00eates de r\u00e9ponse. <p>Niveau de compression</p> <p><code>5</code> est un bon compromis. Statique/CPU dispo\u00a0: 7\u20139. Dynamique/CPU limit\u00e9\u00a0: 1\u20133.</p>"},{"location":"fr/features/#exemples_10","title":"Exemples","text":"Basique <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json application/xml text/css text/html text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"5\"\n</code></pre> Compression maximale <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"500\"\nGZIP_COMP_LEVEL: \"9\"\nGZIP_PROXIED: \"any\"\n</code></pre> Performance \u00e9quilibr\u00e9e <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"3\"\nGZIP_PROXIED: \"no-cache no-store private expired\"\n</code></pre> Contenu proxifi\u00e9 <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"4\"\nGZIP_PROXIED: \"any\"\n</code></pre>"},{"location":"fr/features/#html-injection","title":"HTML injection","text":"<p>Prise en charge STREAM </p> <p>Le plugin d\u2019injection HTML permet d\u2019ajouter du code HTML personnalis\u00e9 dans les pages de votre site juste avant <code>&lt;/body&gt;</code> ou <code>&lt;/head&gt;</code>. Id\u00e9al pour int\u00e9grer des scripts d\u2019analytics, pixels de tracking, JS/CSS personnalis\u00e9s ou des int\u00e9grations tierces sans modifier le code source de votre application.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 la livraison d\u2019une page, BunkerWeb inspecte la r\u00e9ponse HTML.</li> <li>Si l\u2019injection \u00ab\u00a0body\u00a0\u00bb est configur\u00e9e, il ins\u00e8re votre HTML juste avant <code>&lt;/body&gt;</code>.</li> <li>Si l\u2019injection \u00ab\u00a0head\u00a0\u00bb est configur\u00e9e, il ins\u00e8re votre HTML juste avant <code>&lt;/head&gt;</code>.</li> <li>L\u2019insertion s\u2019applique automatiquement \u00e0 toutes les pages HTML servies.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_16","title":"Comment l\u2019utiliser","text":"<ol> <li>Pr\u00e9parez votre HTML personnalis\u00e9.</li> <li>Choisissez l\u2019emplacement\u00a0: <code>&lt;head&gt;</code>, <code>&lt;body&gt;</code>, ou les deux.</li> <li>Renseignez <code>INJECT_HEAD</code> et/ou <code>INJECT_BODY</code> avec votre code.</li> </ol>"},{"location":"fr/features/#parametres_13","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>INJECT_HEAD</code> multisite non Code HTML inject\u00e9 avant <code>&lt;/head&gt;</code>. <code>INJECT_BODY</code> multisite non Code HTML inject\u00e9 avant <code>&lt;/body&gt;</code>. <p>!!! tip \"Bonnes pratiques\" - Placez de pr\u00e9f\u00e9rence les scripts JS en fin de body pour \u00e9viter de bloquer le rendu. - Mettez le CSS et le JS critique dans le head pour \u00e9viter le flash de contenu non styl\u00e9. - Attention au contenu inject\u00e9 qui pourrait casser le site.</p>"},{"location":"fr/features/#exemples_11","title":"Exemples","text":"Google Analytics <pre><code>INJECT_HEAD: \"\"\nINJECT_BODY: '&lt;script async src=\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\"&gt;&lt;/script&gt;&lt;script&gt;window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag(''js'', new Date());gtag(''config'', ''G-XXXXXXXXXX'');&lt;/script&gt;'\n</code></pre> Styles personnalis\u00e9s <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .custom-element { color: blue; }&lt;/style&gt;\"\nINJECT_BODY: \"\"\n</code></pre> Int\u00e9grations multiples <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .notification-banner { background: #f8f9fa; padding: 10px; text-align: center; }&lt;/style&gt;\"\nINJECT_BODY: '&lt;script src=\"https://cdn.example.com/js/widget.js\"&gt;&lt;/script&gt;&lt;script&gt;initializeWidget(''your-api-key'');&lt;/script&gt;'\n</code></pre> Bandeau cookies <pre><code>INJECT_HEAD: \"&lt;style&gt;.cookie-banner { position: fixed; bottom: 0; left: 0; right: 0; background: #f1f1f1; padding: 20px; text-align: center; z-index: 1000; } .cookie-banner button { background: #4CAF50; border: none; color: white; padding: 10px 20px; cursor: pointer; }&lt;/style&gt;\"\nINJECT_BODY: '&lt;div id=\"cookie-banner\" class=\"cookie-banner\"&gt;This website uses cookies to ensure you get the best experience. &lt;button onclick=\"acceptCookies()\"&gt;Accept&lt;/button&gt;&lt;/div&gt;&lt;script&gt;function acceptCookies() { document.getElementById(''cookie-banner'').style.display = ''none''; localStorage.setItem(''cookies-accepted'', ''true''); } if(localStorage.getItem(''cookies-accepted'') === ''true'') { document.getElementById(''cookie-banner'').style.display = ''none''; }&lt;/script&gt;'\n</code></pre>"},{"location":"fr/features/#headers","title":"Headers","text":"<p>Prise en charge STREAM </p> <p>Les en-t\u00eates HTTP jouent un r\u00f4le crucial dans la s\u00e9curit\u00e9. Le plugin Headers offre une gestion robuste des en-t\u00eates HTTP standards et personnalis\u00e9s, am\u00e9liorant ainsi la s\u00e9curit\u00e9 et les fonctionnalit\u00e9s. Il applique dynamiquement des mesures de s\u00e9curit\u00e9, telles que HSTS, CSP (y compris un mode de rapport seul), et l'injection d'en-t\u00eates personnalis\u00e9s, tout en emp\u00eachant les fuites d'informations.</p> <p>Comment \u00e7a marche</p> <ol> <li>Lorsqu'un client demande du contenu depuis votre site web, BunkerWeb traite les en-t\u00eates de la r\u00e9ponse.</li> <li>Les en-t\u00eates de s\u00e9curit\u00e9 sont appliqu\u00e9s conform\u00e9ment \u00e0 votre configuration.</li> <li>Des en-t\u00eates personnalis\u00e9s peuvent \u00eatre ajout\u00e9s pour fournir des informations ou des fonctionnalit\u00e9s suppl\u00e9mentaires aux clients.</li> <li>Les en-t\u00eates ind\u00e9sirables qui pourraient r\u00e9v\u00e9ler des informations sur le serveur sont automatiquement supprim\u00e9s.</li> <li>Les cookies sont modifi\u00e9s pour inclure les attributs de s\u00e9curit\u00e9 appropri\u00e9s en fonction de vos param\u00e8tres.</li> <li>Les en-t\u00eates des serveurs en amont peuvent \u00eatre pr\u00e9serv\u00e9s de mani\u00e8re s\u00e9lective lorsque cela est n\u00e9cessaire.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_17","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour configurer et utiliser la fonctionnalit\u00e9 Headers :</p> <ol> <li>Configurer les en-t\u00eates de s\u00e9curit\u00e9 : D\u00e9finissez des valeurs pour les en-t\u00eates courants.</li> <li>Ajouter des en-t\u00eates personnalis\u00e9s : D\u00e9finissez les en-t\u00eates personnalis\u00e9s \u00e0 l'aide du param\u00e8tre <code>CUSTOM_HEADER</code>.</li> <li>Supprimer les en-t\u00eates ind\u00e9sirables : Utilisez <code>REMOVE_HEADERS</code> pour vous assurer que les en-t\u00eates qui pourraient exposer des d\u00e9tails sur le serveur sont supprim\u00e9s.</li> <li>D\u00e9finir la s\u00e9curit\u00e9 des cookies : Activez une s\u00e9curit\u00e9 robuste des cookies en configurant <code>COOKIE_FLAGS</code> et en r\u00e9glant <code>COOKIE_AUTO_SECURE_FLAG</code> sur <code>yes</code> pour que l'attribut Secure soit automatiquement ajout\u00e9 sur les connexions HTTPS.</li> <li>Pr\u00e9server les en-t\u00eates en amont : Sp\u00e9cifiez les en-t\u00eates en amont \u00e0 conserver en utilisant <code>KEEP_UPSTREAM_HEADERS</code>.</li> <li>Tirer parti de l'application conditionnelle des en-t\u00eates : Si vous souhaitez tester des politiques sans interruption, activez le mode CSP Report-Only via <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code>.</li> </ol>"},{"location":"fr/features/#guide-de-configuration","title":"Guide de configuration","text":"En-t\u00eates de s\u00e9curit\u00e9Param\u00e8tres des cookiesEn-t\u00eates personnalis\u00e9s <p>Aper\u00e7u</p> <p>Les en-t\u00eates de s\u00e9curit\u00e9 renforcent la communication s\u00e9curis\u00e9e, restreignent le chargement des ressources et pr\u00e9viennent les attaques comme le clickjacking et l'injection. Des en-t\u00eates correctement configur\u00e9s cr\u00e9ent une couche de d\u00e9fense robuste pour votre site web.</p> <p>Avantages des en-t\u00eates de s\u00e9curit\u00e9</p> <ul> <li>HSTS : Assure que toutes les connexions sont chiffr\u00e9es, prot\u00e9geant contre les attaques de r\u00e9trogradation de protocole.</li> <li>CSP : Emp\u00eache l'ex\u00e9cution de scripts malveillants, r\u00e9duisant le risque d'attaques XSS.</li> <li>X-Frame-Options : Bloque les tentatives de clickjacking en contr\u00f4lant l'int\u00e9gration des iframes.</li> <li>Referrer Policy : Limite les fuites d'informations sensibles via les en-t\u00eates referrer.</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>STRICT_TRANSPORT_SECURITY</code> <code>max-age=63072000; includeSubDomains; preload</code> multisite non HSTS : Force les connexions HTTPS s\u00e9curis\u00e9es, r\u00e9duisant les risques d'attaques de type \"man-in-the-middle\". <code>CONTENT_SECURITY_POLICY</code> <code>object-src 'none'; form-action 'self'; frame-ancestors 'self';</code> multisite non CSP : Restreint le chargement des ressources aux sources de confiance, att\u00e9nuant les attaques de type cross-site scripting et d'injection de donn\u00e9es. <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code> <code>no</code> multisite non Mode rapport CSP : Signale les violations sans bloquer le contenu, aidant \u00e0 tester les politiques de s\u00e9curit\u00e9 tout en capturant les journaux. <code>X_FRAME_OPTIONS</code> <code>SAMEORIGIN</code> multisite non X-Frame-Options : Emp\u00eache le clickjacking en contr\u00f4lant si votre site peut \u00eatre int\u00e9gr\u00e9 dans une frame. <code>X_CONTENT_TYPE_OPTIONS</code> <code>nosniff</code> multisite non X-Content-Type-Options : Emp\u00eache les navigateurs de \"MIME-sniffer\", prot\u00e9geant contre les attaques de type \"drive-by download\". <code>X_DNS_PREFETCH_CONTROL</code> <code>off</code> multisite non X-DNS-Prefetch-Control : R\u00e9gule le pr\u00e9chargement DNS pour r\u00e9duire les requ\u00eates r\u00e9seau involontaires et am\u00e9liorer la confidentialit\u00e9. <code>REFERRER_POLICY</code> <code>strict-origin-when-cross-origin</code> multisite non Politique de Referrer : Contr\u00f4le la quantit\u00e9 d'informations de r\u00e9f\u00e9rent envoy\u00e9es, prot\u00e9geant la vie priv\u00e9e de l'utilisateur. <code>PERMISSIONS_POLICY</code> <code>accelerometer=(), ambient-light-sensor=(), attribution-reporting=(), autoplay=(), battery=(), ...</code> multisite non Politique de permissions : Restreint l'acc\u00e8s aux fonctionnalit\u00e9s du navigateur, r\u00e9duisant les vecteurs d'attaque potentiels. <code>KEEP_UPSTREAM_HEADERS</code> <code>Content-Security-Policy Permissions-Policy X-Frame-Options</code> multisite non Conserver les en-t\u00eates : Pr\u00e9serve les en-t\u00eates en amont s\u00e9lectionn\u00e9s, facilitant l'int\u00e9gration h\u00e9rit\u00e9e tout en maintenant la s\u00e9curit\u00e9. <p>Bonnes pratiques</p> <ul> <li>R\u00e9visez et mettez \u00e0 jour r\u00e9guli\u00e8rement vos en-t\u00eates de s\u00e9curit\u00e9 pour vous conformer aux normes de s\u00e9curit\u00e9 en constante \u00e9volution.</li> <li>Utilisez des outils comme Mozilla Observatory pour valider la configuration de vos en-t\u00eates.</li> <li>Testez la CSP en mode <code>Report-Only</code> avant de l'appliquer pour \u00e9viter de casser des fonctionnalit\u00e9s.</li> </ul> <p>Aper\u00e7u</p> <p>Des param\u00e8tres de cookies appropri\u00e9s garantissent la s\u00e9curit\u00e9 des sessions utilisateur en emp\u00eachant le d\u00e9tournement, la fixation et le cross-site scripting. Les cookies s\u00e9curis\u00e9s maintiennent l'int\u00e9grit\u00e9 de la session sur HTTPS et am\u00e9liorent la protection globale des donn\u00e9es des utilisateurs.</p> <p>Avantages des cookies s\u00e9curis\u00e9s</p> <ul> <li>Attribut HttpOnly : Emp\u00eache les scripts c\u00f4t\u00e9 client d'acc\u00e9der aux cookies, att\u00e9nuant les risques XSS.</li> <li>Attribut SameSite : R\u00e9duit les attaques CSRF en restreignant l'utilisation des cookies inter-origines.</li> <li>Attribut Secure : Assure que les cookies ne sont transmis que sur des connexions HTTPS chiffr\u00e9es.</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>COOKIE_FLAGS</code> <code>* HttpOnly SameSite=Lax</code> multisite oui Attributs de cookie : Ajoute automatiquement des attributs de s\u00e9curit\u00e9 tels que HttpOnly et SameSite, prot\u00e9geant les cookies de l'acc\u00e8s par des scripts c\u00f4t\u00e9 client et des attaques CSRF. <code>COOKIE_AUTO_SECURE_FLAG</code> <code>yes</code> multisite non Attribut Secure automatique : Assure que les cookies ne sont envoy\u00e9s que sur des connexions HTTPS s\u00e9curis\u00e9es en ajoutant automatiquement l'attribut Secure. <p>Bonnes pratiques</p> <ul> <li>Utilisez <code>SameSite=Strict</code> pour les cookies sensibles afin d'emp\u00eacher l'acc\u00e8s inter-origines.</li> <li>Auditez r\u00e9guli\u00e8rement vos param\u00e8tres de cookies pour assurer la conformit\u00e9 avec les r\u00e9glementations de s\u00e9curit\u00e9 et de confidentialit\u00e9.</li> <li>\u00c9vitez de d\u00e9finir des cookies sans l'attribut Secure dans les environnements de production.</li> </ul> <p>Aper\u00e7u</p> <p>Les en-t\u00eates personnalis\u00e9s vous permettent d'ajouter des en-t\u00eates HTTP sp\u00e9cifiques pour r\u00e9pondre aux exigences de l'application ou de performance. Ils offrent de la flexibilit\u00e9 mais doivent \u00eatre configur\u00e9s avec soin pour \u00e9viter d'exposer des d\u00e9tails sensibles du serveur.</p> <p>Avantages des en-t\u00eates personnalis\u00e9s</p> <ul> <li>Am\u00e9liorez la s\u00e9curit\u00e9 en supprimant les en-t\u00eates inutiles qui pourraient divulguer des d\u00e9tails sur le serveur.</li> <li>Ajoutez des en-t\u00eates sp\u00e9cifiques \u00e0 l'application pour am\u00e9liorer la fonctionnalit\u00e9 ou le d\u00e9bogage.</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>CUSTOM_HEADER</code> multisite oui En-t\u00eate personnalis\u00e9 : Permet d'ajouter des en-t\u00eates d\u00e9finis par l'utilisateur au format NomEnTete: ValeurEnTete pour des am\u00e9liorations de s\u00e9curit\u00e9 ou de performance sp\u00e9cialis\u00e9es. <code>REMOVE_HEADERS</code> <code>Server Expect-CT X-Powered-By X-AspNet-Version X-AspNetMvc-Version Public-Key-Pins</code> multisite non Supprimer les en-t\u00eates : Sp\u00e9cifie les en-t\u00eates \u00e0 supprimer, r\u00e9duisant ainsi le risque d'exposer des d\u00e9tails internes du serveur et des vuln\u00e9rabilit\u00e9s connues. <p>Consid\u00e9rations de s\u00e9curit\u00e9</p> <ul> <li>\u00c9vitez d'exposer des informations sensibles via des en-t\u00eates personnalis\u00e9s.</li> <li>R\u00e9visez et mettez \u00e0 jour r\u00e9guli\u00e8rement les en-t\u00eates personnalis\u00e9s pour les aligner sur les exigences de votre application.</li> </ul> <p>Bonnes pratiques</p> <ul> <li>Utilisez <code>REMOVE_HEADERS</code> pour supprimer les en-t\u00eates comme <code>Server</code> et <code>X-Powered-By</code> afin de r\u00e9duire les risques de prise d'empreintes.</li> <li>Testez les en-t\u00eates personnalis\u00e9s dans un environnement de pr\u00e9-production avant de les d\u00e9ployer en production.</li> </ul>"},{"location":"fr/features/#exemples-de-configuration_4","title":"Exemples de configuration","text":"En-t\u00eates de s\u00e9curit\u00e9 de baseS\u00e9curit\u00e9 des cookies renforc\u00e9eEn-t\u00eates personnalis\u00e9s pour APIContent Security Policy - Mode rapport <p>Une configuration standard avec les en-t\u00eates de s\u00e9curit\u00e9 essentiels :</p> <pre><code>STRICT_TRANSPORT_SECURITY: \"max-age=63072000; includeSubDomains; preload\"\nCONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self'; object-src 'none'; frame-ancestors 'self'\"\nX_FRAME_OPTIONS: \"SAMEORIGIN\"\nX_CONTENT_TYPE_OPTIONS: \"nosniff\"\nREFERRER_POLICY: \"strict-origin-when-cross-origin\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version\"\n</code></pre> <p>Configuration avec des param\u00e8tres de s\u00e9curit\u00e9 des cookies robustes :</p> <pre><code>COOKIE_FLAGS: \"* HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_2: \"session_cookie Secure HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_3: \"auth_cookie Secure HttpOnly SameSite=Strict Max-Age=3600\"\nCOOKIE_AUTO_SECURE_FLAG: \"yes\"\n</code></pre> <p>Configuration pour un service API avec des en-t\u00eates personnalis\u00e9s :</p> <pre><code>CUSTOM_HEADER: \"API-Version: 1.2.3\"\nCUSTOM_HEADER_2: \"Access-Control-Max-Age: 86400\"\nCONTENT_SECURITY_POLICY: \"default-src 'none'; frame-ancestors 'none'\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version X-Runtime\"\n</code></pre> <p>Configuration pour tester la CSP sans casser les fonctionnalit\u00e9s :</p> <pre><code>CONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self' https://trusted-cdn.example.com; img-src 'self' data: https://*.example.com; style-src 'self' 'unsafe-inline' https://trusted-cdn.example.com; connect-src 'self' https://api.example.com; object-src 'none'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; report-uri https://example.com/csp-reports\"\nCONTENT_SECURITY_POLICY_REPORT_ONLY: \"yes\"\n</code></pre>"},{"location":"fr/features/#lets-encrypt","title":"Let's Encrypt","text":"<p>Prise en charge STREAM </p> <p>Le plugin Let\u2019s Encrypt simplifie la gestion des certificats SSL/TLS en automatisant la cr\u00e9ation, le renouvellement et la configuration de certificats gratuits de Let's Encrypt. Cette fonctionnalit\u00e9 active les connexions HTTPS s\u00e9curis\u00e9es pour vos sites web sans la complexit\u00e9 de la gestion manuelle des certificats, r\u00e9duisant ainsi les co\u00fbts et la charge administrative.</p> <p>Comment \u00e7a marche :</p> <ol> <li>Une fois activ\u00e9, BunkerWeb d\u00e9tecte automatiquement les domaines configur\u00e9s pour votre site.</li> <li>BunkerWeb demande des certificats SSL/TLS gratuits \u00e0 l'autorit\u00e9 de certification de Let's Encrypt.</li> <li>La propri\u00e9t\u00e9 du domaine est v\u00e9rifi\u00e9e par des d\u00e9fis HTTP (prouvant que vous contr\u00f4lez le site) ou des d\u00e9fis DNS (prouvant que vous contr\u00f4lez le DNS de votre domaine).</li> <li>Les certificats sont automatiquement install\u00e9s et configur\u00e9s pour vos domaines.</li> <li>BunkerWeb g\u00e8re les renouvellements de certificats en arri\u00e8re-plan avant leur expiration, assurant une disponibilit\u00e9 HTTPS continue.</li> <li>L'ensemble du processus est enti\u00e8rement automatis\u00e9, ne n\u00e9cessitant qu'une intervention minimale apr\u00e8s la configuration initiale.</li> </ol> <p>Pr\u00e9requis</p> <p>Pour utiliser cette fonctionnalit\u00e9, assurez-vous que des enregistrements DNS A corrects sont configur\u00e9s pour chaque domaine, pointant vers la ou les IP publiques o\u00f9 BunkerWeb est accessible. Sans une configuration DNS correcte, le processus de v\u00e9rification de domaine \u00e9chouera.</p>"},{"location":"fr/features/#comment-lutiliser_18","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour configurer et utiliser la fonctionnalit\u00e9 Let's Encrypt :</p> <ol> <li>Activer la fonctionnalit\u00e9 : Mettez le param\u00e8tre <code>AUTO_LETS_ENCRYPT</code> \u00e0 <code>yes</code> pour activer l'\u00e9mission et le renouvellement automatiques des certificats.</li> <li>Fournir un e-mail de contact : Saisissez votre adresse e-mail dans le param\u00e8tre <code>EMAIL_LETS_ENCRYPT</code> pour recevoir les notifications importantes concernant vos certificats.</li> <li>Choisir le type de d\u00e9fi : S\u00e9lectionnez la v\u00e9rification <code>http</code> ou <code>dns</code> avec le param\u00e8tre <code>LETS_ENCRYPT_CHALLENGE</code>.</li> <li>Configurer le fournisseur DNS : Si vous utilisez les d\u00e9fis DNS, sp\u00e9cifiez votre fournisseur DNS et vos identifiants.</li> <li>S\u00e9lectionner un profil de certificat : Choisissez votre profil de certificat pr\u00e9f\u00e9r\u00e9 avec le param\u00e8tre <code>LETS_ENCRYPT_PROFILE</code> (classic, tlsserver ou shortlived).</li> <li>Laissez BunkerWeb s'occuper du reste : Une fois configur\u00e9, les certificats sont automatiquement \u00e9mis, install\u00e9s et renouvel\u00e9s selon les besoins.</li> </ol> <p>Profils de certificat</p> <p>Let's Encrypt propose diff\u00e9rents profils de certificat pour diff\u00e9rents cas d'usage : - classic : Certificats \u00e0 usage g\u00e9n\u00e9ral avec une validit\u00e9 de 90 jours (par d\u00e9faut) - tlsserver : Optimis\u00e9 pour l'authentification de serveur TLS avec une validit\u00e9 de 90 jours et une charge utile plus petite - shortlived : S\u00e9curit\u00e9 renforc\u00e9e avec une validit\u00e9 de 7 jours pour les environnements automatis\u00e9s - custom : Si votre serveur ACME prend en charge un profil diff\u00e9rent, d\u00e9finissez-le avec <code>LETS_ENCRYPT_CUSTOM_PROFILE</code>.</p> <p>Disponibilit\u00e9 des profils</p> <p>Notez que les profils <code>tlsserver</code> et <code>shortlived</code> peuvent ne pas \u00eatre disponibles dans tous les environnements ou avec tous les clients ACME pour le moment. Le profil <code>classic</code> a la compatibilit\u00e9 la plus large et est recommand\u00e9 pour la plupart des utilisateurs. Si un profil s\u00e9lectionn\u00e9 n'est pas disponible, le syst\u00e8me basculera automatiquement sur le profil <code>classic</code>.</p>"},{"location":"fr/features/#parametres-de-configuration_4","title":"Param\u00e8tres de configuration","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>AUTO_LETS_ENCRYPT</code> <code>no</code> multisite no Activer Let's Encrypt : Mettre \u00e0 <code>yes</code> pour activer l'\u00e9mission et le renouvellement automatiques des certificats. <code>LETS_ENCRYPT_PASSTHROUGH</code> <code>no</code> multisite no Passer \u00e0 travers Let's Encrypt : Mettre \u00e0 <code>yes</code> pour passer les requ\u00eates Let's Encrypt au serveur web. Utile si BunkerWeb est derri\u00e8re un autre reverse proxy g\u00e9rant le SSL. <code>EMAIL_LETS_ENCRYPT</code> <code>contact@{FIRST_SERVER}</code> multisite no E-mail de contact : Adresse e-mail utilis\u00e9e pour les notifications Let's Encrypt et incluse dans les certificats. <code>LETS_ENCRYPT_CHALLENGE</code> <code>http</code> multisite no Type de d\u00e9fi : M\u00e9thode utilis\u00e9e pour v\u00e9rifier la propri\u00e9t\u00e9 du domaine. Options : <code>http</code> ou <code>dns</code>. <code>LETS_ENCRYPT_DNS_PROVIDER</code> multisite no Fournisseur DNS : Pour les d\u00e9fis DNS, le fournisseur \u00e0 utiliser (ex. : cloudflare, route53, digitalocean). <code>LETS_ENCRYPT_DNS_PROPAGATION</code> <code>default</code> multisite no Propagation DNS : Le temps d'attente en secondes pour la propagation DNS. Si aucune valeur n'est fournie, le temps par d\u00e9faut du fournisseur est utilis\u00e9. <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> multisite yes \u00c9l\u00e9ment d'identification : \u00c9l\u00e9ments de configuration pour l'authentification du fournisseur DNS (ex. : <code>cloudflare_api_token 123456</code>). Les valeurs peuvent \u00eatre du texte brut, encod\u00e9es en base64 ou un objet JSON. <code>USE_LETS_ENCRYPT_WILDCARD</code> <code>no</code> multisite no Certificats Wildcard : Si mis \u00e0 <code>yes</code>, cr\u00e9e des certificats wildcard pour tous les domaines. Uniquement disponible avec les d\u00e9fis DNS. <code>USE_LETS_ENCRYPT_STAGING</code> <code>no</code> multisite no Utiliser Staging : Si mis \u00e0 <code>yes</code>, utilise l'environnement de staging de Let's Encrypt pour les tests. Les limites de d\u00e9bit y sont plus \u00e9lev\u00e9es mais les certificats ne sont pas fiables. <code>LETS_ENCRYPT_CLEAR_OLD_CERTS</code> <code>no</code> global no Effacer les anciens certificats : Si mis \u00e0 <code>yes</code>, supprime les anciens certificats inutiles lors du renouvellement. <code>LETS_ENCRYPT_PROFILE</code> <code>classic</code> multisite no Profil de certificat : S\u00e9lectionnez le profil \u00e0 utiliser. Options : <code>classic</code> (g\u00e9n\u00e9ral), <code>tlsserver</code> (optimis\u00e9 TLS), ou <code>shortlived</code> (7 jours). <code>LETS_ENCRYPT_CUSTOM_PROFILE</code> multisite no Profil de certificat personnalis\u00e9 : Saisissez un profil personnalis\u00e9 si votre serveur ACME le supporte. Remplace <code>LETS_ENCRYPT_PROFILE</code> s'il est d\u00e9fini. <code>LETS_ENCRYPT_MAX_RETRIES</code> <code>3</code> multisite no Tentatives maximales : Nombre de tentatives de g\u00e9n\u00e9ration de certificat en cas d'\u00e9chec. <code>0</code> pour d\u00e9sactiver. Utile pour les probl\u00e8mes r\u00e9seau temporaires. <p>!!! info \"Information et comportement\" - Le param\u00e8tre <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> est un param\u00e8tre multiple et peut \u00eatre utilis\u00e9 pour d\u00e9finir plusieurs \u00e9l\u00e9ments pour le fournisseur DNS. Les \u00e9l\u00e9ments seront enregistr\u00e9s dans un fichier de cache, et Certbot lira les informations d'identification \u00e0 partir de celui-ci. - Si aucun param\u00e8tre <code>LETS_ENCRYPT_DNS_PROPAGATION</code> n'est fourni, le temps de propagation par d\u00e9faut du fournisseur est utilis\u00e9. - L'automatisation compl\u00e8te de Let's Encrypt avec le d\u00e9fi <code>http</code> fonctionne en mode stream tant que vous ouvrez le port <code>80/tcp</code> depuis l'ext\u00e9rieur. Utilisez le param\u00e8tre <code>LISTEN_STREAM_PORT_SSL</code> pour choisir votre port d'\u00e9coute SSL/TLS. - Si <code>LETS_ENCRYPT_PASSTHROUGH</code> est mis \u00e0 <code>yes</code>, BunkerWeb ne g\u00e9rera pas les requ\u00eates de d\u00e9fi ACME lui-m\u00eame mais les transmettra au serveur web backend. Ceci est utile dans les sc\u00e9narios o\u00f9 BunkerWeb agit comme un reverse proxy devant un autre serveur configur\u00e9 pour g\u00e9rer les d\u00e9fis Let's Encrypt.</p> <p>D\u00e9fis HTTP vs. DNS</p> <p>Les d\u00e9fis HTTP sont plus simples \u00e0 configurer et fonctionnent bien pour la plupart des sites web :</p> <pre><code>- N\u00e9cessite que votre site soit publiquement accessible sur le port 80\n- Configur\u00e9 automatiquement par BunkerWeb\n- Ne peut pas \u00eatre utilis\u00e9 pour les certificats wildcard\n\n**Les d\u00e9fis DNS** offrent plus de flexibilit\u00e9 et sont requis pour les certificats wildcard :\n\n- Fonctionne m\u00eame si votre site n'est pas publiquement accessible\n- N\u00e9cessite les identifiants de l'API de votre fournisseur DNS\n- Requis pour les certificats wildcard (ex. : *.example.com)\n- Utile lorsque le port 80 est bloqu\u00e9 ou indisponible\n</code></pre> <p>Certificats wildcard</p> <p>Les certificats wildcard ne sont disponibles qu'avec les d\u00e9fis DNS. Si vous souhaitez les utiliser, vous devez mettre le param\u00e8tre <code>USE_LETS_ENCRYPT_WILDCARD</code> \u00e0 <code>yes</code> et configurer correctement les identifiants de votre fournisseur DNS.</p> <p>Limites de d\u00e9bit</p> <p>Let's Encrypt impose des limites de d\u00e9bit sur l'\u00e9mission de certificats. Lors du test de configurations, utilisez l'environnement de staging en mettant <code>USE_LETS_ENCRYPT_STAGING</code> \u00e0 <code>yes</code> pour \u00e9viter d'atteindre les limites de production. Les certificats de staging ne sont pas reconnus par les navigateurs mais sont utiles pour valider votre configuration.</p>"},{"location":"fr/features/#fournisseurs-dns-supportes","title":"Fournisseurs DNS support\u00e9s","text":"<p>Le plugin Let's Encrypt prend en charge un large \u00e9ventail de fournisseurs DNS pour les d\u00e9fis DNS. Chaque fournisseur n\u00e9cessite des informations d'identification sp\u00e9cifiques qui doivent \u00eatre fournies via le param\u00e8tre <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code>.</p> Fournisseur Description Param\u00e8tres obligatoires Param\u00e8tres optionnels Documentation <code>bunny</code> bunny.net <code>api_key</code> Documentation <code>cloudflare</code> Cloudflare soit <code>api_token</code>soit <code>email</code> et <code>api_key</code> Documentation <code>desec</code> deSEC <code>token</code> Documentation <code>digitalocean</code> DigitalOcean <code>token</code> Documentation <code>domainoffensive</code> Domain-Offensive <code>api_token</code> Documentation <code>dnsimple</code> DNSimple <code>token</code> Documentation <code>dnsmadeeasy</code> DNS Made Easy <code>api_key</code><code>secret_key</code> Documentation <code>dynu</code> Dynu <code>auth_token</code> Documentation <code>gehirn</code> Gehirn DNS <code>api_token</code><code>api_secret</code> Documentation <code>google</code> Google Cloud <code>project_id</code><code>private_key_id</code><code>private_key</code><code>client_email</code><code>client_id</code><code>client_x509_cert_url</code> <code>type</code> (d\u00e9faut : <code>service_account</code>)<code>auth_uri</code> (d\u00e9faut : <code>https://accounts.google.com/o/oauth2/auth</code>)<code>token_uri</code> (d\u00e9faut : <code>https://accounts.google.com/o/oauth2/token</code>)<code>auth_provider_x509_cert_url</code> (d\u00e9faut : <code>https://www.googleapis.com/oauth2/v1/certs</code>) Documentation <code>infomaniak</code> Infomaniak <code>token</code> Documentation <code>ionos</code> IONOS <code>prefix</code><code>secret</code> <code>endpoint</code> (d\u00e9faut : <code>https://api.hosting.ionos.com</code>) Documentation <code>linode</code> Linode <code>key</code> Documentation <code>luadns</code> LuaDNS <code>email</code><code>token</code> Documentation <code>njalla</code> Njalla <code>token</code> Documentation <code>nsone</code> NS1 <code>api_key</code> Documentation <code>ovh</code> OVH <code>application_key</code><code>application_secret</code><code>consumer_key</code> <code>endpoint</code> (d\u00e9faut : <code>ovh-eu</code>) Documentation <code>rfc2136</code> RFC 2136 <code>server</code><code>name</code><code>secret</code> <code>port</code> (d\u00e9faut : <code>53</code>)<code>algorithm</code> (d\u00e9faut : <code>HMAC-SHA512</code>)<code>sign_query</code> (d\u00e9faut : <code>false</code>) Documentation <code>route53</code> Amazon Route 53 <code>access_key_id</code><code>secret_access_key</code> Documentation <code>sakuracloud</code> Sakura Cloud <code>api_token</code><code>api_secret</code> Documentation <code>scaleway</code> Scaleway <code>application_token</code> Documentation"},{"location":"fr/features/#exemples-de-configuration_5","title":"Exemples de configuration","text":"D\u00e9fi HTTP de baseDNS Cloudflare avec WildcardConfiguration AWS Route53Test avec l'environnement de Staging et tentativesDigitalOcean avec temps de propagation personnalis\u00e9Google Cloud DNS <p>Configuration simple utilisant les d\u00e9fis HTTP pour un seul domaine :</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\n</code></pre> <p>Configuration pour les certificats wildcard utilisant le DNS de Cloudflare :</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"cloudflare\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"api_token VOTRE_JETON_API\"\nUSE_LETS_ENCRYPT_WILDCARD: \"yes\"\n</code></pre> <p>Configuration utilisant Amazon Route53 pour les d\u00e9fis DNS :</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"route53\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"aws_access_key_id VOTRE_CLE_ACCES\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"aws_secret_access_key VOTRE_CLE_SECRETE\"\n</code></pre> <p>Configuration pour tester la configuration avec l'environnement de staging et des param\u00e8tres de tentatives am\u00e9lior\u00e9s :</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\nUSE_LETS_ENCRYPT_STAGING: \"yes\"\nLETS_ENCRYPT_MAX_RETRIES: \"5\"\n</code></pre> <p>Configuration utilisant le DNS de DigitalOcean avec un temps d'attente de propagation plus long :</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"digitalocean\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"token VOTRE_JETON_API\"\nLETS_ENCRYPT_DNS_PROPAGATION: \"120\"\n</code></pre> <p>Configuration utilisant Google Cloud DNS avec les informations d'identification d'un compte de service :</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"google\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"project_id votre-id-projet\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"private_key_id votre-id-cle-privee\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_3: \"private_key votre-cle-privee\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_4: \"client_email votre-email-compte-service\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_5: \"client_id votre-id-client\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_6: \"client_x509_cert_url votre-url-cert\"\n</code></pre>"},{"location":"fr/features/#limit","title":"Limit","text":"<p>Prise en charge STREAM </p> <p>Le plugin Limit permet d\u2019appliquer des politiques de limitation pour garantir un usage \u00e9quitable et prot\u00e9ger vos ressources contre les abus, les attaques par d\u00e9ni de service (DoS) et la surconsommation. Ces politiques incluent :</p> <ul> <li>Le nombre de connexions simultan\u00e9es par adresse IP (support STREAM )</li> <li>Le nombre de requ\u00eates par adresse IP et par URL sur une p\u00e9riode donn\u00e9e (support STREAM )</li> </ul>"},{"location":"fr/features/#fonctionnement_1","title":"Fonctionnement","text":"<ol> <li>Limitation de d\u00e9bit : Suit le nombre de requ\u00eates de chaque adresse IP cliente vers des URL sp\u00e9cifiques. Si un client d\u00e9passe la limite de d\u00e9bit configur\u00e9e, les requ\u00eates suivantes sont temporairement refus\u00e9es.</li> <li>Limitation de connexions : Surveille et restreint le nombre de connexions simultan\u00e9es de chaque adresse IP cliente. Diff\u00e9rentes limites de connexion peuvent \u00eatre appliqu\u00e9es en fonction du protocole utilis\u00e9 (HTTP/1, HTTP/2, HTTP/3 ou stream).</li> <li>Dans les deux cas, les clients qui d\u00e9passent les limites d\u00e9finies re\u00e7oivent un code de statut HTTP \u00ab 429 - Too Many Requests \u00bb, ce qui aide \u00e0 pr\u00e9venir la surcharge du serveur.</li> </ol>"},{"location":"fr/features/#utilisation","title":"Utilisation","text":"<ol> <li>Activer la limitation de d\u00e9bit de requ\u00eates : Utilisez <code>USE_LIMIT_REQ</code> pour activer la limitation de d\u00e9bit de requ\u00eates et d\u00e9finissez des motifs d'URL avec leurs limites correspondantes.</li> <li>Activer la limitation de connexions : Utilisez <code>USE_LIMIT_CONN</code> pour activer la limitation de connexions et d\u00e9finissez le nombre maximum de connexions simultan\u00e9es pour diff\u00e9rents protocoles.</li> <li>Appliquer un contr\u00f4le granulaire : Cr\u00e9ez plusieurs r\u00e8gles de limitation de d\u00e9bit pour diff\u00e9rentes URL afin de fournir des niveaux de protection vari\u00e9s sur votre site.</li> <li>Suivre l'efficacit\u00e9 : Utilisez l'interface web pour consulter les statistiques sur les requ\u00eates et les connexions limit\u00e9es.</li> </ol>"},{"location":"fr/features/#parametres_14","title":"Param\u00e8tres","text":"Limitation de requ\u00eates Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_LIMIT_REQ</code> <code>yes</code> multisite non Activer la limitation de requ\u00eates : Mettre \u00e0 <code>yes</code> pour activer la fonctionnalit\u00e9 de limitation de d\u00e9bit par requ\u00eates. <code>LIMIT_REQ_URL</code> <code>/</code> multisite oui Motif d\u2019URL : Motif d\u2019URL (regex PCRE) auquel la limite de d\u00e9bit sera appliqu\u00e9e ; utilisez <code>/</code> pour l'appliquer \u00e0 toutes les requ\u00eates. <code>LIMIT_REQ_RATE</code> <code>2r/s</code> multisite oui Limite de d\u00e9bit : Taux de requ\u00eates maximal au format <code>Nr/t</code>, o\u00f9 N est le nombre de requ\u00eates et t est l'unit\u00e9 de temps : s (seconde), m (minute), h (heure), ou d (jour). <p>Format de la limitation de d\u00e9bit</p> <p>Le format de la limite de d\u00e9bit est sp\u00e9cifi\u00e9 comme <code>Nr/t</code> o\u00f9 :</p> <pre><code>- `N` est le nombre de requ\u00eates autoris\u00e9es\n- `r` est la lettre litt\u00e9rale 'r' (pour 'requ\u00eates')\n- `/` est une barre oblique litt\u00e9rale\n- `t` est l'unit\u00e9 de temps : `s` (seconde), `m` (minute), `h` (heure), ou `d` (jour)\n\nPar exemple, `5r/m` signifie que 5 requ\u00eates par minute sont autoris\u00e9es pour chaque adresse IP.\n</code></pre> Limitation de connexions Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_LIMIT_CONN</code> <code>yes</code> multisite non Activer la limitation de connexions : Mettre \u00e0 <code>yes</code> pour activer la limitation de connexions simultan\u00e9es. <code>LIMIT_CONN_MAX_HTTP1</code> <code>10</code> multisite non Connexions HTTP/1.X : Nombre maximal de connexions HTTP/1.X simultan\u00e9es par adresse IP. <code>LIMIT_CONN_MAX_HTTP2</code> <code>100</code> multisite non Flux HTTP/2 : Nombre maximal de flux HTTP/2 simultan\u00e9s par adresse IP. <code>LIMIT_CONN_MAX_HTTP3</code> <code>100</code> multisite non Flux HTTP/3 : Nombre maximal de flux HTTP/3 simultan\u00e9s par adresse IP. <code>LIMIT_CONN_MAX_STREAM</code> <code>10</code> multisite non Connexions Stream : Nombre maximal de connexions stream simultan\u00e9es par adresse IP. <p>!!! info \"Limitation de connexions vs de requ\u00eates\" - La limitation de connexions restreint le nombre de connexions simultan\u00e9es qu'une seule adresse IP peut maintenir. - La limitation de d\u00e9bit de requ\u00eates restreint le nombre de requ\u00eates qu'une adresse IP peut effectuer dans une p\u00e9riode de temps d\u00e9finie.</p> <pre><code>L'utilisation des deux m\u00e9thodes offre une protection compl\u00e8te contre divers types d'abus.\n</code></pre> <p>R\u00e9glages adapt\u00e9s</p> <p>Des limites trop strictes peuvent impacter des clients l\u00e9gitimes, notamment pour HTTP/2 et HTTP/3 o\u00f9 les navigateurs utilisent souvent plusieurs flux. Les valeurs par d\u00e9faut sont \u00e9quilibr\u00e9es pour la plupart des cas d'utilisation, mais envisagez de les ajuster en fonction des besoins de votre application et du comportement des utilisateurs.</p>"},{"location":"fr/features/#exemples-de-configuration_6","title":"Exemples de configuration","text":"Protection de baseProtection d'endpoints sp\u00e9cifiquesConfiguration pour site \u00e0 fort traficConfiguration pour serveur d'API <p>Une configuration simple utilisant les param\u00e8tres par d\u00e9faut pour prot\u00e9ger l'ensemble de votre site :</p> <pre><code>USE_LIMIT_REQ: \"yes\"\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"2r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Configuration avec diff\u00e9rentes limites de d\u00e9bit pour divers endpoints :</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# R\u00e8gle par d\u00e9faut pour toutes les requ\u00eates\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"10r/s\"\n\n# Limite plus stricte pour la page de connexion\nLIMIT_REQ_URL_2: \"^/login\"\nLIMIT_REQ_RATE_2: \"1r/s\"\n\n# Limite plus stricte pour l'API\nLIMIT_REQ_URL_3: \"^/api/\"\nLIMIT_REQ_RATE_3: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Configuration optimis\u00e9e pour les sites \u00e0 fort trafic avec des limites plus permissives :</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Limite g\u00e9n\u00e9rale\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"30r/s\"\n\n# Protection de la zone d'administration\nLIMIT_REQ_URL_2: \"^/admin/\"\nLIMIT_REQ_RATE_2: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"50\"\nLIMIT_CONN_MAX_HTTP2: \"200\"\nLIMIT_CONN_MAX_HTTP3: \"200\"\nLIMIT_CONN_MAX_STREAM: \"30\"\n</code></pre> <p>Configuration optimis\u00e9e pour un serveur d'API avec des limites de d\u00e9bit exprim\u00e9es en requ\u00eates par minute :</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Endpoints de l'API publique\nLIMIT_REQ_URL: \"^/api/public/\"\nLIMIT_REQ_RATE: \"120r/m\"\n\n# Endpoints de l'API priv\u00e9e\nLIMIT_REQ_URL_2: \"^/api/private/\"\nLIMIT_REQ_RATE_2: \"300r/m\"\n\n# Endpoint d'authentification\nLIMIT_REQ_URL_3: \"^/api/auth\"\nLIMIT_REQ_RATE_3: \"10r/m\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"20\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"20\"\n</code></pre>"},{"location":"fr/features/#load-balancer-pro","title":"Load Balancer  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Provides load balancing feature to group of upstreams with optional healthchecks.</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>LOADBALANCER_HEALTHCHECK_DICT_SIZE</code> <code>10m</code> global non Shared dict size (datastore for all healthchecks). <code>LOADBALANCER_UPSTREAM_NAME</code> global oui Name of the upstream (used in REVERSE_PROXY_HOST). <code>LOADBALANCER_UPSTREAM_SERVERS</code> global oui List of servers/IPs in the server group. <code>LOADBALANCER_UPSTREAM_MODE</code> <code>round-robin</code> global oui Load balancing mode (round-robin or sticky). <code>LOADBALANCER_UPSTREAM_STICKY_METHOD</code> <code>ip</code> global oui Sticky session method (ip or cookie). <code>LOADBALANCER_UPSTREAM_RESOLVE</code> <code>no</code> global oui Dynamically resolve upstream hostnames. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIMEOUT</code> <code>60s</code> global oui Keepalive timeout for upstream connections. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIME</code> <code>1h</code> global oui Keepalive time for upstream connections. <code>LOADBALANCER_HEALTHCHECK_URL</code> <code>/status</code> global oui The healthcheck URL. <code>LOADBALANCER_HEALTHCHECK_INTERVAL</code> <code>2000</code> global oui Healthcheck interval in milliseconds. <code>LOADBALANCER_HEALTHCHECK_TIMEOUT</code> <code>1000</code> global oui Healthcheck timeout in milliseconds. <code>LOADBALANCER_HEALTHCHECK_FALL</code> <code>3</code> global oui Number of failed healthchecks before marking the server as down. <code>LOADBALANCER_HEALTHCHECK_RISE</code> <code>1</code> global oui Number of successful healthchecks before marking the server as up. <code>LOADBALANCER_HEALTHCHECK_VALID_STATUSES</code> <code>200</code> global oui HTTP status considered valid in healthchecks. <code>LOADBALANCER_HEALTHCHECK_CONCURRENCY</code> <code>10</code> global oui Maximum number of concurrent healthchecks. <code>LOADBALANCER_HEALTHCHECK_TYPE</code> <code>http</code> global oui Type of healthcheck (http or https). <code>LOADBALANCER_HEALTHCHECK_SSL_VERIFY</code> <code>yes</code> global oui Verify SSL certificate in healthchecks. <code>LOADBALANCER_HEALTHCHECK_HOST</code> global oui Host header for healthchecks (useful for HTTPS)."},{"location":"fr/features/#metrics","title":"Metrics","text":"<p>Prise en charge STREAM </p> <p>Le plugin Metrics offre une collecte/visualisation des indicateurs de votre instance BunkerWeb\u00a0: performances, \u00e9v\u00e9nements de s\u00e9curit\u00e9, statistiques syst\u00e8me\u2026</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>BunkerWeb collecte des m\u00e9triques lors du traitement des requ\u00eates/r\u00e9ponses.</li> <li>Compteurs de requ\u00eates bloqu\u00e9es, mesures de perfs et stats s\u00e9curit\u00e9 sont enregistr\u00e9s.</li> <li>Stockage en m\u00e9moire avec limites configurables pour contenir l\u2019usage de ressources.</li> <li>En multi\u2011instances, Redis permet d\u2019agr\u00e9ger/centraliser les donn\u00e9es.</li> <li>Acc\u00e8s via API ou web UI.</li> </ol>"},{"location":"fr/features/#parametres_15","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_METRICS</code> <code>yes</code> multisite non Activer la collecte et l\u2019acc\u00e8s aux m\u00e9triques. <code>METRICS_MEMORY_SIZE</code> <code>16m</code> global non Taille du stockage interne (ex. <code>16m</code>, <code>32m</code>). <code>METRICS_MAX_BLOCKED_REQUESTS</code> <code>1000</code> global non Max de requ\u00eates bloqu\u00e9es conserv\u00e9es par worker. <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> <code>100000</code> global non Max de requ\u00eates bloqu\u00e9es conserv\u00e9es dans Redis. <code>METRICS_SAVE_TO_REDIS</code> <code>yes</code> global non Sauvegarder compteurs/tableaux dans Redis pour agr\u00e9gation cluster. <p>Dimensionnement m\u00e9moire</p> <p>Ajustez <code>METRICS_MEMORY_SIZE</code> selon le trafic et le nombre d\u2019instances.</p> <p>Int\u00e9gration Redis</p> <p>Avec Redis, les requ\u00eates bloqu\u00e9es sont synchronis\u00e9es pour une vue centralis\u00e9e multi\u2011n\u0153uds.</p> <p>Performance</p> <p>Des valeurs trop \u00e9lev\u00e9es augmentent l\u2019usage m\u00e9moire. Surveillez et ajustez.</p>"},{"location":"fr/features/#exemples_12","title":"Exemples","text":"Configuration par d\u00e9faut <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"16m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"1000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"100000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> Ressources limit\u00e9es <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"8m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"500\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"10000\"\nMETRICS_SAVE_TO_REDIS: \"no\"\n</code></pre> Fort trafic <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"64m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"5000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"500000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> D\u00e9sactivation <pre><code>USE_METRICS: \"no\"\n</code></pre>"},{"location":"fr/features/#migration-pro","title":"Migration  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Migration of BunkerWeb configuration between instances made easy via the web UI</p>"},{"location":"fr/features/#miscellaneous","title":"Miscellaneous","text":"<p>Prise en charge STREAM </p> <p>Le plugin Divers (Miscellaneous) fournit des param\u00e8tres de base essentiels qui aident \u00e0 maintenir la s\u00e9curit\u00e9 et la fonctionnalit\u00e9 de votre site web. Ce composant central offre des contr\u00f4les complets pour :</p> <ul> <li>Le comportement du serveur - Configurez la mani\u00e8re dont votre serveur r\u00e9pond \u00e0 diverses requ\u00eates</li> <li>Les param\u00e8tres HTTP - G\u00e9rez les m\u00e9thodes, la taille des requ\u00eates et les options de protocole</li> <li>La gestion des fichiers - Contr\u00f4lez le service des fichiers statiques et optimisez leur livraison</li> <li>Le support des protocoles - Activez les protocoles HTTP modernes pour de meilleures performances</li> <li>Les configurations syst\u00e8me - \u00c9tendez les fonctionnalit\u00e9s et am\u00e9liorez la s\u00e9curit\u00e9</li> </ul> <p>Que vous ayez besoin de restreindre les m\u00e9thodes HTTP, de g\u00e9rer la taille des requ\u00eates, d'optimiser la mise en cache des fichiers ou de contr\u00f4ler la mani\u00e8re dont votre serveur r\u00e9pond \u00e0 diverses requ\u00eates, ce plugin vous donne les outils pour affiner le comportement de votre service web tout en optimisant \u00e0 la fois la performance et la s\u00e9curit\u00e9.</p>"},{"location":"fr/features/#fonctionnalites-cles","title":"Fonctionnalit\u00e9s cl\u00e9s","text":"Cat\u00e9gorie de fonctionnalit\u00e9 Description Contr\u00f4le des m\u00e9thodes HTTP D\u00e9finissez quelles m\u00e9thodes HTTP sont acceptables pour votre application Protection du serveur par d\u00e9faut Emp\u00eachez l'acc\u00e8s non autoris\u00e9 par des noms d'h\u00f4te incorrects et forcez le SNI pour les connexions s\u00e9curis\u00e9es Gestion de la taille des requ\u00eates D\u00e9finissez des limites pour le corps des requ\u00eates client et les t\u00e9l\u00e9versements de fichiers Service de fichiers statiques Configurez et optimisez la livraison de contenu statique depuis des dossiers racine personnalis\u00e9s Mise en cache des fichiers Am\u00e9liorez les performances gr\u00e2ce \u00e0 des m\u00e9canismes avanc\u00e9s de mise en cache des descripteurs de fichiers Support des protocoles Configurez les options des protocoles HTTP modernes (HTTP2/HTTP3) et les param\u00e8tres de port Alt-Svc Rapport anonyme Rapport de statistiques d'utilisation optionnel pour aider \u00e0 am\u00e9liorer BunkerWeb Support des plugins externes \u00c9tendez les fonctionnalit\u00e9s en int\u00e9grant des plugins externes via des URL Contr\u00f4le du statut HTTP Configurez la r\u00e9ponse de votre serveur lors du refus de requ\u00eates (y compris la fermeture de connexion)"},{"location":"fr/features/#guide-de-configuration_1","title":"Guide de configuration","text":"S\u00e9curit\u00e9 du serveur par d\u00e9fautStatut HTTP en cas de refusM\u00e9thodes HTTPLimites de taille des requ\u00eatesSupport des protocolesService de fichiers statiquesParam\u00e8tres syst\u00e8meMise en cache des fichiers <p>Contr\u00f4les du serveur par d\u00e9faut</p> <p>En HTTP, l'en-t\u00eate <code>Host</code> sp\u00e9cifie le serveur cible, mais il peut \u00eatre manquant ou inconnu, souvent \u00e0 cause de bots recherchant des vuln\u00e9rabilit\u00e9s.</p> <p>Pour bloquer de telles requ\u00eates :</p> <ul> <li>Mettez <code>DISABLE_DEFAULT_SERVER</code> \u00e0 <code>yes</code> pour refuser silencieusement ces requ\u00eates en utilisant le code de statut <code>444</code> de NGINX.</li> <li>Pour une s\u00e9curit\u00e9 plus stricte, activez <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> pour rejeter les connexions SSL/TLS sans SNI valide.</li> </ul> <p>Avantages en mati\u00e8re de s\u00e9curit\u00e9</p> <ul> <li>Bloque la manipulation de l'en-t\u00eate Host et le scan des h\u00f4tes virtuels</li> <li>Att\u00e9nue les risques de contrebande de requ\u00eates HTTP (HTTP request smuggling)</li> <li>Supprime le serveur par d\u00e9faut comme vecteur d'attaque</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>DISABLE_DEFAULT_SERVER</code> <code>no</code> global no Serveur par d\u00e9faut : Mettre \u00e0 <code>yes</code> pour d\u00e9sactiver le serveur par d\u00e9faut lorsqu'aucun nom d'h\u00f4te ne correspond \u00e0 la requ\u00eate. <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> <code>no</code> global no SNI Strict : Si mis \u00e0 <code>yes</code>, requiert le SNI pour les connexions HTTPS et rejette les connexions sans SNI valide. <p>Application du SNI</p> <p>Activer la validation stricte du SNI offre une s\u00e9curit\u00e9 renforc\u00e9e mais peut causer des probl\u00e8mes si BunkerWeb est derri\u00e8re un proxy inverse qui transmet les requ\u00eates HTTPS sans pr\u00e9server les informations SNI. Testez minutieusement avant d'activer en production.</p> <p>Contr\u00f4le du statut HTTP</p> <p>La premi\u00e8re \u00e9tape dans la gestion de l'acc\u00e8s refus\u00e9 \u00e0 un client est de d\u00e9finir l'action appropri\u00e9e. Cela peut \u00eatre configur\u00e9 avec le param\u00e8tre <code>DENY_HTTP_STATUS</code>. Lorsque BunkerWeb refuse une requ\u00eate, vous pouvez contr\u00f4ler sa r\u00e9ponse. Par d\u00e9faut, il renvoie un statut <code>403 Forbidden</code>, affichant une page web ou un contenu personnalis\u00e9.</p> <p>Alternativement, le r\u00e9gler sur <code>444</code> ferme imm\u00e9diatement la connexion sans envoyer de r\u00e9ponse. Ce code de statut non standard, sp\u00e9cifique \u00e0 NGINX, est utile pour ignorer silencieusement les requ\u00eates ind\u00e9sirables.</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>DENY_HTTP_STATUS</code> <code>403</code> global no Statut HTTP de refus : Code de statut HTTP \u00e0 envoyer quand une requ\u00eate est refus\u00e9e (403 ou 444). Le code 444 ferme la connexion. <p>Consid\u00e9rations sur le code de statut 444</p> <p>Comme les clients ne re\u00e7oivent aucun retour, le d\u00e9pannage peut \u00eatre plus difficile. R\u00e9gler sur <code>444</code> est recommand\u00e9 uniquement si vous avez minutieusement trait\u00e9 les faux positifs, \u00eates exp\u00e9riment\u00e9 avec BunkerWeb et exigez un niveau de s\u00e9curit\u00e9 plus \u00e9lev\u00e9.</p> <p>Mode stream</p> <p>En mode stream, ce param\u00e8tre est toujours appliqu\u00e9 comme <code>444</code>, ce qui signifie que la connexion sera ferm\u00e9e, quelle que soit la valeur configur\u00e9e.</p> <p>Contr\u00f4le des m\u00e9thodes HTTP</p> <p>Restreindre les m\u00e9thodes HTTP \u00e0 celles requises par votre application est une mesure de s\u00e9curit\u00e9 fondamentale qui respecte le principe du moindre privil\u00e8ge. En d\u00e9finissant explicitement les m\u00e9thodes acceptables, vous minimisez le risque d'exploitation via des m\u00e9thodes inutilis\u00e9es ou dangereuses.</p> <p>Cette fonctionnalit\u00e9 est configur\u00e9e avec <code>ALLOWED_METHODS</code>, o\u00f9 les m\u00e9thodes sont list\u00e9es et s\u00e9par\u00e9es par un <code>|</code> (d\u00e9faut : <code>GET|POST|HEAD</code>). Si un client tente une m\u00e9thode non list\u00e9e, le serveur r\u00e9pondra avec un statut 405 - Method Not Allowed.</p> <p>Pour la plupart des sites web, le d\u00e9faut <code>GET|POST|HEAD</code> est suffisant. Si votre application utilise des API RESTful, vous devrez peut-\u00eatre inclure <code>PUT</code> et <code>DELETE</code>.</p> <p>Avantages en mati\u00e8re de s\u00e9curit\u00e9</p> <ul> <li>Emp\u00eache l'exploitation de m\u00e9thodes HTTP inutilis\u00e9es ou inutiles</li> <li>R\u00e9duit la surface d'attaque en d\u00e9sactivant les m\u00e9thodes potentiellement dangereuses</li> <li>Bloque les techniques d'\u00e9num\u00e9ration de m\u00e9thodes HTTP utilis\u00e9es par les attaquants</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>ALLOWED_METHODS</code> <code>GET   | POST     | HEAD</code> multisite no M\u00e9thodes HTTP : Liste des m\u00e9thodes HTTP autoris\u00e9es, s\u00e9par\u00e9es par des barres verticales (<code>|</code>). <p>CORS et requ\u00eates pre-flight</p> <p>Si votre application prend en charge le Cross-Origin Resource Sharing (CORS), vous devriez inclure la m\u00e9thode <code>OPTIONS</code> dans <code>ALLOWED_METHODS</code> pour g\u00e9rer les requ\u00eates pre-flight. Cela garantit le bon fonctionnement pour les navigateurs effectuant des requ\u00eates inter-origines.</p> <p>Consid\u00e9rations de s\u00e9curit\u00e9</p> <ul> <li>\u00c9vitez d'activer <code>TRACE</code> ou <code>CONNECT</code> : Ces m\u00e9thodes sont rarement n\u00e9cessaires et peuvent introduire des risques de s\u00e9curit\u00e9 importants, comme le Cross-Site Tracing (XST) ou les attaques par tunnelisation.</li> <li>R\u00e9visez r\u00e9guli\u00e8rement les m\u00e9thodes autoris\u00e9es : Auditez p\u00e9riodiquement <code>ALLOWED_METHODS</code> pour vous assurer qu'il correspond aux besoins actuels de votre application.</li> <li>Testez minutieusement avant le d\u00e9ploiement : Les changements de restrictions de m\u00e9thodes HTTP peuvent impacter la fonctionnalit\u00e9 de l'application. Validez votre configuration dans un environnement de pr\u00e9-production.</li> </ul> <p>Limites de taille des requ\u00eates</p> <p>La taille maximale du corps d'une requ\u00eate peut \u00eatre contr\u00f4l\u00e9e avec <code>MAX_CLIENT_SIZE</code> (d\u00e9faut : <code>10m</code>). Les valeurs accept\u00e9es suivent la syntaxe d\u00e9crite ici.</p> <p>Avantages en mati\u00e8re de s\u00e9curit\u00e9</p> <ul> <li>Prot\u00e8ge contre les attaques par d\u00e9ni de service caus\u00e9es par des charges utiles excessives</li> <li>Att\u00e9nue les vuln\u00e9rabilit\u00e9s de d\u00e9bordement de tampon (buffer overflow)</li> <li>Emp\u00eache les attaques par t\u00e9l\u00e9versement de fichiers</li> <li>R\u00e9duit le risque d'\u00e9puisement des ressources du serveur</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>MAX_CLIENT_SIZE</code> <code>10m</code> multisite no Taille maximale des requ\u00eates : La taille maximale autoris\u00e9e pour le corps des requ\u00eates client (ex. : t\u00e9l\u00e9versements). <p>Bonnes pratiques de configuration de la taille des requ\u00eates</p> <p>Si vous devez autoriser un corps de requ\u00eate de taille illimit\u00e9e, vous pouvez mettre la valeur <code>MAX_CLIENT_SIZE</code> \u00e0 <code>0</code>. Cependant, ce n'est pas recommand\u00e9 en raison des risques potentiels de s\u00e9curit\u00e9 et de performance.</p> <p>Bonnes pratiques :</p> <ul> <li>Configurez toujours <code>MAX_CLIENT_SIZE</code> \u00e0 la plus petite valeur r\u00e9pondant aux besoins l\u00e9gitimes de votre application.</li> <li>R\u00e9visez et ajustez r\u00e9guli\u00e8rement ce param\u00e8tre pour l'aligner sur les besoins \u00e9volutifs de votre application.</li> <li>\u00c9vitez de mettre <code>0</code> sauf en cas de n\u00e9cessit\u00e9 absolue, car cela peut exposer votre serveur \u00e0 des attaques par d\u00e9ni de service et \u00e0 l'\u00e9puisement des ressources.</li> </ul> <p>En g\u00e9rant soigneusement ce param\u00e8tre, vous pouvez garantir une s\u00e9curit\u00e9 et des performances optimales pour votre application.</p> <p>Param\u00e8tres des protocoles HTTP</p> <p>Les protocoles HTTP modernes comme HTTP/2 et HTTP/3 am\u00e9liorent la performance et la s\u00e9curit\u00e9. BunkerWeb permet une configuration facile de ces protocoles.</p> <p>Avantages en mati\u00e8re de s\u00e9curit\u00e9 et de performance</p> <ul> <li>Avantages de s\u00e9curit\u00e9 : Les protocoles modernes comme HTTP/2 et HTTP/3 imposent TLS/HTTPS par d\u00e9faut, r\u00e9duisent la sensibilit\u00e9 \u00e0 certaines attaques et am\u00e9liorent la confidentialit\u00e9 gr\u00e2ce aux en-t\u00eates chiffr\u00e9s (HTTP/3).</li> <li>Avantages de performance : Des fonctionnalit\u00e9s comme le multiplexage, la compression des en-t\u00eates, le server push et le transfert de donn\u00e9es binaires am\u00e9liorent la vitesse et l'efficacit\u00e9.</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>LISTEN_HTTP</code> <code>yes</code> multisite no \u00c9coute HTTP : R\u00e9pondre aux requ\u00eates HTTP (non s\u00e9curis\u00e9es) si mis \u00e0 <code>yes</code>. <code>HTTP2</code> <code>yes</code> multisite no HTTP2 : Supporte le protocole HTTP2 lorsque HTTPS est activ\u00e9. <code>HTTP3</code> <code>yes</code> multisite no HTTP3 : Supporte le protocole HTTP3 lorsque HTTPS est activ\u00e9. <code>HTTP3_ALT_SVC_PORT</code> <code>443</code> multisite no Port Alt-Svc HTTP3 : Port \u00e0 utiliser dans l'en-t\u00eate Alt-Svc pour HTTP3. <p>\u00c0 propos de HTTP/3</p> <p>HTTP/3, la derni\u00e8re version du protocole Hypertext Transfer, utilise QUIC sur UDP au lieu de TCP, r\u00e9solvant des probl\u00e8mes comme le blocage en t\u00eate de ligne pour des connexions plus rapides et plus fiables.</p> <p>NGINX a introduit un support exp\u00e9rimental pour HTTP/3 et QUIC \u00e0 partir de la version 1.25.0. Cependant, cette fonctionnalit\u00e9 est encore exp\u00e9rimentale, et la prudence est de mise pour une utilisation en production. Pour plus de d\u00e9tails, consultez la documentation officielle de NGINX.</p> <p>Des tests approfondis sont recommand\u00e9s avant d'activer HTTP/3 en production.</p> <p>Configuration du service de fichiers</p> <p>BunkerWeb peut servir des fichiers statiques directement ou agir comme un proxy inverse vers un serveur d'application. Par d\u00e9faut, les fichiers sont servis depuis <code>/var/www/html/{server_name}</code>.</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>SERVE_FILES</code> <code>yes</code> multisite no Servir des fichiers : Si <code>yes</code>, BunkerWeb servira les fichiers statiques depuis le dossier racine configur\u00e9. <code>ROOT_FOLDER</code> <code>/var/www/html/{server_name}</code> multisite no Dossier racine : Le r\u00e9pertoire depuis lequel servir les fichiers statiques. Vide signifie utiliser l'emplacement par d\u00e9faut. <p>Bonnes pratiques pour le service de fichiers statiques</p> <ul> <li>Service direct : Activez le service de fichiers (<code>SERVE_FILES=yes</code>) lorsque BunkerWeb est responsable de servir directement les fichiers statiques.</li> <li>Proxy inverse : Si BunkerWeb agit comme un proxy inverse, d\u00e9sactivez le service de fichiers (<code>SERVE_FILES=no</code>) pour r\u00e9duire la surface d'attaque et \u00e9viter d'exposer des r\u00e9pertoires inutiles.</li> <li>Permissions : Assurez-vous que les permissions de fichiers et les configurations de chemin sont correctes pour emp\u00eacher tout acc\u00e8s non autoris\u00e9.</li> <li>S\u00e9curit\u00e9 : \u00c9vitez d'exposer des r\u00e9pertoires ou des fichiers sensibles par des mauvaises configurations.</li> </ul> <p>En g\u00e9rant soigneusement le service de fichiers statiques, vous pouvez optimiser les performances tout en maintenant un environnement s\u00e9curis\u00e9.</p> <p>Gestion des plugins et du syst\u00e8me</p> <p>Ces param\u00e8tres g\u00e8rent l'interaction de BunkerWeb avec des syst\u00e8mes externes et contribuent \u00e0 l'am\u00e9lioration du produit via des statistiques d'utilisation anonymes optionnelles.</p> <p>Rapport anonyme</p> <p>Le rapport anonyme fournit \u00e0 l'\u00e9quipe de BunkerWeb des informations sur la mani\u00e8re dont le logiciel est utilis\u00e9. Cela aide \u00e0 identifier les domaines d'am\u00e9lioration et \u00e0 prioriser le d\u00e9veloppement de fonctionnalit\u00e9s. Les rapports sont strictement statistiques et n'incluent aucune information sensible ou personnellement identifiable. Ils couvrent :</p> <ul> <li>Les fonctionnalit\u00e9s activ\u00e9es</li> <li>Les sch\u00e9mas de configuration g\u00e9n\u00e9raux</li> </ul> <p>Vous pouvez d\u00e9sactiver cette fonctionnalit\u00e9 si vous le souhaitez en mettant <code>SEND_ANONYMOUS_REPORT</code> \u00e0 <code>no</code>.</p> <p>Plugins externes</p> <p>Les plugins externes vous permettent d'\u00e9tendre les fonctionnalit\u00e9s de BunkerWeb en int\u00e9grant des modules tiers. Cela permet une personnalisation suppl\u00e9mentaire et des cas d'utilisation avanc\u00e9s.</p> <p>S\u00e9curit\u00e9 des plugins externes</p> <p>Les plugins externes peuvent introduire des risques de s\u00e9curit\u00e9 s'ils ne sont pas correctement v\u00e9rifi\u00e9s. Suivez ces bonnes pratiques pour minimiser les menaces potentielles :</p> <ul> <li>N'utilisez que des plugins provenant de sources fiables.</li> <li>V\u00e9rifiez l'int\u00e9grit\u00e9 des plugins \u00e0 l'aide de sommes de contr\u00f4le (checksums) lorsqu'elles sont disponibles.</li> <li>R\u00e9visez et mettez \u00e0 jour r\u00e9guli\u00e8rement les plugins pour garantir la s\u00e9curit\u00e9 et la compatibilit\u00e9.</li> </ul> <p>Pour plus de d\u00e9tails, consultez la documentation des Plugins.</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>SEND_ANONYMOUS_REPORT</code> <code>yes</code> global no Rapports anonymes : Envoyer des rapports d'utilisation anonymes aux mainteneurs de BunkerWeb. <code>EXTERNAL_PLUGIN_URLS</code> global no Plugins externes : URL pour t\u00e9l\u00e9charger des plugins externes (s\u00e9par\u00e9es par des espaces). <p>Optimisation du cache de fichiers</p> <p>Le cache de fichiers ouverts am\u00e9liore les performances en stockant les descripteurs de fichiers et les m\u00e9tadonn\u00e9es en m\u00e9moire, r\u00e9duisant ainsi le besoin d'op\u00e9rations r\u00e9p\u00e9t\u00e9es sur le syst\u00e8me de fichiers.</p> <p>Avantages de la mise en cache de fichiers</p> <ul> <li>Performance : R\u00e9duit les E/S du syst\u00e8me de fichiers, diminue la latence et abaisse l'utilisation du CPU pour les op\u00e9rations sur les fichiers.</li> <li>S\u00e9curit\u00e9 : Att\u00e9nue les attaques par synchronisation (timing attacks) en mettant en cache les r\u00e9ponses d'erreur et r\u00e9duit l'impact des attaques DoS ciblant le syst\u00e8me de fichiers.</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_OPEN_FILE_CACHE</code> <code>no</code> multisite no Activer le cache : Activer la mise en cache des descripteurs de fichiers et des m\u00e9tadonn\u00e9es pour am\u00e9liorer les performances. <code>OPEN_FILE_CACHE</code> <code>max=1000 inactive=20s</code> multisite no Configuration du cache : Configurez le cache de fichiers ouverts (ex. : nombre max d'entr\u00e9es et d\u00e9lai d'inactivit\u00e9). <code>OPEN_FILE_CACHE_ERRORS</code> <code>yes</code> multisite no Mettre en cache les erreurs : Met en cache les erreurs de recherche de descripteurs de fichiers ainsi que les recherches r\u00e9ussies. <code>OPEN_FILE_CACHE_MIN_USES</code> <code>2</code> multisite no Utilisations minimales : Nombre minimum d'acc\u00e8s pendant la p\u00e9riode d'inactivit\u00e9 pour qu'un fichier reste en cache. <code>OPEN_FILE_CACHE_VALID</code> <code>30s</code> multisite no Validit\u00e9 du cache : Temps apr\u00e8s lequel les \u00e9l\u00e9ments mis en cache sont revalid\u00e9s. <p>Guide de configuration</p> <p>Pour activer et configurer la mise en cache des fichiers : 1. Mettez <code>USE_OPEN_FILE_CACHE</code> \u00e0 <code>yes</code>. 2. Ajustez les param\u00e8tres <code>OPEN_FILE_CACHE</code> pour d\u00e9finir le nombre maximum d'entr\u00e9es et leur d\u00e9lai d'inactivit\u00e9. 3. Utilisez <code>OPEN_FILE_CACHE_ERRORS</code> pour mettre en cache les recherches r\u00e9ussies et \u00e9chou\u00e9es. 4. R\u00e9glez <code>OPEN_FILE_CACHE_MIN_USES</code> pour sp\u00e9cifier le nombre d'acc\u00e8s requis pour qu'un fichier reste en cache. 5. D\u00e9finissez la p\u00e9riode de validit\u00e9 du cache avec <code>OPEN_FILE_CACHE_VALID</code>.</p> <p>Bonnes pratiques</p> <ul> <li>Activez la mise en cache pour les sites web avec de nombreux fichiers statiques pour am\u00e9liorer les performances.</li> <li>R\u00e9visez et affinez r\u00e9guli\u00e8rement les param\u00e8tres de cache pour \u00e9quilibrer performance et utilisation des ressources.</li> <li>Dans les environnements dynamiques o\u00f9 les fichiers changent fr\u00e9quemment, envisagez de r\u00e9duire la p\u00e9riode de validit\u00e9 du cache ou de d\u00e9sactiver la fonctionnalit\u00e9 pour garantir la fra\u00eecheur du contenu.</li> </ul>"},{"location":"fr/features/#exemples-de-configuration_7","title":"Exemples de configuration","text":"S\u00e9curit\u00e9 du serveur par d\u00e9fautStatut HTTP en cas de refusM\u00e9thodes HTTPLimites de taille des requ\u00eatesSupport des protocolesService de fichiers statiquesMise en cache des fichiers <p>Exemple pour d\u00e9sactiver le serveur par d\u00e9faut et forcer le SNI strict :</p> <pre><code>DISABLE_DEFAULT_SERVER: \"yes\"\nDISABLE_DEFAULT_SERVER_STRICT_SNI: \"yes\"\n</code></pre> <p>Exemple pour ignorer silencieusement les requ\u00eates ind\u00e9sirables :</p> <pre><code>DENY_HTTP_STATUS: \"444\"\n</code></pre> <p>Exemple pour restreindre les m\u00e9thodes HTTP \u00e0 celles requises par une API RESTful :</p> <pre><code>ALLOWED_METHODS: \"GET|POST|PUT|DELETE\"\n</code></pre> <p>Exemple pour limiter la taille maximale du corps d'une requ\u00eate :</p> <pre><code>MAX_CLIENT_SIZE: \"5m\"\n</code></pre> <p>Exemple pour activer HTTP/2 et HTTP/3 avec un port Alt-Svc personnalis\u00e9 :</p> <pre><code>HTTP2: \"yes\"\nHTTP3: \"yes\"\nHTTP3_ALT_SVC_PORT: \"443\"\n</code></pre> <p>Exemple pour servir des fichiers statiques depuis un dossier racine personnalis\u00e9 :</p> <pre><code>SERVE_FILES: \"yes\"\nROOT_FOLDER: \"/var/www/custom-folder\"\n</code></pre> <p>Exemple pour activer et optimiser la mise en cache des fichiers :</p> <p>```yaml USE_OPEN_FILE_CACHE: \"yes\" OPEN_FILE_CACHE: \"max=2000 inactive=30s\" OPEN_FILE_CACHE_ERRORS: \"yes\" OPEN_FILE_CACHE_MIN_USES: \"3\" OPEN_FILE_CACHE_VALID: \"60s\"</p>"},{"location":"fr/features/#modsecurity","title":"ModSecurity","text":"<p>Prise en charge STREAM </p> <p>Le plugin ModSecurity int\u00e8gre le puissant pare-feu applicatif web (WAF) ModSecurity dans BunkerWeb. Cette int\u00e9gration offre une protection robuste contre un large \u00e9ventail d'attaques web en s'appuyant sur le Jeu de R\u00e8gles de Base OWASP (CRS) pour d\u00e9tecter et bloquer des menaces telles que l'injection SQL, le cross-site scripting (XSS), l'inclusion de fichiers locaux, et bien plus encore.</p> <p>Comment \u00e7a marche :</p> <ol> <li>Lorsqu'une requ\u00eate est re\u00e7ue, ModSecurity l'\u00e9value par rapport au jeu de r\u00e8gles actif.</li> <li>Le Jeu de R\u00e8gles de Base OWASP inspecte les en-t\u00eates, les cookies, les param\u00e8tres d'URL et le contenu du corps de la requ\u00eate.</li> <li>Chaque violation d\u00e9tect\u00e9e contribue \u00e0 un score d'anomalie global.</li> <li>Si ce score d\u00e9passe le seuil configur\u00e9, la requ\u00eate est bloqu\u00e9e.</li> <li>Des journaux d\u00e9taill\u00e9s sont cr\u00e9\u00e9s pour aider \u00e0 diagnostiquer quelles r\u00e8gles ont \u00e9t\u00e9 d\u00e9clench\u00e9es et pourquoi.</li> </ol> <p>B\u00e9n\u00e9fices cl\u00e9s</p> <ol> <li>Protection standard de l'industrie : Utilise le pare-feu open-source ModSecurity largement r\u00e9pandu.</li> <li>Jeu de R\u00e8gles de Base OWASP : Emploie des r\u00e8gles maintenues par la communaut\u00e9 couvrant le Top Dix de l'OWASP et plus encore.</li> <li>Niveaux de s\u00e9curit\u00e9 configurables : Ajustez les niveaux de parano\u00efa pour \u00e9quilibrer la s\u00e9curit\u00e9 avec les faux positifs potentiels.</li> <li>Journalisation d\u00e9taill\u00e9e : Fournit des journaux d'audit complets pour l'analyse des attaques.</li> <li>Support des plugins : \u00c9tendez la protection avec des plugins CRS optionnels adapt\u00e9s \u00e0 vos applications.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_19","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour configurer et utiliser ModSecurity :</p> <ol> <li>Activer la fonctionnalit\u00e9 : ModSecurity est activ\u00e9 par d\u00e9faut. Cela peut \u00eatre contr\u00f4l\u00e9 via le param\u00e8tre <code>USE_MODSECURITY</code>.</li> <li>S\u00e9lectionner une version du CRS : Choisissez une version du Jeu de R\u00e8gles de Base OWASP (v3, v4, ou nightly).</li> <li>Ajouter des plugins : Activez optionnellement des plugins CRS pour am\u00e9liorer la couverture des r\u00e8gles.</li> <li>Surveiller et ajuster : Utilisez les journaux et l'interface web pour identifier les faux positifs et ajuster les param\u00e8tres.</li> </ol>"},{"location":"fr/features/#parametres-de-configuration_5","title":"Param\u00e8tres de configuration","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_MODSECURITY</code> <code>yes</code> multisite no Activer ModSecurity : Active la protection du pare-feu applicatif web ModSecurity. <code>USE_MODSECURITY_CRS</code> <code>yes</code> multisite no Utiliser le Core Rule Set : Active le Jeu de R\u00e8gles de Base OWASP pour ModSecurity. <code>MODSECURITY_CRS_VERSION</code> <code>4</code> multisite no Version du CRS : La version du Jeu de R\u00e8gles de Base OWASP \u00e0 utiliser. Options : <code>3</code>, <code>4</code>, ou <code>nightly</code>. <code>MODSECURITY_SEC_RULE_ENGINE</code> <code>On</code> multisite no Moteur de r\u00e8gles : Contr\u00f4le si les r\u00e8gles sont appliqu\u00e9es. Options : <code>On</code>, <code>DetectionOnly</code>, ou <code>Off</code>. <code>MODSECURITY_SEC_AUDIT_ENGINE</code> <code>RelevantOnly</code> multisite no Moteur d'audit : Contr\u00f4le le fonctionnement de la journalisation d'audit. Options : <code>On</code>, <code>Off</code>, ou <code>RelevantOnly</code>. <code>MODSECURITY_SEC_AUDIT_LOG_PARTS</code> <code>ABIJDEFHZ</code> multisite no Parties du journal d'audit : Quelles parties des requ\u00eates/r\u00e9ponses inclure dans les journaux d'audit. <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code> <code>131072</code> multisite no Limite du corps de requ\u00eate (sans fichiers) : Taille maximale pour les corps de requ\u00eate sans t\u00e9l\u00e9versement de fichiers. Accepte les octets bruts ou un suffixe lisible (<code>k</code>, <code>m</code>, <code>g</code>). <code>USE_MODSECURITY_CRS_PLUGINS</code> <code>yes</code> multisite no Activer les plugins CRS : Active des jeux de r\u00e8gles de plugins suppl\u00e9mentaires pour le Core Rule Set. <code>MODSECURITY_CRS_PLUGINS</code> multisite no Liste des plugins CRS : Liste de plugins s\u00e9par\u00e9s par des espaces \u00e0 t\u00e9l\u00e9charger et installer (<code>nom-plugin[/tag]</code> ou URL). <code>USE_MODSECURITY_GLOBAL_CRS</code> <code>no</code> global no CRS Global : Si activ\u00e9, applique les r\u00e8gles CRS globalement au niveau HTTP plut\u00f4t que par serveur. <p>ModSecurity et le Jeu de R\u00e8gles de Base OWASP</p> <p>Nous recommandons vivement de garder ModSecurity et le Jeu de R\u00e8gles de Base OWASP (CRS) activ\u00e9s pour fournir une protection robuste contre les vuln\u00e9rabilit\u00e9s web courantes. Bien que des faux positifs occasionnels puissent se produire, ils peuvent \u00eatre r\u00e9solus avec un peu d'effort en affinant les r\u00e8gles ou en utilisant des exclusions pr\u00e9d\u00e9finies.</p> <pre><code>L'\u00e9quipe du CRS maintient activement une liste d'exclusions pour des applications populaires telles que WordPress, Nextcloud, Drupal et Cpanel, facilitant ainsi l'int\u00e9gration sans impacter la fonctionnalit\u00e9. Les avantages en mati\u00e8re de s\u00e9curit\u00e9 l'emportent de loin sur l'effort de configuration minimal requis pour traiter les faux positifs.\n</code></pre>"},{"location":"fr/features/#versions-du-crs-disponibles","title":"Versions du CRS disponibles","text":"<p>S\u00e9lectionnez une version du CRS pour r\u00e9pondre au mieux \u00e0 vos besoins de s\u00e9curit\u00e9 :</p> <ul> <li><code>3</code> : Stable v3.3.7.</li> <li><code>4</code> : Stable v4.18.0 (par d\u00e9faut).</li> <li><code>nightly</code> : Version de nuit offrant les derni\u00e8res mises \u00e0 jour de r\u00e8gles.</li> </ul> <p>Version de nuit (Nightly Build)</p> <p>La version de nuit contient les r\u00e8gles les plus \u00e0 jour, offrant les derni\u00e8res protections contre les menaces \u00e9mergentes. Cependant, comme elle est mise \u00e0 jour quotidiennement et peut inclure des changements exp\u00e9rimentaux ou non test\u00e9s, il est recommand\u00e9 d'utiliser d'abord la version de nuit dans un environnement de pr\u00e9-production avant de la d\u00e9ployer en production.</p> <p>Niveaux de parano\u00efa</p> <p>Le Jeu de R\u00e8gles de Base OWASP utilise des \"niveaux de parano\u00efa\" (PL) pour contr\u00f4ler la rigueur des r\u00e8gles :</p> <pre><code>- **PL1 (d\u00e9faut) :** Protection de base avec un minimum de faux positifs\n- **PL2 :** S\u00e9curit\u00e9 renforc\u00e9e avec une correspondance de motifs plus stricte\n- **PL3 :** S\u00e9curit\u00e9 am\u00e9lior\u00e9e avec une validation plus stricte\n- **PL4 :** S\u00e9curit\u00e9 maximale avec des r\u00e8gles tr\u00e8s strictes (peut causer de nombreux faux positifs)\n\nVous pouvez d\u00e9finir le niveau de parano\u00efa en ajoutant un fichier de configuration personnalis\u00e9 dans `/etc/bunkerweb/configs/modsec-crs/`.\n</code></pre>"},{"location":"fr/features/#configurations-personnalisees","title":"Configurations personnalis\u00e9es","text":"<p>L'ajustement de ModSecurity et du Jeu de R\u00e8gles de Base OWASP (CRS) peut \u00eatre r\u00e9alis\u00e9 gr\u00e2ce \u00e0 des configurations personnalis\u00e9es. Celles-ci vous permettent de personnaliser le comportement \u00e0 des \u00e9tapes sp\u00e9cifiques du traitement des r\u00e8gles de s\u00e9curit\u00e9 :</p> <ul> <li><code>modsec-crs</code> : Appliqu\u00e9 avant le chargement du Jeu de R\u00e8gles de Base OWASP.</li> <li><code>modsec</code> : Appliqu\u00e9 apr\u00e8s le chargement du Jeu de R\u00e8gles de Base OWASP. \u00c9galement utilis\u00e9 si le CRS n'est pas charg\u00e9 du tout.</li> <li><code>crs-plugins-before</code> : Appliqu\u00e9 avant le chargement des plugins CRS.</li> <li><code>crs-plugins-after</code> : Appliqu\u00e9 apr\u00e8s le chargement des plugins CRS.</li> </ul> <p>Cette structure offre une grande flexibilit\u00e9, vous permettant d'affiner les param\u00e8tres de ModSecurity et du CRS pour r\u00e9pondre aux besoins sp\u00e9cifiques de votre application tout en maintenant un flux de configuration clair.</p>"},{"location":"fr/features/#ajout-dexclusions-crs-avec-modsec-crs","title":"Ajout d'exclusions CRS avec <code>modsec-crs</code>","text":"<p>Vous pouvez utiliser une configuration personnalis\u00e9e de type <code>modsec-crs</code> pour ajouter des exclusions pour des cas d'usage sp\u00e9cifiques, comme l'activation d'exclusions pr\u00e9d\u00e9finies pour WordPress :</p> <pre><code>SecAction \\\n \"id:900130,\\\n  phase:1,\\\n  nolog,\\\n  pass,\\\n  t:none,\\\n  setvar:tx.crs_exclusions_wordpress=1\"\n</code></pre> <p>Dans cet exemple :</p> <ul> <li>L'action est ex\u00e9cut\u00e9e en Phase 1 (t\u00f4t dans le cycle de vie de la requ\u00eate).</li> <li>Elle active les exclusions sp\u00e9cifiques \u00e0 WordPress du CRS en d\u00e9finissant la variable <code>tx.crs_exclusions_wordpress</code>.</li> </ul>"},{"location":"fr/features/#mise-a-jour-des-regles-crs-avec-modsec","title":"Mise \u00e0 jour des r\u00e8gles CRS avec <code>modsec</code>","text":"<p>Pour affiner les r\u00e8gles CRS charg\u00e9es, vous pouvez utiliser une configuration personnalis\u00e9e de type <code>modsec</code>. Par exemple, vous pouvez supprimer des r\u00e8gles ou des balises sp\u00e9cifiques pour certains chemins de requ\u00eate :</p> <pre><code>SecRule REQUEST_FILENAME \"/wp-admin/admin-ajax.php\" \"id:1,ctl:ruleRemoveByTag=attack-xss,ctl:ruleRemoveByTag=attack-rce\"\nSecRule REQUEST_FILENAME \"/wp-admin/options.php\" \"id:2,ctl:ruleRemoveByTag=attack-xss\"\nSecRule REQUEST_FILENAME \"^/wp-json/yoast\" \"id:3,ctl:ruleRemoveById=930120\"\n</code></pre> <p>Dans cet exemple :</p> <ul> <li>R\u00e8gle 1 : Supprime les r\u00e8gles avec les balises <code>attack-xss</code> et <code>attack-rce</code> pour les requ\u00eates vers <code>/wp-admin/admin-ajax.php</code>.</li> <li>R\u00e8gle 2 : Supprime les r\u00e8gles avec la balise <code>attack-xss</code> pour les requ\u00eates vers <code>/wp-admin/options.php</code>.</li> <li>R\u00e8gle 3 : Supprime une r\u00e8gle sp\u00e9cifique (ID <code>930120</code>) pour les requ\u00eates correspondant \u00e0 <code>/wp-json/yoast</code>.</li> </ul> <p>Ordre d'ex\u00e9cution</p> <p>L'ordre d'ex\u00e9cution pour ModSecurity dans BunkerWeb est le suivant, assurant une progression claire et logique de l'application des r\u00e8gles :</p> <pre><code>1.  **Configuration OWASP CRS** : Configuration de base pour le Jeu de R\u00e8gles de Base OWASP.\n2.  **Configuration des plugins personnalis\u00e9s (`crs-plugins-before`)** : Param\u00e8tres sp\u00e9cifiques aux plugins, appliqu\u00e9s avant toute r\u00e8gle CRS.\n3.  **R\u00e8gles des plugins personnalis\u00e9s (avant les r\u00e8gles CRS) (`crs-plugins-before`)** : R\u00e8gles personnalis\u00e9es pour les plugins ex\u00e9cut\u00e9es avant les r\u00e8gles CRS.\n4.  **Configuration des plugins t\u00e9l\u00e9charg\u00e9s** : Configuration pour les plugins t\u00e9l\u00e9charg\u00e9s en externe.\n5.  **R\u00e8gles des plugins t\u00e9l\u00e9charg\u00e9s (avant les r\u00e8gles CRS)** : R\u00e8gles pour les plugins t\u00e9l\u00e9charg\u00e9s ex\u00e9cut\u00e9es avant les r\u00e8gles CRS.\n6.  **R\u00e8gles CRS personnalis\u00e9es (`modsec-crs`)** : R\u00e8gles d\u00e9finies par l'utilisateur appliqu\u00e9es avant le chargement des r\u00e8gles CRS.\n7.  **R\u00e8gles OWASP CRS** : Le jeu de r\u00e8gles de s\u00e9curit\u00e9 de base fourni par l'OWASP.\n8.  **R\u00e8gles des plugins personnalis\u00e9s (apr\u00e8s les r\u00e8gles CRS) (`crs-plugins-after`)** : R\u00e8gles de plugins personnalis\u00e9s ex\u00e9cut\u00e9es apr\u00e8s les r\u00e8gles CRS.\n9.  **R\u00e8gles des plugins t\u00e9l\u00e9charg\u00e9s (apr\u00e8s les r\u00e8gles CRS)** : R\u00e8gles pour les plugins t\u00e9l\u00e9charg\u00e9s ex\u00e9cut\u00e9es apr\u00e8s les r\u00e8gles CRS.\n10. **R\u00e8gles personnalis\u00e9es (`modsec`)** : R\u00e8gles d\u00e9finies par l'utilisateur appliqu\u00e9es apr\u00e8s toutes les r\u00e8gles CRS et de plugins.\n\n**Notes cl\u00e9s** :\n- Les personnalisations **pr\u00e9-CRS** (`crs-plugins-before`, `modsec-crs`) vous permettent de d\u00e9finir des exceptions ou des r\u00e8gles pr\u00e9paratoires avant le chargement des r\u00e8gles CRS de base.\n- Les personnalisations **post-CRS** (`crs-plugins-after`, `modsec`) sont id\u00e9ales pour outrepasser ou \u00e9tendre des r\u00e8gles apr\u00e8s l'application des r\u00e8gles CRS et de plugins.\n- Cette structure offre une flexibilit\u00e9 maximale, permettant un contr\u00f4le pr\u00e9cis de l'ex\u00e9cution et de la personnalisation des r\u00e8gles tout en maintenant une base de s\u00e9curit\u00e9 solide.\n</code></pre>"},{"location":"fr/features/#plugins-owasp-crs","title":"Plugins OWASP CRS","text":"<p>Le Jeu de R\u00e8gles de Base OWASP prend \u00e9galement en charge une gamme de plugins con\u00e7us pour \u00e9tendre ses fonctionnalit\u00e9s et am\u00e9liorer la compatibilit\u00e9 avec des applications ou des environnements sp\u00e9cifiques. Ces plugins peuvent aider \u00e0 affiner le CRS pour une utilisation avec des plateformes populaires telles que WordPress, Nextcloud et Drupal, ou m\u00eame des configurations personnalis\u00e9es. Pour plus d'informations et une liste des plugins disponibles, consultez le registre des plugins OWASP CRS.</p> <p>T\u00e9l\u00e9chargement de plugins</p> <p>Le param\u00e8tre <code>MODSECURITY_CRS_PLUGINS</code> vous permet de t\u00e9l\u00e9charger et d'installer des plugins pour \u00e9tendre les fonctionnalit\u00e9s du Jeu de R\u00e8gles de Base OWASP (CRS). Ce param\u00e8tre accepte une liste de noms de plugins avec des balises ou des URL optionnelles, facilitant l'int\u00e9gration de fonctionnalit\u00e9s de s\u00e9curit\u00e9 suppl\u00e9mentaires adapt\u00e9es \u00e0 vos besoins sp\u00e9cifiques.</p> <pre><code>Voici une liste non exhaustive des valeurs accept\u00e9es pour le param\u00e8tre `MODSECURITY_CRS_PLUGINS` :\n\n*   `fake-bot` - T\u00e9l\u00e9charge la derni\u00e8re version du plugin.\n*   `wordpress-rule-exclusions/v1.0.0` - T\u00e9l\u00e9charge la version 1.0.0 du plugin.\n*   `https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip` - T\u00e9l\u00e9charge le plugin directement depuis l'URL.\n</code></pre> <p>Faux positifs</p> <p>Des param\u00e8tres de s\u00e9curit\u00e9 plus \u00e9lev\u00e9s peuvent bloquer le trafic l\u00e9gitime. Commencez avec les param\u00e8tres par d\u00e9faut et surveillez les journaux avant d'augmenter les niveaux de s\u00e9curit\u00e9. Soyez pr\u00eat \u00e0 ajouter des r\u00e8gles d'exclusion pour les besoins sp\u00e9cifiques de votre application.</p>"},{"location":"fr/features/#exemples-de-configuration_8","title":"Exemples de configuration","text":"Configuration de baseMode d\u00e9tection uniquementConfiguration avanc\u00e9e avec pluginsConfiguration h\u00e9rit\u00e9eModSecurity GlobalVersion de nuit avec plugins personnalis\u00e9s <p>Une configuration standard avec ModSecurity et CRS v4 activ\u00e9s :</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Configuration pour surveiller les menaces potentielles sans bloquer :</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"DetectionOnly\"\nMODSECURITY_SEC_AUDIT_ENGINE: \"On\"\nMODSECURITY_SEC_AUDIT_LOG_PARTS: \"ABIJDEFHZ\"\n</code></pre> <p>Configuration avec CRS v4 et des plugins activ\u00e9s pour une protection suppl\u00e9mentaire :</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions fake-bot\"\nMODSECURITY_REQ_BODY_NO_FILES_LIMIT: \"262144\"\n</code></pre> <p>Configuration utilisant CRS v3 pour la compatibilit\u00e9 avec des installations plus anciennes :</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"3\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Configuration appliquant ModSecurity globalement \u00e0 toutes les connexions HTTP :</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nUSE_MODSECURITY_GLOBAL_CRS: \"yes\"\n</code></pre> <p>Configuration utilisant la version de nuit du CRS avec des plugins personnalis\u00e9s :</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"nightly\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions/v1.0.0 https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip\"\n</code></pre> <p>Valeurs de taille lisibles</p> <p>Pour les param\u00e8tres de taille comme <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code>, les suffixes <code>k</code>, <code>m</code>, et <code>g</code> (insensibles \u00e0 la casse) sont pris en charge et repr\u00e9sentent les kibioctets, m\u00e9bioctets et gibioctets (multiples de 1024). Exemples : <code>256k</code> = 262144, <code>1m</code> = 1048576, <code>2g</code> = 2147483648.</p>"},{"location":"fr/features/#monitoring-pro","title":"Monitoring  (PRO)","text":"<p>Prise en charge STREAM </p> <p>BunkerWeb monitoring pro system. This plugin is a prerequisite for some other plugins.</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_MONITORING</code> <code>yes</code> global non Enable monitoring of BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global non Size of the dict to store monitoring metrics. <code>MONITORING_IGNORE_URLS</code> global non List of URLs to ignore when monitoring separated with spaces (e.g. /health)"},{"location":"fr/features/#php","title":"PHP","text":"<p>Prise en charge STREAM </p> <p>Le plugin PHP fournit l\u2019int\u00e9gration PHP\u2011FPM avec BunkerWeb pour ex\u00e9cuter du PHP dynamiquement. Il prend en charge des instances locales (m\u00eame machine) et distantes, offrant de la flexibilit\u00e9 dans l\u2019architecture.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 la demande d\u2019un fichier PHP, BunkerWeb route la requ\u00eate vers l\u2019instance PHP\u2011FPM configur\u00e9e.</li> <li>En local, la communication se fait via un socket Unix.</li> <li>\u00c0 distance, la communication utilise FastCGI vers l\u2019h\u00f4te et le port indiqu\u00e9s.</li> <li>PHP\u2011FPM ex\u00e9cute le script et renvoie la r\u00e9ponse \u00e0 BunkerWeb qui la livre au client.</li> <li>La r\u00e9\u00e9criture d\u2019URL est automatiquement configur\u00e9e pour les frameworks/applications qui utilisent des \u00ab\u00a0pretty URLs\u00a0\u00bb.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_20","title":"Comment l\u2019utiliser","text":"<ol> <li>Choisissez local vs distant.</li> <li>Connexion\u00a0: chemin du socket (local) ou h\u00f4te+port (distant).</li> <li>Racine de documents\u00a0: pointez vers le dossier contenant vos fichiers PHP.</li> </ol>"},{"location":"fr/features/#parametres_16","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REMOTE_PHP</code> multisite non H\u00f4te PHP\u2011FPM distant. Laissez vide pour utiliser le local. <code>REMOTE_PHP_PATH</code> multisite non Chemin racine des fichiers c\u00f4t\u00e9 PHP\u2011FPM distant. <code>REMOTE_PHP_PORT</code> <code>9000</code> multisite non Port PHP\u2011FPM distant. <code>LOCAL_PHP</code> multisite non Chemin du socket PHP\u2011FPM local. Laissez vide pour utiliser un PHP\u2011FPM distant. <code>LOCAL_PHP_PATH</code> multisite non Chemin racine des fichiers c\u00f4t\u00e9 PHP\u2011FPM local. <p>Local vs distant</p> <p>Local\u00a0: meilleures perfs (socket). Distant\u00a0: flexibilit\u00e9 et scalabilit\u00e9.</p> <p>Chemins</p> <p><code>REMOTE_PHP_PATH</code>/<code>LOCAL_PHP_PATH</code> doivent correspondre au chemin r\u00e9el des fichiers sous peine d\u2019erreurs \u00ab\u00a0File not found\u00a0\u00bb.</p> <p>R\u00e9\u00e9criture d\u2019URL</p> <p>Le plugin configure automatiquement la r\u00e9\u00e9criture pour diriger les requ\u00eates vers <code>index.php</code> si le fichier demand\u00e9 n\u2019existe pas.</p>"},{"location":"fr/features/#exemples_13","title":"Exemples","text":"PHP\u2011FPM local <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html\"\n</code></pre> PHP\u2011FPM distant <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9000\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> Port personnalis\u00e9 <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9001\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> WordPress <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html/wordpress\"\n</code></pre>"},{"location":"fr/features/#pro","title":"Pro","text":"<p>Prise en charge STREAM </p> <p>Le plugin Pro regroupe des fonctionnalit\u00e9s avanc\u00e9es pour les d\u00e9ploiements entreprise de BunkerWeb. Il d\u00e9verrouille des capacit\u00e9s suppl\u00e9mentaires, des plugins premium et des extensions qui compl\u00e8tent la plateforme BunkerWeb, pour plus de s\u00e9curit\u00e9, de performance et d\u2019options de gestion.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Avec une cl\u00e9 de licence Pro valide, BunkerWeb contacte l\u2019API Pro pour valider votre abonnement.</li> <li>Une fois authentifi\u00e9, le plugin t\u00e9l\u00e9charge et installe automatiquement les plugins et extensions exclusifs Pro.</li> <li>Le statut Pro est v\u00e9rifi\u00e9 p\u00e9riodiquement afin d\u2019assurer l\u2019acc\u00e8s continu aux fonctionnalit\u00e9s premium.</li> <li>Les plugins premium s\u2019int\u00e8grent de fa\u00e7on transparente \u00e0 votre configuration existante.</li> <li>Les fonctionnalit\u00e9s Pro compl\u00e8tent le c\u0153ur open\u2011source, elles ne le remplacent pas.</li> </ol> <p>B\u00e9n\u00e9fices cl\u00e9s</p> <ol> <li>Extensions premium\u00a0: acc\u00e8s \u00e0 des plugins et fonctions exclusives.</li> <li>Performances accrues\u00a0: configurations optimis\u00e9es et m\u00e9canismes avanc\u00e9s de cache.</li> <li>Support entreprise\u00a0: assistance prioritaire et canaux d\u00e9di\u00e9s.</li> <li>Int\u00e9gration fluide\u00a0: cohabite avec l\u2019\u00e9dition communautaire sans conflits.</li> <li>Mises \u00e0 jour automatiques\u00a0: plugins premium t\u00e9l\u00e9charg\u00e9s et tenus \u00e0 jour automatiquement.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_21","title":"Comment l\u2019utiliser","text":"<ol> <li>Obtenir une licence\u00a0: achetez une licence Pro depuis le BunkerWeb Panel.</li> <li>Configurer la licence\u00a0: d\u00e9finissez <code>PRO_LICENSE_KEY</code> avec votre cl\u00e9.</li> <li>Laissez BunkerWeb faire le reste\u00a0: les plugins Pro sont t\u00e9l\u00e9charg\u00e9s et activ\u00e9s automatiquement.</li> <li>Surveiller le statut Pro\u00a0: v\u00e9rifiez les indicateurs de sant\u00e9 dans l\u2019interface web UI.</li> </ol>"},{"location":"fr/features/#parametres_17","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>PRO_LICENSE_KEY</code> global non Cl\u00e9 de licence BunkerWeb Pro (authentification). <p>Gestion de licence</p> <p>La licence est li\u00e9e \u00e0 votre environnement de d\u00e9ploiement. Pour un transfert ou une question d\u2019abonnement, contactez le support via le BunkerWeb Panel.</p> <p>Fonctionnalit\u00e9s Pro</p> <p>Le p\u00e9rim\u00e8tre des fonctionnalit\u00e9s peut \u00e9voluer. Le plugin Pro g\u00e8re automatiquement l\u2019installation et la configuration des capacit\u00e9s disponibles.</p> <p>Acc\u00e8s r\u00e9seau</p> <p>Le plugin Pro requiert un acc\u00e8s Internet sortant pour contacter l\u2019API BunkerWeb (v\u00e9rification de licence) et t\u00e9l\u00e9charger les plugins premium. Autorisez les connexions HTTPS vers <code>api.bunkerweb.io:443</code>.</p>"},{"location":"fr/features/#faq","title":"FAQ","text":"<p>Q\u00a0: Que se passe\u2011t\u2011il si ma licence Pro expire\u00a0?</p> <p>R\u00a0: L\u2019acc\u00e8s aux fonctionnalit\u00e9s premium est d\u00e9sactiv\u00e9, mais votre installation continue de fonctionner avec l\u2019\u00e9dition communautaire. Pour r\u00e9activer les fonctionnalit\u00e9s Pro, renouvelez la licence.</p> <p>Q\u00a0: Les fonctionnalit\u00e9s Pro peuvent\u2011elles perturber ma configuration existante\u00a0?</p> <p>R\u00a0: Non. Elles sont con\u00e7ues pour s\u2019int\u00e9grer sans modifier votre configuration actuelle.</p> <p>Q\u00a0: Puis\u2011je essayer Pro avant achat\u00a0?</p> <p>R\u00a0: Oui. Deux offres existent\u00a0:</p> <ul> <li>BunkerWeb PRO Standard\u00a0: acc\u00e8s complet, sans support technique.</li> <li>BunkerWeb PRO Enterprise\u00a0: acc\u00e8s complet, avec support d\u00e9di\u00e9.</li> </ul> <p>Un essai gratuit d\u20191\u00a0mois est disponible avec le code <code>freetrial</code>. Rendez\u2011vous sur le BunkerWeb Panel pour l\u2019activer.</p>"},{"location":"fr/features/#prometheus-exporter-pro","title":"Prometheus exporter  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Prometheus exporter for BunkerWeb internal metrics.</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global non Enable the Prometheus export. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global non Listening IP of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global non Listening port of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global non HTTP URL of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global non List of IP/networks allowed to contact the Prometheus exporter endpoint."},{"location":"fr/features/#real-ip","title":"Real IP","text":"<p>Prise en charge STREAM </p> <p>Le plugin Real IP garantit que BunkerWeb identifie correctement l\u2019adresse IP du client m\u00eame derri\u00e8re des proxys. Indispensable pour appliquer les r\u00e8gles de s\u00e9curit\u00e9, la limitation de d\u00e9bit et des logs fiables\u00a0: sinon toutes les requ\u00eates sembleraient venir de l\u2019IP du proxy.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Activ\u00e9, BunkerWeb inspecte les en\u2011t\u00eates (ex. <code>X-Forwarded-For</code>) contenant l\u2019IP d\u2019origine.</li> <li>Il v\u00e9rifie que l\u2019IP source figure dans <code>REAL_IP_FROM</code> (liste de proxys de confiance) pour n\u2019accepter que les proxys l\u00e9gitimes.</li> <li>L\u2019IP client est extraite de l\u2019en\u2011t\u00eate <code>REAL_IP_HEADER</code> et utilis\u00e9e pour l\u2019\u00e9valuation s\u00e9curit\u00e9 et la journalisation.</li> <li>En cha\u00eenes d\u2019IPs, une recherche r\u00e9cursive peut d\u00e9terminer l\u2019IP d\u2019origine via <code>REAL_IP_RECURSIVE</code>.</li> <li>Le support du PROXY protocol peut \u00eatre activ\u00e9 pour recevoir l\u2019IP client directement depuis des proxys compatibles (ex. HAProxy).</li> <li>Les listes d\u2019IP de proxys de confiance peuvent \u00eatre t\u00e9l\u00e9charg\u00e9es automatiquement via des URLs.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_22","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_REAL_IP: yes</code>.</li> <li>Proxys de confiance\u00a0: renseignez IP/plages dans <code>REAL_IP_FROM</code>.</li> <li>En\u2011t\u00eate\u00a0: indiquez lequel porte l\u2019IP r\u00e9elle via <code>REAL_IP_HEADER</code>.</li> <li>R\u00e9cursif\u00a0: activez <code>REAL_IP_RECURSIVE</code> si n\u00e9cessaire.</li> <li>Sources URL\u00a0: utilisez <code>REAL_IP_FROM_URLS</code> pour t\u00e9l\u00e9charger des listes.</li> <li>PROXY protocol\u00a0: activez <code>USE_PROXY_PROTOCOL</code> si l\u2019amont le supporte.</li> </ol> <p>Avertissement PROXY protocol</p> <p>Activer <code>USE_PROXY_PROTOCOL</code> sans un amont correctement configur\u00e9 pour l\u2019\u00e9mettre cassera votre application. Assurez\u2011vous de l\u2019avoir configur\u00e9 avant activation.</p>"},{"location":"fr/features/#parametres_18","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_REAL_IP</code> <code>no</code> multisite non Activer la r\u00e9cup\u00e9ration de l\u2019IP r\u00e9elle depuis les en\u2011t\u00eates ou le PROXY protocol. <code>REAL_IP_FROM</code> <code>192.168.0.0/16 172.16.0.0/12 10.0.0.0/8</code> multisite non Proxys de confiance\u00a0: liste d\u2019IP/r\u00e9seaux s\u00e9par\u00e9s par des espaces. <code>REAL_IP_HEADER</code> <code>X-Forwarded-For</code> multisite non En\u2011t\u00eate porteur de l\u2019IP r\u00e9elle ou valeur sp\u00e9ciale <code>proxy_protocol</code>. <code>REAL_IP_RECURSIVE</code> <code>yes</code> multisite non Recherche r\u00e9cursive dans un en\u2011t\u00eate contenant plusieurs IPs. <code>REAL_IP_FROM_URLS</code> multisite non URLs fournissant des IPs/r\u00e9seaux de proxys de confiance (supporte <code>file://</code>). <code>USE_PROXY_PROTOCOL</code> <code>no</code> global non Activer le support PROXY protocol pour la communication directe proxy\u2192BunkerWeb. <p>Fournisseurs cloud</p> <p>Ajoutez les IP de vos load balancers (AWS/GCP/Azure\u2026) \u00e0 <code>REAL_IP_FROM</code> pour une identification correcte.</p> <p>Consid\u00e9rations s\u00e9curit\u00e9</p> <p>N\u2019ajoutez que des sources de confiance, sinon risque d\u2019usurpation d\u2019IP via en\u2011t\u00eates manipul\u00e9s.</p> <p>Multiples adresses</p> <p>Avec <code>REAL_IP_RECURSIVE</code>, si l\u2019en\u2011t\u00eate contient plusieurs IPs, la premi\u00e8re non list\u00e9e comme proxy de confiance est retenue comme IP client.</p>"},{"location":"fr/features/#exemples_14","title":"Exemples","text":"Basique (derri\u00e8re reverse proxy) <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.1.0/24 10.0.0.5\"\nREAL_IP_HEADER: \"X-Forwarded-For\"\n</code></pre>"},{"location":"fr/features/#redirect","title":"Redirect","text":"<p>Prise en charge STREAM </p> <p>Le plugin Redirect fournit des redirections HTTP simples et efficaces. Il permet de rediriger des visiteurs d\u2019une URL \u00e0 une autre, pour un domaine entier, des chemins pr\u00e9cis, avec ou sans conservation du chemin d\u2019origine.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 l\u2019acc\u00e8s d\u2019un visiteur, BunkerWeb v\u00e9rifie si une redirection est d\u00e9finie.</li> <li>Si activ\u00e9e, il redirige vers l\u2019URL de destination.</li> <li>Vous pouvez pr\u00e9server le chemin d\u2019origine (<code>REDIRECT_TO_REQUEST_URI: yes</code>).</li> <li>Le code HTTP peut \u00eatre <code>301</code> (permanent) ou <code>302</code> (temporaire).</li> <li>Id\u00e9al pour migrations, canonicals, URLs obsol\u00e8tes.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_23","title":"Comment l\u2019utiliser","text":"<ol> <li>Source\u00a0: <code>REDIRECT_FROM</code> (ex. <code>/</code>, <code>/old-page</code>).</li> <li>Destination\u00a0: <code>REDIRECT_TO</code>.</li> <li>Type\u00a0: <code>REDIRECT_TO_REQUEST_URI</code> pour conserver le chemin.</li> <li>Code\u00a0: <code>REDIRECT_TO_STATUS_CODE</code> (<code>301</code> ou <code>302</code>).</li> </ol>"},{"location":"fr/features/#parametres_19","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REDIRECT_FROM</code> <code>/</code> multisite oui Chemin source \u00e0 rediriger. <code>REDIRECT_TO</code> multisite oui URL de destination. Laisser vide pour d\u00e9sactiver. <code>REDIRECT_TO_REQUEST_URI</code> <code>no</code> multisite oui Conserver le chemin d\u2019origine en l\u2019ajoutant \u00e0 l\u2019URL de destination. <code>REDIRECT_TO_STATUS_CODE</code> <code>301</code> multisite oui Code de statut HTTP\u00a0: <code>301</code> (permanent) ou <code>302</code> (temporaire). <p>Choisir le bon code</p> <p><code>301</code> pour une redirection permanente (migrations, canonicals). <code>302</code> pour temporaire.</p> <p>Conservation du chemin</p> <p>Avec <code>REDIRECT_TO_REQUEST_URI: yes</code>, <code>/blog/post-1</code> vers <code>https://new.com</code> devient <code>https://new.com/blog/post-1</code>.</p>"},{"location":"fr/features/#exemples_15","title":"Exemples","text":"Multiples chemins <pre><code>REDIRECT_FROM: \"/blog/\"\nREDIRECT_TO: \"https://blog.example.com/\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n\nREDIRECT_FROM_2: \"/shop/\"\nREDIRECT_TO_2: \"https://shop.example.com/\"\nREDIRECT_TO_REQUEST_URI_2: \"no\"\nREDIRECT_TO_STATUS_CODE_2: \"301\"\n\nREDIRECT_FROM_3: \"/\"\nREDIRECT_TO_3: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI_3: \"no\"\nREDIRECT_TO_STATUS_CODE_3: \"301\"\n</code></pre> Domaine entier <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> Conserver le chemin <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> Temporaire <pre><code>REDIRECT_TO: \"https://maintenance.example.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"302\"\n</code></pre> Sous\u2011domaine \u2192 chemin <pre><code>REDIRECT_TO: \"https://example.com/support\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre>"},{"location":"fr/features/#redis","title":"Redis","text":"<p>Prise en charge STREAM </p> <p>Le plugin Redis int\u00e8gre Redis ou Valkey \u00e0 BunkerWeb pour la mise en cache et l\u2019acc\u00e8s rapide aux donn\u00e9es. Essentiel en haute disponibilit\u00e9 pour partager sessions, m\u00e9triques et autres informations entre plusieurs n\u0153uds.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Activ\u00e9, BunkerWeb se connecte au serveur Redis/Valkey configur\u00e9.</li> <li>Les donn\u00e9es critiques (sessions, m\u00e9triques, s\u00e9curit\u00e9) y sont stock\u00e9es.</li> <li>Plusieurs instances partagent ces donn\u00e9es pour un clustering fluide.</li> <li>Prend en charge d\u00e9ploiements standalone, auth par mot de passe, SSL/TLS et Redis Sentinel.</li> <li>Reconnexion automatique et timeouts configurables pour la robustesse.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_24","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_REDIS: yes</code>.</li> <li>Connexion\u00a0: h\u00f4te/IP et port.</li> <li>S\u00e9curit\u00e9\u00a0: identifiants si requis.</li> <li>Avanc\u00e9\u00a0: base, SSL et timeouts.</li> <li>Haute dispo\u00a0: configurez Sentinel si utilis\u00e9.</li> </ol>"},{"location":"fr/features/#parametres_20","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_REDIS</code> <code>no</code> global non Activer l\u2019int\u00e9gration Redis/Valkey (mode cluster). <code>REDIS_HOST</code> global non H\u00f4te/IP du serveur Redis/Valkey. <code>REDIS_PORT</code> <code>6379</code> global non Port Redis/Valkey. <code>REDIS_DATABASE</code> <code>0</code> global non Num\u00e9ro de base (0\u201315). <code>REDIS_SSL</code> <code>no</code> global non Activer SSL/TLS. <code>REDIS_SSL_VERIFY</code> <code>yes</code> global non V\u00e9rifier le certificat SSL du serveur. <code>REDIS_TIMEOUT</code> <code>5</code> global non Timeout (secondes). <code>REDIS_USERNAME</code> global non Nom d\u2019utilisateur (Redis\u00a0\u2265\u00a06.0). <code>REDIS_PASSWORD</code> global non Mot de passe. <code>REDIS_SENTINEL_HOSTS</code> global non H\u00f4tes Sentinel (s\u00e9par\u00e9s par espaces, <code>h\u00f4te:port</code>). <code>REDIS_SENTINEL_USERNAME</code> global non Utilisateur Sentinel. <code>REDIS_SENTINEL_PASSWORD</code> global non Mot de passe Sentinel. <code>REDIS_SENTINEL_MASTER</code> <code>mymaster</code> global non Nom du master Sentinel. <code>REDIS_KEEPALIVE_IDLE</code> <code>300</code> global non Intervalle keepalive TCP (secondes) pour connexions inactives. <code>REDIS_KEEPALIVE_POOL</code> <code>3</code> global non Nb max de connexions conserv\u00e9es dans le pool. <p>Haute disponibilit\u00e9</p> <p>Configurez Redis Sentinel pour un failover automatique en production.</p> <p>!!! warning \"S\u00e9curit\u00e9\" - Mots de passe forts pour Redis et Sentinel - Envisagez SSL/TLS - Ne pas exposer Redis sur Internet - Restreignez l\u2019acc\u00e8s au port Redis (pare\u2011feu, segmentation)</p>"},{"location":"fr/features/#exemples_16","title":"Exemples","text":"Configuration basique <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"localhost\"\nREDIS_PORT: \"6379\"\n</code></pre> Configuration s\u00e9curis\u00e9e <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_SSL: \"yes\"\nREDIS_SSL_VERIFY: \"yes\"\n</code></pre> Redis Sentinel <pre><code>USE_REDIS: \"yes\"\nREDIS_SENTINEL_HOSTS: \"sentinel1:26379 sentinel2:26379 sentinel3:26379\"\nREDIS_SENTINEL_MASTER: \"mymaster\"\nREDIS_SENTINEL_PASSWORD: \"sentinel-password\"\nREDIS_PASSWORD: \"redis-password\"\n</code></pre> Tuning avanc\u00e9 <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_DATABASE: \"3\"\nREDIS_TIMEOUT: \"3\"\nREDIS_KEEPALIVE_IDLE: \"60\"\nREDIS_KEEPALIVE_POOL: \"5\"\n</code></pre>"},{"location":"fr/features/#reporting-pro","title":"Reporting  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Regular reporting of important data from BunkerWeb (global, attacks, bans, requests, reasons, AS...). Monitoring pro plugin needed to work.</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_REPORTING_SMTP</code> <code>no</code> global non Enable sending the report via email. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global non Enable sending the report via webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global non The frequency at which reports are sent. <code>REPORTING_WEBHOOK_URLS</code> global non List of webhook URLs to receive the report in Markdown (separated by spaces). <code>REPORTING_SMTP_EMAILS</code> global non List of email addresses to receive the report in HTML format (separated by spaces). <code>REPORTING_SMTP_HOST</code> global non The host server used for SMTP sending. <code>REPORTING_SMTP_PORT</code> <code>465</code> global non The port used for SMTP. Please note that there are different standards depending on the type of connection (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global non The email address used as the sender. Note that 2FA must be disabled for this email address. <code>REPORTING_SMTP_FROM_USER</code> global non The user authentication value for sending via the from email address. <code>REPORTING_SMTP_FROM_PASSWORD</code> global non The password authentication value for sending via the from email address. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global non Determine whether or not to use a secure connection for SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global non The subject line of the email."},{"location":"fr/features/#reverse-proxy","title":"Reverse proxy","text":"<p>Prise en charge STREAM </p> <p>Le plugin Reverse Proxy offre des capacit\u00e9s de proxy transparentes pour BunkerWeb, vous permettant de router les requ\u00eates vers des serveurs et services backend. Cette fonctionnalit\u00e9 permet \u00e0 BunkerWeb d'agir comme une fa\u00e7ade s\u00e9curis\u00e9e pour vos applications tout en offrant des avantages suppl\u00e9mentaires tels que la terminaison SSL et le filtrage de s\u00e9curit\u00e9.</p> <p>Comment \u00e7a marche :</p> <ol> <li>Lorsqu'un client envoie une requ\u00eate \u00e0 BunkerWeb, le plugin Reverse Proxy la transmet \u00e0 votre serveur backend configur\u00e9.</li> <li>BunkerWeb ajoute des en-t\u00eates de s\u00e9curit\u00e9, applique des r\u00e8gles WAF et effectue d'autres contr\u00f4les de s\u00e9curit\u00e9 avant de transmettre les requ\u00eates \u00e0 votre application.</li> <li>Le serveur backend traite la requ\u00eate et renvoie une r\u00e9ponse \u00e0 BunkerWeb.</li> <li>BunkerWeb applique des mesures de s\u00e9curit\u00e9 suppl\u00e9mentaires \u00e0 la r\u00e9ponse avant de la renvoyer au client.</li> <li>Le plugin prend en charge le proxying de flux HTTP et TCP/UDP, permettant un large \u00e9ventail d'applications, y compris les WebSockets et d'autres protocoles non-HTTP.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_25","title":"Comment l\u2019utiliser","text":"<p>Suivez ces \u00e9tapes pour configurer et utiliser la fonctionnalit\u00e9 Reverse Proxy :</p> <ol> <li>Activer la fonctionnalit\u00e9 : Mettez le param\u00e8tre <code>USE_REVERSE_PROXY</code> \u00e0 <code>yes</code> pour activer la fonctionnalit\u00e9 de reverse proxy.</li> <li>Configurer vos serveurs backend : Sp\u00e9cifiez les serveurs en amont \u00e0 l'aide du param\u00e8tre <code>REVERSE_PROXY_HOST</code>.</li> <li>Ajuster les param\u00e8tres du proxy : Affinez le comportement avec des param\u00e8tres optionnels pour les d\u00e9lais d'attente, les tailles de tampon, et d'autres param\u00e8tres.</li> <li>Configurer les options sp\u00e9cifiques au protocole : Pour les WebSockets ou des exigences HTTP sp\u00e9ciales, ajustez les param\u00e8tres correspondants.</li> <li>Mettre en place la mise en cache (optionnel) : Activez et configurez la mise en cache du proxy pour am\u00e9liorer les performances pour le contenu fr\u00e9quemment acc\u00e9d\u00e9.</li> </ol>"},{"location":"fr/features/#guide-de-configuration_2","title":"Guide de configuration","text":"Configuration de baseParam\u00e8tres de connexionConfiguration SSL/TLSSupport des protocolesGestion des en-t\u00eatesAuthentificationConfiguration avanc\u00e9eConfiguration du cache <p>Param\u00e8tres principaux</p> <p>Les param\u00e8tres de configuration essentiels activent et contr\u00f4lent la fonctionnalit\u00e9 de base du reverse proxy.</p> <p>B\u00e9n\u00e9fices du Reverse Proxy</p> <ul> <li>Am\u00e9lioration de la s\u00e9curit\u00e9 : Tout le trafic passe par les couches de s\u00e9curit\u00e9 de BunkerWeb avant d'atteindre vos applications</li> <li>Terminaison SSL : G\u00e9rez les certificats SSL/TLS de mani\u00e8re centralis\u00e9e tandis que les services backend peuvent utiliser des connexions non chiffr\u00e9es</li> <li>Gestion des protocoles : Prise en charge de HTTP, HTTPS, WebSockets, et d'autres protocoles</li> <li>Interception des erreurs : Personnalisez les pages d'erreur pour une exp\u00e9rience utilisateur coh\u00e9rente</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_REVERSE_PROXY</code> <code>no</code> multisite no Activer le Reverse Proxy : Mettre \u00e0 <code>yes</code> pour activer la fonctionnalit\u00e9 de reverse proxy. <code>REVERSE_PROXY_HOST</code> multisite yes H\u00f4te Backend : URL compl\u00e8te de la ressource proxifi\u00e9e (proxy_pass). <code>REVERSE_PROXY_URL</code> <code>/</code> multisite yes URL d'emplacement : Chemin qui sera proxifi\u00e9 vers le serveur backend. <code>REVERSE_PROXY_BUFFERING</code> <code>yes</code> multisite yes Mise en tampon de la r\u00e9ponse : Active ou d\u00e9sactive la mise en tampon des r\u00e9ponses de la ressource proxifi\u00e9e. <code>REVERSE_PROXY_KEEPALIVE</code> <code>no</code> multisite yes Keep-Alive : Active ou d\u00e9sactive les connexions keepalive avec la ressource proxifi\u00e9e. <code>REVERSE_PROXY_CUSTOM_HOST</code> multisite no H\u00f4te personnalis\u00e9 : Remplace l'en-t\u00eate Host envoy\u00e9 au serveur en amont. <code>REVERSE_PROXY_INTERCEPT_ERRORS</code> <code>yes</code> multisite no Intercepter les erreurs : Intercepte et r\u00e9\u00e9crit les r\u00e9ponses d'erreur du backend. <p>Bonnes pratiques</p> <ul> <li>Sp\u00e9cifiez toujours l'URL compl\u00e8te dans <code>REVERSE_PROXY_HOST</code>, y compris le protocole (http:// ou https://)</li> <li>Utilisez <code>REVERSE_PROXY_INTERCEPT_ERRORS</code> pour fournir des pages d'erreur coh\u00e9rentes sur tous vos services</li> <li>Lors de la configuration de plusieurs backends, utilisez le format de suffixe num\u00e9rot\u00e9 (par exemple, <code>REVERSE_PROXY_HOST_2</code>, <code>REVERSE_PROXY_URL_2</code>)</li> </ul> <p>Configuration des connexions et des d\u00e9lais d'attente</p> <p>Ces param\u00e8tres contr\u00f4lent le comportement des connexions, la mise en tampon et les valeurs de d\u00e9lai d'attente pour les connexions proxifi\u00e9es.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Performance optimis\u00e9e : Ajustez les tailles de tampon et les param\u00e8tres de connexion en fonction des besoins de votre application</li> <li>Gestion des ressources : Contr\u00f4lez l'utilisation de la m\u00e9moire gr\u00e2ce \u00e0 des configurations de tampon appropri\u00e9es</li> <li>Fiabilit\u00e9 : Configurez des d\u00e9lais d'attente appropri\u00e9s pour g\u00e9rer les connexions lentes ou les probl\u00e8mes de backend</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REVERSE_PROXY_CONNECT_TIMEOUT</code> <code>60s</code> multisite yes D\u00e9lai de connexion : Temps maximum pour \u00e9tablir une connexion avec le serveur backend. <code>REVERSE_PROXY_READ_TIMEOUT</code> <code>60s</code> multisite yes D\u00e9lai de lecture : Temps maximum entre les transmissions de deux paquets successifs depuis le serveur backend. <code>REVERSE_PROXY_SEND_TIMEOUT</code> <code>60s</code> multisite yes D\u00e9lai d'envoi : Temps maximum entre les transmissions de deux paquets successifs vers le serveur backend. <code>PROXY_BUFFERS</code> multisite no Tampons : Nombre et taille des tampons pour lire la r\u00e9ponse du serveur backend. <code>PROXY_BUFFER_SIZE</code> multisite no Taille du tampon : Taille du tampon pour lire la premi\u00e8re partie de la r\u00e9ponse du serveur backend. <code>PROXY_BUSY_BUFFERS_SIZE</code> multisite no Taille des tampons occup\u00e9s : Taille des tampons qui peuvent \u00eatre occup\u00e9s \u00e0 envoyer une r\u00e9ponse au client. <p>Consid\u00e9rations sur les d\u00e9lais d'attente</p> <ul> <li>Des d\u00e9lais trop courts peuvent interrompre des connexions l\u00e9gitimes mais lentes</li> <li>Des d\u00e9lais trop longs peuvent laisser des connexions ouvertes inutilement, \u00e9puisant potentiellement les ressources</li> <li>Pour les applications WebSocket, augmentez consid\u00e9rablement les d\u00e9lais de lecture et d'envoi (300s ou plus recommand\u00e9)</li> </ul> <p>Param\u00e8tres SSL/TLS pour les connexions Backend</p> <p>Ces param\u00e8tres contr\u00f4lent la mani\u00e8re dont BunkerWeb \u00e9tablit des connexions s\u00e9curis\u00e9es avec les serveurs backend.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Chiffrement de bout en bout : Maintenez des connexions chiffr\u00e9es du client au backend</li> <li>Validation des certificats : Contr\u00f4lez la validation des certificats des serveurs backend</li> <li>Support SNI : Sp\u00e9cifiez l'indication du nom du serveur (SNI) pour les backends h\u00e9bergeant plusieurs sites</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REVERSE_PROXY_SSL_SNI</code> <code>no</code> multisite no SSL SNI : Active ou d\u00e9sactive l'envoi du SNI (Server Name Indication) \u00e0 l'amont. <code>REVERSE_PROXY_SSL_SNI_NAME</code> multisite no Nom SSL SNI : D\u00e9finit le nom d'h\u00f4te SNI \u00e0 envoyer \u00e0 l'amont lorsque le SSL SNI est activ\u00e9. <p>Explication du SNI</p> <p>L'Indication du Nom du Serveur (SNI) est une extension TLS qui permet \u00e0 un client de sp\u00e9cifier le nom d'h\u00f4te auquel il tente de se connecter pendant la n\u00e9gociation. Cela permet aux serveurs de pr\u00e9senter plusieurs certificats sur la m\u00eame adresse IP et le m\u00eame port, permettant ainsi de servir plusieurs sites web s\u00e9curis\u00e9s (HTTPS) \u00e0 partir d'une seule adresse IP sans que tous ces sites n'utilisent le m\u00eame certificat.</p> <p>Configuration sp\u00e9cifique aux protocoles</p> <p>Configurez la gestion de protocoles sp\u00e9ciaux, notamment pour les WebSockets et autres protocoles non-HTTP.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Flexibilit\u00e9 des protocoles : Le support des WebSockets permet des applications en temps r\u00e9el</li> <li>Applications web modernes : Activez des fonctionnalit\u00e9s interactives n\u00e9cessitant une communication bidirectionnelle</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REVERSE_PROXY_WS</code> <code>no</code> multisite yes Support WebSocket : Active le protocole WebSocket sur la ressource. <p>Configuration WebSocket</p> <ul> <li>Lors de l'activation des WebSockets avec <code>REVERSE_PROXY_WS: \"yes\"</code>, envisagez d'augmenter les valeurs des d\u00e9lais d'attente</li> <li>Les connexions WebSocket restent ouvertes plus longtemps que les connexions HTTP typiques</li> <li>Pour les applications WebSocket, une configuration recommand\u00e9e est :   <pre><code>REVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\n</code></pre></li> </ul> <p>Configuration des en-t\u00eates HTTP</p> <p>Contr\u00f4lez quels en-t\u00eates sont envoy\u00e9s aux serveurs backend et aux clients, vous permettant d'ajouter, de modifier ou de pr\u00e9server des en-t\u00eates HTTP.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Contr\u00f4le de l'information : G\u00e9rez pr\u00e9cis\u00e9ment les informations partag\u00e9es entre les clients et les backends</li> <li>Am\u00e9lioration de la s\u00e9curit\u00e9 : Ajoutez des en-t\u00eates li\u00e9s \u00e0 la s\u00e9curit\u00e9 ou supprimez ceux qui pourraient divulguer des informations sensibles</li> <li>Support d'int\u00e9gration : Fournissez les en-t\u00eates n\u00e9cessaires \u00e0 l'authentification et au bon fonctionnement du backend</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REVERSE_PROXY_HEADERS</code> multisite yes En-t\u00eates personnalis\u00e9s : En-t\u00eates HTTP \u00e0 envoyer au backend, s\u00e9par\u00e9s par des points-virgules. <code>REVERSE_PROXY_HIDE_HEADERS</code> <code>Upgrade</code> multisite yes Cacher les en-t\u00eates : En-t\u00eates HTTP \u00e0 cacher aux clients lorsqu'ils sont re\u00e7us du backend. <code>REVERSE_PROXY_HEADERS_CLIENT</code> multisite yes En-t\u00eates client : En-t\u00eates HTTP \u00e0 envoyer au client, s\u00e9par\u00e9s par des points-virgules. <code>REVERSE_PROXY_UNDERSCORES_IN_HEADERS</code> <code>no</code> multisite no Underscores dans les en-t\u00eates : Active ou d\u00e9sactive la directive <code>underscores_in_headers</code>. <p>Consid\u00e9rations de s\u00e9curit\u00e9</p> <p>Lors de l'utilisation de la fonctionnalit\u00e9 de reverse proxy, soyez prudent quant aux en-t\u00eates que vous transmettez \u00e0 vos applications backend. Certains en-t\u00eates peuvent exposer des informations sensibles sur votre infrastructure ou contourner les contr\u00f4les de s\u00e9curit\u00e9.</p> <p>Exemples de format d'en-t\u00eate</p> <p>En-t\u00eates personnalis\u00e9s vers les serveurs backend : <pre><code>REVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n</code></pre></p> <p>En-t\u00eates personnalis\u00e9s vers les clients : <pre><code>REVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre></p> <p>Configuration de l'authentification externe</p> <p>Int\u00e9grez avec des syst\u00e8mes d'authentification externes pour centraliser la logique d'autorisation \u00e0 travers vos applications.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Authentification centralis\u00e9e : Mettez en \u0153uvre un point d'authentification unique pour plusieurs applications</li> <li>S\u00e9curit\u00e9 coh\u00e9rente : Appliquez des politiques d'authentification uniformes sur diff\u00e9rents services</li> <li>Contr\u00f4le am\u00e9lior\u00e9 : Transmettez les d\u00e9tails d'authentification aux applications backend via des en-t\u00eates ou des variables</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REVERSE_PROXY_AUTH_REQUEST</code> multisite yes Requ\u00eate d'authentification : Active l'authentification via un fournisseur externe. <code>REVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL</code> multisite yes URL de connexion : Redirige les clients vers l'URL de connexion en cas d'\u00e9chec de l'authentification. <code>REVERSE_PROXY_AUTH_REQUEST_SET</code> multisite yes Variables d'authentification : Variables \u00e0 d\u00e9finir \u00e0 partir du fournisseur d'authentification. <p>Int\u00e9gration de l'authentification</p> <ul> <li>La fonctionnalit\u00e9 de requ\u00eate d'authentification permet la mise en \u0153uvre de microservices d'authentification centralis\u00e9s</li> <li>Votre service d'authentification doit renvoyer un code de statut 200 pour une authentification r\u00e9ussie ou 401/403 en cas d'\u00e9chec</li> <li>Utilisez la directive auth_request_set pour extraire et transmettre des informations du service d'authentification</li> </ul> <p>Options de configuration suppl\u00e9mentaires</p> <p>Ces param\u00e8tres offrent une personnalisation plus pouss\u00e9e du comportement du reverse proxy pour des sc\u00e9narios sp\u00e9cialis\u00e9s.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Personnalisation : Incluez des extraits de configuration suppl\u00e9mentaires pour des exigences complexes</li> <li>Optimisation des performances : Affinez la gestion des requ\u00eates pour des cas d'usage sp\u00e9cifiques</li> <li>Flexibilit\u00e9 : Adaptez-vous aux exigences uniques de l'application avec des configurations sp\u00e9cialis\u00e9es</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REVERSE_PROXY_INCLUDES</code> multisite yes Configurations suppl\u00e9mentaires : Incluez des configurations additionnelles dans le bloc location. <code>REVERSE_PROXY_PASS_REQUEST_BODY</code> <code>yes</code> multisite yes Passer le corps de la requ\u00eate : Active ou d\u00e9sactive la transmission du corps de la requ\u00eate. <p>Consid\u00e9rations de s\u00e9curit\u00e9</p> <p>Soyez prudent lorsque vous incluez des extraits de configuration personnalis\u00e9s car ils peuvent outrepasser les param\u00e8tres de s\u00e9curit\u00e9 de BunkerWeb ou introduire des vuln\u00e9rabilit\u00e9s s'ils ne sont pas correctement configur\u00e9s.</p> <p>Param\u00e8tres de mise en cache des r\u00e9ponses</p> <p>Am\u00e9liorez les performances en mettant en cache les r\u00e9ponses des serveurs backend, r\u00e9duisant ainsi la charge et am\u00e9liorant les temps de r\u00e9ponse.</p> <p>B\u00e9n\u00e9fices</p> <ul> <li>Performance : R\u00e9duisez la charge sur les serveurs backend en servant du contenu mis en cache</li> <li>Latence r\u00e9duite : Temps de r\u00e9ponse plus rapides pour le contenu fr\u00e9quemment demand\u00e9</li> <li>\u00c9conomies de bande passante : Minimisez le trafic r\u00e9seau interne en mettant en cache les r\u00e9ponses</li> <li>Personnalisation : Configurez exactement quoi, quand et comment le contenu est mis en cache</li> </ul> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_PROXY_CACHE</code> <code>no</code> multisite no Activer le cache : Mettre \u00e0 <code>yes</code> pour activer la mise en cache des r\u00e9ponses du backend. <code>PROXY_CACHE_PATH_LEVELS</code> <code>1:2</code> global no Niveaux de chemin du cache : Comment structurer la hi\u00e9rarchie du r\u00e9pertoire de cache. <code>PROXY_CACHE_PATH_ZONE_SIZE</code> <code>10m</code> global no Taille de la zone de cache : Taille de la zone de m\u00e9moire partag\u00e9e utilis\u00e9e pour les m\u00e9tadonn\u00e9es du cache. <code>PROXY_CACHE_PATH_PARAMS</code> <code>max_size=100m</code> global no Param\u00e8tres du chemin de cache : Param\u00e8tres suppl\u00e9mentaires pour le chemin de cache. <code>PROXY_CACHE_METHODS</code> <code>GET HEAD</code> multisite no M\u00e9thodes de cache : M\u00e9thodes HTTP qui peuvent \u00eatre mises en cache. <code>PROXY_CACHE_MIN_USES</code> <code>2</code> multisite no Utilisations min. pour cache : Nombre minimum de requ\u00eates avant qu'une r\u00e9ponse ne soit mise en cache. <code>PROXY_CACHE_KEY</code> <code>$scheme$host$request_uri</code> multisite no Cl\u00e9 de cache : La cl\u00e9 utilis\u00e9e pour identifier de mani\u00e8re unique une r\u00e9ponse mise en cache. <code>PROXY_CACHE_VALID</code> <code>200=24h 301=1h 302=24h</code> multisite no Validit\u00e9 du cache : Dur\u00e9e de mise en cache pour des codes de r\u00e9ponse sp\u00e9cifiques. <code>PROXY_NO_CACHE</code> <code>$http_pragma $http_authorization</code> multisite no Pas de cache : Conditions pour ne pas mettre en cache les r\u00e9ponses m\u00eame si elles sont normalement cachables. <code>PROXY_CACHE_BYPASS</code> <code>0</code> multisite no Contournement du cache : Conditions sous lesquelles contourner le cache. <p>Bonnes pratiques de mise en cache</p> <ul> <li>Ne mettez en cache que le contenu qui ne change pas fr\u00e9quemment ou qui n'est pas personnalis\u00e9</li> <li>Utilisez des dur\u00e9es de cache appropri\u00e9es en fonction du type de contenu (les ressources statiques peuvent \u00eatre mises en cache plus longtemps)</li> <li>Configurez <code>PROXY_NO_CACHE</code> pour \u00e9viter de mettre en cache du contenu sensible ou personnalis\u00e9</li> <li>Surveillez les taux de r\u00e9ussite du cache et ajustez les param\u00e8tres en cons\u00e9quence</li> </ul> <p>Utilisateurs de Docker Compose - Variables NGINX</p> <p>Lorsque vous utilisez Docker Compose avec des variables NGINX dans vos configurations, vous devez \u00e9chapper le signe dollar (<code>$</code>) en utilisant des doubles signes dollar (<code>$$</code>). Cela s'applique \u00e0 tous les param\u00e8tres contenant des variables NGINX comme <code>$remote_addr</code>, <code>$proxy_add_x_forwarded_for</code>, etc.</p> <pre><code>Sans cet \u00e9chappement, Docker Compose essaiera de substituer ces variables par des variables d'environnement, qui n'existent g\u00e9n\u00e9ralement pas, ce qui entra\u00eenera des valeurs vides dans votre configuration NGINX.\n</code></pre>"},{"location":"fr/features/#exemples-de-configuration_9","title":"Exemples de configuration","text":"Proxy HTTP de baseApplication WebSocketEmplacements multiplesConfiguration du cacheGestion avanc\u00e9e des en-t\u00eatesInt\u00e9gration de l'authentification <p>Une configuration simple pour proxifier les requ\u00eates HTTP vers un serveur d'application backend :</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"60s\"\nREVERSE_PROXY_READ_TIMEOUT: \"60s\"\n</code></pre> <p>Configuration optimis\u00e9e pour une application WebSocket avec des d\u00e9lais d'attente plus longs :</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://websocket-app:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\n</code></pre> <p>Configuration pour router diff\u00e9rents chemins vers diff\u00e9rents services backend :</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\n\n# Backend API\nREVERSE_PROXY_HOST: \"http://api-server:8080\"\nREVERSE_PROXY_URL: \"/api/\"\n\n# Backend Admin\nREVERSE_PROXY_HOST_2: \"http://admin-server:8080\"\nREVERSE_PROXY_URL_2: \"/admin/\"\n\n# Application Frontend\nREVERSE_PROXY_HOST_3: \"http://frontend:3000\"\nREVERSE_PROXY_URL_3: \"/\"\n</code></pre> <p>Configuration avec mise en cache du proxy activ\u00e9e pour de meilleures performances :</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nUSE_PROXY_CACHE: \"yes\"\nPROXY_CACHE_VALID: \"200=24h 301=1h 302=24h\"\nPROXY_CACHE_METHODS: \"GET HEAD\"\nPROXY_NO_CACHE: \"$http_authorization\"\n</code></pre> <p>Configuration avec manipulation personnalis\u00e9e des en-t\u00eates :</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# En-t\u00eates personnalis\u00e9s vers le backend\nREVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n\n# En-t\u00eates personnalis\u00e9s vers le client\nREVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre> <p>Configuration avec authentification externe :</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Configuration de l'authentification\nREVERSE_PROXY_AUTH_REQUEST: \"/auth\"\nREVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL: \"https://login.example.com\"\nREVERSE_PROXY_AUTH_REQUEST_SET: \"$auth_user $upstream_http_x_user;$auth_role $upstream_http_x_role\"\n\n# Backend du service d'authentification\nREVERSE_PROXY_HOST_2: \"http://auth-service:8080\"\nREVERSE_PROXY_URL_2: \"/auth\"\n</code></pre>"},{"location":"fr/features/#reverse-scan","title":"Reverse scan","text":"<p>Prise en charge STREAM </p> <p>Le plugin Reverse Scan prot\u00e8ge contre les tentatives de contournement via proxy en scannant certains ports c\u00f4t\u00e9 client pour d\u00e9tecter des proxys/serveurs ouverts. Il aide \u00e0 identifier et bloquer les clients qui tentent de masquer leur identit\u00e9 ou leur origine.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 la connexion d\u2019un client, BunkerWeb tente de scanner des ports sp\u00e9cifiques sur l\u2019IP du client.</li> <li>Les ports de proxy courants (80, 443, 8080, etc.) sont v\u00e9rifi\u00e9s.</li> <li>Si des ports ouverts sont d\u00e9tect\u00e9s (signe d\u2019un proxy), la connexion est refus\u00e9e.</li> <li>Cela ajoute une couche contre bots/outils automatis\u00e9s et utilisateurs malveillants.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_26","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_REVERSE_SCAN: yes</code>.</li> <li>Ports\u00a0: personnalisez <code>REVERSE_SCAN_PORTS</code>.</li> <li>Timeout\u00a0: ajustez <code>REVERSE_SCAN_TIMEOUT</code> pour l\u2019\u00e9quilibre s\u00e9curit\u00e9/performance.</li> <li>Suivi\u00a0: consultez les logs et la web UI.</li> </ol>"},{"location":"fr/features/#parametres_21","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_REVERSE_SCAN</code> <code>no</code> multisite non Activer l\u2019analyse des ports c\u00f4t\u00e9 client. <code>REVERSE_SCAN_PORTS</code> <code>22 80 443 3128 8000 8080</code> multisite non Ports \u00e0 v\u00e9rifier (s\u00e9par\u00e9s par des espaces). <code>REVERSE_SCAN_TIMEOUT</code> <code>500</code> multisite non D\u00e9lai max par port en millisecondes. <p>Performance</p> <p>Scanner de nombreux ports ajoute de la latence. Limitez la liste et adaptez le timeout.</p> <p>Ports de proxy courants</p> <p>La configuration par d\u00e9faut inclut 80, 443, 8080, 3128 et SSH\u00a0(22). Adaptez selon votre mod\u00e8le de menace.</p>"},{"location":"fr/features/#exemples_17","title":"Exemples","text":"Basique <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"500\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> Approfondi <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1000\"\nREVERSE_SCAN_PORTS: \"22 80 443 3128 8080 8000 8888 1080 3333 8081\"\n</code></pre> Optimis\u00e9 performance <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"250\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> Haute s\u00e9curit\u00e9 <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1500\"\nREVERSE_SCAN_PORTS: \"22 25 80 443 1080 3128 3333 4444 5555 6588 6666 7777 8000 8080 8081 8800 8888 9999\"\n</code></pre>"},{"location":"fr/features/#robotstxt","title":"Robots.txt","text":"<p>Prise en charge STREAM </p> <p>Le plugin Robots.txt g\u00e8re le fichier robots.txt de votre site, indiquant aux robots les zones autoris\u00e9es/interdites.</p> <p>Comment \u00e7a marche\u00a0:</p> <p>Activ\u00e9, BunkerWeb g\u00e9n\u00e8re dynamiquement <code>/robots.txt</code> \u00e0 la racine. Les r\u00e8gles sont agr\u00e9g\u00e9es dans l\u2019ordre\u00a0:</p> <ol> <li>DarkVisitors (si <code>ROBOTSTXT_DARKVISITORS_TOKEN</code>)\u00a0: bloque des bots/IA connus selon <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> et <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code>.</li> <li>Listes communautaires (<code>ROBOTSTXT_COMMUNITY_LISTS</code>).</li> <li>URLs personnalis\u00e9es (<code>ROBOTSTXT_URLS</code>).</li> <li>R\u00e8gles manuelles (<code>ROBOTSTXT_RULE[_N]</code>).</li> </ol> <p>Ensuite, les r\u00e8gles \u00e0 ignorer (<code>ROBOTSTXT_IGNORE_RULE[_N]</code>, PCRE) sont filtr\u00e9es. S\u2019il ne reste rien, un <code>User-agent: *</code> + <code>Disallow: /</code> par d\u00e9faut est appliqu\u00e9. Des sitemaps (<code>ROBOTSTXT_SITEMAP[_N]</code>) peuvent \u00eatre ajout\u00e9s.</p>"},{"location":"fr/features/#darkvisitors","title":"DarkVisitors","text":"<p>DarkVisitors fournit un <code>robots.txt</code> dynamique pour bloquer des bots/IA. Inscrivez\u2011vous et obtenez un bearer token.</p>"},{"location":"fr/features/#comment-lutiliser_27","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_ROBOTSTXT: yes</code>.</li> <li>R\u00e8gles\u00a0: via DarkVisitors, listes communautaires, URLs ou variables <code>ROBOTSTXT_RULE</code>.</li> <li>Filtrer (optionnel)\u00a0: <code>ROBOTSTXT_IGNORE_RULE_N</code>.</li> <li>Sitemaps (optionnel)\u00a0: <code>ROBOTSTXT_SITEMAP_N</code>.</li> <li>Acc\u00e8s\u00a0: <code>http(s)://votre-domaine/robots.txt</code>.</li> </ol>"},{"location":"fr/features/#parametres_22","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_ROBOTSTXT</code> <code>no</code> multisite non Active/d\u00e9sactive la fonctionnalit\u00e9. <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> multisite non Jeton Bearer pour l\u2019API DarkVisitors. <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> multisite non Types d\u2019agents (s\u00e9par\u00e9s par virgules) \u00e0 inclure depuis DarkVisitors. <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code> <code>/</code> multisite non Valeur du champ Disallow envoy\u00e9e \u00e0 l\u2019API DarkVisitors. <code>ROBOTSTXT_COMMUNITY_LISTS</code> multisite non IDs de listes communautaires (s\u00e9par\u00e9s par espaces). <code>ROBOTSTXT_URLS</code> multisite non URLs suppl\u00e9mentaires (supporte <code>file://</code> et auth basique). <code>ROBOTSTXT_RULE</code> multisite oui R\u00e8gle individuelle <code>robots.txt</code>. <code>ROBOTSTXT_HEADER</code> multisite oui En\u2011t\u00eate (peut \u00eatre encod\u00e9 Base64). <code>ROBOTSTXT_FOOTER</code> multisite oui Pied de page (peut \u00eatre encod\u00e9 Base64). <code>ROBOTSTXT_IGNORE_RULE</code> multisite oui Motif PCRE d\u2019ignorance de r\u00e8gles. <code>ROBOTSTXT_SITEMAP</code> multisite oui URL de sitemap."},{"location":"fr/features/#exemples_18","title":"Exemples","text":"<p>Basique (manuel)</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Sources dynamiques (DarkVisitors + liste)</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"your-darkvisitors-token-here\"\nROBOTSTXT_DARKVISITORS_AGENT_TYPES: \"AI Data Scraper\"\nROBOTSTXT_COMMUNITY_LISTS: \"robots-disallowed\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\n</code></pre> <p>Combin\u00e9</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"your-darkvisitors-token-here\"\nROBOTSTXT_COMMUNITY_LISTS: \"ai-robots-txt\"\nROBOTSTXT_URLS: \"https://example.com/my-custom-rules.txt\"\nROBOTSTXT_RULE: \"User-agent: MyOwnBot\"\nROBOTSTXT_RULE_1: \"Disallow: /admin\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>En\u2011t\u00eate/Pied de page</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_HEADER: \"# This is a custom header\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_FOOTER: \"# This is a custom footer\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Pour en savoir plus\u00a0: documentation robots.txt.</p>"},{"location":"fr/features/#ssl","title":"SSL","text":"<p>Prise en charge STREAM </p> <p>Le plugin SSL fournit un chiffrement SSL/TLS robuste pour vos sites prot\u00e9g\u00e9s par BunkerWeb. Il permet des connexions HTTPS s\u00e9curis\u00e9es en configurant protocoles, suites cryptographiques et param\u00e8tres associ\u00e9s.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Lors d\u2019une connexion HTTPS, BunkerWeb g\u00e8re la n\u00e9gociation SSL/TLS selon vos r\u00e9glages.</li> <li>Le plugin impose des protocoles modernes et des suites fortes, et d\u00e9sactive les options vuln\u00e9rables.</li> <li>Des param\u00e8tres de session optimis\u00e9s am\u00e9liorent les performances sans sacrifier la s\u00e9curit\u00e9.</li> <li>La pr\u00e9sentation des certificats suit les bonnes pratiques pour compatibilit\u00e9 et s\u00e9curit\u00e9.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_28","title":"Comment l\u2019utiliser","text":"<ol> <li>Protocoles\u00a0: choisissez les versions via <code>SSL_PROTOCOLS</code>.</li> <li>Suites\u00a0: s\u00e9lectionnez un niveau via <code>SSL_CIPHERS_LEVEL</code> ou des suites personnalis\u00e9es via <code>SSL_CIPHERS_CUSTOM</code>.</li> <li>Redirections\u00a0: configurez la redirection HTTP\u2192HTTPS avec <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> et/ou <code>REDIRECT_HTTP_TO_HTTPS</code>.</li> </ol>"},{"location":"fr/features/#parametres_23","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>REDIRECT_HTTP_TO_HTTPS</code> <code>no</code> multisite non Rediriger tout HTTP vers HTTPS. <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> <code>yes</code> multisite non Redirection auto si HTTPS d\u00e9tect\u00e9. <code>SSL_PROTOCOLS</code> <code>TLSv1.2 TLSv1.3</code> multisite non Protocoles SSL/TLS support\u00e9s (s\u00e9par\u00e9s par des espaces). <code>SSL_CIPHERS_LEVEL</code> <code>modern</code> multisite non Niveau de s\u00e9curit\u00e9 des suites (<code>modern</code>, <code>intermediate</code>, <code>old</code>). <code>SSL_CIPHERS_CUSTOM</code> multisite non Suites personnalis\u00e9es (liste s\u00e9par\u00e9e par <code>:</code>) qui remplacent le niveau. <p>Test SSL Labs</p> <p>Testez votre configuration via Qualys SSL Labs. Une configuration BunkerWeb bien r\u00e9gl\u00e9e atteint g\u00e9n\u00e9ralement A+.</p> <p>Protocoles anciens</p> <p>SSLv3, TLSv1.0 et TLSv1.1 sont d\u00e9sactiv\u00e9s par d\u00e9faut (vuln\u00e9rabilit\u00e9s connues). Activez\u2011les uniquement si n\u00e9cessaire pour clients h\u00e9rit\u00e9s.</p>"},{"location":"fr/features/#exemples_19","title":"Exemples","text":"S\u00e9curit\u00e9 moderne (d\u00e9faut) <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> S\u00e9curit\u00e9 maximale <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre> Compatibilit\u00e9 h\u00e9rit\u00e9e <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"old\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> Suites personnalis\u00e9es <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_CUSTOM: \"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre>"},{"location":"fr/features/#securitytxt","title":"Security.txt","text":"<p>Prise en charge STREAM </p> <p>Le plugin Security.txt met en \u0153uvre le standard Security.txt (RFC\u00a09116) sur votre site. Il facilite l\u2019acc\u00e8s aux politiques de s\u00e9curit\u00e9 et fournit un moyen standardis\u00e9 de signaler des vuln\u00e9rabilit\u00e9s.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Une fois activ\u00e9, BunkerWeb expose <code>/.well-known/security.txt</code> \u00e0 la racine du site.</li> <li>Le fichier contient vos politiques, contacts et informations pertinentes.</li> <li>Les chercheurs en s\u00e9curit\u00e9 et outils automatis\u00e9s le trouvent \u00e0 l\u2019emplacement standard.</li> <li>Le contenu est d\u00e9fini via des param\u00e8tres simples (contacts, cl\u00e9s de chiffrement, politiques, remerciements\u2026).</li> <li>BunkerWeb formate automatiquement selon la RFC\u00a09116.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_29","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>USE_SECURITYTXT: yes</code>.</li> <li>Contacts\u00a0: pr\u00e9cisez au moins un moyen de contact via <code>SECURITYTXT_CONTACT</code>.</li> <li>Informations additionnelles\u00a0: configurez expiration, chiffrement, remerciements, URL de politique\u2026</li> </ol>"},{"location":"fr/features/#parametres_24","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_SECURITYTXT</code> <code>no</code> multisite non Activer le fichier security.txt. <code>SECURITYTXT_URI</code> <code>/.well-known/security.txt</code> multisite non URI d\u2019acc\u00e8s au fichier. <code>SECURITYTXT_CONTACT</code> multisite oui Moyens de contact (ex. <code>mailto:security@example.com</code>). <code>SECURITYTXT_EXPIRES</code> multisite non Date d\u2019expiration (format ISO\u00a08601). <code>SECURITYTXT_ENCRYPTION</code> multisite oui URL de cl\u00e9s de chiffrement pour \u00e9changes s\u00e9curis\u00e9s. <code>SECURITYTXT_ACKNOWLEDGEMENTS</code> multisite oui URL de remerciements pour les chercheurs. <code>SECURITYTXT_POLICY</code> multisite oui URL de la politique de s\u00e9curit\u00e9 (proc\u00e9dure de signalement). <code>SECURITYTXT_HIRING</code> multisite oui URL d\u2019offres d\u2019emploi s\u00e9curit\u00e9. <code>SECURITYTXT_CANONICAL</code> multisite oui URL canonique du fichier security.txt. <code>SECURITYTXT_PREFERRED_LANG</code> <code>en</code> multisite non Langue pr\u00e9f\u00e9r\u00e9e (code ISO\u00a0639\u20111). <code>SECURITYTXT_CSAF</code> multisite oui Lien vers le provider-metadata.json du fournisseur CSAF. <p>Expiration requise</p> <p>Le champ <code>Expires</code> est obligatoire. Si absent, BunkerWeb d\u00e9finit par d\u00e9faut une expiration \u00e0 un an.</p> <p>Contacts essentiels</p> <p>Fournissez au moins un moyen de contact\u00a0: email, formulaire, t\u00e9l\u00e9phone, etc.</p> <p>HTTPS obligatoire</p> <p>Toutes les URLs (sauf <code>mailto:</code> et <code>tel:</code>) DOIVENT utiliser HTTPS. BunkerWeb convertit les URL non\u2011HTTPS pour la conformit\u00e9.</p>"},{"location":"fr/features/#exemples_20","title":"Exemples","text":"Basique <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\n</code></pre> Complet <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"https://example.com/security-contact-form\"\nSECURITYTXT_EXPIRES: \"2023-12-31T23:59:59+00:00\"\nSECURITYTXT_ENCRYPTION: \"https://example.com/pgp-key.txt\"\nSECURITYTXT_ACKNOWLEDGEMENTS: \"https://example.com/hall-of-fame\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_HIRING: \"https://example.com/jobs/security\"\nSECURITYTXT_CANONICAL: \"https://example.com/.well-known/security.txt\"\nSECURITYTXT_PREFERRED_LANG: \"en\"\nSECURITYTXT_CSAF: \"https://example.com/provider-metadata.json\"\n</code></pre> Contacts multiples <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"tel:+1-201-555-0123\"\nSECURITYTXT_CONTACT_3: \"https://example.com/security-form\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_EXPIRES: \"2024-06-30T23:59:59+00:00\"\n</code></pre>"},{"location":"fr/features/#self-signed-certificate","title":"Self-signed certificate","text":"<p>Prise en charge STREAM </p> <p>Le plugin Certificat auto\u2011sign\u00e9 g\u00e9n\u00e8re et g\u00e8re automatiquement des certificats SSL/TLS directement dans BunkerWeb, pour activer HTTPS sans autorit\u00e9 de certification externe. Id\u00e9al en d\u00e9veloppement, r\u00e9seaux internes ou d\u00e9ploiements rapides d\u2019HTTPS.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Une fois activ\u00e9, BunkerWeb g\u00e9n\u00e8re un certificat auto\u2011sign\u00e9 pour vos domaines configur\u00e9s.</li> <li>Le certificat inclut tous les noms de serveurs d\u00e9finis, assurant une validation correcte.</li> <li>Les certificats sont stock\u00e9s de fa\u00e7on s\u00e9curis\u00e9e et chiffrent tout le trafic HTTPS.</li> <li>Le renouvellement est automatique avant expiration.</li> </ol> <p>Avertissements navigateurs</p> <p>Les navigateurs afficheront des alertes de s\u00e9curit\u00e9 car un certificat auto\u2011sign\u00e9 n\u2019est pas \u00e9mis par une AC de confiance. En production, pr\u00e9f\u00e9rez Let\u2019s Encrypt.</p>"},{"location":"fr/features/#comment-lutiliser_30","title":"Comment l\u2019utiliser","text":"<ol> <li>Activer\u00a0: <code>GENERATE_SELF_SIGNED_SSL: yes</code>.</li> <li>Algorithme\u00a0: choisissez via <code>SELF_SIGNED_SSL_ALGORITHM</code>.</li> <li>Validit\u00e9\u00a0: dur\u00e9e en jours via <code>SELF_SIGNED_SSL_EXPIRY</code>.</li> <li>Sujet\u00a0: champ subject via <code>SELF_SIGNED_SSL_SUBJ</code>.</li> </ol> <p>Mode stream</p> <p>En mode stream, configurez <code>LISTEN_STREAM_PORT_SSL</code> pour d\u00e9finir le port d\u2019\u00e9coute SSL/TLS.</p>"},{"location":"fr/features/#parametres_25","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>GENERATE_SELF_SIGNED_SSL</code> <code>no</code> multisite non Activer la g\u00e9n\u00e9ration automatique de certificats auto\u2011sign\u00e9s. <code>SELF_SIGNED_SSL_ALGORITHM</code> <code>ec-prime256v1</code> multisite non Algorithme\u00a0: <code>ec-prime256v1</code>, <code>ec-secp384r1</code>, <code>rsa-2048</code>, <code>rsa-4096</code>. <code>SELF_SIGNED_SSL_EXPIRY</code> <code>365</code> multisite non Validit\u00e9 (jours). <code>SELF_SIGNED_SSL_SUBJ</code> <code>/CN=www.example.com/</code> multisite non Sujet du certificat (identifiant le domaine)."},{"location":"fr/features/#exemples_21","title":"Exemples","text":"Basique <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=mysite.local/\"\n</code></pre> Certificats courte dur\u00e9e <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"90\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=dev.example.com/\"\n</code></pre> Test en RSA <pre><code>SERVER_NAME: \"test.example.com\"\nGENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"rsa-4096\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=test.example.com/\"\n</code></pre>"},{"location":"fr/features/#sessions","title":"Sessions","text":"<p>Prise en charge STREAM </p> <p>Le plugin Sessions fournit une gestion robuste des sessions HTTP dans BunkerWeb pour suivre de mani\u00e8re s\u00e9curis\u00e9e l\u2019\u00e9tat utilisateur entre requ\u00eates. Indispensable pour la persistance d\u2019authentification et des fonctionnalit\u00e9s comme la protection antibot.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>\u00c0 la premi\u00e8re interaction, BunkerWeb cr\u00e9e un identifiant de session unique.</li> <li>Il est stock\u00e9 de mani\u00e8re s\u00e9curis\u00e9e dans un cookie navigateur.</li> <li>Aux requ\u00eates suivantes, l\u2019identifiant permet d\u2019acc\u00e9der aux donn\u00e9es de session.</li> <li>Le stockage peut \u00eatre local ou dans Redis en environnement distribu\u00e9.</li> <li>Les sessions sont g\u00e9r\u00e9es automatiquement avec des timeouts configurables.</li> <li>Un secret cryptographique signe les cookies de session.</li> </ol>"},{"location":"fr/features/#comment-lutiliser_31","title":"Comment l\u2019utiliser","text":"<ol> <li>Secret\u00a0: d\u00e9finissez un <code>SESSIONS_SECRET</code> fort et unique.</li> <li>Nom\u00a0: personnalisez <code>SESSIONS_NAME</code> si souhait\u00e9.</li> <li>D\u00e9lais\u00a0: ajustez <code>SESSIONS_IDLING_TIMEOUT</code>, <code>SESSIONS_ROLLING_TIMEOUT</code>, <code>SESSIONS_ABSOLUTE_TIMEOUT</code>.</li> <li>Cluster\u00a0: activez <code>USE_REDIS: yes</code> et configurez Redis pour partager les sessions entre n\u0153uds.</li> </ol>"},{"location":"fr/features/#parametres_26","title":"Param\u00e8tres","text":"Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>SESSIONS_SECRET</code> <code>random</code> global non Cl\u00e9 de signature des cookies (forte, al\u00e9atoire, unique). <code>SESSIONS_NAME</code> <code>random</code> global non Nom du cookie de session. <code>SESSIONS_IDLING_TIMEOUT</code> <code>1800</code> global non Inactivit\u00e9 max (secondes) avant invalidation. <code>SESSIONS_ROLLING_TIMEOUT</code> <code>3600</code> global non Dur\u00e9e max (secondes) avant renouvellement obligatoire. <code>SESSIONS_ABSOLUTE_TIMEOUT</code> <code>86400</code> global non Dur\u00e9e max (secondes) avant destruction, activit\u00e9 ou non. <code>SESSIONS_CHECK_IP</code> <code>yes</code> global non D\u00e9truire la session si l\u2019IP change. <code>SESSIONS_CHECK_USER_AGENT</code> <code>yes</code> global non D\u00e9truire la session si l\u2019User\u2011Agent change. <p>!!! warning \"S\u00e9curit\u00e9\" - <code>SESSIONS_SECRET</code> doit \u00eatre fort (\u226532\u00a0caract\u00e8res), confidentiel et identique sur toutes les instances. - Utilisez des variables d\u2019environnement/secrets pour \u00e9viter le clair.</p> <p>!!! tip \"Clusters\" - <code>USE_REDIS: yes</code> et m\u00eame <code>SESSIONS_SECRET</code>/<code>SESSIONS_NAME</code> sur tous les n\u0153uds.</p>"},{"location":"fr/features/#exemples_22","title":"Exemples","text":"Basique (instance unique) <pre><code>SESSIONS_SECRET: \"your-strong-random-secret-key-here\"\nSESSIONS_NAME: \"myappsession\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\n</code></pre> S\u00e9curit\u00e9 renforc\u00e9e <pre><code>SESSIONS_SECRET: \"your-very-strong-random-secret-key-here\"\nSESSIONS_NAME: \"securesession\"\nSESSIONS_IDLING_TIMEOUT: \"900\"\nSESSIONS_ROLLING_TIMEOUT: \"1800\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"43200\"\nSESSIONS_CHECK_IP: \"yes\"\nSESSIONS_CHECK_USER_AGENT: \"yes\"\n</code></pre> Cluster + Redis <pre><code>SESSIONS_SECRET: \"your-strong-random-secret-key-here\"\nSESSIONS_NAME: \"clustersession\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\nUSE_REDIS: \"yes\"\n# Configurez la connexion Redis\n</code></pre> Sessions longue dur\u00e9e <pre><code>SESSIONS_SECRET: \"your-strong-random-secret-key-here\"\nSESSIONS_NAME: \"persistentsession\"\nSESSIONS_IDLING_TIMEOUT: \"86400\"\nSESSIONS_ROLLING_TIMEOUT: \"172800\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"604800\"\n</code></pre>"},{"location":"fr/features/#ui","title":"UI","text":"<p>Prise en charge STREAM </p> <p>Integrate easily the BunkerWeb UI.</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USE_UI</code> <code>no</code> multisite non Use UI <code>UI_HOST</code> global non Address of the web UI used for initial setup"},{"location":"fr/features/#user-manager-pro","title":"User Manager  (PRO)","text":"<p>Prise en charge STREAM </p> <p>Add the possibility to manage users on the web interface</p> Param\u00e8tre Valeur par d\u00e9faut Contexte Multiple Description <code>USERS_REQUIRE_2FA</code> <code>no</code> global non Require two-factor authentication for all users"},{"location":"fr/features/#whitelist","title":"Whitelist","text":"<p>Prise en charge STREAM </p> <p>Le plugin Whitelist vous permet de d\u00e9finir des clients de confiance qui contournent les autres filtres de s\u00e9curit\u00e9. Les visiteurs correspondant aux r\u00e8gles sont imm\u00e9diatement autoris\u00e9s et passent avant les autres contr\u00f4les. Pour bloquer des clients ind\u00e9sirables, voir Blacklist.</p> <p>Comment \u00e7a marche\u00a0:</p> <ol> <li>Vous d\u00e9finissez des crit\u00e8res (IP/r\u00e9seaux, rDNS, ASN, User\u2011Agent, URI).</li> <li>Si un visiteur correspond \u00e0 une r\u00e8gle (et pas \u00e0 une r\u00e8gle d\u2019ignore), il est autoris\u00e9 et bypass tous les contr\u00f4les.</li> <li>Sinon, il suit le parcours de s\u00e9curit\u00e9 standard.</li> <li>Les listes peuvent \u00eatre mises \u00e0 jour automatiquement depuis des sources externes.</li> </ol> <p>Mode stream</p> <p>En stream, uniquement IP, rDNS et ASN sont \u00e9valu\u00e9s.</p>"},{"location":"fr/features/#parametres_27","title":"Param\u00e8tres","text":"<p>G\u00e9n\u00e9ral</p> Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>USE_WHITELIST</code> <code>no</code> multisite non Activer la whitelist. Adresse IP Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>WHITELIST_IP</code> multisite non IP/r\u00e9seaux (CIDR) autoris\u00e9s. <code>WHITELIST_IGNORE_IP</code> multisite non IP/r\u00e9seaux ignor\u00e9s (bypassent les v\u00e9rifications IP). <code>WHITELIST_IP_URLS</code> multisite non URLs contenant IP/r\u00e9seaux \u00e0 autoriser. <code>WHITELIST_IGNORE_IP_URLS</code> multisite non URLs contenant IP/r\u00e9seaux \u00e0 ignorer. Reverse DNS Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>WHITELIST_RDNS</code> multisite non Suffixes rDNS autoris\u00e9s. <code>WHITELIST_RDNS_GLOBAL</code> <code>yes</code> multisite non V\u00e9rifier seulement les IP globales si <code>yes</code>. <code>WHITELIST_IGNORE_RDNS</code> multisite non Suffixes rDNS ignor\u00e9s. <code>WHITELIST_RDNS_URLS</code> multisite non URLs contenant des suffixes rDNS autoris\u00e9s. <code>WHITELIST_IGNORE_RDNS_URLS</code> multisite non URLs contenant des suffixes rDNS \u00e0 ignorer. ASN Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>WHITELIST_ASN</code> multisite non Num\u00e9ros d\u2019AS autoris\u00e9s. <code>WHITELIST_IGNORE_ASN</code> multisite non AS ignor\u00e9s (bypassent la v\u00e9rif ASN). <code>WHITELIST_ASN_URLS</code> multisite non URLs de listes d\u2019AS autoris\u00e9s. <code>WHITELIST_IGNORE_ASN_URLS</code> multisite non URLs de listes d\u2019AS \u00e0 ignorer. User\u2011Agent Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>WHITELIST_USER_AGENT</code> multisite non Motifs (regex PCRE) de User\u2011Agent autoris\u00e9s. <code>WHITELIST_IGNORE_USER_AGENT</code> multisite non Motifs ignor\u00e9s. <code>WHITELIST_USER_AGENT_URLS</code> multisite non URLs de motifs User\u2011Agent autoris\u00e9s. <code>WHITELIST_IGNORE_USER_AGENT_URLS</code> multisite non URLs de motifs User\u2011Agent \u00e0 ignorer. URI Param\u00e8tre D\u00e9faut Contexte Multiple Description <code>WHITELIST_URI</code> multisite non Motifs d\u2019URI (regex PCRE) autoris\u00e9s. <code>WHITELIST_IGNORE_URI</code> multisite non Motifs d\u2019URI ignor\u00e9s. <code>WHITELIST_URI_URLS</code> multisite non URLs de motifs d\u2019URI autoris\u00e9s. <code>WHITELIST_IGNORE_URI_URLS</code> multisite non URLs de motifs d\u2019URI \u00e0 ignorer."},{"location":"fr/integrations/","title":"Int\u00e9grations","text":""},{"location":"fr/integrations/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>BunkerWeb Cloud sera le moyen le plus simple de commencer avec BunkerWeb. Il vous offre un service BunkerWeb enti\u00e8rement g\u00e9r\u00e9 sans tracas. Consid\u00e9rez-le comme un BunkerWeb-as-a-Service !</p> <p>Essayez notre offre BunkerWeb Cloud et acc\u00e9dez \u00e0 :</p> <ul> <li>Une instance BunkerWeb enti\u00e8rement g\u00e9r\u00e9e et h\u00e9berg\u00e9e dans notre cloud</li> <li>Toutes les fonctionnalit\u00e9s de BunkerWeb, y compris les fonctionnalit\u00e9s PRO</li> <li>Une plateforme de surveillance avec tableaux de bord et alertes</li> <li>Support technique pour vous aider dans la configuration</li> </ul> <p>Si vous \u00eates int\u00e9ress\u00e9 par l'offre BunkerWeb Cloud, n'h\u00e9sitez pas \u00e0 nous contacter afin que nous puissions discuter de vos besoins.</p>"},{"location":"fr/integrations/#image-tout-en-un-aio","title":"Image tout-en-un (AIO)","text":"Architecture tout-en-un (AIO) BunkerWeb"},{"location":"fr/integrations/#deploiement","title":"D\u00e9ploiement","text":"<p>Pour d\u00e9ployer le conteneur tout-en-un, il vous suffit d'ex\u00e9cuter la commande suivante :</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Par d\u00e9faut, le conteneur expose :</p> <ul> <li>8080/tcp pour HTTP</li> <li>8443/tcp pour HTTPS</li> <li>8443/udp pour QUIC</li> <li>7000/tcp pour l'acc\u00e8s \u00e0 l'interface utilisateur web sans BunkerWeb en fa\u00e7ade (non recommand\u00e9 pour la production)</li> </ul> <p>L'image tout-en-un est livr\u00e9e avec plusieurs services int\u00e9gr\u00e9s, qui peuvent \u00eatre contr\u00f4l\u00e9s \u00e0 l'aide de variables d'environnement :</p> <ul> <li><code>SERVICE_UI=yes</code> (par d\u00e9faut) - Active le service d'interface utilisateur Web</li> <li><code>SERVICE_SCHEDULER=yes</code> (par d\u00e9faut) - Active le service Scheduler</li> <li><code>AUTOCONF_MODE=no</code> (par d\u00e9faut) - Active le service autoconf</li> <li><code>USE_REDIS=yes</code> (par d\u00e9faut) : active l'  instance Redis int\u00e9gr\u00e9e</li> <li><code>USE_CROWDSEC=no</code> (par d\u00e9faut) -  L'int\u00e9gration CrowdSec est d\u00e9sactiv\u00e9e par d\u00e9faut</li> </ul>"},{"location":"fr/integrations/#acces-a-lassistant-dinstallation","title":"Acc\u00e8s \u00e0 l'assistant d'installation","text":"<p>Par d\u00e9faut, l'assistant d'installation est lanc\u00e9 automatiquement lorsque vous ex\u00e9cutez le conteneur AIO pour la premi\u00e8re fois. Pour y acc\u00e9der, proc\u00e9dez comme suit :</p> <ol> <li>D\u00e9marrez le conteneur AIO comme ci-dessus, en vous assurant ( <code>SERVICE_UI=yes</code> par d\u00e9faut).</li> <li>Acc\u00e9dez \u00e0 l'interface utilisateur via votre point de terminaison BunkerWeb principal, par exemple <code>https://your-domain</code>.</li> </ol> <p>Suivez les \u00e9tapes suivantes du guide de d\u00e9marrage rapide pour configurer l'interface utilisateur Web.</p>"},{"location":"fr/integrations/#integration-redis","title":"Int\u00e9gration Redis","text":"<p>L'image BunkerWeb All-In-One inclut Redis pr\u00eat \u00e0 l'emploi pour la persistance des bannissements et des rapports. Pour g\u00e9rer Redis :</p> <ul> <li>Pour d\u00e9sactiver Redis, d\u00e9finissez <code>USE_REDIS=no</code> ou pointez <code>REDIS_HOST</code> vers un h\u00f4te externe.</li> <li>Les journaux Redis apparaissent <code>[REDIS]</code> avec le pr\u00e9fixe dans les journaux Docker et <code>/var/log/bunkerweb/redis.log</code>.</li> </ul>"},{"location":"fr/integrations/#integration-crowdsec","title":"Int\u00e9gration CrowdSec","text":"<p>L'image Docker tout-en-un** de BunkerWeb ** est livr\u00e9e avec CrowdSec enti\u00e8rement int\u00e9gr\u00e9, sans conteneurs suppl\u00e9mentaires ni configuration manuelle requise. Suivez les \u00e9tapes ci-dessous pour activer, configurer et \u00e9tendre CrowdSec dans votre d\u00e9ploiement.</p> <p>Par d\u00e9faut, CrowdSec est d\u00e9sactiv\u00e9. Pour l'activer, il suffit d'ajouter la <code>USE_CROWDSEC</code> variable d'environnement :</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <ul> <li> <p>Lorsque <code>USE_CROWDSEC=yes</code>, le point d'entr\u00e9e :</p> <ol> <li>Inscrivez-vous et d\u00e9marrez l'agent CrowdSec local (via <code>cscli</code>).</li> <li>Installez ou mettez \u00e0 niveau les collections et les analyseurs par d\u00e9faut.</li> <li>Configurez le <code>crowdsec-bunkerweb-bouncer/v1.6</code> videur.</li> </ol> </li> </ul>"},{"location":"fr/integrations/#collections-et-analyseurs-par-defaut","title":"Collections et analyseurs par d\u00e9faut","text":"<p>Au premier d\u00e9marrage (ou apr\u00e8s la mise \u00e0 niveau), les ressources suivantes sont automatiquement install\u00e9es et maintenues \u00e0 jour :</p> Type Nom But Collection <code>crowdsecurity/nginx</code> Prot\u00e9gez les serveurs Nginx contre un large \u00e9ventail d'attaques bas\u00e9es sur HTTP, de la force brute aux tentatives d'injection. Collection <code>crowdsecurity/appsec-virtual-patching</code> Fournit un ensemble de r\u00e8gles de type WAF mis \u00e0 jour dynamiquement ciblant les CVE connues, automatiquement corrig\u00e9 quotidiennement pour prot\u00e9ger les applications Web contre les vuln\u00e9rabilit\u00e9s nouvellement d\u00e9couvertes. Collection <code>crowdsecurity/appsec-generic-rules</code> Compl\u00e9ments <code>crowdsecurity/appsec-virtual-patching</code> avec des heuristiques pour les mod\u00e8les d'attaque g\u00e9n\u00e9riques de la couche application, tels que l'\u00e9num\u00e9ration, la travers\u00e9e de chemin et les sondes automatis\u00e9es, comblant les lacunes l\u00e0 o\u00f9 il n'existe pas encore de r\u00e8gles sp\u00e9cifiques \u00e0 CVE. Analyseur <code>crowdsecurity/geoip-enrich</code> Enrichit les \u00e9v\u00e9nements avec le contexte GeoIP Comment \u00e7a marche en interne  Le script entrypoint appelle :  <pre><code>cscli install collection crowdsecurity/nginx\ncscli install collection crowdsecurity/appsec-virtual-patching\ncscli install collection crowdsecurity/appsec-generic-rules\ncscli install parser     crowdsecurity/geoip-enrich\n</code></pre>"},{"location":"fr/integrations/#ajouter-des-collections-supplementaires","title":"Ajouter des collections suppl\u00e9mentaires","text":"<p>Vous avez besoin d'une couverture suppl\u00e9mentaire\u00a0? D\u00e9finissez <code>CROWDSEC_EXTRA_COLLECTIONS</code> \u00e0 l'aide d'une liste de collections Hubb s\u00e9par\u00e9es par des espaces :</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_EXTRA_COLLECTIONS=\"crowdsecurity/apache2 crowdsecurity/mysql\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Comment \u00e7a marche en interne</p> <p>Le script parcourt chaque nom et installe ou met \u00e0 jour si n\u00e9cessaire \u2014 aucune intervention manuelle n'est requise.</p>"},{"location":"fr/integrations/#desactiver-des-analyseurs-specifiques","title":"D\u00e9sactiver des analyseurs sp\u00e9cifiques","text":"<p>Si vous souhaitez conserver la configuration par d\u00e9faut tout en d\u00e9sactivant explicitement un ou plusieurs analyseurs, fournissez une liste s\u00e9par\u00e9e par des espaces via <code>CROWDSEC_DISABLED_PARSERS</code>\u00a0:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_DISABLED_PARSERS=\"crowdsecurity/geoip-enrich foo/bar-parser\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Notes\u00a0: - La liste est appliqu\u00e9e apr\u00e8s l'installation/mise \u00e0 jour des \u00e9l\u00e9ments requis\u00a0; seuls les analyseurs indiqu\u00e9s sont supprim\u00e9s. - Utilisez les slugs du hub tels qu'affich\u00e9s par <code>cscli parsers list</code> (ex.\u00a0: <code>crowdsecurity/geoip-enrich</code>).</p>"},{"location":"fr/integrations/#basculement-appsec","title":"Basculement AppSec","text":"<p>Les  fonctionnalit\u00e9s CrowdSec AppSec, optimis\u00e9es par les  collections <code>appsec-virtual-patching</code> et <code>appsec-generic-rules</code> , sont activ\u00e9es par d\u00e9faut.</p> <p>Pour d\u00e9sactiver toutes les fonctionnalit\u00e9s AppSec (WAF/virtual-patching), d\u00e9finissez :</p> <pre><code>-e CROWDSEC_APPSEC_URL=\"\"\n</code></pre> <p>Cela d\u00e9sactive effectivement le point de terminaison AppSec, de sorte qu'aucune r\u00e8gle n'est appliqu\u00e9e.</p>"},{"location":"fr/integrations/#api-crowdsec-externe","title":"API CrowdSec externe","text":"<p>Si vous exploitez une instance CrowdSec distante, pointez le conteneur vers votre API :</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_API=\"https://crowdsec.example.com:8000\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <ul> <li>L'enregistrement local est ignor\u00e9 lorsque n' <code>CROWDSEC_API</code> est pas <code>127.0.0.1</code> ou <code>localhost</code>.</li> <li>AppSec est d\u00e9sactiv\u00e9 par d\u00e9faut lors de l'utilisation d'une API externe. Pour l'activer, d\u00e9finissez-le <code>CROWDSEC_APPSEC_URL</code> sur le point de terminaison de votre choix.</li> <li>L'inscription du videur se produit toujours sur l'API distante.</li> <li>Pour r\u00e9utiliser une cl\u00e9 de videur existante, fournissez-la <code>CROWDSEC_API_KEY</code> avec votre jeton pr\u00e9-g\u00e9n\u00e9r\u00e9.</li> </ul> <p>Plus d'options</p> <p>Pour une couverture compl\u00e8te de toutes les options CrowdSec (sc\u00e9narios personnalis\u00e9s, journaux, d\u00e9pannage, etc.), consultez la documentation du plugin BunkerWeb CrowdSec ou visitez le site officiel de CrowdSec.</p>"},{"location":"fr/integrations/#docker","title":"Docker","text":"Int\u00e9gration Docker <p>L'utilisation de BunkerWeb en tant que  conteneur Docker offre une approche pratique et simple pour tester et utiliser la solution, en particulier si vous \u00eates d\u00e9j\u00e0 familiaris\u00e9 avec la technologie Docker.</p> <p>Pour faciliter votre d\u00e9ploiement Docker, nous fournissons des images pr\u00e9d\u00e9finies facilement disponibles sur Docker Hub, prenant en charge plusieurs architectures. Ces images pr\u00e9d\u00e9finies sont optimis\u00e9es et pr\u00e9par\u00e9es pour \u00eatre utilis\u00e9es sur les architectures suivantes :</p> <ul> <li>x64 (64 bits)</li> <li>x86</li> <li>armv8 (ARM 64 bits)</li> <li>armv7 (ARM 32 bits)</li> </ul> <p>En acc\u00e9dant \u00e0 ces images pr\u00e9d\u00e9finies \u00e0 partir de Docker Hub, vous pouvez rapidement extraire et ex\u00e9cuter BunkerWeb dans votre environnement Docker, \u00e9liminant ainsi le besoin de processus de configuration ou d'installation \u00e9tendus. Cette approche simplifi\u00e9e vous permet de vous concentrer sur l'exploitation des capacit\u00e9s de BunkerWeb sans complexit\u00e9s inutiles.</p> <p>Que vous effectuiez des tests, d\u00e9veloppiez des applications ou d\u00e9ployiez BunkerWeb en production, l'option de conteneurisation Docker offre flexibilit\u00e9 et facilit\u00e9 d'utilisation. L'adoption de cette m\u00e9thode vous permet de tirer pleinement parti des fonctionnalit\u00e9s de BunkerWeb tout en tirant parti des avantages de la technologie Docker.</p> <pre><code>docker pull bunkerity/bunkerweb:testing\n</code></pre> <p>Les images Docker sont \u00e9galement disponibles sur les packages GitHub et peuvent \u00eatre t\u00e9l\u00e9charg\u00e9es \u00e0 l'aide de l'adresse du <code>ghcr.io</code> d\u00e9p\u00f4t :</p> <pre><code>docker pull ghcr.io/bunkerity/bunkerweb:testing\n</code></pre> <p>Les concepts cl\u00e9s de l'int\u00e9gration Docker sont les suivants :</p> <ul> <li>Variables d'environnement: Configurez facilement BunkerWeb \u00e0 l'aide de variables d'environnement. Ces variables vous permettent de personnaliser divers aspects du comportement de BunkerWeb, tels que les param\u00e8tres r\u00e9seau, les options de s\u00e9curit\u00e9 et d'autres param\u00e8tres.</li> <li>Conteneur du Scheduler : g\u00e9rez la configuration et ex\u00e9cutez les t\u00e2ches \u00e0 l'aide d'un conteneur d\u00e9di\u00e9 appel\u00e9 Scheduler.</li> <li>R\u00e9seaux: Les r\u00e9seaux Docker jouent un r\u00f4le essentiel dans l'int\u00e9gration de BunkerWeb. Ces r\u00e9seaux ont deux objectifs principaux : exposer les ports aux clients et se connecter aux services Web en amont. En exposant les ports, BunkerWeb peut accepter les demandes entrantes des clients, leur permettant d'acc\u00e9der aux services Web prot\u00e9g\u00e9s. De plus, en se connectant aux services Web en amont, BunkerWeb peut acheminer et g\u00e9rer efficacement le trafic, offrant ainsi une s\u00e9curit\u00e9 et des performances am\u00e9lior\u00e9es.</li> </ul> <p>Backend de base de donn\u00e9es</p> <p>Veuillez noter que nos instructions supposent que vous utilisez SQLite comme backend de base de donn\u00e9es par d\u00e9faut, tel que configur\u00e9 par le <code>DATABASE_URI</code> param\u00e8tre. Cependant, d'autres backends de base de donn\u00e9es sont \u00e9galement pris en charge. Pour plus d'informations, consultez les fichiers docker-compose dans le dossier misc/integrations du d\u00e9p\u00f4t.</p>"},{"location":"fr/integrations/#variables-denvironnement","title":"Variables d'environnement","text":"<p>Les param\u00e8tres sont transmis au Scheduler \u00e0 l'aide de variables d'environnement Docker :</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      - MY_SETTING=value\n      - ANOTHER_SETTING=another value\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n...\n</code></pre> <p>Liste compl\u00e8te</p> <p>Pour obtenir la liste compl\u00e8te des variables d'environnement, consultez la section des param\u00e8tres de la documentation.</p>"},{"location":"fr/integrations/#utilisation-des-secrets-docker","title":"Utilisation des secrets Docker","text":"<p>Au lieu de transmettre des param\u00e8tres sensibles via des variables d'environnement, vous pouvez les stocker en tant que secrets Docker. Pour chaque param\u00e8tre que vous souhaitez s\u00e9curiser, cr\u00e9ez un secret Docker dont le nom correspond \u00e0 la cl\u00e9 de param\u00e8tre (en majuscules). Les scripts d'entr\u00e9e de BunkerWeb chargent automatiquement les secrets <code>/run/secrets</code> et les exportent en tant que variables d'environnement.</p> <p>Exemple: <pre><code># Create a Docker secret for ADMIN_PASSWORD\necho \"S3cr3tP@ssw0rd\" | docker secret create ADMIN_PASSWORD -\n</code></pre></p> <p>Montez les secrets lors du d\u00e9ploiement : <pre><code>services:\n  bw-ui:\n    secrets:\n      - ADMIN_PASSWORD\n...\nsecrets:\n  ADMIN_PASSWORD:\n    external: true\n</code></pre></p> <p>Cela garantit que les param\u00e8tres sensibles sont tenus \u00e0 l'\u00e9cart de l'environnement et des journaux.</p>"},{"location":"fr/integrations/#programmateur","title":"Programmateur","text":"<p>Le Scheduler s'ex\u00e9cute dans son propre conteneur, qui est \u00e9galement disponible sur Docker Hub :</p> <pre><code>docker pull bunkerity/bunkerweb-scheduler:testing\n</code></pre> <p>Param\u00e8tres BunkerWeb</p> <p>Since version <code>1.6.0</code>, the Scheduler container is where you define the settings for BunkerWeb. The Scheduler then pushes the configuration to the BunkerWeb container.</p> <p>\u26a0 Important: Tous les param\u00e8tres li\u00e9s \u00e0 l'API (comme <code>API_HTTP_PORT</code>, <code>API_LISTEN_IP</code>, <code>API_SERVER_NAME</code>, <code>API_WHITELIST_IP</code>, et <code>API_TOKEN</code> si vous l'utilisez) doivent \u00e9galement \u00eatre d\u00e9finis dans le conteneur BunkerWeb. Les param\u00e8tres doivent \u00eatre r\u00e9pliqu\u00e9s dans les deux conteneurs, sinon le conteneur BunkerWeb n'acceptera pas les requ\u00eates API du Scheduler.</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  API_HTTP_PORT: \"5000\" # Default value\n  API_LISTEN_IP: \"0.0.0.0\" # Default value\n  API_SERVER_NAME: \"bwapi\" # Default value\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\" # Set this according to your network settings\n  # Jeton optionnel ; si d\u00e9fini, le Scheduler enverra Authorization: Bearer &lt;token&gt;\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    environment:\n      # This will set the API settings for the BunkerWeb container\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      # This will set the API settings for the Scheduler container\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\n</code></pre> <p>Un volume est n\u00e9cessaire pour stocker la base de donn\u00e9es SQLite et les sauvegardes utilis\u00e9es par le Scheduler :</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - bw-storage:/data\n...\nvolumes:\n  bw-storage:\n</code></pre> <p>Utilisation d'un dossier local pour les donn\u00e9es persistantes</p> <p>Le Scheduler s'ex\u00e9cute en tant qu' utilisateur non privil\u00e9gi\u00e9 avec UID 101 et GID 101 \u00e0 l'int\u00e9rieur du conteneur. Cela renforce la s\u00e9curit\u00e9 : en cas d'exploitation d'une vuln\u00e9rabilit\u00e9, l'attaquant ne disposera pas des privil\u00e8ges de root complet (UID/GID 0).</p> <p>However, if you use a local folder for persistent data, you must set the correct permissions so the unprivileged user can write data to it. For example:</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternatively, if the folder already exists:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>If you are using Docker in rootless mode or Podman, UIDs and GIDs in the container will be mapped to different ones on the host. You will first need to check your initial subuid and subgid:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>For example, if you have a value of 100000, the mapped UID/GID will be 100100 (100000 + 100):</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Or if the folder already exists:</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nsudo chmod -R 770 bw-data\n</code></pre>"},{"location":"fr/integrations/#reseau","title":"R\u00e9seau","text":"<p>Par d\u00e9faut, le conteneur BunkerWeb \u00e9coute (\u00e0 l'int\u00e9rieur du conteneur) les fichiers 8080/tcp pour HTTP, 8443/tcp pour HTTPS et 8443/udp pour QUIC.</p> <p>!! avertissement \"Ports privil\u00e9gi\u00e9s en mode rootless ou lors de l'utilisation de Podman\"     Si vous utilisez Docker en mode rootless et que vous souhaitez rediriger les ports privil\u00e9gi\u00e9s (&lt; 1024) tels que 80 et 443 vers BunkerWeb, veuillez vous r\u00e9f\u00e9rer aux pr\u00e9requis ici.</p> <pre><code>If you are using [Podman](https://podman.io/), you can lower the minimum number for unprivileged ports:\n```shell\nsudo sysctl net.ipv4.ip_unprivileged_port_start=1\n```\n</code></pre> <p>La pile BunkerWeb typique lors de l'utilisation de l'int\u00e9gration Docker contient les conteneurs suivants :</p> <ul> <li>BunkerWeb (en anglais)</li> <li>Programmateur</li> <li>Vos services</li> </ul> <p>\u00c0 des fins de d\u00e9fense en profondeur, nous vous recommandons vivement de cr\u00e9er au moins trois r\u00e9seaux Docker diff\u00e9rents :</p> <ul> <li><code>bw-services</code>: pour BunkerWeb et vos services web</li> <li><code>bw-universe</code>: pour BunkerWeb et le Scheduler</li> <li><code>bw-db</code>: pour la base de donn\u00e9es (si vous en utilisez une)</li> </ul> <p>Pour s\u00e9curiser la communication entre le Scheduler et l'API BunkerWeb, autorisez les appels d'API. Utilisez le param\u00e8tre <code>API_WHITELIST_IP</code> pour sp\u00e9cifier les adresses IP et sous-r\u00e9seaux autoris\u00e9s. Pour un niveau de protection sup\u00e9rieur, d\u00e9finissez <code>API_TOKEN</code> dans les deux conteneurs ; le Scheduler inclura automatiquement l'en-t\u00eate <code>Authorization: Bearer &lt;token&gt;</code>.</p> <p>Il est fortement recommand\u00e9 d'utiliser un sous-r\u00e9seau statique pour le <code>bw-universe</code> r\u00e9seau afin d'am\u00e9liorer la s\u00e9curit\u00e9. En mettant en \u0153uvre ces mesures, vous pouvez vous assurer que seules les sources autoris\u00e9es peuvent acc\u00e9der \u00e0 l'API BunkerWeb, r\u00e9duisant ainsi le risque d'acc\u00e8s non autoris\u00e9 ou d'activit\u00e9s malveillantes :</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  API_TOKEN: \"\" # Jeton API optionnel\n  # Jeton API optionnel pour l'acc\u00e8s authentifi\u00e9 \u00e0 l'API\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-services\n      - bw-universe\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Static subnet so only authorized sources can access the BunkerWeb API\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"fr/integrations/#fichier-de-composition-complet","title":"Fichier de composition complet","text":"<pre><code>x-bw-api-env: &amp;bw-api-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    depends_on:\n      - bunkerweb\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # This setting is mandatory to specify the BunkerWeb instance\n      SERVER_NAME: \"www.example.com\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Static subnet so only authorized sources can access the BunkerWeb API\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"fr/integrations/#construire-a-partir-de-la-source","title":"Construire \u00e0 partir de la source","text":"<p>Sinon, si vous pr\u00e9f\u00e9rez une approche plus pratique, vous avez la possibilit\u00e9 de cr\u00e9er l'image Docker directement \u00e0 partir de la source. La cr\u00e9ation de l'image \u00e0 partir de la source vous offre un meilleur contr\u00f4le et une meilleure personnalisation du processus de d\u00e9ploiement. Cependant, veuillez noter que cette m\u00e9thode peut prendre un certain temps, en fonction de votre configuration mat\u00e9rielle (vous pouvez prendre un caf\u00e9 \u2615 si n\u00e9cessaire).</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t bw -f src/bw/Dockerfile . &amp;&amp; \\\ndocker build -t bw-scheduler -f src/scheduler/Dockerfile . &amp;&amp; \\\ndocker build -t bw-autoconf -f src/autoconf/Dockerfile . &amp;&amp; \\\ndocker build -t bw-ui -f src/ui/Dockerfile .\n</code></pre>"},{"location":"fr/integrations/#linux","title":"Linux","text":"Int\u00e9gration Linux <p>Les distributions Linux prises en charge par BunkerWeb (architectures amd64/x86_64 et arm64/aarch64) comprennent :</p> <ul> <li>Debian 12 \"Rat de biblioth\u00e8que\"</li> <li>Debian 13 \"Trixie\"</li> <li>Ubuntu 22.04 \"Jammy\"</li> <li>Ubuntu 24.04 \"Noble\"</li> <li>Fedora 41 et 42</li> <li>Red Hat Enterprise Linux (RHEL) 8, 9 et 10</li> </ul>"},{"location":"fr/integrations/#script-dinstallation-facile","title":"Script d'installation facile","text":"<p>Pour une exp\u00e9rience d'installation simplifi\u00e9e, BunkerWeb fournit un script d'installation facile qui g\u00e8re automatiquement l'ensemble du processus d'installation, y compris l'installation de NGINX, la configuration du r\u00e9f\u00e9rentiel et la configuration du service.</p>"},{"location":"fr/integrations/#demarrage-rapide","title":"D\u00e9marrage rapide","text":"<p>Pour commencer, t\u00e9l\u00e9chargez le script d'installation et sa somme de contr\u00f4le, puis v\u00e9rifiez l'int\u00e9grit\u00e9 du script avant de l'ex\u00e9cuter.</p> <pre><code># Download the script and its checksum\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Verify the checksum\nsha256sum -c install-bunkerweb.sh.sha256\n\n# If the check is successful, run the script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Avis de s\u00e9curit\u00e9</p> <p>V\u00e9rifiez toujours l'int\u00e9grit\u00e9 du script d'installation avant de l'ex\u00e9cuter.</p> <p>T\u00e9l\u00e9chargez le fichier de somme de contr\u00f4le et utilisez un outil comme <code>sha256sum</code> pour confirmer que le script n'a pas \u00e9t\u00e9 modifi\u00e9 ou alt\u00e9r\u00e9.</p> <p>Si la v\u00e9rification de la somme de contr\u00f4le \u00e9choue, n'ex\u00e9cutez pas le script \u2014 il pourrait \u00eatre dangereux.</p>"},{"location":"fr/integrations/#comment-ca-marche","title":"Comment \u00e7a marche","text":"<p>Le script d'installation facile est un outil puissant con\u00e7u pour rationaliser l'installation de BunkerWeb sur un nouveau syst\u00e8me Linux. Il automatise les \u00e9tapes cl\u00e9s suivantes :</p> <ol> <li>Analyse du syst\u00e8me: d\u00e9tecte votre syst\u00e8me d'exploitation et le compare \u00e0 la liste des distributions prises en charge.</li> <li>Personnalisation de l'installation: en mode interactif, il vous invite \u00e0 choisir un type d'installation (Tout en un, Manager, Worker, etc.) et \u00e0 d\u00e9cider d'activer ou non l'assistant de configuration Web.</li> <li>Int\u00e9grations facultatives: propose d'installer et de configurer automatiquement le moteur de s\u00e9curit\u00e9 CrowdSec.</li> <li>Gestion des d\u00e9pendances : Installe la version correcte de NGINX requise par BunkerWeb \u00e0 partir de sources officielles et verrouille la version pour \u00e9viter les mises \u00e0 niveau involontaires.</li> <li>Installation de BunkerWeb: Ajoute le r\u00e9f\u00e9rentiel de paquets BunkerWeb, installe les paquets n\u00e9cessaires et verrouille la version.</li> <li>Configuration du service : Configure et active les <code>systemd</code> services correspondant au type d'installation que vous avez choisi.</li> <li>Conseils post-installation: Fournit des \u00e9tapes suivantes claires pour vous aider \u00e0 d\u00e9marrer avec votre nouvelle instance BunkerWeb.</li> </ol>"},{"location":"fr/integrations/#interactive-installation","title":"Interactive Installation","text":"<p>Lorsqu'il est ex\u00e9cut\u00e9 sans aucune option, le script passe en mode interactif qui vous guide tout au long du processus d'installation. Il vous sera demand\u00e9 de faire les choix suivants :</p> <ol> <li>Type d'installation: s\u00e9lectionnez les composants que vous souhaitez installer.<ul> <li>Full Stack (par d\u00e9faut): une installation tout-en-un comprenant BunkerWeb, le Scheduler et l'interface utilisateur Web.</li> <li>Manager: Installe le Scheduler et l'interface utilisateur Web, destin\u00e9s \u00e0 g\u00e9rer un ou plusieurs travailleurs BunkerWeb distants.</li> <li>Worker: Installe uniquement l'instance BunkerWeb, qui peut \u00eatre g\u00e9r\u00e9e par un gestionnaire distant.</li> <li>Planificateur uniquement : installe uniquement le composant Planificateur.</li> <li>Interface utilisateur Web uniquement : installe uniquement le composant Interface utilisateur Web.</li> </ul> </li> <li>Assistant d'installation: choisissez d'activer ou non l'assistant de configuration Web. Ceci est fortement recommand\u00e9 pour les nouveaux utilisateurs.</li> <li>Int\u00e9gration CrowdSec: choisissez d'installer le moteur de s\u00e9curit\u00e9 CrowdSec pour une protection avanc\u00e9e et en temps r\u00e9el contre les menaces.</li> <li>CrowdSec AppSec: si vous choisissez d'installer CrowdSec, vous pouvez \u00e9galement activer le composant Application Security (AppSec), qui ajoute des fonctionnalit\u00e9s WAF.</li> <li>Service API\u00a0: choisissez d'activer le service API BunkerWeb optionnel. Il est d\u00e9sactiv\u00e9 par d\u00e9faut sur les installations Linux.</li> </ol> <p>Installations du gestionnaire et du Scheduler</p> <p>Si vous choisissez le type d'installation Manager ou Scheduler Only, vous serez \u00e9galement invit\u00e9 \u00e0 fournir les adresses IP ou les noms d'h\u00f4te de vos instances de travail BunkerWeb.</p>"},{"location":"fr/integrations/#options-de-ligne-de-commande","title":"Options de ligne de commande","text":"<p>Pour les configurations non interactives ou automatis\u00e9es, le script peut \u00eatre contr\u00f4l\u00e9 \u00e0 l'aide d'indicateurs de ligne de commande :</p> <p>Options g\u00e9n\u00e9rales\u00a0:</p> Option Description <code>-v, --version VERSION</code> Sp\u00e9cifie la version de BunkerWeb \u00e0 installer (par exemple, <code>testing</code>). <code>-w, --enable-wizard</code> Active l'assistant de configuration. <code>-n, --no-wizard</code> D\u00e9sactive l'assistant d'installation. <code>--api</code>, <code>--enable-api</code> Active le service API (FastAPI) systemd (d\u00e9sactiv\u00e9 par d\u00e9faut). <code>--no-api</code> D\u00e9sactive explicitement le service API. <code>-y, --yes</code> S'ex\u00e9cute en mode non interactif en utilisant les r\u00e9ponses par d\u00e9faut pour toutes les invites. <code>-f, --force</code> Force l'installation \u00e0 se poursuivre m\u00eame sur une version du syst\u00e8me d'exploitation non prise en charge. <code>-q, --quiet</code> Installation silencieuse (suppression de la sortie). <code>-h, --help</code> Affiche le message d'aide avec toutes les options disponibles. <code>--dry-run</code> Montrez ce qui serait install\u00e9 sans le faire. <p>Types d'installation :</p> Option Description <code>--full</code> Installation compl\u00e8te de la pile (BunkerWeb, Scheduler, UI). Il s'agit de l'option par d\u00e9faut. <code>--manager</code> Installe le Scheduler et l'interface utilisateur pour g\u00e9rer les travailleurs \u00e0 distance. <code>--worker</code> Installe uniquement l'instance BunkerWeb. <code>--scheduler-only</code> Installe uniquement le composant Scheduler. <code>--ui-only</code> Installe uniquement le composant Interface utilisateur Web. <p>Int\u00e9grations de s\u00e9curit\u00e9 :</p> Option Description <code>--crowdsec</code> Installez et configurez le moteur de s\u00e9curit\u00e9 CrowdSec. <code>--no-crowdsec</code> Ignorez l'installation de CrowdSec. <code>--crowdsec-appsec</code> Installez CrowdSec avec le composant AppSec (inclut les fonctionnalit\u00e9s WAF). <p>Options avanc\u00e9es :</p> Option Description <code>--instances \"IP1 IP2\"</code> Liste s\u00e9par\u00e9e par des espaces des instances BunkerWeb (requise pour les modes gestionnaire/Scheduler). <p>Exemple d'utilisation :</p> <pre><code># Run in interactive mode (recommended for most users)\nsudo ./install-bunkerweb.sh\n\n# Non-interactive installation with defaults (full stack, wizard enabled)\nsudo ./install-bunkerweb.sh --yes\n\n# Install a Worker node without the setup wizard\nsudo ./install-bunkerweb.sh --worker --no-wizard\n\n# Install a specific version\nsudo ./install-bunkerweb.sh --version testing\n\n# Manager setup with remote worker instances (instances required)\nsudo ./install-bunkerweb.sh --manager --instances \"192.168.1.10 192.168.1.11\"\n\n# Full installation with CrowdSec and AppSec\nsudo ./install-bunkerweb.sh --crowdsec-appsec\n\n# Silent non-interactive installation\nsudo ./install-bunkerweb.sh --quiet --yes\n\n# Preview installation without executing\nsudo ./install-bunkerweb.sh --dry-run\n\n# Error: CrowdSec cannot be used with worker installations\n# sudo ./install-bunkerweb.sh --worker --crowdsec  # This will fail\n\n# Error: Instances required for manager in non-interactive mode\n# sudo ./install-bunkerweb.sh --manager --yes  # This will fail without --instances\n</code></pre> <p>Remarques importantes sur la compatibilit\u00e9 des options</p> <p>CrowdSec Limitations: - Les options CrowdSec (<code>--crowdsec</code>, <code>--crowdsec-appsec</code>) ne sont compatibles qu'avec <code>--full</code> (par d\u00e9faut) et <code>--manager</code> les types d'installation - Ils ne peuvent pas \u00eatre utilis\u00e9s avec <code>--worker</code>des installations , <code>--scheduler-only</code>, ou <code>--ui-only</code></p> <p>Exigences relatives aux instances : - L <code>--instances</code> 'option n'est valable qu'avec <code>--manager</code> les types d <code>--scheduler-only</code> 'installation et - Lors de l'utilisation <code>--manager</code> ou <code>--scheduler-only</code> avec <code>--yes</code> (mode non interactif), l' <code>--instances</code> option est obligatoire - Format: <code>--instances \"192.168.1.10 192.168.1.11 192.168.1.12\"</code></p> <p>Interactif vs non interactif : - Le mode interactif (par d\u00e9faut) vous demandera les valeurs requises manquantes - Le mode non interactif (<code>--yes</code>) n\u00e9cessite que toutes les options n\u00e9cessaires soient fournies via la ligne de commande</p>"},{"location":"fr/integrations/#integration-de-crowdsec-avec-le-script","title":"Int\u00e9gration de CrowdSec avec le script","text":"<p>Si vous choisissez d'installer CrowdSec lors de la configuration interactive, le script automatise enti\u00e8rement son int\u00e9gration avec BunkerWeb :</p> <ul> <li>Il ajoute le d\u00e9p\u00f4t officiel CrowdSec et installe l'agent.</li> <li>Il cr\u00e9e un nouveau fichier d'acquisition pour que CrowdSec analyse les journaux de BunkerWeb (<code>access.log</code>, <code>error.log</code>, et <code>modsec_audit.log</code>).</li> <li>Il installe les collections essentielles (<code>crowdsecurity/nginx</code>) et les analyseurs syntaxiques (<code>crowdsecurity/geoip-enrich</code>).</li> <li>Il enregistre un videur pour BunkerWeb et configure automatiquement la cl\u00e9 API dans <code>/etc/bunkerweb/variables.env</code>.</li> <li>Si vous s\u00e9lectionnez \u00e9galement le composant AppSec, il installe les <code>appsec-virtual-patching</code> collections  et <code>appsec-generic-rules</code> configure  le point de terminaison AppSec pour BunkerWeb.</li> </ul> <p>Cela permet une int\u00e9gration transparente et pr\u00eate \u00e0 l'emploi pour une pr\u00e9vention puissante des intrusions.</p>"},{"location":"fr/integrations/#considerations-rhel","title":"Consid\u00e9rations RHEL","text":"<p>Prise en charge des bases de donn\u00e9es externes sur les syst\u00e8mes bas\u00e9s sur RHEL</p> <p>Si vous envisagez d'utiliser une base de donn\u00e9es externe (recommand\u00e9e pour la production), installez le paquet client appropri\u00e9:</p> <pre><code># Pour MariaDB\nsudo dnf install mariadb\n\n# Pour MySQL\nsudo dnf install mysql\n\n# Pour PostgreSQL\nsudo dnf install postgresql\n</code></pre> <p>Ceci est n\u00e9cessaire pour que le Scheduler de BunkerWeb puisse se connecter \u00e0 votre base de donn\u00e9es externe.</p>"},{"location":"fr/integrations/#apres-linstallation","title":"Apr\u00e8s l'installation","text":"<p>En fonction de vos choix lors de l'installation :</p> <p>Avec l'assistant d'installation activ\u00e9 :</p> <ol> <li>Acc\u00e9dez \u00e0 l'assistant de configuration \u00e0 l'adresse suivante : <code>https://your-server-ip/setup</code></li> <li>Suivez la configuration guid\u00e9e pour configurer votre premier service prot\u00e9g\u00e9</li> <li>Configurer les certificats SSL/TLS et d'autres param\u00e8tres de s\u00e9curit\u00e9</li> </ol> <p>Sans assistant d'installation :</p> <ol> <li>Modifier <code>/etc/bunkerweb/variables.env</code> pour configurer BunkerWeb manuellement</li> <li>Ajouter les param\u00e8tres de votre serveur et les services prot\u00e9g\u00e9s</li> <li>Red\u00e9marrez le Scheduler : <code>sudo systemctl restart bunkerweb-scheduler</code></li> </ol>"},{"location":"fr/integrations/#installation-a-laide-du-gestionnaire-de-paquets","title":"Installation \u00e0 l'aide du gestionnaire de paquets","text":"<p>Veuillez vous assurer que NGINX 1.28.0 est install\u00e9 avant d'installer BunkerWeb. Pour toutes les distributions, \u00e0 l'exception de Fedora, il est obligatoire d'utiliser des paquets pr\u00e9construits \u00e0 partir du d\u00e9p\u00f4t officiel NGINX. La compilation de NGINX \u00e0 partir des sources ou l'utilisation de paquets provenant de diff\u00e9rents d\u00e9p\u00f4ts ne fonctionnera pas avec les paquets officiels pr\u00e9construits de BunkerWeb. Cependant, vous avez la possibilit\u00e9 de construire BunkerWeb \u00e0 partir des sources.</p> Debian Bookworm/TrixieUbuntuFedoraRedHat <p>La premi\u00e8re \u00e9tape consiste \u00e0 ajouter le d\u00e9p\u00f4t officiel NGINX :</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/debian `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>Vous devriez maintenant pouvoir installer NGINX 1.28.0 :</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Version testing/dev</p> <p>Si vous utilisez la version <code>testing</code> ou <code>dev</code>, vous devrez ajouter la directive <code>force-bad-version</code> \u00e0 votre fichier <code>/etc/dpkg/dpkg.cfg</code> avant d'installer BunkerWeb.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>D\u00e9sactiver l'assistant d'installation</p> <p>Si vous ne souhaitez pas utiliser l'assistant de configuration de l'interface Web lors de l'installation de BunkerWeb, exportez la variable suivante :</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Et enfin, installez BunkerWeb testing :</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Pour emp\u00eacher la mise \u00e0 jour des paquets NGINX et/ou BunkerWeb lors de l'ex\u00e9cution de <code>apt upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>La premi\u00e8re \u00e9tape consiste \u00e0 ajouter le d\u00e9p\u00f4t officiel NGINX :</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release ubuntu-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/ubuntu `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>Vous devriez maintenant pouvoir installer NGINX 1.28.0 :</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Version testing/dev</p> <p>Si vous utilisez la version <code>testing</code> ou <code>dev</code>, vous devrez ajouter la directive <code>force-bad-version</code> \u00e0 votre fichier <code>/etc/dpkg/dpkg.cfg</code> avant d'installer BunkerWeb.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>D\u00e9sactiver l'assistant d'installation</p> <p>Si vous ne souhaitez pas utiliser l'assistant de configuration de l'interface Web lors de l'installation de BunkerWeb, exportez la variable suivante :</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Et enfin, installez BunkerWeb testing :</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Pour emp\u00eacher la mise \u00e0 jour des paquets NGINX et/ou BunkerWeb lors de l'ex\u00e9cution de <code>apt upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>Fedora Update Testing</p> <p>Si vous ne trouvez pas la version de NGINX r\u00e9pertori\u00e9e dans le d\u00e9p\u00f4t stable, vous pouvez activer le d\u00e9p\u00f4t <code>updates-testing</code> :</p> <pre><code>sudo dnf config-manager setopt updates-testing.enabled=1\n</code></pre> <p>Fedora fournit d\u00e9j\u00e0 NGINX 1.28.0, que nous prenons en charge :</p> <pre><code>sudo dnf install -y --allowerasing nginx-1.28.0\n</code></pre> <p>D\u00e9sactiver l'assistant d'installation</p> <p>Si vous ne souhaitez pas utiliser l'assistant de configuration de l'interface Web lors de l'installation de BunkerWeb, exportez la variable suivante :</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Et enfin, installez BunkerWeb testing :</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf makecache &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Pour emp\u00eacher la mise \u00e0 jour des paquets NGINX et/ou BunkerWeb lors de l'ex\u00e9cution de <code>dnf upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre> <p>La premi\u00e8re \u00e9tape consiste \u00e0 ajouter le d\u00e9p\u00f4t officiel NGINX. Cr\u00e9ez le fichier suivant dans /etc/yum.repos.d/nginx.repo :</p> <pre><code>[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n</code></pre> <p>Vous devriez maintenant pouvoir installer NGINX 1.28.0 :</p> <pre><code>sudo dnf install --allowerasing nginx-1.28.0\n</code></pre> <p>D\u00e9sactiver l'assistant d'installation</p> <p>Si vous ne souhaitez pas utiliser l'assistant de configuration de l'interface Web lors de l'installation de BunkerWeb, exportez la variable suivante :</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Enfin, installez BunkerWeb testing :</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf check-update &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Pour emp\u00eacher la mise \u00e0 jour des paquets NGINX et/ou BunkerWeb lors de l'ex\u00e9cution de <code>dnf upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre>"},{"location":"fr/integrations/#configuration-et-service","title":"Configuration et service","text":"<p>La configuration manuelle de BunkerWeb se fait en \u00e9ditant le <code>/etc/bunkerweb/variables.env</code> fichier :</p> <pre><code>MY_SETTING_1=value1\nMY_SETTING_2=value2\n...\n</code></pre> <p>Une fois install\u00e9, BunkerWeb est livr\u00e9 avec trois services <code>bunkerweb</code>, <code>bunkerweb-scheduler</code> et <code>bunkerweb-ui</code> que vous pouvez g\u00e9rer \u00e0 l'aide <code>systemctl</code>de .</p> <p>Si vous modifiez manuellement la configuration de BunkerWeb \u00e0 l'aide <code>/etc/bunkerweb/variables.env</code> d'un red\u00e9marrage du <code>bunkerweb-scheduler</code> service, il suffira de g\u00e9n\u00e9rer et de recharger la configuration sans aucun temps d'arr\u00eat. Mais selon le cas (par exemple, en changeant de port d'\u00e9coute), vous devrez peut-\u00eatre red\u00e9marrer le <code>bunkerweb</code> service.</p>"},{"location":"fr/integrations/#haute-disponibilite","title":"Haute disponibilit\u00e9","text":"<p>Le Scheduler peut \u00eatre d\u00e9tach\u00e9 de l'instance BunkerWeb pour fournir une haute disponibilit\u00e9. Dans ce cas, le Scheduler sera install\u00e9 sur un serveur s\u00e9par\u00e9 et pourra g\u00e9rer plusieurs instances BunkerWeb.</p>"},{"location":"fr/integrations/#manager","title":"Manager","text":"<p>Pour installer uniquement le Scheduler sur un serveur, vous pouvez exporter les variables suivantes avant d'ex\u00e9cuter l'installation de BunkerWeb :</p> <pre><code>export MANAGER_MODE=yes\nexport UI_WIZARD=no\n</code></pre> <p>Vous pouvez \u00e9galement exporter les variables suivantes pour activer uniquement le Scheduler :</p> <pre><code>export SERVICE_SCHEDULER=yes\nexport SERVICE_BUNKERWEB=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"fr/integrations/#worker","title":"Worker","text":"<p>Sur un autre serveur, pour installer uniquement BunkerWeb, vous pouvez exporter les variables suivantes avant d'ex\u00e9cuter l'installation de BunkerWeb :</p> <pre><code>export WORKER_MODE=yes\n</code></pre> <p>Alternativement, vous pouvez \u00e9galement exporter les variables suivantes pour activer uniquement BunkerWeb :</p> <pre><code>export SERVICE_BUNKERWEB=yes\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"fr/integrations/#interface-utilisateur-web","title":"Interface utilisateur Web","text":"<p>L'interface utilisateur Web peut \u00eatre install\u00e9e sur un serveur s\u00e9par\u00e9 pour fournir une interface d\u00e9di\u00e9e \u00e0 la gestion des instances BunkerWeb. Pour installer uniquement l'interface utilisateur Web, vous pouvez exporter les variables suivantes avant d'ex\u00e9cuter l'installation de BunkerWeb :</p> <pre><code>export SERVICE_BUNKERWEB=no\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=yes\n</code></pre>"},{"location":"fr/integrations/#docker-autoconf","title":"Docker autoconf","text":"Int\u00e9gration de Docker autoconf <p>Int\u00e9gration Docker</p> <p>L'int\u00e9gration de Docker autoconf est une \"\u00e9volution\" de celle de Docker. Veuillez d'abord lire la section sur l' int\u00e9gration Docker si n\u00e9cessaire.</p> <p>Une autre approche est disponible pour r\u00e9soudre l'inconv\u00e9nient de recr\u00e9er le conteneur chaque fois qu'il y a une mise \u00e0 jour. En utilisant une autre image appel\u00e9e autoconf, vous pouvez automatiser la reconfiguration en temps r\u00e9el de BunkerWeb sans avoir besoin de recr\u00e9er des conteneurs.</p> <p>Pour tirer parti de cette fonctionnalit\u00e9, au lieu de d\u00e9finir des variables d'environnement pour le conteneur BunkerWeb, vous pouvez ajouter des \u00e9tiquettes \u00e0 vos conteneurs d'application Web. L'image autoconf \u00e9coutera alors les \u00e9v\u00e9nements Docker et g\u00e9rera de mani\u00e8re transparente les mises \u00e0 jour de configuration pour BunkerWeb.</p> <p>Ce processus \u00ab automagique \u00bb simplifie la gestion des configurations BunkerWeb. En ajoutant des \u00e9tiquettes \u00e0 vos conteneurs d'applications web, vous pouvez d\u00e9l\u00e9guer les t\u00e2ches de reconfiguration \u00e0 autoconf sans l'intervention manuelle de la recr\u00e9ation de conteneurs. Cela simplifie le processus de mise \u00e0 jour et am\u00e9liore la commodit\u00e9.</p> <p>En adoptant cette approche, vous pouvez profiter d'une reconfiguration en temps r\u00e9el de BunkerWeb sans avoir \u00e0 vous soucier de la recr\u00e9ation de conteneurs, ce qui le rend plus efficace et plus convivial.</p> <p>Mode multisite</p> <p>L'int\u00e9gration de Docker autoconf implique l'utilisation du mode multisite. Pour plus d'informations, reportez-vous \u00e0 la section multisite de la documentation.</p> <p>Backend de base de donn\u00e9es</p> <p>Veuillez noter que nos instructions supposent que vous utilisez MariaDB comme backend de base de donn\u00e9es par d\u00e9faut, tel que configur\u00e9 par le <code>DATABASE_URI</code> param\u00e8tre. Cependant, nous comprenons que vous pr\u00e9f\u00e9rerez peut-\u00eatre utiliser d'autres backends pour votre int\u00e9gration Docker. Si c'est le cas, soyez assur\u00e9 que d'autres backends de base de donn\u00e9es sont toujours possibles. Pour plus d'informations, consultez les fichiers docker-compose dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>Pour activer les mises \u00e0 jour automatiques de la configuration, incluez un conteneur suppl\u00e9mentaire appel\u00e9 <code>bw-autoconf</code> dans la pile. Ce conteneur h\u00e9berge le service autoconf, qui g\u00e8re les modifications de configuration dynamiques pour BunkerWeb.</p> <p>Pour prendre en charge cette fonctionnalit\u00e9, utilisez un \"vrai\" backend de base de donn\u00e9es d\u00e9di\u00e9 (par exemple, MariaDB, MySQL ou PostgreSQL) pour le stockage de configuration synchronis\u00e9. En int\u00e9grant <code>bw-autoconf</code> un backend de base de donn\u00e9es appropri\u00e9, vous \u00e9tablissez l'infrastructure pour une gestion automatis\u00e9e de la configuration sans faille dans BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both containers\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Mandatory label for the autoconf service to identify the BunkerWeb instance\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # The Docker socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>Base de donn\u00e9es dans le <code>bw-db</code> r\u00e9seau</p> <p>Le conteneur de base de donn\u00e9es n'est intentionnellement pas inclus dans le <code>bw-universe</code> r\u00e9seau. Il est utilis\u00e9 par les <code>bw-autoconf</code> <code>bw-scheduler</code> conteneurs et plut\u00f4t que directement par BunkerWeb. Par cons\u00e9quent, le conteneur de base de donn\u00e9es fait partie du <code>bw-db</code> r\u00e9seau, ce qui renforce la s\u00e9curit\u00e9 en rendant l'acc\u00e8s externe \u00e0 la base de donn\u00e9es plus difficile. Ce choix de conception d\u00e9lib\u00e9r\u00e9 permet de prot\u00e9ger la base de donn\u00e9es et de renforcer la perspective de s\u00e9curit\u00e9 globale du syst\u00e8me.</p> <p>Utilisation de Docker en mode rootless</p> <p>Si vous utilisez Docker en mode rootless, vous devrez remplacer le support du socket docker par la valeur suivante : <code>$XDG_RUNTIME_DIR/docker.sock:/var/run/docker.sock:ro</code>.</p>"},{"location":"fr/integrations/#les-services-dautoconf","title":"Les services d'Autoconf","text":"<p>Une fois la pile configur\u00e9e, vous pourrez cr\u00e9er le conteneur de l'application web et ajouter les param\u00e8tres sous forme d'\u00e9tiquettes \u00e0 l'aide du pr\u00e9fixe \"bunkerweb.\" afin de configurer automatiquement BunkerWeb :</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"fr/integrations/#espaces-de-noms","title":"Espaces de noms","text":"<p>\u00c0 partir de la version <code>1.6.0</code>, les piles Autoconf de BunkerWeb supportent d\u00e9sormais les espaces de noms. Cette fonctionnalit\u00e9 vous permet de g\u00e9rer plusieurs \u00ab clusters \u00bb d'instances et de services BunkerWeb sur le m\u00eame h\u00f4te Docker. Pour tirer parti des espaces de noms, il vous suffit de d\u00e9finir l' <code>NAMESPACE</code> \u00e9tiquette sur vos services. Voici un exemple :</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the service\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Comportement de l'espace de nommage</p> <p>By default all Autoconf stacks listen to all namespaces. If you want to restrict a stack to specific namespaces, you can set the <code>NAMESPACES</code> environment variable in the <code>bw-autoconf</code> service:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the BunkerWeb instance so the autoconf service can detect it\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      ...\n      NAMESPACES: \"my-namespace my-other-namespace\" # Only listen to these namespaces\n...\n</code></pre> <p>Keep in mind that the <code>NAMESPACES</code> environment variable is a space-separated list of namespaces.</p> <p>Sp\u00e9cifications de l'espace de nommage</p> <p>There can only be one database and one Scheduler per namespace. If you try to create multiple databases or Schedulers in the same namespace, the configurations will end up conflicting with each other.</p> <p>The Scheduler doesn't need the <code>NAMESPACE</code> label to work properly. It will only need the <code>DATABASE_URI</code> setting properly configured so that it can access the same database as the autoconf service.</p>"},{"location":"fr/integrations/#kubernetes","title":"Kubernetes","text":"Int\u00e9gration Kubernetes <p>Pour automatiser la configuration des instances BunkerWeb dans un environnement Kubernetes, le service autoconf sert de contr\u00f4leur d'entr\u00e9e. Il configure les instances BunkerWeb en fonction des ressources d'entr\u00e9e et surveille \u00e9galement d'autres objets Kubernetes, tels que ConfigMap, pour des configurations personnalis\u00e9es.</p> <p>Pour une configuration optimale, il est recommand\u00e9 de d\u00e9finir BunkerWeb en tant que DaemonSet, ce qui garantit qu'un pod est cr\u00e9\u00e9 sur tous les n\u0153uds, tandis que l'autoconf et le scheduler sont d\u00e9finis comme  un seul d\u00e9ploiement r\u00e9pliqu\u00e9.</p> <p>Compte tenu de la pr\u00e9sence de plusieurs instances BunkerWeb, il est n\u00e9cessaire d'\u00e9tablir un magasin de donn\u00e9es partag\u00e9 impl\u00e9ment\u00e9 en tant que  service Redis ou Valkey. Ce service sera utilis\u00e9 par les instances pour mettre en cache et partager des donn\u00e9es entre elles. Vous trouverez de plus amples informations sur les param\u00e8tres Redis/Valkey ici.</p> <p>Backend de base de donn\u00e9es</p> <p>Veuillez noter que nos instructions supposent que vous utilisez MariaDB comme backend de base de donn\u00e9es par d\u00e9faut, tel que configur\u00e9 par le <code>DATABASE_URI</code> param\u00e8tre. Cependant, nous comprenons que vous pr\u00e9f\u00e9rerez peut-\u00eatre utiliser d'autres backends pour votre int\u00e9gration Docker. Si c'est le cas, soyez assur\u00e9 que d'autres backends de base de donn\u00e9es sont toujours possibles. Pour plus d'informations, consultez les fichiers docker-compose dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>La configuration des backends de base de donn\u00e9es en cluster est hors du p\u00e9rim\u00e8tre de cette documentation.</p> <p>Assurez-vous que les services autoconf ont acc\u00e8s \u00e0 l'API Kubernetes. Il est recommand\u00e9 d'utiliser l' autorisation RBAC \u00e0 cette fin.</p> <p>Autorit\u00e9 de certification personnalis\u00e9e pour l'API Kubernetes</p> <p>Si vous utilisez une autorit\u00e9 de certification personnalis\u00e9e pour votre API Kubernetes, vous pouvez monter un fichier de bundle contenant vos certificats interm\u00e9diaires et racines sur le contr\u00f4leur d'entr\u00e9e et d\u00e9finir la <code>KUBERNETES_SSL_CA_CERT</code> valeur de l'environnement sur le chemin d'acc\u00e8s du bundle \u00e0 l'int\u00e9rieur du conteneur. Sinon, m\u00eame si cela n'est pas recommand\u00e9, vous pouvez d\u00e9sactiver la v\u00e9rification du certificat en d\u00e9finissant la <code>KUBERNETES_SSL_VERIFY</code> variable d'environnement du contr\u00f4leur d'entr\u00e9e sur <code>no</code> (la valeur par d\u00e9faut <code>yes</code>est ).</p> <p>De plus, il est crucial de d\u00e9finir la <code>KUBERNETES_MODE</code> variable d'environnement lors <code>yes</code> de  l'utilisation de l'int\u00e9gration Kubernetes. Cette variable est obligatoire pour un bon fonctionnement.</p>"},{"location":"fr/integrations/#methodes-dinstallation","title":"M\u00e9thodes d'installation","text":""},{"location":"fr/integrations/#utilisation-du-graphique-de-barre-recommande","title":"Utilisation du graphique de barre (recommand\u00e9)","text":"<p>La m\u00e9thode recommand\u00e9e pour installer Kubernetes est d'utiliser le graphique Helm disponible \u00e0 l'adresse <code>https://repo.bunkerweb.io/charts</code>:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>Vous pouvez ensuite utiliser le tableau de bord de bunkerweb \u00e0 partir de ce d\u00e9p\u00f4t :</p> <pre><code>helm install -f myvalues.yaml mybunkerweb bunkerweb/bunkerweb\n</code></pre> <p>La liste compl\u00e8te des valeurs est r\u00e9pertori\u00e9e dans le fichier charts/bunkerweb/values.yaml du d\u00e9p\u00f4t bunkerity/bunkerweb-helm.</p>"},{"location":"fr/integrations/#fichiers-yaml-complets","title":"Fichiers YAML complets","text":"<p>Au lieu d'utiliser le graphique helm, vous pouvez \u00e9galement utiliser les mod\u00e8les YAML dans le dossier misc/integrations du r\u00e9f\u00e9rentiel GitHub. Veuillez noter que nous vous recommandons vivement d'utiliser le tableau de barre \u00e0 la place.</p>"},{"location":"fr/integrations/#ressources-dentree","title":"Ressources d'entr\u00e9e","text":"<p>Une fois que la pile Kubernetes de BunkerWeb est correctement configur\u00e9e et op\u00e9rationnelle (reportez-vous aux journaux autoconf pour plus d'informations), vous pouvez proc\u00e9der au d\u00e9ploiement d'applications Web au sein du cluster et d\u00e9clarer votre ressource d'entr\u00e9e.</p> <p>Il est important de noter que les param\u00e8tres BunkerWeb doivent \u00eatre sp\u00e9cifi\u00e9s en tant qu'annotations pour la ressource Ingress. Pour la partie domaine, veuillez utiliser la valeur sp\u00e9ciale <code>bunkerweb.io</code>. En incluant les annotations appropri\u00e9es, vous pouvez configurer BunkerWeb en cons\u00e9quence pour la ressource Ingress.</p> <p>Prise en charge TLS</p> <p>Le contr\u00f4leur d'entr\u00e9e BunkerWeb prend enti\u00e8rement en charge les certificats HTTPS personnalis\u00e9s \u00e0 l'aide de la sp\u00e9cification tls, comme indiqu\u00e9 dans l'exemple. La configuration de solutions telles que <code>cert-manager</code> la g\u00e9n\u00e9ration automatique de secrets tls n'entre pas dans le cadre de cette documentation.</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    # Will be applied to all host in this ingress\n    bunkerweb.io/MY_SETTING: \"value\"\n    # Will only be applied to the www.example.com host\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  # TLS is optional, you can also use builtin Let's Encrypt for example\n  # tls:\n  #   - hosts:\n  #       - www.example.com\n  #     secretName: secret-example-tls\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n...\n</code></pre>"},{"location":"fr/integrations/#espaces-de-noms_1","title":"Espaces de noms","text":"<p>\u00c0 partir de la version <code>1.6.0</code>, les piles autoconf de BunkerWeb prennent d\u00e9sormais en charge les espaces de noms. Cette fonctionnalit\u00e9 vous permet de g\u00e9rer plusieurs clusters d'instances et de services BunkerWeb sur le m\u00eame cluster Kubernetes. Pour tirer parti des espaces de noms, il suffit de d\u00e9finir le <code>namespace</code> champ de m\u00e9tadonn\u00e9es sur vos instances et services BunkerWeb. Voici un exemple :</p> <pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: bunkerweb\n  namespace: my-namespace # Set the namespace for the BunkerWeb instance\n...\n</code></pre> <p>Comportement de l'espace de nommage</p> <p>Par d\u00e9faut, toutes les piles Autoconf \u00e9coutent tous les namespaces. Si vous souhaitez restreindre une pile \u00e0 des namespaces sp\u00e9cifiques, vous pouvez d\u00e9finir la variable d'environnement <code>NAMESPACES</code> dans le d\u00e9ploiement <code>bunkerweb-controller</code> :</p> <pre><code>...\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-controller\n  namespace: my-namespace # Set the namespace for the Controller\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-controller\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-controller\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-controller\n          image: bunkerity/bunkerweb-autoconf:testing\n          imagePullPolicy: Always\n          env:\n            - name: NAMESPACES\n              value: \"my-namespace my-other-namespace\" # Only listen to these namespaces\n            ...\n...\n</code></pre> <p>Gardez \u00e0 l'esprit que la variable d'environnement <code>NAMESPACES</code> est une liste de namespaces s\u00e9par\u00e9s par des espaces.</p> <p>Sp\u00e9cifications de l'espace de nommage</p> <p>Il ne peut y avoir qu'une seule base de donn\u00e9es et qu'un seul Scheduler par namespace. Si plusieurs bases de donn\u00e9es ou plusieurs Schedulers sont cr\u00e9\u00e9s dans le m\u00eame namespace, les configurations entreront en conflit.</p> <p>Le Scheduler n'a pas besoin de l'annotation <code>NAMESPACE</code> pour fonctionner correctement. Il suffit que le param\u00e8tre <code>DATABASE_URI</code> soit correctement configur\u00e9 afin qu'il puisse acc\u00e9der \u00e0 la m\u00eame base de donn\u00e9es que le service autoconf.</p>"},{"location":"fr/integrations/#classe-dentree","title":"Classe d'entr\u00e9e","text":"<p>Lorsqu'il est install\u00e9 en utilisant les m\u00e9thodes officielles de la documentation, BunkerWeb est livr\u00e9 avec la d\u00e9finition suivante <code>IngressClass</code> :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: bunkerweb\nspec:\n  controller: bunkerweb.io/ingress-controller\n</code></pre> <p>Afin de limiter les <code>Ingress</code> ressources surveill\u00e9es par le contr\u00f4leur d'entr\u00e9e, vous pouvez d\u00e9finir la <code>KUBERNETES_INGRESS_CLASS</code> variable d'environnement avec la valeur <code>bunkerweb</code>. Ensuite, vous pouvez utiliser la <code>ingressClassName</code> directive dans vos <code>Ingress</code> d\u00e9finitions :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    bunkerweb.io/MY_SETTING: \"value\"\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  ingressClassName: bunkerweb\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n</code></pre>"},{"location":"fr/integrations/#nom-de-domaine-personnalise","title":"Nom de domaine personnalis\u00e9","text":"<p>Si vous utilisez un nom de domaine personnalis\u00e9 diff\u00e9rent de celui par d\u00e9faut pour votre cluster Kubernetes <code>kubernetes.local</code> , vous pouvez d\u00e9finir la valeur \u00e0 l'aide de la <code>KUBERNETES_DOMAIN_NAME</code> variable d'environnement sur le conteneur du Scheduler.</p>"},{"location":"fr/integrations/#utilisation-avec-le-controleur-dentree-existant","title":"Utilisation avec le contr\u00f4leur d'entr\u00e9e existant","text":"<p>Conserver \u00e0 la fois le contr\u00f4leur d'entr\u00e9e existant et BunkerWeb</p> <p>Il s'agit d'un cas d'utilisation o\u00f9 vous souhaitez conserver un contr\u00f4leur d'entr\u00e9e existant, tel que nginx. Le flux de trafic typique sera : \u00e9quilibreur de charge =&gt; contr\u00f4leur d'entr\u00e9e =&gt; BunkerWeb =&gt; application.</p>"},{"location":"fr/integrations/#installation-du-controleur-dentree-nginx","title":"Installation du contr\u00f4leur d'entr\u00e9e nginx","text":"<p>Installez le d\u00e9p\u00f4t helm nginx d'entr\u00e9e :</p> <pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n</code></pre> <p>Installez le contr\u00f4leur d'entr\u00e9e nginx avec les valeurs par d\u00e9faut (il se peut qu'il ne fonctionne pas sur votre propre cluster pr\u00eat \u00e0 l'emploi, veuillez consulter la documentation) :</p> <pre><code>helm install --namespace nginx --create-namespace nginx ingress-nginx/ingress-nginx\n</code></pre> <p>Extraire l'adresse IP de LB :</p> <pre><code>kubectl get svc nginx-ingress-nginx-controller -n nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Configurez les entr\u00e9es DNS sur l'adresse IP de LB (par exemple, <code>bunkerweb</code> le sous-domaine pour l'interface utilisateur BW et <code>myapp</code> pour l'application) :</p> <pre><code>$ nslookup bunkerweb.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   bunkerweb.example.com\nAddress: 1.2.3.4\n$ nslookup myapp.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   myapp.example.com\nAddress: 1.2.3.4\n</code></pre> <p>Installation de BunkerWeb</p> <p>Installez le d\u00e9p\u00f4t helm de BunkerWeb :</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\nhelm repo update\n</code></pre> <p>Cr\u00e9er un <code>values.yaml</code> fichier :</p> <pre><code># Here we will setup the values needed to setup BunkerWeb behind an existing ingress controller\n# Traffic flow with BW: LB =&gt; existing Ingress Controller =&gt; BunkerWeb =&gt; Service\n# Traffic flow without BW: LB =&gt; existing Ingress Controller =&gt; Service\n\n# Global settings\nsettings:\n  misc:\n    # Replace with your DNS resolver\n    # to get it: kubectl exec in a random pod then cat /etc/resolv.conf\n    # if you have an IP as nameserver then do a reverse DNS lookup: nslookup &lt;IP&gt;\n    # most of the time it's coredns.kube-system.svc.cluster.local or kube-dns.kube-system.svc.cluster.local\n    dnsResolvers: \"kube-dns.kube-system.svc.cluster.local\"\n  kubernetes:\n    # We only consider Ingress resources with ingressClass bunkerweb to avoid conflicts with existing ingress controller\n    ingressClass: \"bunkerweb\"\n    # Optional: you can choose namespace(s) where BunkerWeb will listen for Ingress/ConfigMap changes\n    # Default (blank value) is all namespaces\n    namespaces: \"\"\n\n# Override the bunkerweb-external service type to ClusterIP\n# Since we don't need to expose it to the outside world\n# We will use the existing ingress controller to route traffic to BunkerWeb\nservice:\n  type: ClusterIP\n\n# BunkerWeb settings\nbunkerweb:\n  tag: testing\n\n# Scheduler settings\nscheduler:\n  tag: testing\n  extraEnvs:\n    # Enable real IP module to get real IP of clients\n    - name: USE_REAL_IP\n      value: \"yes\"\n\n# Controller settings\ncontroller:\n  tag: testing\n\n# UI settings\nui:\n  tag: testing\n</code></pre> <p>Installez BunkerWeb avec des valeurs personnalis\u00e9es :</p> <pre><code>helm install --namespace bunkerweb --create-namespace -f values.yaml bunkerweb bunkerweb/bunkerweb\n</code></pre> <p>V\u00e9rifiez les journaux et attendez que tout soit pr\u00eat.</p> <p>Installation de l'interface utilisateur Web</p> <p>Configurez l'entr\u00e9e suivante (en supposant que le contr\u00f4leur nginx est install\u00e9) :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ui-bunkerweb\n  # Replace with your namespace of BW if needed\n  namespace: bunkerweb\n  annotations:\n    # HTTPS is mandatory for web UI even if traffic is internal\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # We must set SNI so BW can serve the right vhost\n    # Replace with your domain\n    nginx.ingress.kubernetes.io/proxy-ssl-name: \"bunkerweb.example.com\"\n    nginx.ingress.kubernetes.io/proxy-ssl-server-name: \"on\"\nspec:\n  # Only served by nginx controller and not BW\n  ingressClassName: nginx\n  # Uncomment and edit if you want to use your own certificate\n  # tls:\n  # - hosts:\n  #   - bunkerweb.example.com\n  #   secretName: tls-secret\n  rules:\n  # Replace with your domain\n  - host: bunkerweb.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Created by Helm chart\n            name: bunkerweb-external\n            port:\n              # Using HTTPS port is mandatory for UI\n              number: 443\n</code></pre> <p>Et vous pouvez maintenant passer \u00e0 l'assistant de configuration en acc\u00e9dant \u00e0 <code>https://bunkerweb.example.com/setup</code>.</p> <p>Protection de l'application existante</p> <p>Tout d'abord, vous devrez vous rendre dans Global Config, s\u00e9lectionner le plugin SSL, puis d\u00e9sactiver la redirection automatique HTTP vers HTTPS. Veuillez noter que vous n'avez besoin de le faire qu'une seule fois.</p> <p>Supposons que vous ayez une application dans l'espace de <code>myapp</code> noms qui est accessible \u00e0 l'aide du <code>myapp-service</code> service sur le port <code>5000</code>.</p> <p>Vous devrez ajouter un nouveau service sur l'interface utilisateur web et renseigner les informations requises :</p> <ul> <li>Nom du serveur : le domaine public de votre application (par ex. <code>myapp.example.com</code>)</li> <li>SSL/TLS : votre contr\u00f4leur d'entr\u00e9e s'occupe de cette partie, donc ne l'activez pas sur BunkerWeb car le trafic est interne au sein du cluster</li> <li>H\u00f4te proxy inverse : l'URL compl\u00e8te de votre application au sein du cluster (par exemple) <code>http://myapp-service.myapp.svc.cluster.local:5000</code></li> </ul> <p>Une fois le nouveau service ajout\u00e9, vous pouvez maintenant d\u00e9clarer une ressource Ingress pour ce service et l'acheminer vers le service BunkerWeb sur le port HTTP :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: myapp\n  # Replace with your namespace of BW if needed\n  namespace: bunkerweb\nspec:\n  # Only served by nginx controller and not BW\n  ingressClassName: nginx\n  # Uncomment and edit if you want to use your own certificate\n  # tls:\n  # - hosts:\n  #   - myapp.example.com\n  #   secretName: tls-secret\n  rules:\n  # Replace with your domain\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Created by Helm chart\n            name: bunkerweb-external\n            port:\n              number: 80\n</code></pre> <p>Vous pouvez visiter <code>http(s)://myapp.example.com</code>, qui est maintenant prot\u00e9g\u00e9 par BunkerWeb \ufe0f</p>"},{"location":"fr/integrations/#swarm","title":"Swarm","text":"Int\u00e9gration de Docker Swarm <p>Obsol\u00e8te</p> <p>L'int\u00e9gration de Swarm est obsol\u00e8te et sera supprim\u00e9e dans une version ult\u00e9rieure. Veuillez envisager d'utiliser l' int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Support PRO</p> <p>Si vous avez besoin d'aide sur l'int\u00e9gration Swarm, veuillez nous contacter au contact@bunkerity.com ou via le formulaire de contact.</p> <p>Docker autoconf</p> <p>L'int\u00e9gration de Swarm est similaire \u00e0 celle de Docker autoconf (mais avec des services au lieu de conteneurs). Veuillez d'abord lire la section sur l 'int\u00e9gration de Docker autoconf si n\u00e9cessaire.</p> <p>Pour permettre la configuration automatique des instances BunkerWeb, le ** service autoconf n\u00e9cessite l'acc\u00e8s \u00e0 l'API Docker. Ce service est \u00e0 l'\u00e9coute des \u00e9v\u00e9nements Docker Swarm, tels que la cr\u00e9ation ou la suppression de services, et configure de mani\u00e8re transparente les instances BunkerWeb** en temps r\u00e9el sans aucun temps d'arr\u00eat. Il surveille \u00e9galement d'autres objets Swarm, tels que les configurations, pour les configurations personnalis\u00e9es.</p> <p>Semblable \u00e0 l'int\u00e9gration Docker autoconf, la configuration des services Web est d\u00e9finie \u00e0 l'aide d'\u00e9tiquettes qui commencent par le ** pr\u00e9fixe **bunkerweb.</p> <p>Pour une configuration optimale, il est recommand\u00e9 de planifier le service BunkerWeb en tant que service global sur tous les n\u0153uds, tandis que les services autoconf, scheduler et proxy Docker API doivent \u00eatre planifi\u00e9s en tant que services r\u00e9pliqu\u00e9s uniques. Veuillez noter que le service proxy de l'API Docker doit \u00eatre planifi\u00e9 sur un n\u0153ud de gestionnaire, sauf si vous le configurez pour utiliser une API distante (ce qui n'est pas couvert dans la documentation).</p> <p>\u00c9tant donn\u00e9 que plusieurs instances de BunkerWeb sont en cours d'ex\u00e9cution, un magasin de donn\u00e9es partag\u00e9 impl\u00e9ment\u00e9 en tant que  service Redis ou Valkey doit \u00eatre cr\u00e9\u00e9. Ces instances utiliseront le service Redis/Valkey pour mettre en cache et partager des donn\u00e9es. Vous trouverez plus de d\u00e9tails sur les param\u00e8tres Redis/Valkey ici.</p> <p>En ce qui concerne le volume de la base de donn\u00e9es, la documentation ne sp\u00e9cifie pas d'approche sp\u00e9cifique. Le choix d'un dossier partag\u00e9 ou d'un pilote sp\u00e9cifique pour le volume de base de donn\u00e9es d\u00e9pend de votre cas d'utilisation unique et est laiss\u00e9 \u00e0 la disposition du lecteur.</p> <p>Backend de base de donn\u00e9es</p> <p>Veuillez noter que nos instructions supposent que vous utilisez MariaDB comme backend de base de donn\u00e9es par d\u00e9faut, tel que configur\u00e9 par le <code>DATABASE_URI</code> param\u00e8tre. Cependant, nous comprenons que vous pr\u00e9f\u00e9rerez peut-\u00eatre utiliser d'autres backends pour votre int\u00e9gration Docker. Si c'est le cas, soyez assur\u00e9 que d'autres backends de base de donn\u00e9es sont toujours possibles. Pour plus d'informations, consultez les fichiers docker-compose dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>La configuration des backends de base de donn\u00e9es en cluster est hors du p\u00e9rim\u00e8tre de cette documentation.</p> <p>Voici le passe-partout de la pile que vous pouvez d\u00e9ployer \u00e0 l'aide de <code>docker stack deploy</code>:</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both services\n  SWARM_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\" # Mandatory label for the autoconf service to identify the BunkerWeb instance\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      SWARM_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # The Docker socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-redis:\n    image: redis:7-alpine\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre> <p>R\u00e9glage obligatoire de l'swarm</p> <p>Veuillez noter que la <code>SWARM_MODE: \"yes\"</code> variable d'environnement est obligatoire lors de l'utilisation de l'int\u00e9gration Swarm.</p>"},{"location":"fr/integrations/#services-swarm","title":"Services Swarm","text":"<p>Une fois que la pile BunkerWeb Swarm est configur\u00e9e et en cours d'ex\u00e9cution (voir les journaux autoconf et scheduler pour plus d'informations), vous pourrez d\u00e9ployer des applications Web dans le cluster et utiliser des \u00e9tiquettes pour configurer dynamiquement BunkerWeb :</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"fr/integrations/#espaces-de-noms_2","title":"Espaces de noms","text":"<p>\u00c0 partir de la version <code>1.6.0</code>, les piles Autoconf de BunkerWeb supportent d\u00e9sormais les espaces de noms. Cette fonctionnalit\u00e9 vous permet de g\u00e9rer plusieurs \u00ab clusters \u00bb d'instances et de services BunkerWeb sur le m\u00eame h\u00f4te Docker. Pour tirer parti des espaces de noms, il vous suffit de d\u00e9finir l' <code>NAMESPACE</code> \u00e9tiquette sur vos services. Voici un exemple :</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the service\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Comportement de l'espace de nommage</p> <p>Par d\u00e9faut, toutes les piles Autoconf \u00e9coutent tous les espaces de noms. Si vous souhaitez restreindre une pile \u00e0 des espaces de noms sp\u00e9cifiques, vous pouvez d\u00e9finir la variable d'environnement <code>NAMESPACES</code> dans le service <code>bw-autoconf</code> :</p> <pre><code>...\nservices:\n  bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  deploy:\n    mode: global\n    placement:\n    constraints:\n      - \"node.role == worker\"\n    labels:\n    - \"bunkerweb.INSTANCE=yes\"\n    - \"bunkerweb.NAMESPACE=my-namespace\" # Set the namespace for the BunkerWeb instance\n  ...\n  bw-autoconf:\n  image: bunkerity/bunkerweb-autoconf:testing\n  environment:\n    NAMESPACES: \"my-namespace my-other-namespace\" # Only listen to these namespaces\n    ...\n  deploy:\n    placement:\n    constraints:\n      - \"node.role == worker\"\n...\n</code></pre> <p>Gardez \u00e0 l'esprit que la variable d'environnement <code>NAMESPACES</code> est une liste d'espaces de noms s\u00e9par\u00e9s par des espaces.</p> <p>Sp\u00e9cifications de l'espace de nommage</p> <p>Il ne peut y avoir qu'une seule base de donn\u00e9es et un seul Scheduler par espace de noms. Si vous tentez de cr\u00e9er plusieurs bases de donn\u00e9es ou plusieurs Schedulers dans le m\u00eame espace de noms, les configurations entreront en conflit.</p> <p>Le Scheduler n'a pas besoin de l'\u00e9tiquette <code>NAMESPACE</code> pour fonctionner correctement. Il a seulement besoin que le param\u00e8tre <code>DATABASE_URI</code> soit correctement configur\u00e9 afin qu'il puisse acc\u00e9der \u00e0 la m\u00eame base de donn\u00e9es que le service autoconf.</p>"},{"location":"fr/integrations/#microsoft-azure","title":"Microsoft Azure","text":"Int\u00e9gration Azure <p>Taille de machine virtuelle recommand\u00e9e</p> <p>Soyez vigilant lorsque vous choisissez la r\u00e9f\u00e9rence SKU de la machine virtuelle. Vous devez s\u00e9lectionner une r\u00e9f\u00e9rence SKU compatible avec la machine virtuelle Gen2 et nous vous recommandons de commencer par la s\u00e9rie B2s ou Ds2 pour une utilisation optimale.</p> <p>Vous pouvez facilement d\u00e9ployer BunkerWeb sur votre abonnement Azure de plusieurs mani\u00e8res :</p> <ul> <li>Azure CLI dans Cloud Shell</li> <li>Mod\u00e8le Azure ARM</li> <li>Portail Azure via la Place de march\u00e9</li> </ul> Cloud ShellMod\u00e8le ARMMarketplace <p>Cr\u00e9ez un groupe de ressources. Remplacez la valeur <code>RG_NAME</code></p> <pre><code>az group create --name \"RG_NAME\" --location \"LOCATION\"\n</code></pre> <p>Cr\u00e9ez une machine virtuelle avec la taille (SKU) <code>Standard_B2s</code> dans la m\u00eame r\u00e9gion que le groupe de ressources. Remplacez les valeurs <code>RG_NAME</code>, <code>VM_NAME</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --vnet-name \"VNET_NAME\" --size Standard_B2s --subnet \"SUBNET_NAME\"\n</code></pre> <p>Commande compl\u00e8te. Remplacez les valeurs <code>RG_NAME</code>, <code>VM_NAME</code>, <code>LOCATION</code>, <code>HOSTNAME</code>, <code>USERNAME</code>, <code>PUBLIC_IP</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code>, <code>NSG_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --location \"LOCATION\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --computer-name \"HOSTNAME\" --admin-username \"USERNAME\" --public-ip-address \"PUBLIC_IP\" --public-ip-address-allocation Static --size Standard_B2s --public-ip-sku Standard --os-disk-delete-option Delete --nic-delete-option Delete --vnet-name \"VNET_NAME\" --subnet \"SUBNET_NAME\" --nsg \"NSG_NAME\"\n</code></pre> <p>Exigences en mati\u00e8re d'autorisations</p> <p>Pour d\u00e9ployer un mod\u00e8le ARM, vous devez disposer d'un acc\u00e8s en \u00e9criture sur les ressources que vous d\u00e9ployez ainsi que de l'acc\u00e8s \u00e0 toutes les op\u00e9rations sur le type de ressource Microsoft.Resources/deployments. Pour d\u00e9ployer une machine virtuelle, vous avez besoin des autorisations Microsoft.Compute/virtualMachines/write et Microsoft.Resources/deployments/*. L'op\u00e9ration what-if requiert les m\u00eames autorisations.</p> <p>D\u00e9ployer le mod\u00e8le ARM :</p> <p></p> <p>Connectez-vous au portail Azure.</p> <p>Obtenez BunkerWeb depuis le menu Cr\u00e9er une ressource.</p> <p>Vous pouvez \u00e9galement passer par le Marketplace.</p> <p>Vous pouvez acc\u00e9der \u00e0 l'assistant d'installation en parcourant l' <code>https://your-ip-address/setup</code> URI de votre machine virtuelle.</p>"},{"location":"fr/plugins/","title":"Plug-ins","text":"<p>BunkerWeb est livr\u00e9 avec un syst\u00e8me de plugins permettant d'ajouter facilement de nouvelles fonctionnalit\u00e9s. Une fois qu'un plugin est install\u00e9, vous pouvez le g\u00e9rer \u00e0 l'aide de param\u00e8tres suppl\u00e9mentaires d\u00e9finis par le plugin.</p>"},{"location":"fr/plugins/#plugins-officiels","title":"Plugins officiels","text":"<p>Voici la liste des plugins \"officiels\" que nous maintenons (voir le d\u00e9p\u00f4t bunkerweb-plugins pour plus d'informations) :</p> Nom Version Description Lien ClamAV 1.9 Analyse automatiquement les fichiers t\u00e9l\u00e9charg\u00e9s avec le moteur antivirus ClamAV et rejette la demande lorsqu'un fichier est d\u00e9tect\u00e9 comme malveillant. bunkerweb-plugins/clamav Coraza 1.9 Inspectez les requ\u00eates \u00e0 l'aide du WAF Coraza (alternative \u00e0 ModSecurity). bunkerweb-plugins/coraza Discorde 1.9 Envoyez des notifications de s\u00e9curit\u00e9 \u00e0 un canal Discord \u00e0 l'aide d'un Webhook. bunkerweb-plugins/discord L\u00e2che 1.9 Envoyez des notifications de s\u00e9curit\u00e9 \u00e0 un canal Slack \u00e0 l'aide d'un Webhook. bunkerweb-plugins/slack VirusTotal 1.9 Analyse automatiquement les fichiers t\u00e9l\u00e9charg\u00e9s \u00e0 l'aide de l'API VirusTotal et rejette la demande lorsqu'un fichier est d\u00e9tect\u00e9 comme malveillant. bunkerweb-plugins/virustotal Crochet Web 1.9 Envoyez des notifications de s\u00e9curit\u00e9 \u00e0 un point de terminaison HTTP personnalis\u00e9 \u00e0 l'aide d'un Webhook. bunkerweb-plugins/webhook"},{"location":"fr/plugins/#comment-utiliser-un-plugin","title":"Comment utiliser un plugin","text":""},{"location":"fr/plugins/#automatique","title":"Automatique","text":"<p>Si vous souhaitez installer rapidement des plugins externes, vous pouvez utiliser ce <code>EXTERNAL_PLUGIN_URLS</code> param\u00e8tre. Il prend une liste d'URL s\u00e9par\u00e9es par des espaces, chacune pointant vers une archive compress\u00e9e (format zip) contenant un ou plusieurs plugins.</p> <p>Vous pouvez utiliser la valeur suivante si vous souhaitez installer automatiquement les plugins officiels : <code>EXTERNAL_PLUGIN_URLS=https://github.com/bunkerity/bunkerweb-plugins/archive/refs/tags/v1.9.zip</code></p>"},{"location":"fr/plugins/#manuelle","title":"Manuelle","text":"<p>La premi\u00e8re \u00e9tape consiste \u00e0 installer le plugin en pla\u00e7ant ses fichiers dans le dossier de donn\u00e9es correspondant <code>plugins</code> . La proc\u00e9dure d\u00e9pend de votre int\u00e9gration :</p> DockerDocker autoconfSwarmKubernetesLinux <p>Lors de l'utilisation de l'int\u00e9gration Docker, les plugins doivent \u00eatre plac\u00e9s dans le volume mont\u00e9 sur <code>/data/plugins</code> dans le conteneur du planificateur.</p> <p>La premi\u00e8re chose \u00e0 faire est de cr\u00e9er le dossier des plugins :</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Ensuite, vous pouvez d\u00e9poser les plugins de votre choix dans ce dossier :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> Utilisation d'un dossier local pour les donn\u00e9es persistantes <p>Le planificateur s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 avec UID 101 et GID 101 \u00e0 l'int\u00e9rieur du conteneur. La raison en est la s\u00e9curit\u00e9 : en cas d'exploitation d'une vuln\u00e9rabilit\u00e9, l'attaquant n'aura pas de privil\u00e8ges root complets (UID/GID 0). Mais il y a un inconv\u00e9nient : si vous utilisez un dossier local pour les donn\u00e9es persistantes, vous devrez d\u00e9finir les permissions correctes afin que l'utilisateur non privil\u00e9gi\u00e9 puisse \u00e9crire des donn\u00e9es dedans. Quelque chose comme \u00e7a devrait faire l'affaire :</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternativement, si le dossier existe d\u00e9j\u00e0 :</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Si vous utilisez Docker en mode rootless ou podman, les UID et GID dans le conteneur seront mapp\u00e9s \u00e0 des valeurs diff\u00e9rentes sur l'h\u00f4te. Vous devrez d'abord v\u00e9rifier vos subuid et subgid initiaux :</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Par exemple, si vous avez une valeur de 100000, l'UID/GID mapp\u00e9 sera 100100 (100000 + 100) :</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Ou si le dossier existe d\u00e9j\u00e0 :</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Ensuite, vous pouvez monter le volume lors du d\u00e9marrage de votre stack Docker :</p> <pre><code>services:\n...\n  bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n...\n</code></pre> <p>Lors de l'utilisation de l'int\u00e9gration Docker autoconf, les plugins doivent \u00eatre plac\u00e9s dans le volume mont\u00e9 sur <code>/data/plugins</code> dans le conteneur du planificateur.</p> <p>La premi\u00e8re chose \u00e0 faire est de cr\u00e9er le dossier des plugins :</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Ensuite, vous pouvez d\u00e9poser les plugins de votre choix dans ce dossier :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> <p>\u00c9tant donn\u00e9 que le planificateur s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 avec UID et GID 101, vous devrez modifier les permissions :</p> <pre><code>chown -R 101:101 ./bw-data\n</code></pre> <p>Ensuite, vous pouvez monter le volume lors du d\u00e9marrage de votre stack Docker :</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Lors de l'utilisation de l'int\u00e9gration Swarm, les plugins doivent \u00eatre plac\u00e9s dans le volume mont\u00e9 sur <code>/data/plugins</code> dans le conteneur du planificateur.</p> <p>Volume Swarm</p> <p>La configuration d'un volume Swarm qui persistera lorsque le service du planificateur s'ex\u00e9cute sur diff\u00e9rents n\u0153uds n'est pas couverte dans cette documentation. Nous supposons que vous avez un dossier partag\u00e9 mont\u00e9 sur <code>/shared</code> sur tous les n\u0153uds.</p> <p>La premi\u00e8re chose \u00e0 faire est de cr\u00e9er le dossier des plugins :</p> <pre><code>mkdir -p /shared/bw-plugins\n</code></pre> <p>Ensuite, vous pouvez d\u00e9poser les plugins de votre choix dans ce dossier :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /shared/bw-plugins\n</code></pre> <p>\u00c9tant donn\u00e9 que le planificateur s'ex\u00e9cute en tant qu'utilisateur non privil\u00e9gi\u00e9 avec UID et GID 101, vous devrez modifier les permissions :</p> <pre><code>chown -R 101:101 /shared/bw-plugins\n</code></pre> <p>Ensuite, vous pouvez monter le volume lors du d\u00e9marrage de votre stack Swarm :</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - /shared/bw-plugins:/data/plugins\n...\n</code></pre> <p>Lors de l'utilisation de l'int\u00e9gration Kubernetes, les plugins doivent \u00eatre plac\u00e9s dans le volume mont\u00e9 sur <code>/data/plugins</code> dans le conteneur du planificateur.</p> <p>La premi\u00e8re chose \u00e0 faire est de d\u00e9clarer un PersistentVolumeClaim qui contiendra nos donn\u00e9es de plugins :</p> <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-bunkerweb-plugins\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\n</code></pre> <p>Vous pouvez maintenant ajouter le montage de volume et un conteneur d'initialisation pour provisionner automatiquement le volume :</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-scheduler\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-scheduler\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-scheduler\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-scheduler\n          image: bunkerity/bunkerweb-scheduler:testing\n          imagePullPolicy: Always\n          env:\n            - name: KUBERNETES_MODE\n              value: \"yes\"\n            - name: \"DATABASE_URI\"\n              value: \"mariadb+pymysql://bunkerweb:changeme@svc-bunkerweb-db:3306/db\"\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      initContainers:\n        - name: bunkerweb-scheduler-init\n          image: alpine/git\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"git clone https://github.com/bunkerity/bunkerweb-plugins /data/plugins &amp;&amp; chown -R 101:101 /data/plugins\"]\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      volumes:\n        - name: vol-plugins\n          persistentVolumeClaim:\n            claimName: pvc-bunkerweb-plugins\n</code></pre> <p>Lors de l'utilisation de l'int\u00e9gration Linux, les plugins doivent \u00eatre \u00e9crits dans le dossier <code>/etc/bunkerweb/plugins</code> :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /etc/bunkerweb/plugins &amp;&amp; \\\nchown -R nginx:nginx /etc/bunkerweb/plugins\n</code></pre>"},{"location":"fr/plugins/#ecrire-un-plugin","title":"\u00c9crire un plugin","text":""},{"location":"fr/plugins/#structure","title":"Structure","text":"<p>Plugins existants</p> <p>Si la documentation n'est pas suffisante, vous pouvez consulter le code source existant des plugins officiels et des plugins core (d\u00e9j\u00e0 inclus dans BunkerWeb mais ce sont des plugins, techniquement parlant).</p> <p>\u00c0 quoi ressemble la structure d'un plugin : <pre><code>plugin /\n    confs / conf_type / conf_name.conf\n    ui / actions.py\n         hooks.py\n         template.html\n         blueprints / &lt;blueprint_file(s)&gt;\n              templates / &lt;blueprint_template(s)&gt;\n    jobs / my-job.py\n    templates / my-template.json\n          my-template / configs / conf_type / conf_name.conf\n    plugin.lua\n    plugin.json\n</code></pre></p> <ul> <li> <p>conf_name.conf : Ajout de configurations NGINX personnalis\u00e9es (en tant que mod\u00e8les Jinja2).</p> </li> <li> <p>actions.py : Script \u00e0 ex\u00e9cuter sur le serveur Flask. Ce script s'ex\u00e9cute dans un contexte Flask, ce qui vous donne acc\u00e8s \u00e0 des biblioth\u00e8ques et des utilitaires tels que <code>jinja2</code> et <code>requests</code>.</p> </li> <li> <p>hooks.py : Fichier Python personnalis\u00e9 qui contient les hooks de flask et qui sera ex\u00e9cut\u00e9 lors du chargement du plugin.</p> </li> <li> <p>template.html : Page de plugin personnalis\u00e9e accessible via l'interface utilisateur.</p> </li> <li> <p>Dossier Blueprints (dans l'interface utilisateur) :   Ce dossier est utilis\u00e9 pour remplacer les blueprints Flask existants ou en cr\u00e9er de nouveaux. \u00c0 l'int\u00e9rieur, vous pouvez inclure des fichiers de blueprint et un **** sous-dossier de mod\u00e8les facultatif pour les mod\u00e8les sp\u00e9cifiques aux blueprints.</p> </li> <li> <p>jobs py file : Fichiers Python personnalis\u00e9s ex\u00e9cut\u00e9s en tant que jobs par le planificateur.</p> </li> <li> <p>my-template.json : Ajoutez des mod\u00e8les personnalis\u00e9s pour remplacer les valeurs par d\u00e9faut des param\u00e8tres et appliquer facilement des configurations personnalis\u00e9es.</p> </li> <li> <p>plugin.lua : Code ex\u00e9cut\u00e9 sur NGINX \u00e0 l'aide du module NGINX LUA.</p> </li> <li> <p>plugin.json : M\u00e9tadonn\u00e9es, param\u00e8tres et d\u00e9finitions de t\u00e2ches pour votre plugin.</p> </li> </ul>"},{"location":"fr/plugins/#commencer","title":"Commencer","text":"<p>La premi\u00e8re \u00e9tape consiste \u00e0 cr\u00e9er un dossier qui contiendra le plugin :</p> <pre><code>mkdir myplugin &amp;&amp; \\\ncd myplugin\n</code></pre>"},{"location":"fr/plugins/#metadonnees","title":"M\u00e9tadonn\u00e9es","text":"<p>Un fichier nomm\u00e9 plugin.json et \u00e9crit \u00e0 la racine du dossier du plugin doit contenir des m\u00e9tadonn\u00e9es sur le plugin. En voici un exemple :</p> <pre><code>{\n  \"id\": \"myplugin\",\n  \"name\": \"My Plugin\",\n  \"description\": \"Just an example plugin.\",\n  \"version\": \"1.0\",\n  \"stream\": \"partial\",\n  \"settings\": {\n    \"DUMMY_SETTING\": {\n      \"context\": \"multisite\",\n      \"default\": \"1234\",\n      \"help\": \"Here is the help of the setting.\",\n      \"id\": \"dummy-id\",\n      \"label\": \"Dummy setting\",\n      \"regex\": \"^.*$\",\n      \"type\": \"text\"\n    }\n  },\n  \"jobs\": [\n    {\n      \"name\": \"my-job\",\n      \"file\": \"my-job.py\",\n      \"every\": \"hour\"\n    }\n  ]\n}\n</code></pre> <p>Voici le d\u00e9tail des champs :</p> Champ Obligatoire Type Description <code>id</code> oui corde ID interne du plugin : doit \u00eatre unique parmi les autres plugins (y compris les \"core\") et ne contenir que des caract\u00e8res minuscules. <code>name</code> oui corde Nom de votre plugin. <code>description</code> oui corde Description de votre plugin. <code>version</code> oui corde Version de votre plugin. <code>stream</code> oui corde Informations sur la prise en charge des flux : <code>no</code>, <code>yes</code> ou <code>partial</code>. <code>settings</code> oui Dict Liste des param\u00e8tres de votre plugin. <code>jobs</code> Non liste Liste des jobs de votre plugin. <p>Chaque param\u00e8tre comporte les champs suivants (la cl\u00e9 est l'ID des param\u00e8tres utilis\u00e9s dans une configuration) :</p> Champ Obligatoire Type Description <code>context</code> oui corde Contexte du cadre : <code>multisite</code> ou <code>global</code>. <code>default</code> oui corde Valeur par d\u00e9faut du param\u00e8tre. <code>help</code> oui corde Texte d'aide sur le plugin (affich\u00e9 dans l'interface utilisateur Web). <code>id</code> oui corde ID interne utilis\u00e9 par l'interface utilisateur web pour les \u00e9l\u00e9ments HTML. <code>label</code> oui corde \u00c9tiquette affich\u00e9e par l'interface utilisateur Web. <code>regex</code> oui corde L'expression r\u00e9guli\u00e8re utilis\u00e9e pour valider la valeur fournie par l'utilisateur. <code>type</code> oui corde Le type du champ : <code>text</code>, <code>check</code>, <code>select</code> ou <code>password</code>. <code>multiple</code> Non corde ID unique pour regrouper plusieurs param\u00e8tres avec des chiffres comme suffixe. <code>select</code> Non liste Liste des valeurs de cha\u00eene possibles lorsque est <code>type</code> . <code>select</code> <p>Chaque emploi comporte les champs suivants :</p> Champ Obligatoire Type Description <code>name</code> oui corde Nom de l'emploi. <code>file</code> oui corde Nom du fichier \u00e0 l'int\u00e9rieur du dossier jobs. <code>every</code> oui corde Fr\u00e9quence de planification des t\u00e2ches : <code>minute</code>, <code>hour</code>, <code>day</code> <code>week</code> , ou <code>once</code> (pas de fr\u00e9quence, une seule fois avant de (r\u00e9)g\u00e9n\u00e9rer la configuration)."},{"location":"fr/plugins/#configurations","title":"Configurations","text":"<p>Vous pouvez ajouter des configurations NGINX personnalis\u00e9es en ajoutant un dossier nomm\u00e9 confs avec un contenu similaire aux configurations personnalis\u00e9es. Chaque sous-dossier \u00e0 l'int\u00e9rieur des confs contiendra  des mod\u00e8les jinja2 qui seront g\u00e9n\u00e9r\u00e9s et charg\u00e9s dans le contexte correspondant (<code>http</code> <code>server-http</code> <code>default-server-http</code> <code>stream</code> <code>server-stream</code>, , <code>modsec</code> <code>modsec-crs</code>, <code>crs-plugins-before</code> et <code>crs-plugins-after</code>).</p> <p>Voici un exemple de fichier de mod\u00e8le de configuration \u00e0 l'int\u00e9rieur du dossier confs/server-http nomm\u00e9 example.conf :</p> <pre><code>location /setting {\n  default_type 'text/plain';\n    content_by_lua_block {\n        ngx.say('{{ DUMMY_SETTING }}')\n    }\n}\n</code></pre> <p><code>{{ DUMMY_SETTING }}</code> sera remplac\u00e9e par la valeur de la <code>DUMMY_SETTING</code> choisie par l'utilisateur du plugin.</p>"},{"location":"fr/plugins/#modeles","title":"Mod\u00e8les","text":"<p>Pour  plus d'informations, consultez la documentation des mod\u00e8les.</p>"},{"location":"fr/plugins/#scenario-principal","title":"Sc\u00e9nario principal","text":"<p>Sous le capot, BunkerWeb utilise le module LUA de NGINX pour ex\u00e9cuter du code dans NGINX. Les plugins qui ont besoin d'ex\u00e9cuter du code doivent fournir un fichier lua dans le r\u00e9pertoire racine du dossier du plugin en utilisant la <code>id</code> valeur de plugin.json comme nom. Voici un exemple nomm\u00e9 myplugin.lua :</p> <pre><code>local class     = require \"middleclass\"\nlocal plugin    = require \"bunkerweb.plugin\"\nlocal utils     = require \"bunkerweb.utils\"\n\n\nlocal myplugin = class(\"myplugin\", plugin)\n\n\nfunction myplugin:initialize(ctx)\n    plugin.initialize(self, \"myplugin\", ctx)\n    self.dummy = \"dummy\"\nend\n\nfunction myplugin:init()\n    self.logger:log(ngx.NOTICE, \"init called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:set()\n    self.logger:log(ngx.NOTICE, \"set called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:access()\n    self.logger:log(ngx.NOTICE, \"access called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log()\n    self.logger:log(ngx.NOTICE, \"log called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_default()\n    self.logger:log(ngx.NOTICE, \"log_default called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:preread()\n    self.logger:log(ngx.NOTICE, \"preread called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_stream()\n    self.logger:log(ngx.NOTICE, \"log_stream called\")\n    return self:ret(true, \"success\")\nend\n\nreturn myplugin\n</code></pre> <p>Les fonctions d\u00e9clar\u00e9es sont automatiquement appel\u00e9es dans des contextes sp\u00e9cifiques. Voici le d\u00e9tail de chaque fonction :</p> Fonction Contexte Description Valeur de retour <code>init</code> init_by_lua Appel\u00e9 lorsque NGINX vient de d\u00e9marrer ou a re\u00e7u un ordre de rechargement. Le cas d'utilisation typique consiste \u00e0 pr\u00e9parer toutes les donn\u00e9es qui seront utilis\u00e9es par votre plugin. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (bool\u00e9en) : true s'il n'y a pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li></ul> <code>set</code> set_by_lua Appel\u00e9 avant chaque requ\u00eate re\u00e7ue par le serveur. Le cas d'utilisation typique est celui de l'informatique avant la phase d'acc\u00e8s. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (bool\u00e9en) : true s'il n'y a pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li></ul> <code>access</code> access_by_lua Appel\u00e9 \u00e0 chaque requ\u00eate re\u00e7ue par le serveur. Le cas d'utilisation typique consiste \u00e0 effectuer les v\u00e9rifications de s\u00e9curit\u00e9 ici et \u00e0 refuser la demande si n\u00e9cessaire. <code>ret</code>, <code>msg</code>,<code>status</code>,<code>redirect</code><ul><li><code>ret</code> (bool\u00e9en) : true si pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li><li><code>status</code> (nombre) : interrompt le processus en cours et renvoie l'\u00e9tat HTTP</li><li><code>redirect</code> (URL) : si d\u00e9fini, redirigera vers l'URL</li></ul>  donn\u00e9e <code>log</code> log_by_lua Appel\u00e9 lorsqu'une requ\u00eate est termin\u00e9e (et avant qu'elle ne soit consign\u00e9e dans les journaux d'acc\u00e8s). Le cas d'utilisation typique est de cr\u00e9er des statistiques ou de calculer des compteurs par exemple. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (bool\u00e9en) : true s'il n'y a pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li></ul> <code>log_default</code> log_by_lua Identique mais <code>log</code> uniquement appel\u00e9 sur le serveur par d\u00e9faut. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (bool\u00e9en) : true s'il n'y a pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li></ul> <code>preread</code>   preread_by_lua Similaire \u00e0 la <code>access</code> fonction mais pour le mode flux. <code>ret</code>, <code>msg</code>,<code>status</code><ul><li><code>ret</code> (bool\u00e9en) : true s'il n'y a pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li><li><code>status</code> (nombre) : interrompre le processus en cours et renvoyer l'\u00e9tat</li></ul> <code>log_stream</code> log_by_lua Similaire \u00e0 la <code>log</code> fonction mais pour le mode flux. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (bool\u00e9en) : true s'il n'y a pas d'erreur ou sinon false</li><li><code>msg</code> (cha\u00eene) : message de r\u00e9ussite ou d'erreur</li></ul>"},{"location":"fr/plugins/#bibliotheques","title":"Biblioth\u00e8ques","text":"<p>Toutes les directives du module LUA NGINX sont disponibles et  le module LUA de flux NGINX. En plus de cela, vous pouvez utiliser les biblioth\u00e8ques LUA incluses dans BunkerWeb : voir ce script pour la liste compl\u00e8te.</p> <p>Si vous avez besoin de biblioth\u00e8ques suppl\u00e9mentaires, vous pouvez les mettre dans le dossier racine du plugin et y acc\u00e9der en les pr\u00e9fixant avec votre ID de plugin. Voici un exemple de fichier nomm\u00e9 mylibrary.lua :</p> <pre><code>local _M = {}\n\n_M.dummy = function ()\n    return \"dummy\"\nend\n\nreturn _M\n</code></pre> <p>Et voici comment vous pouvez l'utiliser \u00e0 partir du fichier myplugin.lua :</p> <pre><code>local mylibrary = require \"myplugin.mylibrary\"\n\n...\n\nmylibrary.dummy()\n\n...\n</code></pre>"},{"location":"fr/plugins/#aides","title":"Aides","text":"<p>Certains modules d'aide fournissent des aides utiles courantes :</p> <ul> <li><code>self.variables</code> : permet d'acc\u00e9der et de stocker les attributs des plugins</li> <li><code>self.logger</code> : journaux d'impression</li> <li><code>bunkerweb.utils</code> : diverses fonctions utiles</li> <li><code>bunkerweb.datastore</code> : acc\u00e9der aux donn\u00e9es globales partag\u00e9es sur une instance (magasin de cl\u00e9s/valeurs)</li> <li><code>bunkerweb.clusterstore</code> : acc\u00e9der \u00e0 un magasin de donn\u00e9es Redis partag\u00e9 entre les instances de BunkerWeb (magasin cl\u00e9/valeur)</li> </ul> <p>Pour acc\u00e9der aux fonctions, il faut d'abord demander les modules :</p> <pre><code>local utils       = require \"bunkerweb.utils\"\nlocal datastore   = require \"bunkerweb.datastore\"\nlocal clustestore = require \"bunkerweb.clustertore\"\n</code></pre> <p>R\u00e9cup\u00e9rer une valeur de r\u00e9glage :</p> <pre><code>local myvar = self.variables[\"DUMMY_SETTING\"]\nif not myvar then\n    self.logger:log(ngx.ERR, \"can't retrieve setting DUMMY_SETTING\")\nelse\n    self.logger:log(ngx.NOTICE, \"DUMMY_SETTING = \" .. value)\nend\n</code></pre> <p>Stockez quelque chose dans le cache local :</p> <pre><code>local ok, err = self.datastore:set(\"plugin_myplugin_something\", \"somevalue\")\nif not ok then\n    self.logger:log(ngx.ERR, \"can't save plugin_myplugin_something into datastore : \" .. err)\nelse\n    self.logger:log(ngx.NOTICE, \"successfully saved plugin_myplugin_something into datastore\")\nend\n</code></pre> <p>V\u00e9rifiez si une adresse IP est globale :</p> <pre><code>local ret, err = utils.ip_is_global(ngx.ctx.bw.remote_addr)\nif ret == nil then\n    self.logger:log(ngx.ERR, \"error while checking if IP \" .. ngx.ctx.bw.remote_addr .. \" is global or not : \" .. err)\nelseif not ret then\n    self.logger:log(ngx.NOTICE, \"IP \" .. ngx.ctx.bw.remote_addr .. \" is not global\")\nelse\n    self.logger:log(ngx.NOTICE, \"IP \" .. ngx.ctx.bw.remote_addr .. \" is global\")\nend\n</code></pre> <p>Plus d'exemples</p> <p>Si vous souhaitez voir la liste compl\u00e8te des fonctions disponibles, vous pouvez consulter les fichiers pr\u00e9sents dans le r\u00e9pertoire lua du d\u00e9p\u00f4t.</p>"},{"location":"fr/plugins/#emplois","title":"Emplois","text":"<p>BunkerWeb utilise un planificateur de t\u00e2ches interne pour des t\u00e2ches p\u00e9riodiques telles que le renouvellement des certificats avec certbot, le t\u00e9l\u00e9chargement de listes noires, le t\u00e9l\u00e9chargement de fichiers MMDB, ... Vous pouvez ajouter des t\u00e2ches de votre choix en les pla\u00e7ant dans un sous-dossier nomm\u00e9 t\u00e2ches et en les r\u00e9pertoriant dans le  fichier de m\u00e9tadonn\u00e9es plugin.json. N'oubliez pas d'ajouter les permissions d'ex\u00e9cution pour tout le monde afin d'\u00e9viter tout probl\u00e8me lorsqu'un utilisateur clone et installe votre plugin.</p>"},{"location":"fr/plugins/#page-du-plugin","title":"Page du plugin","text":"<p>Tout ce qui concerne l'interface utilisateur web se trouve dans le sous-dossier ui comme nous l'avons vu dans la section pr\u00e9c\u00e9dente sur la structure..</p>"},{"location":"fr/plugins/#conditions-prealables","title":"Conditions pr\u00e9alables","text":"<p>Lorsque vous souhaitez cr\u00e9er une page de plugin, vous avez besoin de deux fichiers :</p> <ul> <li> <p>template.html qui seront accessibles avec un GET /plugins/&lt;plugin_id&gt;.</p> </li> <li> <p>actions.py o\u00f9 vous pouvez ajouter des scripts et de la logique avec un POST /plugins/&lt;plugin_id&gt;. Notez que ce fichier a besoin d'une fonction portant le m\u00eame nom que le plugin pour fonctionner. Ce fichier est n\u00e9cessaire m\u00eame si la fonction est vide.</p> </li> </ul>"},{"location":"fr/plugins/#exemple-de-base","title":"Exemple de base","text":"<p>Mod\u00e8le Jinja 2</p> <p>Le  fichier template.html est un mod\u00e8le Jinja2, veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation Jinja2 si n\u00e9cessaire.</p> <p>Nous pouvons mettre de c\u00f4t\u00e9 le ** fichier actions.py et commencer \u00e0 utiliser uniquement le mod\u00e8le dans une situation GET**. Le mod\u00e8le peut acc\u00e9der au contexte de l'application et aux libs, ce qui vous permet d'utiliser les utilitaires Jinja, request ou flask.</p> <p>Par exemple, vous pouvez obtenir les arguments de requ\u00eate dans votre mod\u00e8le comme ceci :</p> <pre><code>&lt;p&gt;request args : {{ request.args.get() }}.&lt;/p&gt;\n</code></pre>"},{"location":"fr/plugins/#actionspy","title":"Actions.py","text":"<p>Jeton CSRF</p> <p>Please note that every form submission is protected via a CSRF token, you will need to include the following snippet into your forms : <pre><code>&lt;input type=\"hidden\" name=\"csrf_token\" value=\"{{ csrf_token() }}\" /&gt;\n</code></pre></p> <p>Vous pouvez alimenter votre page de plugin avec des scripts suppl\u00e9mentaires avec le ** fichier actions.py lors de l  'envoi d'un POST /plugins/&lt;plugin_id&gt;**.</p> <p>Vous avez deux fonctions par d\u00e9faut dans actions.py :</p> <p>pre_render fonction</p> <p>Cela vous permet de r\u00e9cup\u00e9rer les donn\u00e9es lorsque vous OBTENEZ le mod\u00e8le, et d'utiliser les donn\u00e9es avec la variable pre_render disponible dans Jinja pour afficher le contenu de mani\u00e8re plus dynamique.</p> <pre><code>def pre_render(**kwargs)\n  return &lt;pre_render_data&gt;\n</code></pre> <p>BunkerWeb vous enverra ce type de r\u00e9ponse :</p> <pre><code>return jsonify({\"status\": \"ok|ko\", \"code\" : XXX, \"data\": &lt;pre_render_data&gt;}), 200\n</code></pre> <p>Fonction &lt;plugin_id&gt;</p> <p>Cela vous permet de r\u00e9cup\u00e9rer des donn\u00e9es lorsque vous effectuez un POST \u00e0 partir du point de terminaison du mod\u00e8le, qui doit \u00eatre utilis\u00e9 dans AJAX.</p> <pre><code>def myplugin(**kwargs)\n  return &lt;plugin_id_data&gt;\n</code></pre> <p>BunkerWeb vous enverra ce type de r\u00e9ponse :</p> <pre><code>return jsonify({\"message\": \"ok\", \"data\": &lt;plugin_id_data&gt;}), 200\n</code></pre> <p>Ce \u00e0 quoi vous pouvez acc\u00e9der \u00e0 partir de action.py</p> <p>Voici les arguments qui sont pass\u00e9s et auxquels on acc\u00e8de sur action.py fonctions :</p> <pre><code>function(app=app, args=request.args.to_dict() or request.json or None)\n</code></pre> <p>Biblioth\u00e8ques Python Disponibles</p> <p>L'interface utilisateur Web de BunkerWeb inclut un ensemble de biblioth\u00e8ques Python pr\u00e9install\u00e9es que vous pouvez utiliser dans le fichier <code>actions.py</code> de votre plugin ou d'autres scripts li\u00e9s \u00e0 l'interface utilisateur. Elles sont disponibles pr\u00eates \u00e0 l'emploi sans n\u00e9cessiter d'installations suppl\u00e9mentaires.</p> <p>Voici la liste compl\u00e8te des biblioth\u00e8ques incluses :</p> <ul> <li>bcrypt - Biblioth\u00e8que de hachage de mots de passe</li> <li>biscuit-python - Jetons d'authentification Biscuit</li> <li>certbot - Client ACME pour Let's Encrypt</li> <li>Flask - Framework web</li> <li>Flask-Login - Gestion des sessions utilisateur</li> <li>Flask-Session[cachelib] - Stockage des sessions c\u00f4t\u00e9 serveur</li> <li>Flask-WTF - Gestion des formulaires et protection CSRF</li> <li>gunicorn[gthread] - Serveur HTTP WSGI</li> <li>pillow - Traitement d'images</li> <li>psutil - Utilitaires syst\u00e8me et processus</li> <li>python_dateutil - Utilitaires de date et heure</li> <li>qrcode - G\u00e9n\u00e9ration de codes QR</li> <li>regex - Expressions r\u00e9guli\u00e8res avanc\u00e9es</li> <li>urllib3 - Client HTTP</li> <li>user_agents - Analyse des agents utilisateur</li> </ul> <p>Utilisation des Biblioth\u00e8ques dans Votre Plugin</p> <p>Pour importer et utiliser ces biblioth\u00e8ques dans votre fichier <code>actions.py</code>, utilisez simplement l'instruction <code>import</code> standard de Python. Par exemple :</p> <pre><code>from flask import request\nimport bcrypt\n</code></pre> Biblioth\u00e8ques Externes <p>Si vous avez besoin de biblioth\u00e8ques non list\u00e9es ci-dessus, installez-les dans le dossier <code>ui</code> de votre plugin et importez-les en utilisant la directive <code>import</code> classique. Assurez-vous de la compatibilit\u00e9 avec l'environnement existant pour \u00e9viter les conflits.</p> <p>Quelques exemples</p> <ul> <li>R\u00e9cup\u00e9rer les donn\u00e9es soumises par le formulaire</li> </ul> <pre><code>from flask import request\n\ndef myplugin(**kwargs) :\n    my_form_value = request.form[\"my_form_input\"]\n  return my_form_value\n</code></pre> <ul> <li>Acc\u00e9der \u00e0 la configuration de l'application</li> </ul> <p>action.py <pre><code>from flask import request\n\ndef pre_render(**kwargs) :\n    config = kwargs['app'].config[\"CONFIG\"].get_config(methods=False)\n  return config\n</code></pre></p> <p>mod\u00e8le <pre><code>&lt;!-- metadata + config --&gt;\n&lt;div&gt;{{ pre_render }}&lt;/div&gt;\n</code></pre></p>"},{"location":"fr/plugins/#hookspy","title":"Hooks.py","text":"<p>Cette documentation d\u00e9crit les hooks de cycle de vie utilis\u00e9s pour g\u00e9rer les diff\u00e9rentes \u00e9tapes d'une demande au sein de l'application. Chaque crochet est associ\u00e9 \u00e0 une phase sp\u00e9cifique.</p> before_requestafter_requestteardown_requestcontext_processor <p>Ces hooks sont ex\u00e9cut\u00e9s avant le traitement d'une requ\u00eate entrante. Ils sont g\u00e9n\u00e9ralement utilis\u00e9s pour des t\u00e2ches de pr\u00e9traitement telles que l'authentification, la validation ou la journalisation.</p> <p>Si le hook retourne un objet de r\u00e9ponse, Flask ignorera le traitement de la requ\u00eate et retournera la r\u00e9ponse directement. Cela peut \u00eatre utile pour court-circuiter le pipeline de traitement des requ\u00eates.</p> <p>Exemple :</p> <pre><code>from flask import request, Response\n\ndef before_request():\n    print(\"Before-request: Validating request...\", flush=True)\n    # Perform authentication, validation, or logging here\n    if not is_valid_request(request): # We are in the app context\n        return Response(\"Invalid request!\", status=400)\n\ndef is_valid_request(request):\n    # Dummy validation logic\n    return \"user\" in request\n</code></pre> <p>Ces hooks qui s'ex\u00e9cutent apr\u00e8s le traitement de la requ\u00eate. Ils sont id\u00e9aux pour les t\u00e2ches de post-traitement telles que le nettoyage, la journalisation suppl\u00e9mentaire ou la modification de la r\u00e9ponse avant qu'elle ne soit renvoy\u00e9e.</p> <p>Ils re\u00e7oivent l'objet de r\u00e9ponse en tant qu'argument et peuvent le modifier avant de le retourner. Le premier crochet after_request qui retourne une r\u00e9ponse sera utilis\u00e9 comme r\u00e9ponse finale.</p> <p>Exemple :</p> <pre><code>from flask import request\n\ndef after_request(response):\n    print(\"After-request: Logging response...\", flush=True)\n    # Perform logging, cleanup, or response modifications here\n    log_response(response)\n    return response\n\ndef log_response(response):\n    # Dummy logging logic\n    print(\"Response logged:\", response, flush=True)\n</code></pre> <p>Ces hooks sont invoqu\u00e9s lorsque le contexte de la requ\u00eate est en cours de destruction. Ces hooks sont utilis\u00e9s pour lib\u00e9rer des ressources ou g\u00e9rer les erreurs qui se sont produites au cours du cycle de vie de la demande.</p> <p>Exemple:</p> <pre><code>def teardown_request(error=None):\n    print(\"Teardown-request: Cleaning up resources...\", flush=True)\n    # Perform cleanup, release resources, or handle errors here\n    if error:\n        handle_error(error)\n    cleanup_resources()\n\ndef handle_error(error):\n    # Dummy error handling logic\n    print(\"Error encountered:\", error, flush=True)\n\ndef cleanup_resources():\n    # Dummy resource cleanup logic\n    print(\"Resources have been cleaned up.\", flush=True)\n</code></pre> <p>Ces points d'entr\u00e9e sont utilis\u00e9s pour injecter du contexte suppl\u00e9mentaire dans des mod\u00e8les ou des vues. Ils enrichissent le contexte d'ex\u00e9cution en transmettant des donn\u00e9es courantes (telles que des informations sur l'utilisateur ou des param\u00e8tres de configuration) aux mod\u00e8les.</p> <p>Si un processeur de contexte retourne un dictionnaire, les cl\u00e9s et les valeurs seront ajout\u00e9es au contexte pour tous les mod\u00e8les. Cela permet de partager des donn\u00e9es entre plusieurs vues ou mod\u00e8les.</p> <p>Exemple :</p> <pre><code>def context_processor() -&gt; dict:\n    print(\"Context-processor: Injecting context data...\", flush=True)\n    # Return a dictionary containing context data for templates/views\n    return {\n        \"current_user\": \"John Doe\",\n        \"app_version\": \"1.0.0\",\n        \"feature_flags\": {\"new_ui\": True}\n    }\n</code></pre> <p>Cette conception de crochet de cycle de vie offre une approche modulaire et syst\u00e9matique de la gestion de divers aspects du cycle de vie d'une demande :</p> <ul> <li>Modularit\u00e9 : Chaque crochet est responsable d'une phase distincte, ce qui permet de s\u00e9parer les pr\u00e9occupations.</li> <li>Maintenabilit\u00e9 : les d\u00e9veloppeurs peuvent facilement ajouter, modifier ou supprimer des impl\u00e9mentations de hooks sans affecter les autres parties du cycle de vie de la requ\u00eate.</li> <li>Extensibilit\u00e9 : le cadre est flexible, ce qui permet d'ajouter des crochets ou d'apporter des am\u00e9liorations \u00e0 mesure que les exigences de l'application \u00e9voluent.</li> </ul> <p>En d\u00e9finissant clairement les responsabilit\u00e9s de chaque hook et leurs pr\u00e9fixes de journalisation associ\u00e9s, le syst\u00e8me garantit que chaque \u00e9tape du traitement des requ\u00eates est transparente et g\u00e9rable.</p>"},{"location":"fr/plugins/#plans","title":"Plans","text":"<p>Dans Flask, les blueprints servent de moyen modulaire pour organiser les composants associ\u00e9s, tels que les vues, les mod\u00e8les et les fichiers statiques, au sein de votre application. Ils vous permettent de regrouper logiquement les fonctionnalit\u00e9s et peuvent \u00eatre utilis\u00e9s pour cr\u00e9er de nouvelles sections de votre application ou remplacer celles existantes.</p>"},{"location":"fr/plugins/#creation-dun-blueprint","title":"Cr\u00e9ation d'un Blueprint","text":"<p>Pour d\u00e9finir un blueprint, vous devez cr\u00e9er une instance de la <code>Blueprint</code> classe, en sp\u00e9cifiant son nom et son chemin d'importation. Vous d\u00e9finissez ensuite les itin\u00e9raires et les vues associ\u00e9s \u00e0 ce blueprint.</p> <p>Exemple : D\u00e9finition d'un nouveau blueprint</p> <pre><code>from os.path import dirname\nfrom flask import Blueprint, render_template\n\n# Define the blueprint\nmy_blueprint = Blueprint('my_blueprint', __name__, template_folder=dirname(__file__) + '/templates') # The template_folder is set to avoid conflicts with the original blueprint\n\n# Define a route within the blueprint\n@my_blueprint.route('/my_blueprint')\ndef my_blueprint_page():\n    return render_template('my_blueprint.html')\n</code></pre> <p>Dans cet exemple, un blueprint nomm\u00e9 <code>my_blueprint</code> est cr\u00e9\u00e9 et un itin\u00e9raire <code>/my_blueprint</code> est d\u00e9fini \u00e0 l'int\u00e9rieur de celui-ci.</p>"},{"location":"fr/plugins/#remplacement-dun-blueprint-existant","title":"Remplacement d'un blueprint existant","text":"<p>Les Blueprints peuvent \u00e9galement remplacer les Blueprints existants pour modifier ou \u00e9tendre les fonctionnalit\u00e9s. Pour ce faire, assurez-vous que le nouveau blueprint porte le m\u00eame nom que celui que vous remplacez et enregistrez-le apr\u00e8s l'original.</p> <p>Exemple : Remplacement d'un blueprint existant</p> <pre><code>from os.path import dirname\nfrom flask import Flask, Blueprint\n\n# Original blueprint\ninstances = Blueprint('instances', __name__, template_folder=dirname(__file__) + '/templates') # The template_folder is set to avoid conflicts with the original blueprint\n\n@instances.route('/instances')\ndef override_instances():\n    return \"My new instances page\"\n</code></pre> <p>Dans ce sc\u00e9nario, l'acc\u00e8s \u00e0 l'URL <code>/instances</code> affiche \"Ma nouvelle page d'instances\", car le <code>instances</code> blueprint, enregistr\u00e9 en dernier, remplace le blueprint d'origine <code>instances</code> .</p> <p>\u00c0 propos de la d\u00e9rogation</p> <p>Soyez prudent lorsque vous remplacez des blueprints existants, car cela peut avoir un impact sur le comportement de l'application. Assurez-vous que les modifications sont conformes aux exigences de l'application et n'introduisent pas d'effets secondaires inattendus.</p> <p>Toutes les routes existantes seront supprim\u00e9es du blueprint original, vous devrez donc les r\u00e9impl\u00e9menter si n\u00e9cessaire.</p>"},{"location":"fr/plugins/#conventions-de-nommage","title":"Conventions de nommage","text":"<p>Important</p> <p>Assurez-vous que le nom du blueprint correspond au nom de la variable de blueprint, sinon il ne sera pas consid\u00e9r\u00e9 comme un blueprint valide et ne sera pas enregistr\u00e9.</p> <p>Pour plus de coh\u00e9rence et de clart\u00e9, il est conseill\u00e9 de suivre les conventions de nommage suivantes :</p> <ul> <li> <p>Noms de blueprint: utilisez des noms courts et tout en minuscules. Des traits de soulignement peuvent \u00eatre utilis\u00e9s pour la lisibilit\u00e9, par exemple, <code>user_auth</code>.</p> </li> <li> <p>Noms de fichiers: faites correspondre le nom de fichier au nom du blueprint, en vous assurant qu'il est enti\u00e8rement en minuscules avec des traits de soulignement si n\u00e9cessaire, par exemple, <code>user_auth.py</code>.</p> </li> </ul> <p>Cette pratique s'aligne sur les conventions de nommage des modules de Python et permet de maintenir une structure de projet claire.</p> <p>Exemple : Blueprint et nommage de fichier</p> <pre><code>plugin /\n    ui / blueprints / user_auth.py\n                      templates / user_auth.html\n</code></pre> <p>Dans cette structure, <code>user_auth.py</code> contient le <code>user_auth</code> blueprint et <code>user_auth.html</code> est le mod\u00e8le associ\u00e9, en respectant les conventions de nommage recommand\u00e9es.</p>"},{"location":"fr/professional-services/","title":"Services professionnels","text":""},{"location":"fr/professional-services/#pourquoi-devrais-je-obtenir-des-services-professionnels","title":"Pourquoi devrais-je obtenir des services professionnels ?","text":"<p>\u00c9tant donn\u00e9 que BunkerWeb est un logiciel libre (comme en libert\u00e9), vous avez le droit de l'utiliser librement tant que vous respectez la licence AGPLv3.</p> <p>Vous pouvez \u00e9galement mettre \u00e0 niveau BunkerWeb vers la version PRO \u00e0 tout moment. Ce faisant, vous b\u00e9n\u00e9ficierez d'une exp\u00e9rience am\u00e9lior\u00e9e pour vous aider dans la s\u00e9curit\u00e9 de vos services Web. Notre objectif est de vous aider \u00e0 vous concentrer sur les besoins de votre entreprise. La version PRO est mise \u00e0 jour r\u00e9guli\u00e8rement et nous faisons de notre mieux pour recueillir les commentaires des entreprises afin d'inclure les fonctionnalit\u00e9s n\u00e9cessaires.</p> <p>Mais consacrer du temps \u00e0 une technologie sp\u00e9cifique peut ne pas \u00eatre facile en fonction des priorit\u00e9s de votre entreprise. Sans compter que la cybers\u00e9curit\u00e9 est un domaine complexe o\u00f9 il n'est pas recommand\u00e9 d'\u00eatre \u00e0 la fois juge et jury.</p> <p>Obtenir des services professionnels en plus de la version open-source ou PRO est la solution id\u00e9ale pour couvrir les besoins de votre entreprise. Vous pouvez vous concentrer sur vos principales priorit\u00e9s et compter sur un partenaire de confiance en mati\u00e8re de s\u00e9curit\u00e9 Web.</p> <p>Veuillez noter que les services professionnels sont directement offerts par Bunkerity, la soci\u00e9t\u00e9 qui g\u00e8re le projet BunkerWeb, par le biais de notre  plateforme en ligne BunkerWeb Panel.</p>"},{"location":"fr/professional-services/#quels-services-professionnels-offrez-vous","title":"Quels services professionnels offrez-vous\u00a0?","text":"<p>Nous proposons un support technique et des conseils autour de la solution BunkerWeb. En faisant appel \u00e0 ce service, nous vous assisterons sur les probl\u00e8mes techniques (installation, configuration, faux positif, ...). Nous pouvons \u00e9galement proposer des SLA personnalis\u00e9s en fonction de vos besoins.</p> <p>En fonction de vos besoins, vous avez le choix entre des offres \u00ab one time \u00bb et des offres d'abonnement.</p>"},{"location":"fr/professional-services/#comment-puis-je-obtenir-plus-dinformations","title":"Comment puis-je obtenir plus d'informations\u00a0?","text":"<p>Vous trouverez plus d'informations en visitant le BunkerWeb Panel, notre plateforme d\u00e9di\u00e9e aux services professionnels.</p> <p>N'h\u00e9sitez pas \u00e0 nous contacter si vous avez des questions, nous serons plus qu'heureux de r\u00e9pondre \u00e0 vos besoins.</p>"},{"location":"fr/quickstart-guide/","title":"Guide de d\u00e9marrage rapide","text":"<p>Pr\u00e9requis</p> <p>Nous supposons que vous connaissez d\u00e9j\u00e0 les concepts de base et que vous avez suivi les instructions d'int\u00e9gration pour votre environnement.</p> <p>Ce guide de d\u00e9marrage rapide suppose que BunkerWeb est accessible depuis Internet et que vous avez configur\u00e9 au moins deux domaines : un pour l'interface Web et un pour votre service web.</p> <p>Exigences syst\u00e8me</p> <p>Les sp\u00e9cifications minimales recommand\u00e9es pour BunkerWeb sont une machine avec 2 (v)CPU et 8 Go de RAM. Notez que cela suffit g\u00e9n\u00e9ralement pour des environnements de test ou des d\u00e9ploiements avec tr\u00e8s peu de services.</p> <p>Pour des environnements de production avec de nombreux services \u00e0 prot\u00e9ger, nous recommandons au moins 4 (v)CPU et 16 Go de RAM. Ajustez les ressources en fonction de votre cas d'utilisation, du trafic r\u00e9seau et des \u00e9ventuelles attaques DDoS que vous pourriez subir.</p> <p>Il est fortement recommand\u00e9 d'activer le chargement global des r\u00e8gles CRS (en d\u00e9finissant le param\u00e8tre <code>USE_MODSECURITY_GLOBAL_CRS</code> sur <code>yes</code>) si vous \u00eates dans des environnements \u00e0 RAM limit\u00e9e ou en production avec de nombreux services. Plus de d\u00e9tails sont disponibles dans la section utilisations avanc\u00e9es de la documentation.</p> <p>Ce guide de d\u00e9marrage rapide vous aidera \u00e0 installer rapidement BunkerWeb et \u00e0 s\u00e9curiser un service Web \u00e0 l'aide de l'interface utilisateur Web.</p> <p>Prot\u00e9ger les applications web existantes d\u00e9j\u00e0 accessibles avec le protocole HTTP(S) est l'objectif principal de BunkerWeb : il agira comme un proxy inverse classique avec des fonctionnalit\u00e9s de s\u00e9curit\u00e9 suppl\u00e9mentaires.</p> <p>Consultez le dossier examples du d\u00e9p\u00f4t pour obtenir des exemples concrets.</p>"},{"location":"fr/quickstart-guide/#configuration-de-base","title":"Configuration de base","text":"Tout-en-unLinuxDockerDocker autoconfKubernetesSwarm <p>Pour d\u00e9ployer le conteneur tout-en-un, ex\u00e9cutez la commande suivante :</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Par d\u00e9faut, le conteneur expose :</p> <ul> <li>8080/tcp pour HTTP</li> <li>8443/tcp pour HTTPS</li> <li>8443/udp pour QUIC</li> <li>7000/tcp pour l'acc\u00e8s \u00e0 l'interface utilisateur web sans BunkerWeb en fa\u00e7ade (non recommand\u00e9 en production)</li> </ul> <p>L'image tout-en-un inclut plusieurs services int\u00e9gr\u00e9s, contr\u00f4lables via des variables d'environnement. Pour plus d'informations, consultez la section Image tout-en-un (AIO) de la page des int\u00e9grations.</p> <p>Utilisez le script d'installation Easy Install pour configurer BunkerWeb sur les distributions Linux prises en charge. Il installe et configure automatiquement NGINX, ajoute le d\u00e9p\u00f4t BunkerWeb et met en place les services requis.</p> <pre><code># Download the script and its checksum\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Verify the checksum\nsha256sum -c install-bunkerweb.sh.sha256\n\n# If the check is successful, run the script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Avis de s\u00e9curit\u00e9</p> <p>V\u00e9rifiez toujours l'int\u00e9grit\u00e9 du script avec la somme de contr\u00f4le fournie avant de l'ex\u00e9cuter.</p> <p>Pour des m\u00e9thodes d'installation avanc\u00e9es (gestionnaire de paquets, types d'installation, options non interactives, int\u00e9gration CrowdSec, etc.), consultez l'int\u00e9gration Linux.</p> <p>Voici le fichier docker-compose complet que vous pouvez utiliser\u00a0; veuillez noter que nous connecterons ult\u00e9rieurement le service web au r\u00e9seau <code>bw-services</code> :</p> <pre><code>x-bw-env: &amp;bw-env\n  # We use an anchor to avoid repeating the same settings for both services\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n  # Optionnel : d\u00e9finir un jeton API et le refl\u00e9ter dans les deux conteneurs\n  API_TOKEN: \"\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    # This is the name that will be used to identify the instance in the Scheduler\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    environment:\n      &lt;&lt;: *bw-env # We use the anchor to avoid repeating the same settings for all services\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # Change it if needed\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Redis service for the persistence of reports/bans/stats\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Voici le fichier docker-compose complet que vous pouvez utiliser ; veuillez noter que nous connecterons ult\u00e9rieurement le service web au r\u00e9seau <code>bw-services</code> :</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # We anchor the environment variables to avoid duplication\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # We set the instance label to allow the autoconf to detect the instance\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # Change it if needed\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Redis service for the persistence of reports/bans/stats\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>La m\u00e9thode recommand\u00e9e pour installer Kubernetes est d'utiliser le chart Helm disponible \u00e0 l'adresse <code>https://repo.bunkerweb.io/charts</code> :</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>Vous pouvez ensuite utiliser le chart Helm <code>bunkerweb</code> depuis ce d\u00e9p\u00f4t :</p> <pre><code>helm install mybw bunkerweb/bunkerweb --namespace bunkerweb --create-namespace\n</code></pre> <p>Une fois install\u00e9, vous pouvez obtenir l'adresse IP du <code>LoadBalancer</code> pour configurer vos domaines :</p> <pre><code>kubectl -n bunkerweb get svc mybw-external -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>D\u00e9pr\u00e9ci\u00e9e</p> <p>L'int\u00e9gration Swarm est d\u00e9pr\u00e9ci\u00e9e et sera supprim\u00e9e dans une prochaine version. Veuillez envisager d'utiliser plut\u00f4t l'int\u00e9gration Kubernetes.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Voici le fichier stack docker-compose complet que vous pouvez utiliser\u00a0; veuillez noter que nous connecterons ult\u00e9rieurement le service web au r\u00e9seau <code>bw-services</code>\u00a0:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # We anchor the environment variables to avoid duplication\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # For QUIC / HTTP3 support\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n      UI_HOST: \"http://bw-ui:7000\" # Change it if needed\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"fr/quickstart-guide/#terminer-lassistant-de-configuration","title":"Terminer l'assistant de configuration","text":"<p>Acc\u00e8s \u00e0 l'assistant de configuration</p> <p>You can access the setup wizard by browsing the <code>https://your-fqdn-or-ip-addresss/setup</code> URI of your server.</p>"},{"location":"fr/quickstart-guide/#creer-un-compte-administrateur","title":"Cr\u00e9er un compte administrateur","text":"<p>Vous devriez voir une page de configuration comme celle-ci :</p> <p> </p> Page d'accueil de l'assistant de configuration <p>Une fois que vous \u00eates sur la page de configuration, vous pouvez entrer le nom d'utilisateur, l'adresse e-mail et le mot de passe de l'administrateur et cliquer sur le bouton \"Suivant\".</p>"},{"location":"fr/quickstart-guide/#configurer-le-proxy-inverse-https-et-dautres-parametres-avances","title":"Configurer le proxy inverse, HTTPS et d'autres param\u00e8tres avanc\u00e9s","text":"Configuration de baseConfiguration avanc\u00e9e <p>La prochaine \u00e9tape vous demandera de saisir le nom du serveur (domaine/FQDN) que l'interface web utilisera.</p> <p>Vous pouvez \u00e9galement choisir d'activer Let's Encrypt.</p> <p> Assistant d'installation \u00e9tape 2 </p> <p>L'\u00e9tape suivante vous demandera de saisir le nom du serveur (domaine/FQDN) que l'interface web utilisera.</p> <p>Vous pouvez \u00e9galement choisir d'activer Let's Encrypt.</p> <p>Si vous d\u00e9veloppez la section <code>Param\u00e8tres avanc\u00e9s</code>, vous pouvez aussi configurer les options suivantes :</p> <ul> <li>Proxy inverse : ajustez les param\u00e8tres du proxy inverse pour l'interface d'administration (par exemple, si vous souhaitez utiliser un chemin personnalis\u00e9).</li> <li>IP r\u00e9elle : configurez les param\u00e8tres d'IP r\u00e9elle pour identifier correctement l'adresse IP du client (par exemple, si vous \u00eates derri\u00e8re un \u00e9quilibreur de charge ou un CDN).</li> <li>Certificat personnalis\u00e9 : t\u00e9l\u00e9versez un certificat TLS personnalis\u00e9 si vous ne souhaitez pas utiliser Let's Encrypt.</li> </ul> <p> Assistant d'installation \u00e9tape 2 (avanc\u00e9) </p>"},{"location":"fr/quickstart-guide/#activation-pro","title":"Activation PRO","text":"<p>Si vous avez une licence PRO, vous pouvez l'activer en saisissant votre cl\u00e9 de licence dans la <code>Upgrade to PRO</code> section. Cela activera les fonctionnalit\u00e9s PRO de BunkerWeb.</p> <p> </p> \u00c9tape de l'assistant d'installation PRO"},{"location":"fr/quickstart-guide/#vue-densemble-de-vos-parametres","title":"Vue d'ensemble de vos param\u00e8tres","text":"<p>La derni\u00e8re \u00e9tape vous donnera un aper\u00e7u des param\u00e8tres que vous avez saisis. Vous pouvez cliquer sur le bouton \"Configurer\" pour terminer la configuration.</p> <p> </p> \u00c9tape finale de l'assistant d'installation"},{"location":"fr/quickstart-guide/#acces-a-linterface-web","title":"Acc\u00e8s \u00e0 l'interface web","text":"<p>Vous pouvez maintenant acc\u00e9der \u00e0 l'interface Web en acc\u00e9dant au domaine que vous avez configur\u00e9 \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente et \u00e0 l'URI si vous l'avez modifi\u00e9 (par d\u00e9faut ). <code>https://your-domain/</code></p> <p> </p> Page de connexion de l'interface web <p>Vous pouvez maintenant vous connecter avec le compte administrateur que vous avez cr\u00e9\u00e9 lors de l'assistant d'installation.</p> <p> </p> Accueil de l'interface Web"},{"location":"fr/quickstart-guide/#creation-dun-nouveau-service","title":"Cr\u00e9ation d'un nouveau service","text":"Interface utilisateur WebTout-en-unFichier Linux variables.envDocker\u00c9tiquettes Docker autoconfAnnotations Kubernetes\u00c9tiquettes Swarm <p>Vous pouvez cr\u00e9er un nouveau service en vous rendant dans la section <code>Services</code> de l'interface web et en cliquant sur le bouton <code>\u2795 Cr\u00e9er un nouveau Service</code>.</p> <p>Plusieurs fa\u00e7ons existent pour cr\u00e9er un service via l'interface web :</p> <ul> <li>Le mode facile vous guidera tout au long du processus de cr\u00e9ation d'un nouveau service.</li> <li>Le mode avanc\u00e9 vous permettra de configurer le service avec davantage d'options.</li> <li>Le mode Brut vous permettra de saisir directement la configuration, comme si vous \u00e9ditiez le fichier <code>variables.env</code>.</li> </ul> <p>Service brouillon</p> <p>Vous pouvez cr\u00e9er un service brouillon pour enregistrer vos progr\u00e8s et y revenir plus tard. Il suffit de cliquer sur le bouton <code>\ud83c\udf10 En Ligne</code> pour basculer le service en mode brouillon.</p> Mode facileMode avanc\u00e9Mode brut <p>Dans ce mode, vous pouvez choisir parmi les mod\u00e8les disponibles et remplir les champs obligatoires.</p> <p> Interface web \u2014 cr\u00e9ation de service (mode facile) </p> <ul> <li>Une fois que vous avez s\u00e9lectionn\u00e9 le mod\u00e8le, vous pouvez remplir les champs obligatoires et suivre les instructions pour cr\u00e9er le service.</li> <li>Une fois que vous avez termin\u00e9 de configurer le service, vous pouvez cliquer sur le <code>\ud83d\udcbe Enregistrer</code> bouton pour enregistrer la configuration.</li> </ul> <p>Dans ce mode, vous pouvez configurer le service avec davantage d'options tout en visualisant tous les param\u00e8tres disponibles de l'ensemble des plugins.</p> <p> Interface web \u2014 cr\u00e9ation de service (mode avanc\u00e9) </p> <ul> <li>Pour naviguer entre les diff\u00e9rents plugins, vous pouvez utiliser le menu de navigation sur le c\u00f4t\u00e9 gauche de la page.</li> <li>Chaque param\u00e8tre comporte une petite information qui vous aidera \u00e0 comprendre ce qu'il fait.</li> <li>Une fois que vous avez termin\u00e9 de configurer le service, vous pouvez cliquer sur le <code>\ud83d\udcbe Enregistrer</code> bouton pour enregistrer la configuration.</li> </ul> <p>Dans ce mode, vous pouvez saisir la configuration directement, comme si vous \u00e9ditiez le fichier <code>variables.env</code>.</p> <p> Interface web \u2014 cr\u00e9ation de service (mode brut) </p> <ul> <li>Une fois que vous avez termin\u00e9 de configurer le service, vous pouvez cliquer sur le bouton <code>\ud83d\udcbe Enregistrer</code> pour enregistrer la configuration.</li> </ul> <p>\ud83d\ude80 Une fois que vous avez enregistr\u00e9 la configuration, vous devriez voir votre nouveau service dans la liste des services.</p> <p> Page des services d'interface Web </p> <p>Si vous souhaitez modifier le service, vous pouvez cliquer sur le nom du service ou sur le bouton <code>\ud83d\udcdd Modifier</code>.</p> <p>Lors de l'utilisation de l'image Tout-en-un, les nouveaux services sont configur\u00e9s en ajoutant des variables d'environnement \u00e0 la commande docker run du conteneur bunkerweb-aio. Si le conteneur est d\u00e9j\u00e0 en cours d'ex\u00e9cution, vous devez l'arr\u00eater et le supprimer, puis le relancer avec les variables d'environnement mises \u00e0 jour.</p> <p>Supposons que vous souhaitiez prot\u00e9ger une application myapp (ex\u00e9cut\u00e9e dans un autre conteneur et accessible depuis BunkerWeb \u00e0 l'adresse http://myapp:8080) et la rendre disponible sur www.example.com. Vous devez ajouter ou modifier les variables d'environnement suivantes dans votre commande docker run :</p> <pre><code># First, stop and remove the existing container if it's running:\n# docker stop bunkerweb-aio\n# docker rm bunkerweb-aio\n\n# Then, re-run the bunkerweb-aio container with additional/updated environment variables:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  # --- Add/modify these environment variables for your new service ---\n  -e MULTISITE=yes \\\n  -e SERVER_NAME=\"www.example.com\" \\\n  -e \"www.example.com_USE_REVERSE_PROXY=yes\" \\\n  -e \"www.example.com_REVERSE_PROXY_HOST=http://myapp:8080\" \\\n  -e \"www.example.com_REVERSE_PROXY_URL=/\" \\\n  # --- Include any other existing environment variables for UI, Redis, CrowdSec, etc. ---\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Votre conteneur d'application (<code>myapp</code>) et le conteneur <code>bunkerweb-aio</code> doivent \u00eatre sur le m\u00eame r\u00e9seau Docker pour que BunkerWeb puisse y acc\u00e9der en utilisant le nom d'h\u00f4te <code>myapp</code>.</p> <p>Exemple de configuration r\u00e9seau : <pre><code># 1. Create a custom Docker network (if you haven't already):\ndocker network create my-app-network\n\n# 2. Run your application container on this network:\ndocker run -d --name myapp --network my-app-network your-app-image\n\n# 3. Add --network my-app-network to the bunkerweb-aio docker run command:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  --network my-app-network \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n#   ... (all other relevant environment variables as shown in the main example above) ...\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre></p> <p>Assurez-vous de remplacer <code>myapp</code> par le nom r\u00e9el ou l'adresse IP de votre conteneur d'application et <code>http://myapp:8080</code> par son adresse et son port corrects.</p> <p>Nous supposons que vous avez suivi la Configuration de base et que l'int\u00e9gration Linux est en cours d'ex\u00e9cution sur votre machine.</p> <p>Vous pouvez cr\u00e9er un nouveau service en modifiant le fichier <code>variables.env</code> situ\u00e9 dans le r\u00e9pertoire <code>/etc/bunkerweb/</code>.</p> <pre><code>nano /etc/bunkerweb/variables.env\n</code></pre> <p>Vous pouvez ensuite ajouter la configuration suivante\u00a0:</p> <pre><code>SERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/\nwww.example.com_REVERSE_PROXY_HOST=http://myapp:8080\n</code></pre> <p>Vous pouvez ensuite recharger le service <code>bunkerweb-scheduler</code> pour appliquer les modifications.</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Nous supposons que vous avez suivi la Configuration de base et que l'int\u00e9gration Docker fonctionne sur votre machine.</p> <p>Vous devez disposer d'un r\u00e9seau nomm\u00e9 <code>bw-services</code> afin de pouvoir connecter votre application existante et configurer BunkerWeb :</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Ensuite, vous pouvez ajouter manuellement le service dans le fichier docker compose que vous avez cr\u00e9\u00e9 \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente :</p> <pre><code>...\n\nservices:\n  ...\n  bw-scheduler:\n    ...\n    environment:\n      ...\n      SERVER_NAME: \"www.example.com\" # When using the Docker integration, you can set the configuration directly in the scheduler, make sure to set the correct domain name\n      MULTISITE: \"yes\" # Enable multisite mode so you can add multiple services\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://myapp:8080\"\n      ...\n</code></pre> <p>Vous pouvez ensuite red\u00e9marrer le service <code>bw-scheduler</code> pour appliquer les modifications.</p> <pre><code>docker compose down bw-scheduler &amp;&amp; docker compose up -d bw-scheduler\n</code></pre> <p>Nous supposons que vous avez suivi la Configuration de base et que l'int\u00e9gration Docker autoconf est en cours d'ex\u00e9cution sur votre machine.</p> <p>Vous devez disposer d'un r\u00e9seau nomm\u00e9 <code>bw-services</code> afin de pouvoir connecter votre application existante et configurer BunkerWeb \u00e0 l'aide d'\u00e9tiquettes :</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Cela cr\u00e9era automatiquement un nouveau service en utilisant les \u00e9tiquettes fournies comme configuration.</p> <p>Nous supposons que vous avez suivi la Configuration de base et que la stack Kubernetes est en cours d'ex\u00e9cution sur votre cluster.</p> <p>Supposons que vous disposiez d'un Deployment typique avec un Service pour acc\u00e9der \u00e0 l'application web depuis l'int\u00e9rieur du cluster :</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app\n  labels:\n    app: app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app\n  template:\n    metadata:\n      labels:\n        app: app\n    spec:\n      containers:\n      - name: app\n        image: nginxdemos/nginx-hello\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app\nspec:\n  selector:\n    app: app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre> <p>Voici la d\u00e9finition Ingress correspondante pour servir et prot\u00e9ger l'application web :</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  annotations:\n    bunkerweb.io/DUMMY_SETTING: \"value\"\nspec:\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n              name: svc-app\n              port:\n                number: 80\n</code></pre> <p>D\u00e9pr\u00e9ci\u00e9e</p> <p>L'int\u00e9gration Swarm est d\u00e9pr\u00e9ci\u00e9e et sera supprim\u00e9e dans une prochaine version. Veuillez envisager d'utiliser plut\u00f4t l'int\u00e9gration Kubernetes.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Nous supposons que vous avez suivi la Configuration de base et que la stack Swarm est en cours d'ex\u00e9cution sur votre cluster et connect\u00e9e \u00e0 un r\u00e9seau nomm\u00e9 <code>bw-services</code> afin de pouvoir connecter votre application existante et configurer BunkerWeb \u00e0 l'aide d'\u00e9tiquettes :</p> <pre><code>services:\n  myapp:\n    image: nginxdemos/nginx-hello\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"fr/quickstart-guide/#aller-plus-loin","title":"Aller plus loin","text":"<p>F\u00e9licitations! Vous venez d'installer BunkerWeb et de s\u00e9curiser votre premier service web. Veuillez noter que BunkerWeb offre beaucoup plus, tant en termes de s\u00e9curit\u00e9 que d'int\u00e9grations avec d'autres syst\u00e8mes et solutions. Voici une liste de ressources et d'actions qui peuvent vous aider \u00e0 continuer d'approfondir vos connaissances sur la solution :</p> <ul> <li>Rejoignez la communaut\u00e9 Bunker : Discord, LinkedIn, GitHub, X (anciennement Twitter)</li> <li>Consultez le blog officiel</li> <li>Explorez  des cas d'utilisation avanc\u00e9s dans la documentation</li> <li>Contactez-nous pour discuter des besoins de votre organisation</li> </ul>"},{"location":"fr/troubleshooting/","title":"D\u00e9pannage","text":"<p>BunkerWeb Panel</p> <p>Si vous n'\u00eates pas en mesure de r\u00e9soudre votre probl\u00e8me, vous pouvez nous contacter directement via notre panel. Celle-ci centralise toutes les demandes li\u00e9es \u00e0 la solution BunkerWeb.</p>"},{"location":"fr/troubleshooting/#journaux","title":"Journaux","text":"<p>Lors du d\u00e9pannage, les journaux sont vos meilleurs amis. Nous faisons de notre mieux pour fournir des journaux conviviaux pour vous aider \u00e0 comprendre ce qui se passe.</p> <p>Veuillez noter que vous pouvez d\u00e9finir <code>LOG_LEVEL</code> le sur <code>info</code> (par d\u00e9faut : <code>notice</code>) pour augmenter la verbosit\u00e9 de BunkerWeb.</p> <p>Voici comment vous pouvez acc\u00e9der aux logs, en fonction de votre int\u00e9gration :</p> DockerDocker autoconfTout-en-unSwarmKubernetesLinux <p>Lister les conteneurs</p> <p>Pour lister les conteneurs en cours d'ex\u00e9cution, vous pouvez utiliser la commande suivante : <pre><code>docker ps\n</code></pre></p> <p>Vous pouvez utiliser la commande <code>docker logs</code> (remplacez <code>bunkerweb</code> par le nom de votre conteneur) : <pre><code>docker logs bunkerweb\n</code></pre></p> <p>Voici l'\u00e9quivalent docker-compose (remplacez <code>bunkerweb</code> par le nom du service d\u00e9clar\u00e9 dans le fichier docker-compose.yml) : <pre><code>docker-compose logs bunkerweb\n</code></pre></p> <p>Lister les conteneurs</p> <p>Pour lister les conteneurs en cours d'ex\u00e9cution, vous pouvez utiliser la commande suivante : <pre><code>docker ps\n</code></pre></p> <p>Vous pouvez utiliser la commande <code>docker logs</code> (remplacez <code>bunkerweb</code> et <code>bw-autoconf</code> par le nom de vos conteneurs) : <pre><code>docker logs bunkerweb\ndocker logs bw-autoconf\n</code></pre></p> <p>Voici l'\u00e9quivalent docker-compose (remplacez <code>bunkerweb</code> et <code>bw-autoconf</code> par le nom des services d\u00e9clar\u00e9s dans le fichier docker-compose.yml) : <pre><code>docker-compose logs bunkerweb\ndocker-compose logs bw-autoconf\n</code></pre></p> <p>Nom du conteneur</p> <p>Le nom de conteneur par d\u00e9faut pour l'image All-in-one est <code>bunkerweb-aio</code>. Si vous avez utilis\u00e9 un nom diff\u00e9rent, ajustez la commande en cons\u00e9quence.</p> <p>Vous pouvez utiliser la commande <code>docker logs</code> : <pre><code>docker logs bunkerweb-aio\n</code></pre></p> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Lister les services</p> <p>Pour lister les services, vous pouvez utiliser la commande suivante : <pre><code>docker service ls\n</code></pre></p> <p>Vous pouvez utiliser la commande <code>docker service logs</code> (remplacez <code>bunkerweb</code> et <code>bw-autoconf</code> par le nom de vos services) : <pre><code>docker service logs bunkerweb\ndocker service logs bw-autoconf\n</code></pre></p> <p>Lister les pods</p> <p>Pour lister les pods, vous pouvez utiliser la commande suivante : <pre><code>kubectl get pods\n</code></pre></p> <p>Vous pouvez utiliser la commande <code>kubectl logs</code> (remplacez <code>bunkerweb</code> et <code>bunkerweb-controler</code> par le nom de vos pods) :     <pre><code>kubectl logs bunkerweb\nkubectl logs bunkerweb-controler\n</code></pre></p> <p>Pour les erreurs li\u00e9es aux services BunkerWeb (par exemple, ne d\u00e9marre pas), vous pouvez utiliser <code>journalctl</code> : <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre></p> <p>Les journaux courants sont situ\u00e9s dans le r\u00e9pertoire <code>/var/log/bunkerweb</code> : <pre><code>cat /var/log/bunkerweb/error.log\ncat /var/log/bunkerweb/access.log\n</code></pre></p>"},{"location":"fr/troubleshooting/#autorisations","title":"Autorisations","text":"<p>N'oubliez pas que BunkerWeb fonctionne en tant qu'utilisateur non privil\u00e9gi\u00e9 pour des raisons de s\u00e9curit\u00e9 \u00e9videntes. V\u00e9rifiez les autorisations des fichiers et dossiers utilis\u00e9s par BunkerWeb, surtout si vous utilisez des configurations personnalis\u00e9es (plus d'informations ici). Vous devrez d\u00e9finir au moins les droits RW sur les fichiers et RWX sur les dossiers.</p>"},{"location":"fr/troubleshooting/#debannissement-dip","title":"D\u00e9bannissement d'IP","text":"<p>Vous pouvez d\u00e9bannir manuellement une IP, ce qui est utile lors de la r\u00e9alisation de tests afin de pouvoir contacter l'API interne de BunkerWeb (remplacez <code>1.2.3.4</code> par l'adresse IP \u00e0 d\u00e9bannir) :</p> Docker / Docker AutoconfTout-en-unSwarmKubernetesLinux <p>Vous pouvez utiliser la commande <code>docker exec</code> (remplacez <code>bw-scheduler</code> par le nom de votre conteneur) : <pre><code>docker exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Voici l'\u00e9quivalent docker-compose (remplacez <code>bw-scheduler</code> par le nom des services d\u00e9clar\u00e9s dans le fichier docker-compose.yml) : <pre><code>docker-compose exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Nom du conteneur</p> <p>Le nom de conteneur par d\u00e9faut pour l'image Tout-en-un est <code>bunkerweb-aio</code>. Si vous avez utilis\u00e9 un nom diff\u00e9rent, ajustez la commande en cons\u00e9quence.</p> <p>Vous pouvez utiliser la commande <code>docker exec</code> : <pre><code>docker exec bunkerweb-aio bwcli unban 1.2.3.4\n</code></pre></p> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>Vous pouvez utiliser la commande <code>docker exec</code> (remplacez <code>bw-scheduler</code> par le nom de votre service) : <pre><code>docker exec $(docker ps -q -f name=bw-scheduler) bwcli unban 1.2.3.4\n</code></pre></p> <p>Vous pouvez utiliser la commande <code>kubectl exec</code> (remplacez <code>bunkerweb-scheduler</code> par le nom de votre pod) : <pre><code>kubectl exec bunkerweb-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Vous pouvez utiliser la commande <code>bwcli</code> (en tant que root) : <pre><code>sudo bwcli unban 1.2.3.4\n</code></pre></p>"},{"location":"fr/troubleshooting/#faux-positifs","title":"Faux positifs","text":""},{"location":"fr/troubleshooting/#mode-de-detection-uniquement","title":"Mode de d\u00e9tection uniquement","text":"<p>\u00c0 des fins de d\u00e9bogage/test, vous pouvez d\u00e9finir BunkerWeb en mode de d\u00e9tection uniquement afin qu'il ne bloque pas la demande et agisse comme un proxy inverse classique.</p>"},{"location":"fr/troubleshooting/#modsecurity","title":"ModSecurity","text":"<p>La configuration par d\u00e9faut de BunkerWeb de ModSecurity est de charger le Core Rule Set en mode scoring d'anomalie avec un niveau de parano\u00efa (PL) de 1 :</p> <ul> <li>Chaque r\u00e8gle correspondante augmentera un score d'anomalie (de sorte que de nombreuses r\u00e8gles peuvent correspondre \u00e0 une seule requ\u00eate)</li> <li>PL1 comprend des r\u00e8gles avec moins de risques de faux positifs (mais moins de s\u00e9curit\u00e9 que PL4)</li> <li>Le seuil par d\u00e9faut pour le score d'anomalie est de 5 pour les requ\u00eates et de 4 pour les r\u00e9ponses</li> </ul> <p>Prenons les logs suivants comme exemple de d\u00e9tection ModSecurity \u00e0 l'aide de la configuration par d\u00e9faut (format\u00e9e pour une meilleure lisibilit\u00e9) :</p> <pre><code>2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `lfi-os-files.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf\"]\n    [line \"78\"]\n    [id \"930120\"]\n    [rev \"\"]\n    [msg \"OS File Access Attempt\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-lfi\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/255/153/126\"]\n    [tag \"PCI/6.5.4\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `unix-shell.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf\"]\n    [line \"480\"]\n    [id \"932160\"]\n    [rev \"\"]\n    [msg \"Remote Command Execution: Unix Shell Code Found\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-shell\"]\n    [tag \"platform-unix\"]\n    [tag \"attack-rce\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/152/248/88\"]\n    [tag \"PCI/6.5.2\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:urlDecodeUni,t:cmdLine,t:normalizePath,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [error] 85#85: *11 [client 172.17.0.1] ModSecurity: Access denied with code 403 (phase 2). Matched \"Operator `Ge' with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `10' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-949-BLOCKING-EVALUATION.conf\"]\n    [line \"80\"]\n    [id \"949110\"]\n    [rev \"\"]\n    [msg \"Inbound Anomaly Score Exceeded (Total Score: 10)\"]\n    [data \"\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-generic\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n</code></pre> <p>Comme nous pouvons le voir, il existe 3 journaux diff\u00e9rents :</p> <ol> <li>R\u00e8gle 930120 appari\u00e9e</li> <li>R\u00e8gle 932160 appari\u00e9e</li> <li>Acc\u00e8s refus\u00e9 (r\u00e8gle 949110)</li> </ol> <p>Une chose importante \u00e0 comprendre est que la r\u00e8gle 949110 n'est pas une \"vraie\" r\u00e8gle : c'est celle qui refusera la requ\u00eate car le seuil d'anomalie est atteint (qui est de 10 dans cet exemple). Vous ne devriez jamais supprimer la r\u00e8gle 949110 !</p> <p>S'il s'agit d'un faux positif, vous devez alors vous concentrer sur les r\u00e8gles 930120 et 932160. Le r\u00e9glage de ModSecurity et/ou du CRS n'entre pas dans le cadre de cette documentation, mais n'oubliez pas que vous pouvez appliquer des configurations personnalis\u00e9es avant et apr\u00e8s le chargement du SCR (plus d'informations ici).</p>"},{"location":"fr/troubleshooting/#mauvais-comportement","title":"Mauvais comportement","text":"<p>Un cas courant de faux positifs est lorsque le client est banni en raison de la fonction \"mauvais comportement\", ce qui signifie que trop de codes d'\u00e9tat HTTP suspects ont \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9s au cours d'une p\u00e9riode donn\u00e9e (plus d'informations ici). Vous devez commencer par examiner les param\u00e8tres, puis les modifier en fonction de votre ou vos applications web, comme la suppression d'un code HTTP suspect, la diminution du temps de comptage, l'augmentation du seuil, ...</p>"},{"location":"fr/troubleshooting/#liste-blanche","title":"Liste blanche","text":"<p>Si vous avez des bots (ou des administrateurs) qui ont besoin d'acc\u00e9der \u00e0 votre site Web, la m\u00e9thode recommand\u00e9e pour \u00e9viter tout faux positif est de les mettre sur liste blanche \u00e0 l'aide de la fonction de liste blanche. Nous vous d\u00e9conseillons d'utiliser les <code>WHITELIST_URI*</code> param\u00e8tres  ou <code>WHITELIST_USER_AGENT*</code> \u00e0 moins qu'ils ne soient d\u00e9finis sur des valeurs secr\u00e8tes et impr\u00e9visibles. Les cas d'utilisation courants sont :</p> <ul> <li>V\u00e9rification de l'\u00e9tat / bot d'\u00e9tat</li> <li>Callback comme IPN ou webhook</li> <li>Robot d'exploration des m\u00e9dias sociaux</li> </ul>"},{"location":"fr/troubleshooting/#erreurs-courantes","title":"Erreurs courantes","text":""},{"location":"fr/troubleshooting/#en-tete-trop-gros-envoye-en-amont","title":"En-t\u00eate trop gros envoy\u00e9 en amont","text":"<p>Si vous voyez l'erreur suivante <code>upstream sent too big header while reading response header from upstream</code> dans les journaux, vous devrez ajuster la taille des diff\u00e9rents tampons proxy \u00e0 l'aide des param\u00e8tres suivants :</p> <ul> <li><code>PROXY_BUFFERS</code></li> <li><code>PROXY_BUFFER_SIZE</code></li> <li><code>PROXY_BUSY_BUFFERS_SIZE</code></li> </ul>"},{"location":"fr/troubleshooting/#impossible-de-construire-server_names_hash","title":"Impossible de construire server_names_hash","text":"<p>Si vous voyez l'erreur suivante <code>could not build server_names_hash, you should increase server_names_hash_bucket_size</code> dans les journaux, vous devrez modifier le <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> param\u00e8tre.</p>"},{"location":"fr/troubleshooting/#fuseau-horaire","title":"Fuseau horaire","text":"<p>Lors de l'utilisation d'int\u00e9grations bas\u00e9es sur des conteneurs, le fuseau horaire du conteneur peut ne pas correspondre \u00e0 celui de la machine h\u00f4te. Pour r\u00e9soudre ce probl\u00e8me, vous pouvez d\u00e9finir la <code>TZ</code> variable d'environnement sur le fuseau horaire de votre choix sur vos conteneurs (par exemple, <code>TZ=Europe/Paris</code>). Vous trouverez la liste des identifiants de fuseau horaire ici.</p>"},{"location":"fr/troubleshooting/#interface-utilisateur-web","title":"Interface utilisateur Web","text":"<p>Si vous avez oubli\u00e9 vos informations d'identification de l'interface utilisateur ou si vous rencontrez des probl\u00e8mes de 2FA, vous pouvez vous connecter \u00e0 la base de donn\u00e9es pour retrouver l'acc\u00e8s.</p>"},{"location":"fr/troubleshooting/#acceder-a-la-base-de-donnees","title":"Acc\u00e9der \u00e0 la base de donn\u00e9es","text":"SQLiteMariaDB / MySQLPostgreSQL LinuxDockerTout-en-un <p>Installer SQLite (Debian/Ubuntu) :</p> <pre><code>sudo apt install sqlite3\n</code></pre> <p>Installer SQLite (Fedora/RedHat) :</p> <pre><code>sudo dnf install sqlite\n</code></pre> <p>Obtenir un shell dans votre conteneur scheduler :</p> <p>Arguments Docker</p> <ul> <li>l'option <code>-u 0</code> permet d'ex\u00e9cuter la commande en tant que root (obligatoire)</li> <li>les options <code>-it</code> permettent d'ex\u00e9cuter la commande de mani\u00e8re interactive (obligatoire)</li> <li><code>&lt;bunkerweb_scheduler_container&gt;</code> : le nom ou l'ID de votre conteneur scheduler</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_scheduler_container&gt; bash\n</code></pre> <p>Installer SQLite :</p> <pre><code>apk add sqlite\n</code></pre> <p>Obtenir un shell dans votre conteneur Tout-en-un :</p> <p>Arguments Docker</p> <ul> <li>l'option <code>-u 0</code> permet d'ex\u00e9cuter la commande en tant que root (obligatoire).</li> <li>les options <code>-it</code> permettent d'ex\u00e9cuter la commande de mani\u00e8re interactive (obligatoire).</li> <li><code>bunkerweb-aio</code> est le nom de conteneur par d\u00e9faut ; ajustez si vous avez utilis\u00e9 un nom personnalis\u00e9.</li> </ul> <pre><code>docker exec -u 0 -it bunkerweb-aio bash\n</code></pre> <p>Acc\u00e9der \u00e0 votre base de donn\u00e9es :</p> <p>Chemin de la base de donn\u00e9es</p> <p>Nous supposons que vous utilisez le chemin de base de donn\u00e9es par d\u00e9faut. Si vous utilisez un chemin personnalis\u00e9, vous devrez adapter la commande. Pour Tout-en-un, nous supposons que la base de donn\u00e9es est <code>db.sqlite3</code> situ\u00e9e dans le volume persistant <code>/data</code> (<code>/data/db.sqlite3</code>).</p> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <p>Vous devriez voir quelque chose comme ceci :</p> <pre><code>SQLite version &lt;VER&gt; &lt;DATE&gt;\nEnter \".help\" for usage hints.\nsqlite&gt;\n</code></pre> <p>MariaDB / MySQL uniquement</p> <p>Les \u00e9tapes suivantes sont uniquement valides pour les bases de donn\u00e9es MariaDB / MySQL. Si vous utilisez une autre base de donn\u00e9es, veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation de votre base de donn\u00e9es.</p> <p>Identifiants et nom de la base de donn\u00e9es</p> <p>Vous devrez utiliser les m\u00eames identifiants et nom de base de donn\u00e9es utilis\u00e9s dans le param\u00e8tre <code>DATABASE_URI</code>.</p> LinuxDockerAll-in-one <p>Acc\u00e9dez \u00e0 votre base de donn\u00e9es locale :</p> <pre><code>mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Ensuite, entrez le mot de passe de l'utilisateur de la base de donn\u00e9es et vous devriez pouvoir acc\u00e9der \u00e0 votre base de donn\u00e9es.</p> <p>Acc\u00e9dez \u00e0 votre conteneur de base de donn\u00e9es :</p> <p>Arguments Docker</p> <ul> <li>l'option <code>-u 0</code> permet d'ex\u00e9cuter la commande en tant que root (obligatoire)</li> <li>les options <code>-it</code> permettent d'ex\u00e9cuter la commande de mani\u00e8re interactive (obligatoire)</li> <li><code>&lt;bunkerweb_db_container&gt;</code> : le nom ou l'ID de votre conteneur de base de donn\u00e9es</li> <li><code>&lt;user&gt;</code> : l'utilisateur de la base de donn\u00e9es</li> <li><code>&lt;database&gt;</code> : le nom de la base de donn\u00e9es</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Ensuite, entrez le mot de passe de l'utilisateur de la base de donn\u00e9es et vous devriez pouvoir acc\u00e9der \u00e0 votre base de donn\u00e9es.</p> <p>L'image Tout-en-un n'inclut pas de serveur MariaDB/MySQL. Si vous avez configur\u00e9 l'AIO pour utiliser une base de donn\u00e9es MariaDB/MySQL externe (en d\u00e9finissant la variable d'environnement <code>DATABASE_URI</code>), vous devez vous connecter \u00e0 cette base de donn\u00e9es directement \u00e0 l'aide des outils clients MySQL standard.</p> <p>La m\u00e9thode de connexion serait similaire \u00e0 l'onglet \"Linux\" (si vous vous connectez depuis l'h\u00f4te o\u00f9 AIO fonctionne ou une autre machine) ou en ex\u00e9cutant un client MySQL dans un conteneur Docker s\u00e9par\u00e9 si pr\u00e9f\u00e9r\u00e9, en ciblant l'h\u00f4te et les identifiants de votre base de donn\u00e9es externe.</p> <p>PostgreSQL uniquement</p> <p>Les \u00e9tapes suivantes sont uniquement valides pour les bases de donn\u00e9es PostgreSQL. Si vous utilisez une autre base de donn\u00e9es, veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation de votre base de donn\u00e9es.</p> <p>Identifiants, h\u00f4te et nom de base de donn\u00e9es</p> <p>Vous devrez utiliser les m\u00eames identifiants (utilisateur/mot de passe), l\u2019h\u00f4te et le nom de base de donn\u00e9es utilis\u00e9s dans le param\u00e8tre <code>DATABASE_URI</code>.</p> LinuxDockerAll-in-one <p>Acc\u00e9dez \u00e0 votre base de donn\u00e9es locale :</p> <pre><code>psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Si votre base de donn\u00e9es se trouve sur un autre h\u00f4te, ajoutez le nom d\u2019h\u00f4te/l\u2019IP et le port :</p> <pre><code>psql -h &lt;host&gt; -p 5432 -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Ensuite, entrez le mot de passe de l\u2019utilisateur de la base de donn\u00e9es pour y acc\u00e9der.</p> <p>Acc\u00e9dez \u00e0 votre conteneur de base de donn\u00e9es :</p> <p>Arguments Docker</p> <ul> <li>l'option <code>-u 0</code> permet d'ex\u00e9cuter la commande en tant que root (obligatoire)</li> <li>les options <code>-it</code> permettent d'ex\u00e9cuter la commande de mani\u00e8re interactive (obligatoire)</li> <li><code>&lt;bunkerweb_db_container&gt;</code> : le nom ou l'ID de votre conteneur de base de donn\u00e9es</li> <li><code>&lt;user&gt;</code> : l'utilisateur de la base de donn\u00e9es</li> <li><code>&lt;database&gt;</code> : le nom de la base de donn\u00e9es</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Si la base de donn\u00e9es est h\u00e9berg\u00e9e ailleurs, ajoutez les options <code>-h &lt;host&gt;</code> et <code>-p 5432</code> selon le cas.</p> <p>L'image Tout-en-un n'inclut pas de serveur PostgreSQL. Si vous avez configur\u00e9 l'AIO pour utiliser une base de donn\u00e9es PostgreSQL externe (en d\u00e9finissant la variable d'environnement <code>DATABASE_URI</code>), vous devez vous connecter \u00e0 cette base de donn\u00e9es directement \u00e0 l'aide des outils clients PostgreSQL standard.</p> <p>La m\u00e9thode de connexion serait similaire \u00e0 l'onglet \"Linux\" (si vous vous connectez depuis l'h\u00f4te o\u00f9 AIO fonctionne ou une autre machine) ou en ex\u00e9cutant un client PostgreSQL dans un conteneur Docker s\u00e9par\u00e9 si pr\u00e9f\u00e9r\u00e9, en ciblant l'h\u00f4te et les identifiants de votre base de donn\u00e9es externe.</p>"},{"location":"fr/troubleshooting/#actions-de-depannage","title":"Actions de d\u00e9pannage","text":"<p>Sch\u00e9ma des tables</p> <p>Le sch\u00e9ma de la <code>bw_ui_users</code> table est le suivant :</p> Field Type Null Key Default Extra username varchar(256) NO PRI NULL email varchar(256) YES UNI NULL password varchar(60) NO NULL method enum('ui','scheduler','autoconf','manual','wizard') NO NULL admin tinyint(1) NO NULL theme enum('light','dark') NO NULL language varchar(2) NO NULL totp_secret varchar(256) YES NULL creation_date datetime NO NULL update_date datetime NO NULL R\u00e9cup\u00e9rer le nom d'utilisateurMettre \u00e0 jour le mot de passe de l'utilisateur administrateurD\u00e9sactiver l'authentification 2FA pour l'utilisateur administrateurActualiser les codes de r\u00e9cup\u00e9ration 2FAExporter la configuration et les journaux anonymis\u00e9s <p>Ex\u00e9cutez la commande suivante pour extraire les donn\u00e9es de la table <code>bw_ui_users</code> :</p> <pre><code>SELECT * FROM bw_ui_users;\n</code></pre> <p>Vous devriez voir quelque chose comme ceci :</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>Vous devez d'abord hacher le nouveau mot de passe en utilisant l'algorithme bcrypt.</p> <p>Installez la biblioth\u00e8que Python bcrypt :</p> <pre><code>pip install bcrypt\n</code></pre> <p>G\u00e9n\u00e9rez votre hachage (remplacez <code>mypassword</code> par votre propre mot de passe) :</p> <pre><code>python3 -c 'from bcrypt import hashpw, gensalt ; print(hashpw(b\"\"\"mypassword\"\"\", gensalt(rounds=10)).decode(\"utf-8\"))'\n</code></pre> <p>Vous pouvez mettre \u00e0 jour votre nom d'utilisateur / mot de passe en ex\u00e9cutant cette commande :</p> <pre><code>UPDATE bw_ui_users SET password = '&lt;password_hash&gt;' WHERE admin = 1;\n</code></pre> <p>Si vous v\u00e9rifiez \u00e0 nouveau votre table <code>bw_ui_users</code> en suivant cette commande :</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>Vous devriez voir quelque chose comme ceci :</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>Vous devriez maintenant pouvoir utiliser les nouvelles informations d'identification pour vous connecter \u00e0 l'interface utilisateur Web.</p> <p>Vous pouvez d\u00e9sactiver l'authentification 2FA en ex\u00e9cutant cette commande :</p> <pre><code>UPDATE bw_ui_users SET totp_secret = NULL WHERE admin = 1;\n</code></pre> <p>Si vous v\u00e9rifiez \u00e0 nouveau votre table <code>bw_ui_users</code> en suivant cette commande :</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>Vous devriez voir quelque chose comme ceci :</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light NULL *** *** <p>Vous devriez maintenant pouvoir vous connecter \u00e0 l'interface utilisateur Web en utilisant uniquement votre nom d'utilisateur et votre mot de passe sans 2FA.</p> <p>Les codes de r\u00e9cup\u00e9ration peuvent \u00eatre actualis\u00e9s dans votre page de profil de l'interface utilisateur Web sous l'onglet <code>S\u00e9curit\u00e9</code>.</p> <p>Utilisez la page Support de l\u2019interface Web pour rassembler rapidement la configuration et les journaux pour le d\u00e9pannage.</p> <ul> <li>Ouvrez l\u2019interface Web et allez \u00e0 la page Support.</li> <li>Choisissez la port\u00e9e : exporter la configuration Globale ou s\u00e9lectionner un Service sp\u00e9cifique.</li> <li>Cliquez pour t\u00e9l\u00e9charger l\u2019archive de configuration pour la port\u00e9e choisie.</li> <li>Vous pouvez \u00e9galement t\u00e9l\u00e9charger les journaux : les journaux export\u00e9s sont automatiquement anonymis\u00e9s (toutes les adresses IP et les domaines sont masqu\u00e9s).</li> </ul>"},{"location":"fr/troubleshooting/#televersement-de-plugin","title":"T\u00e9l\u00e9versement de plugin","text":"<p>Il peut ne pas \u00eatre possible de t\u00e9l\u00e9charger un plugin \u00e0 partir de l'interface utilisateur dans certaines situations :</p> <ul> <li>Package manquant pour g\u00e9rer les fichiers compress\u00e9s sur votre int\u00e9gration, auquel cas vous devrez ajouter les packages n\u00e9cessaires</li> <li>Navigateur Safari : le 'mode sans \u00e9chec' peut vous emp\u00eacher d'ajouter un plugin. Vous devrez apporter les modifications n\u00e9cessaires sur votre machine</li> </ul>"},{"location":"fr/upgrading/","title":"Mise \u00e0 niveau","text":""},{"location":"fr/upgrading/#mise-a-niveau-a-partir-de-la-version-16x","title":"Mise \u00e0 niveau \u00e0 partir de la version 1.6.X","text":""},{"location":"fr/upgrading/#procedure","title":"Proc\u00e9dure","text":""},{"location":"fr/upgrading/#docker","title":"Docker","text":"<ol> <li> <p>Sauvegardez la base de donn\u00e9es :</p> <ul> <li>Avant de proc\u00e9der \u00e0 la mise \u00e0 niveau de la base de donn\u00e9es, assurez-vous d'effectuer une sauvegarde compl\u00e8te de l'\u00e9tat actuel de la base de donn\u00e9es.</li> <li>Utilisez les outils appropri\u00e9s pour sauvegarder l'int\u00e9gralit\u00e9 de la base de donn\u00e9es, y compris les donn\u00e9es, les sch\u00e9mas et les configurations.</li> </ul> <pre><code>docker exec -it -e BACKUP_DIRECTORY=/path/to/backup/directory &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/backup/directory /path/to/backup/directory\n</code></pre> </li> <li> <p>Mettre \u00e0 niveau BunkerWeb\u00a0:</p> <ul> <li> <p>Mettez \u00e0 niveau BunkerWeb vers la derni\u00e8re version.</p> <ol> <li> <p>Mettre \u00e0 jour le fichier Docker Compose : Mettez \u00e0 jour le fichier Docker Compose pour utiliser la nouvelle version de l'image BunkerWeb.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Red\u00e9marrer les conteneurs : red\u00e9marrez les conteneurs pour appliquer les modifications.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>V\u00e9rifier les journaux : v\u00e9rifiez les journaux du service de planification pour vous assurer que la migration a r\u00e9ussi.</p> <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> </li> <li> <p>V\u00e9rifier la base de donn\u00e9es : v\u00e9rifiez que la mise \u00e0 niveau de la base de donn\u00e9es a r\u00e9ussi en v\u00e9rifiant les donn\u00e9es et les configurations dans le nouveau conteneur de base de donn\u00e9es.</p> </li> </ol>"},{"location":"fr/upgrading/#linux","title":"Linux","text":"Mise \u00e0 niveau facile \u00e0 l'aide du script d'installationManuel <ul> <li> <p>D\u00e9marrage rapide :</p> <p>Pour commencer, t\u00e9l\u00e9chargez le script d'installation et sa somme de contr\u00f4le, puis v\u00e9rifiez l'int\u00e9grit\u00e9 du script avant de l'ex\u00e9cuter.</p> <pre><code>LATEST_VERSION=$(curl -s https://api.github.com/repos/bunkerity/bunkerweb/releases/latest | jq -r .tag_name)\n\n# Download the script and its checksum\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh.sha256\n\n# Verify the checksum\nsha256sum -c install-bunkerweb.sh.sha256\n\n# If the check is successful, run the script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Avis de s\u00e9curit\u00e9</p> <p>V\u00e9rifiez toujours l'int\u00e9grit\u00e9 du script d'installation avant de l'ex\u00e9cuter.</p> <p>T\u00e9l\u00e9chargez le fichier de somme de contr\u00f4le et utilisez un outil comme <code>sha256sum</code> pour confirmer que le script n'a pas \u00e9t\u00e9 modifi\u00e9 ou alt\u00e9r\u00e9.</p> <p>Si la v\u00e9rification de la somme \u00e9choue, n'ex\u00e9cutez pas le script \u2014 il pourrait \u00eatre dangereux.</p> </li> <li> <p>Comment \u00e7a marche :</p> <p>Le m\u00eame script d'installation polyvalent utilis\u00e9 pour les nouvelles installations peut \u00e9galement effectuer une mise \u00e0 niveau sur place. Lorsqu'il d\u00e9tecte une installation existante et une version cible diff\u00e9rente, il passe en mode mise \u00e0 niveau et applique le flux de travail suivant :</p> <ol> <li>D\u00e9tection et validation<ul> <li>D\u00e9tecte le syst\u00e8me d'exploitation / la version et confirme la matrice de support.</li> <li>Lit la version BunkerWeb actuellement install\u00e9e \u00e0 partir de <code>/usr/share/bunkerweb/VERSION</code>.</li> </ul> </li> <li>D\u00e9cision du sc\u00e9nario de mise \u00e0 niveau<ul> <li>Si la version demand\u00e9e est \u00e9gale \u00e0 celle install\u00e9e, elle abandonne (sauf si vous la r\u00e9ex\u00e9cutez explicitement pour l'\u00e9tat).</li> <li>Si les versions diff\u00e8rent, il signale une mise \u00e0 niveau.</li> </ul> </li> <li>(Facultatif) Sauvegarde automatique de pr\u00e9-mise \u00e0 niveau<ul> <li>Si <code>bwcli</code> le planificateur est disponible et que la sauvegarde automatique est activ\u00e9e, il cr\u00e9e une sauvegarde via le plugin de sauvegarde int\u00e9gr\u00e9.</li> <li>Destination : soit le r\u00e9pertoire que vous avez fourni, <code>--backup-dir</code> soit un chemin g\u00e9n\u00e9r\u00e9 tel que <code>/var/tmp/bunkerweb-backup-YYYYmmdd-HHMMSS</code>.</li> <li>Vous pouvez d\u00e9sactiver cela avec <code>--no-auto-backup</code> (la sauvegarde manuelle devient alors de votre responsabilit\u00e9).</li> </ul> </li> <li>Repos du service<ul> <li>Arr\u00eate <code>bunkerweb</code>, <code>bunkerweb-ui</code>et <code>bunkerweb-scheduler</code> pour assurer une mise \u00e0 niveau coh\u00e9rente (correspond aux recommandations de la proc\u00e9dure manuelle).</li> </ul> </li> <li>Suppression des verrous de colis<ul> <li>Supprime temporairement <code>apt-mark hold</code> / <code>dnf versionlock</code> active <code>bunkerweb</code> et <code>nginx</code> permet ainsi d'installer la version cibl\u00e9e.</li> </ul> </li> <li>Ex\u00e9cution de la mise \u00e0 niveau<ul> <li>Installe uniquement la nouvelle version du package BunkerWeb (NGINX n'est pas r\u00e9install\u00e9 en mode de mise \u00e0 niveau \u00e0 moins qu'il ne soit manquant - cela \u00e9vite de toucher \u00e0 un NGINX correctement \u00e9pingl\u00e9).</li> <li>R\u00e9applique les blocages/verrous de version pour geler les versions mises \u00e0 niveau.</li> </ul> </li> <li>Finalisation et \u00e9tat d'avancement<ul> <li>Affiche l'\u00e9tat de systemd pour les services principaux et les \u00e9tapes suivantes.</li> <li>Laisse votre configuration et votre base de donn\u00e9es intactes : seuls le code de l'application et les fichiers g\u00e9r\u00e9s sont mis \u00e0 jour.</li> </ul> </li> </ol> <p>Comportements cl\u00e9s / notes :</p> <ul> <li>Le script ne modifie PAS le <code>/etc/bunkerweb/variables.env</code> contenu de votre base de donn\u00e9es.</li> <li>Si la sauvegarde automatique a \u00e9chou\u00e9 (ou a \u00e9t\u00e9 d\u00e9sactiv\u00e9e), vous pouvez toujours effectuer une restauration manuelle \u00e0 l'aide de la section Restauration ci-dessous.</li> <li>Le mode de mise \u00e0 niveau \u00e9vite intentionnellement de r\u00e9installer ou de r\u00e9trograder NGINX en dehors de la version \u00e9pingl\u00e9e prise en charge d\u00e9j\u00e0 pr\u00e9sente.</li> <li>Les journaux de d\u00e9pannage restent dans <code>/var/log/bunkerweb/</code>.</li> </ul> <p>R\u00e9sum\u00e9 du retour en arri\u00e8re :</p> <ul> <li>Utilisez le r\u00e9pertoire de sauvegarde g\u00e9n\u00e9r\u00e9 (ou votre sauvegarde manuelle) + les \u00e9tapes de la section Rollback pour restaurer la base de donn\u00e9es, puis r\u00e9installez la version pr\u00e9c\u00e9dente de l'image/du paquet et verrouillez \u00e0 nouveau les paquets.</li> </ul> </li> <li> <p>Options de ligne de commande :</p> <p>Vous pouvez effectuer des mises \u00e0 niveau sans assistance avec les m\u00eames indicateurs que ceux utilis\u00e9s pour l'installation. Les plus pertinents pour les mises \u00e0 niveau :</p> Option But <code>-v, --version &lt;X.Y.Z&gt;</code> Ciblez la version de BunkerWeb \u00e0 mettre \u00e0 niveau. <code>-y, --yes</code> Non interactif (suppose la confirmation de la mise \u00e0 niveau et active la sauvegarde automatique, sauf si <code>--no-auto-backup</code>). <code>--backup-dir &lt;PATH&gt;</code> Destination de la sauvegarde automatique de pr\u00e9-mise \u00e0 niveau. Cr\u00e9\u00e9 s'il est manquant. <code>--no-auto-backup</code> Ignorez la sauvegarde automatique (NON recommand\u00e9). Vous devez disposer d'une sauvegarde manuelle. <code>-q, --quiet</code> Suppression de la sortie (combin\u00e9e avec l'enregistrement/la surveillance). <code>-f, --force</code> Proc\u00e9dez sur une version du syst\u00e8me d'exploitation non prise en charge. <code>--dry-run</code> Affichez l'environnement d\u00e9tect\u00e9, les actions pr\u00e9vues, puis quittez sans rien modifier. <p>Exemples:</p> <pre><code># Upgrade to testing interactively (will prompt for backup)\nsudo ./install-bunkerweb.sh --version testing\n\n# Non-interactive upgrade with automatic backup to custom directory\nsudo ./install-bunkerweb.sh -v testing --backup-dir /var/backups/bw-2025-01 -y\n\n# Silent unattended upgrade (logs suppressed) \u2013 relies on default auto-backup\nsudo ./install-bunkerweb.sh -v testing -y -q\n\n# Perform a dry run (plan) without applying changes\nsudo ./install-bunkerweb.sh -v testing --dry-run\n\n# Upgrade skipping automatic backup (NOT recommended)\nsudo ./install-bunkerweb.sh -v testing --no-auto-backup -y\n</code></pre> <p>Sauter les sauvegardes</p> <p>L'utilisation <code>--no-auto-backup</code> sans sauvegarde manuelle v\u00e9rifi\u00e9e peut entra\u00eener une perte de donn\u00e9es irr\u00e9versible si la mise \u00e0 niveau rencontre des probl\u00e8mes. Conservez toujours au moins une sauvegarde r\u00e9cente et test\u00e9e.</p> </li> </ul> <ol> <li> <p>Sauvegardez la base de donn\u00e9es :</p> <ul> <li>Avant de proc\u00e9der \u00e0 la mise \u00e0 niveau de la base de donn\u00e9es, assurez-vous d'effectuer une sauvegarde compl\u00e8te de l'\u00e9tat actuel de la base de donn\u00e9es.</li> <li>Utilisez les outils appropri\u00e9s pour sauvegarder l'int\u00e9gralit\u00e9 de la base de donn\u00e9es, y compris les donn\u00e9es, les sch\u00e9mas et les configurations.</li> </ul> Informations pour les utilisateurs de Red Hat Enterprise Linux (RHEL) 8.10 <p>Si vous utilisez RHEL 8.10 et pr\u00e9voyez d'utiliser une base de donn\u00e9es externe, vous devrez installer le paquet <code>mysql-community-client</code> pour vous assurer que la commande <code>mysqldump</code> est disponible. Vous pouvez installer le paquet en ex\u00e9cutant les commandes suivantes :</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Installez le paquet de configuration du d\u00e9p\u00f4t MySQL</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Activez le d\u00e9p\u00f4t MySQL</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Installez le client MySQL</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Installer le paquet de configuration du d\u00e9p\u00f4t PostgreSQL</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Installer le client PostgreSQL</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/path/to/backup/directory bwcli plugin backup save\n</code></pre> </li> <li> <p>Mettre \u00e0 niveau BunkerWeb\u00a0:</p> <ul> <li> <p>Mettez \u00e0 niveau BunkerWeb vers la derni\u00e8re version.</p> <ol> <li> <p>Arr\u00eatez les services :     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Mettre \u00e0 jour BunkerWeb :</p> Debian/UbuntuFedora/RedHat <p>Tout d'abord, si vous avez pr\u00e9c\u00e9demment marqu\u00e9 le paquet BunkerWeb comme mis en attente, annulez cette mise en attente :</p> <p>Vous pouvez afficher la liste des paquets en attente avec <code>apt-mark showhold</code></p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Ensuite, vous pouvez mettre \u00e0 jour le paquet BunkerWeb :</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Pour emp\u00eacher le paquet BunkerWeb d'\u00eatre mis \u00e0 niveau lors de l'ex\u00e9cution de <code>apt upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>Plus de d\u00e9tails dans la page int\u00e9gration Linux.</p> <p>Tout d'abord, si vous avez pr\u00e9c\u00e9demment marqu\u00e9 le paquet BunkerWeb comme mis en attente, annulez cette mise en attente :</p> <p>Vous pouvez afficher la liste des paquets en attente avec <code>dnf versionlock list</code></p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Ensuite, vous pouvez mettre \u00e0 jour le paquet BunkerWeb :</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Pour emp\u00eacher le paquet BunkerWeb d'\u00eatre mis \u00e0 niveau lors de l'ex\u00e9cution de <code>dnf upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>Plus de d\u00e9tails dans la page int\u00e9gration Linux.</p> </li> <li> <p>D\u00e9marrez les services :         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         Ou red\u00e9marrez le syst\u00e8me :         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>V\u00e9rifier les journaux : v\u00e9rifiez les journaux du service de planification pour vous assurer que la migration a r\u00e9ussi.</p> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>V\u00e9rifier la base de donn\u00e9es : v\u00e9rifiez que la mise \u00e0 niveau de la base de donn\u00e9es a r\u00e9ussi en v\u00e9rifiant les donn\u00e9es et les configurations dans le nouveau conteneur de base de donn\u00e9es.</p> </li> </ol>"},{"location":"fr/upgrading/#rollback","title":"Rollback","text":"<p>En cas de probl\u00e8mes</p> <p>Si vous rencontrez des probl\u00e8mes lors de la mise \u00e0 niveau, vous pouvez revenir \u00e0 la version pr\u00e9c\u00e9dente de la base de donn\u00e9es en restaurant la sauvegarde effectu\u00e9e \u00e0 l\u2019\u00e9tape 1.</p> <p>Obtenez de l\u2019aide et plus d\u2019informations :</p> <ul> <li>Commander une assistance professionnelle</li> <li>Cr\u00e9er un probl\u00e8me sur GitHub</li> <li>Rejoignez le serveur Discord de BunkerWeb</li> </ul> DockerLinux <ol> <li> <p>Extrayez la sauvegarde si elle est compress\u00e9e.</p> <p>Extrayez d'abord le fichier de sauvegarde compress\u00e9 :</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Supprimez le fichier de base de donn\u00e9es existant.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Corrigez les permissions.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Arr\u00eatez la pile.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Restaurez la sauvegarde.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;your_password&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Arr\u00eatez la pile.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Supprimez la base de donn\u00e9es existante.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recr\u00e9ez la base de donn\u00e9es.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Arr\u00eatez la pile.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>R\u00e9trograder BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;old_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;old_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;old_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;old_version&gt;\n        ...\n</code></pre> </li> <li> <p>D\u00e9marrez les conteneurs.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Extrayez la sauvegarde si elle est compress\u00e9e.</p> <p>Extrayez d'abord le fichier zip de sauvegarde :</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Arr\u00eatez les services.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> <ol> <li> <p>Supprimez la base de donn\u00e9es existante.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recr\u00e9ez la base de donn\u00e9es.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>D\u00e9marrez les services.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>R\u00e9trograder BunkerWeb.</p> <ul> <li>R\u00e9trogradez BunkerWeb vers la version pr\u00e9c\u00e9dente en suivant les m\u00eames \u00e9tapes que lors de la mise \u00e0 niveau de BunkerWeb dans la page d'int\u00e9gration Linux</li> </ul> </li> </ol>"},{"location":"fr/upgrading/#mise-a-niveau-a-partir-de-la-version-15x","title":"Mise \u00e0 niveau \u00e0 partir de la version 1.5.X","text":""},{"location":"fr/upgrading/#quest-ce-qui-a-change","title":"Qu'est-ce qui a chang\u00e9 ?","text":""},{"location":"fr/upgrading/#programmateur","title":"Programmateur","text":"<p>Contrairement aux versions 1.5.X, le service Scheduler n' utilise plus le proxy de la socket docker pour r\u00e9cup\u00e9rer les instances de BunkerWeb. Au lieu de cela, il utilise la nouvelle <code>BUNKERWEB_INSTANCES</code> variable d'environnement.</p> <p>\u00c0 propos de la <code>BUNKERWEB_INSTANCES</code> variable d'environnement</p> <p>Cette nouvelle variable est une liste d'instances BunkerWeb s\u00e9par\u00e9es par des espaces, au format suivant : <code>http://bunkerweb:5000 bunkerweb1:5000 bunkerweb2:5000 ...</code>. Le planificateur utilisera ensuite cette liste pour r\u00e9cup\u00e9rer et envoyer la configuration aux instances.</p> <ul> <li>Le <code>http://</code> pr\u00e9fixe est facultatif.</li> <li>Le port est facultatif et utilise par d\u00e9faut la valeur de la variable d' <code>API_HTTP_PORT</code> environnement.</li> <li>La valeur par d\u00e9faut de la <code>BUNKERWEB_INSTANCES</code> variable d'environnement est <code>127.0.0.1</code>.</li> </ul> <p>En d'autres termes, le nouveau syst\u00e8me est totalement agnostique et g\u00e9n\u00e9rique : le planificateur est en charge de la gestion d'une liste d'instances BunkerWeb et n'a pas besoin de se soucier de l'environnement.</p> <p>Int\u00e9grations Autoconf/Kubernetes/Swarm</p> <p>Si vous utilisez les int\u00e9grations <code>Autoconf</code>, <code>Kubernetes</code> ou <code>Swarm</code>, vous pouvez d\u00e9finir la variable d'environnement <code>BUNKERWEB_INSTANCES</code> sur une cha\u00eene vide (afin qu'elle n'essaie pas d'envoyer la configuration \u00e0 la valeur par d\u00e9faut <code>127.0.0.1</code>).</p> <p>Les instances seront r\u00e9cup\u00e9r\u00e9es automatiquement par le contr\u00f4leur. Vous pouvez \u00e9galement ajouter des instances personnalis\u00e9es \u00e0 la liste qui pourraient ne pas \u00eatre d\u00e9tect\u00e9es par le contr\u00f4leur.</p> <p>Depuis le <code>1.6</code>, le planificateur dispose \u00e9galement d'un nouveau syst\u00e8me de v\u00e9rification de l'\u00e9tat int\u00e9gr\u00e9, qui v\u00e9rifiera l'\u00e9tat des instances. Si une instance devient d\u00e9fectueuse, le planificateur cessera de lui envoyer la configuration. Si l'instance redevient saine, le planificateur recommence \u00e0 lui envoyer la configuration.</p>"},{"location":"fr/upgrading/#conteneur-bunkerweb","title":"Conteneur BunkerWeb","text":"<p>Un autre changement important est que les param\u00e8tres qui \u00e9taient pr\u00e9c\u00e9demment d\u00e9clar\u00e9s sur le conteneur BunkerWeb sont d\u00e9sormais d\u00e9clar\u00e9s sur le planificateur. Cela signifie que vous devrez d\u00e9placer vos param\u00e8tres du conteneur BunkerWeb vers le conteneur Scheduler.</p> <p>Bien que les param\u00e8tres soient maintenant d\u00e9clar\u00e9s sur le conteneur du planificateur, vous devrez toujours d\u00e9clarer les param\u00e8tres obligatoires li\u00e9s \u00e0 l'API sur le conteneur BunkerWeb, comme le param\u00e8tre <code>API_WHITELIST_IP</code> utilis\u00e9 pour mettre en liste blanche l'adresse IP du planificateur, afin qu'il puisse envoyer la configuration \u00e0 l'instance. Si vous utilisez <code>API_TOKEN</code>, vous devez \u00e9galement le d\u00e9finir sur le conteneur BunkerWeb (et le refl\u00e9ter sur le Scheduler) pour autoriser les appels API authentifi\u00e9s.</p> <p>Param\u00e8tres du conteneur de BunkerWeb</p> <p>Tous les param\u00e8tres li\u00e9s \u00e0 l'API que vous d\u00e9clarez sur le conteneur BunkerWeb doivent \u00e9galement \u00eatre r\u00e9pliqu\u00e9s sur le conteneur du planificateur afin qu'ils continuent de fonctionner, car la configuration sera \u00e9cras\u00e9e par celle g\u00e9n\u00e9r\u00e9e par le planificateur.</p>"},{"location":"fr/upgrading/#valeurs-par-defaut-et-nouveaux-parametres","title":"Valeurs par d\u00e9faut et nouveaux param\u00e8tres","text":"<p>Nous avons fait de notre mieux pour ne pas changer la valeur par d\u00e9faut, mais nous avons ajout\u00e9 de nombreux autres param\u00e8tres. Il est fortement recommand\u00e9 de lire les sections sur le r\u00e9glage de la s\u00e9curit\u00e9  et  les param\u00e8tres de la documentation.</p>"},{"location":"fr/upgrading/#modeles","title":"Mod\u00e8les","text":"<p>Nous avons ajout\u00e9 une nouvelle fonctionnalit\u00e9 appel\u00e9e mod\u00e8les. Les mod\u00e8les fournissent une approche structur\u00e9e et standardis\u00e9e de la d\u00e9finition des param\u00e8tres et des configurations personnalis\u00e9es, consultez la  section concepts/mod\u00e8les pour plus d'informations.</p>"},{"location":"fr/upgrading/#espaces-de-noms-autoconf","title":"Espaces de noms Autoconf","text":"<p>Nous avons ajout\u00e9 une fonctionnalit\u00e9 d'espace de noms aux int\u00e9grations autoconf. Les espaces de noms vous permettent de regrouper vos instances et d'appliquer des param\u00e8tres uniquement \u00e0 celles-ci. Pour plus d'informations, consultez les sections suivantes en fonction de votre int\u00e9gration :</p> <ul> <li>Autoconf/espaces de noms</li> <li>Kubernetes/espaces de noms</li> <li>Swarm/espaces de noms</li> </ul>"},{"location":"fr/upgrading/#procedure_1","title":"Proc\u00e9dure","text":"<ol> <li> <p>Sauvegardez la base de donn\u00e9es :</p> <ul> <li>Avant de proc\u00e9der \u00e0 la mise \u00e0 niveau de la base de donn\u00e9es, assurez-vous d'effectuer une sauvegarde compl\u00e8te de l'\u00e9tat actuel de la base de donn\u00e9es.</li> <li>Utilisez les outils appropri\u00e9s pour sauvegarder l'int\u00e9gralit\u00e9 de la base de donn\u00e9es, y compris les donn\u00e9es, les sch\u00e9mas et les configurations.</li> </ul> 1.5.7 et apr\u00e8s1.5.6 et avant DockerLinux <pre><code>docker exec -it -e BACKUP_DIRECTORY=/path/to/backup/directory &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/backup/directory /path/to/backup/directory\n</code></pre> Informations pour les utilisateurs de Red Hat Enterprise Linux (RHEL) 8.10 <p>Si vous utilisez RHEL 8.10 et pr\u00e9voyez d'utiliser une base de donn\u00e9es externe, vous devrez installer le paquet <code>mysql-community-client</code> afin que la commande <code>mysqldump</code> soit disponible. Vous pouvez installer le paquet en ex\u00e9cutant les commandes suivantes :</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Installez le paquet de configuration du d\u00e9p\u00f4t MySQL</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Activez le d\u00e9p\u00f4t MySQL</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Installez le client MySQL</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Installez le paquet de configuration du d\u00e9p\u00f4t PostgreSQL</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Installez le client PostgreSQL</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/path/to/backup/directory bwcli plugin backup save\n</code></pre> SQLiteMariaDBMySQLPostgreSQL DockerLinux <p>Nous devons d'abord installer le paquet <code>sqlite</code> dans le conteneur.</p> <pre><code>docker exec -u 0 -it &lt;scheduler_container&gt; apk add sqlite\n</code></pre> <p>Ensuite, sauvegardez la base de donn\u00e9es.</p> <pre><code>docker exec -it &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e PGPASSWORD=&lt;database_password&gt; &lt;database_container&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>PGPASSWORD=&lt;database_password&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Mettre \u00e0 niveau BunkerWeb\u00a0:</p> <ul> <li> <p>Mettez \u00e0 niveau BunkerWeb vers la derni\u00e8re version.</p> DockerLinux <ol> <li> <p>Mettre \u00e0 jour le fichier Docker Compose : Mettez \u00e0 jour le fichier Docker Compose pour utiliser la nouvelle version de l'image BunkerWeb.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Red\u00e9marrer les conteneurs : Red\u00e9marrez les conteneurs pour appliquer les modifications.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> <ol> <li> <p>Arr\u00eatez les services:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Mettre \u00e0 jour BunkerWeb :</p> Debian/UbuntuFedora/RedHat <p>Tout d'abord, si vous avez pr\u00e9c\u00e9demment marqu\u00e9 le paquet BunkerWeb comme mis en attente, annulez cette mise en attente :</p> <p>Vous pouvez afficher la liste des paquets en attente avec <code>apt-mark showhold</code></p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Ensuite, vous pouvez mettre \u00e0 jour le paquet BunkerWeb :</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Pour emp\u00eacher le paquet BunkerWeb d'\u00eatre mis \u00e0 niveau lors de l'ex\u00e9cution de <code>apt upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>Plus de d\u00e9tails dans la page int\u00e9gration Linux.</p> <p>Tout d'abord, si vous avez pr\u00e9c\u00e9demment verrouill\u00e9 (mis en attente) le paquet BunkerWeb, annulez ce verrouillage :</p> <p>Vous pouvez afficher la liste des paquets verrouill\u00e9s avec <code>dnf versionlock list</code></p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Ensuite, vous pouvez mettre \u00e0 jour le paquet BunkerWeb :</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Pour emp\u00eacher le paquet BunkerWeb d'\u00eatre mis \u00e0 niveau lors de l'ex\u00e9cution de <code>dnf upgrade</code>, vous pouvez utiliser la commande suivante :</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>Plus de d\u00e9tails dans la page int\u00e9gration Linux.</p> </li> <li> <p>D\u00e9marrer les services :     <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>     Ou red\u00e9marrez le syst\u00e8me :     <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>V\u00e9rifier les journaux : v\u00e9rifiez les journaux du service de planification pour vous assurer que la migration a r\u00e9ussi.</p> DockerLinux <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>V\u00e9rifier la base de donn\u00e9es : v\u00e9rifiez que la mise \u00e0 niveau de la base de donn\u00e9es a r\u00e9ussi en v\u00e9rifiant les donn\u00e9es et les configurations dans le nouveau conteneur de base de donn\u00e9es.</p> </li> </ol>"},{"location":"fr/upgrading/#rollback_1","title":"Rollback","text":"<p>En cas de probl\u00e8mes</p> <p>Si vous rencontrez des probl\u00e8mes lors de la mise \u00e0 niveau, vous pouvez revenir \u00e0 la version pr\u00e9c\u00e9dente de la base de donn\u00e9es en restaurant la sauvegarde effectu\u00e9e \u00e0 l'\u00e9tape 1.</p> <p>Obtenez de l'aide et plus d'informations :</p> <ul> <li>Commander une assistance professionnelle</li> <li>Cr\u00e9er un probl\u00e8me sur GitHub</li> <li>Rejoignez le serveur Discord de BunkerWeb</li> </ul> DockerLinux <ol> <li> <p>Extrayez la sauvegarde si elle est compress\u00e9e.</p> <p>Extrayez d'abord le fichier zip de sauvegarde :</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Supprimez le fichier de base de donn\u00e9es existant.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Corrigez les permissions.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Arr\u00eatez la pile.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Restaurez la sauvegarde.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;your_password&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Arr\u00eatez la pile.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Supprimez la base de donn\u00e9es existante.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recr\u00e9ez la base de donn\u00e9es.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Arr\u00eatez la pile.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>R\u00e9trograder BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;old_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;old_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;old_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;old_version&gt;\n        ...\n</code></pre> </li> <li> <p>D\u00e9marrez les conteneurs.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Extrayez la sauvegarde si elle est compress\u00e9e.</p> <p>Extrayez d'abord le fichier zip de sauvegarde :</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Arr\u00eatez les services.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> <ol> <li> <p>Supprimez la base de donn\u00e9es existante.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Recr\u00e9ez la base de donn\u00e9es.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaurez la sauvegarde.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>D\u00e9marrez les services.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>R\u00e9trograder BunkerWeb.</p> <ul> <li>R\u00e9trogradez BunkerWeb vers la version pr\u00e9c\u00e9dente en suivant les m\u00eames \u00e9tapes que lors de la mise \u00e0 niveau de BunkerWeb dans la page d'int\u00e9gration Linux</li> </ul> </li> </ol>"},{"location":"fr/web-ui/","title":"Interface utilisateur Web","text":""},{"location":"fr/web-ui/#apercu","title":"Aper\u00e7u","text":"<p>Le \"Web UI\" est une application Web qui vous aide \u00e0 g\u00e9rer votre instance BunkerWeb \u00e0 l'aide d'une interface conviviale au lieu de vous fier uniquement \u00e0 la ligne de commande.</p> <p>Voici une liste des fonctionnalit\u00e9s offertes par l'interface utilisateur web :</p> <ul> <li>Obtenez une vue compl\u00e8te des attaques bloqu\u00e9es</li> <li>D\u00e9marrez, arr\u00eatez, red\u00e9marrez et rechargez votre instance BunkerWeb</li> <li>Ajouter, modifier et supprimer des param\u00e8tres pour vos applications web</li> <li>Ajoutez, modifiez et supprimez des configurations personnalis\u00e9es pour NGINX et ModSecurity</li> <li>Installer et d\u00e9sinstaller des plug-ins externes</li> <li>Explorer les fichiers mis en cache</li> <li>Surveillez l'ex\u00e9cution des t\u00e2ches et red\u00e9marrez-les si n\u00e9cessaire</li> <li>Afficher les journaux et rechercher des mod\u00e8les</li> </ul>"},{"location":"fr/web-ui/#conditions-prealables","title":"Conditions pr\u00e9alables","text":"<p>\u00c9tant donn\u00e9 que l'interface utilisateur Web est une application Web, l'architecture recommand\u00e9e consiste \u00e0 ex\u00e9cuter BunkerWeb devant elle en tant que proxy inverse. La proc\u00e9dure d'installation recommand\u00e9e consiste \u00e0 utiliser l'assistant de configuration, qui vous guidera \u00e9tape par \u00e9tape, comme d\u00e9crit dans le guide de d\u00e9marrage rapide.</p> <p>Consid\u00e9rations de s\u00e9curit\u00e9</p> <p>La s\u00e9curit\u00e9 de l'interface utilisateur Web est extr\u00eamement importante. Si une personne non autoris\u00e9e obtient l'acc\u00e8s \u00e0 l'application, elle pourra non seulement modifier vos configurations, mais aussi potentiellement ex\u00e9cuter du code dans le contexte de BunkerWeb (par exemple via une configuration personnalis\u00e9e contenant du code Lua). Nous vous recommandons vivement de respecter au minimum les bonnes pratiques de s\u00e9curit\u00e9 suivantes :</p> <ul> <li>Choisissez un mot de passe fort pour la connexion (au moins 8 caract\u00e8res, dont 1 lettre minuscule, 1 lettre majuscule, 1 chiffre et 1 caract\u00e8re sp\u00e9cial)</li> <li>Placez l'interface utilisateur web sous une URI \u00ab difficile \u00e0 deviner \u00bb</li> <li>Activer l'authentification \u00e0 deux facteurs (2FA)</li> <li>N'exposez pas l'interface utilisateur Web sur Internet sans restrictions suppl\u00e9mentaires</li> <li>Appliquez les bonnes pratiques r\u00e9pertori\u00e9es dans la section Utilisations avanc\u00e9es de la documentation en fonction de votre cas d'utilisation</li> </ul>"},{"location":"fr/web-ui/#mise-a-niveau-vers-pro","title":"Mise \u00e0 niveau vers PRO","text":"<p>BunkerWeb PRO essai gratuit</p> <p>Vous souhaitez tester rapidement BunkerWeb PRO pendant un mois ? Utilisez le code <code>freetrial</code> lors de votre commande sur le Panel BunkerWeb ou en cliquant ici pour appliquer directement le code promo (sera effectif \u00e0 la caisse).</p> <p>Une fois que vous avez votre cl\u00e9 de licence PRO \u00e0 partir du Panel BunkerWeb, vous pouvez la coller dans la page PRO de l'interface utilisateur Web.</p> <p> </p> Mise \u00e0 niveau vers PRO \u00e0 partir de l'interface utilisateur Web <p>Temps de mise \u00e0 niveau</p> <p>La version PRO est t\u00e9l\u00e9charg\u00e9e en arri\u00e8re-plan par le planificateur, la mise \u00e0 niveau peut prendre un certain temps.</p> <p>Lorsque votre instance BunkerWeb aura \u00e9t\u00e9 mise \u00e0 niveau vers la version PRO, vous verrez la date d'expiration de votre licence et le nombre maximum de services que vous pouvez prot\u00e9ger.</p> <p> </p> Informations sur la licence PRO"},{"location":"fr/web-ui/#acces-aux-journaux","title":"Acc\u00e8s aux journaux","text":"<p>\u00c0 partir de la version <code>1.6</code>, la m\u00e9thode d'acc\u00e8s aux journaux a chang\u00e9. Cette mise \u00e0 jour affecte sp\u00e9cifiquement les int\u00e9grations bas\u00e9es sur des conteneurs : l'interface utilisateur web lit d\u00e9sormais les fichiers journaux du <code>/var/log/bunkerweb</code> r\u00e9pertoire.</p> <p>Pour que les journaux restent accessibles \u00e0 partir de l'interface utilisateur Web, nous vous recommandons d'utiliser un serveur syslog, tel que <code>syslog-ng</code>, pour lire les journaux et cr\u00e9er les fichiers correspondants dans le <code>/var/log/bunkerweb</code> r\u00e9pertoire.</p> <p>Utilisation du dossier local pour les journaux</p> <p>Pour des raisons de s\u00e9curit\u00e9, l'interface utilisateur web s'ex\u00e9cute en tant que utilisateur non privil\u00e9gi\u00e9 avec UID 101 et GID 101 \u00e0 l'int\u00e9rieur du conteneur : en cas d'exploitation d'une vuln\u00e9rabilit\u00e9, l'attaquant ne disposera pas des privil\u00e8ges root complets (UID/GID 0).</p> <p>Cependant, il y a un inconv\u00e9nient : si vous utilisez un dossier local pour les journaux, vous devez d\u00e9finir les permissions correctes afin que l'utilisateur non privil\u00e9gi\u00e9 puisse lire les fichiers journaux. Par exemple :</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nchown root:101 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Alternativement, si le dossier existe d\u00e9j\u00e0 :</p> <pre><code>chown -R root:101 bw-logs &amp;&amp; \\\nchmod -R 770 bw-logs\n</code></pre> <p>Si vous utilisez Docker en mode rootless ou podman, les UID et GID dans le conteneur seront mapp\u00e9s sur d'autres valeurs sur l'h\u00f4te. Vous devrez d'abord v\u00e9rifier vos subuid et subgid initiaux :</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Par exemple, si vous avez une valeur de 100000, l'UID/GID mapp\u00e9 sera 100100 (100000 + 100) :</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nsudo chgrp 100100 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Ou si le dossier existe d\u00e9j\u00e0 :</p> <pre><code>sudo chgrp -R 100100 bw-logs &amp;&amp; \\\nsudo chmod -R 770 bw-logs\n</code></pre>"},{"location":"fr/web-ui/#composez-des-passe-partout","title":"Composez des passe-partout","text":"Docker <p>Pour transf\u00e9rer correctement les journaux vers le r\u00e9pertoire <code>/var/log/bunkerweb</code> dans l'int\u00e9gration Docker, vous devrez rediriger les journaux vers un fichier en utilisant <code>syslog-ng</code>. Voici un exemple de comment proc\u00e9der :</p> <p>```yaml x-bw-env: &amp;bw-env   # We anchor the environment variables to avoid duplication</p> <p>API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"   # Jeton API optionnel pour s\u00e9curiser l'acc\u00e8s \u00e0 l'API   API_TOKEN: \"\"</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # Change it to a hard-to-guess URI\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the admin user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Bind to low ports\n      - NET_BROADCAST  # Send broadcasts\n      - NET_RAW  # Use raw sockets\n      - DAC_READ_SEARCH  # Read files bypassing permissions\n      - DAC_OVERRIDE  # Override file permissions\n      - CHOWN  # Change ownership\n      - SYSLOG  # Write to system logs\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # This is the syslog-ng configuration file\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Make sure to set the correct IP address\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n```\n</code></pre> Docker Autoconf <p>Pour transf\u00e9rer correctement les journaux vers le r\u00e9pertoire <code>/var/log/bunkerweb</code> dans l'int\u00e9gration Docker, vous devrez rediriger les journaux vers un fichier en utilisant <code>syslog-ng</code>. Voici un exemple de comment proc\u00e9der :</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # We anchor the environment variables to avoid duplication\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\" # We don't need to specify the BunkerWeb instance here as they are automatically detected by the autoconf service\n      SERVER_NAME: \"\" # The server name will be filled with services labels\n      MULTISITE: \"yes\" # Mandatory setting for autoconf / ui\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # This is the Docker socket address\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-autoconf\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the admin user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    volumes:\n      - bw-logs:/var/log/bunkerweb\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\" # Change it to a hard-to-guess URI\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # This will be the tag used by syslog-ng to create the log file\n        syslog-address: \"udp://10.20.30.254:514\" # This is the syslog-ng container address\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Bind to low ports\n      - NET_BROADCAST  # Send broadcasts\n      - NET_RAW  # Use raw sockets\n      - DAC_READ_SEARCH  # Read files bypassing permissions\n      - DAC_OVERRIDE  # Override file permissions\n      - CHOWN  # Change ownership\n      - SYSLOG  # Write to system logs\n    volumes:\n      - bw-logs:/var/log/bunkerweb # This is the volume used to store the logs\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # This is the syslog-ng configuration file\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Make sure to set the correct IP address\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre>"},{"location":"fr/web-ui/#configuration-de-syslog-ng","title":"Configuration de syslog-ng","text":"<p>Voici un exemple de <code>syslog-ng.conf</code> fichier que vous pouvez utiliser pour transf\u00e9rer les journaux vers un fichier :</p> <pre><code>@version: 4.8\n\n# Source configuration to receive logs from Docker containers\nsource s_net {\n  udp(\n    ip(\"0.0.0.0\")\n  );\n};\n\n# Template to format log messages\ntemplate t_imp {\n  template(\"$MSG\\n\");\n  template_escape(no);\n};\n\n# Destination configuration to write logs to dynamically named files\ndestination d_dyna_file {\n  file(\n    \"/var/log/bunkerweb/${PROGRAM}.log\"\n    template(t_imp)\n    owner(\"101\")\n    group(\"101\")\n    dir_owner(\"root\")\n    dir_group(\"101\")\n    perm(0440)\n    dir_perm(0770)\n    create_dirs(yes)\n  );\n};\n\n# Log path to direct logs to dynamically named files\nlog {\n  source(s_net);\n  destination(d_dyna_file);\n};\n</code></pre>"},{"location":"fr/web-ui/#gestion-de-compte","title":"Gestion de compte","text":"<p>Vous pouvez acc\u00e9der \u00e0 la page de gestion du compte en cliquant sur l'image de profil dans le coin sup\u00e9rieur droit :</p> <p> </p> Acc\u00e8s \u00e0 la page du compte depuis le coin sup\u00e9rieur droit"},{"location":"fr/web-ui/#nom-dutilisateur-mot-de-passe","title":"Nom d'utilisateur / Mot de passe","text":"<p>Mot de passe/nom d'utilisateur perdu</p> <p>Si vous avez oubli\u00e9 vos identifiants de l'interface utilisateur, vous pouvez les r\u00e9initialiser depuis la ligne de commande en suivant les \u00e9tapes d\u00e9crites dans la section de d\u00e9pannage.</p> <p>Vous pouvez mettre \u00e0 jour votre nom d'utilisateur ou votre mot de passe en remplissant les formulaires d\u00e9di\u00e9s dans l'onglet S\u00e9curit\u00e9. Pour des raisons de s\u00e9curit\u00e9, vous devez entrer votre mot de passe actuel m\u00eame si vous \u00eates connect\u00e9.</p> <p>Veuillez noter que lorsque votre nom d'utilisateur ou votre mot de passe est mis \u00e0 jour, vous serez d\u00e9connect\u00e9 de l'interface utilisateur Web pour vous connecter \u00e0 nouveau.</p> <p> </p> Formulaire de nom d'utilisateur / Mot de passe"},{"location":"fr/web-ui/#authentification-a-deux-facteurs","title":"Authentification \u00e0 deux facteurs","text":"<p>Cl\u00e9s de cryptage obligatoires</p> <p>Lorsque vous activez la 2FA, vous devez fournir au moins une cl\u00e9 de chiffrement. Cette cl\u00e9 sera utilis\u00e9e pour chiffrer vos secrets TOTP.</p> <p>La m\u00e9thode recommand\u00e9e pour g\u00e9n\u00e9rer une cl\u00e9 valide est d'utiliser le package <code>passlib</code> :</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> <p>Placez la cl\u00e9 g\u00e9n\u00e9r\u00e9e dans la variable d'environnement <code>TOTP_ENCRYPTION_KEYS</code> de l'interface Web. Vous pouvez \u00e9galement d\u00e9finir plusieurs cl\u00e9s s\u00e9par\u00e9es par des espaces ou sous forme de dictionnaire (pour la r\u00e9trocompatibilit\u00e9).</p> <p>Cl\u00e9 secr\u00e8te perdue</p> <p>En cas de perte de votre cl\u00e9 secr\u00e8te, deux options sont disponibles :</p> <ul> <li>Vous pouvez r\u00e9cup\u00e9rer votre compte \u00e0 l'aide de l'un des codes de r\u00e9cup\u00e9ration fournis lorsque vous avez activ\u00e9 2FA (un code de r\u00e9cup\u00e9ration ne peut \u00eatre utilis\u00e9 qu'une seule fois).</li> <li>Vous pouvez d\u00e9sactiver 2FA \u00e0 partir de l'interface de ligne de commande en suivant les \u00e9tapes d\u00e9crites dans la section de d\u00e9pannage.</li> </ul> <p>Vous pouvez renforcer la s\u00e9curit\u00e9 de votre connexion en ajoutant ** l'authentification \u00e0 deux facteurs (2FA)** \u00e0 votre compte. Ce faisant, un code suppl\u00e9mentaire sera n\u00e9cessaire en plus de votre mot de passe.</p> <p>L'interface utilisateur web utilise  le mot de passe \u00e0 usage unique bas\u00e9 sur le temps (TOTP) comme impl\u00e9mentation 2FA : \u00e0 l'aide d'une cl\u00e9 secr\u00e8te, l'algorithme g\u00e9n\u00e9rera des mots de passe \u00e0 usage unique valables uniquement pour une courte p\u00e9riode de temps.</p> <p>Tout client TOTP tel que Google Authenticator, Authy, FreeOTP, ... Peut \u00eatre utilis\u00e9 pour stocker la cl\u00e9 secr\u00e8te et g\u00e9n\u00e9rer les codes. Veuillez noter qu'une fois TOTP activ\u00e9, vous ne pourrez plus le r\u00e9cup\u00e9rer \u00e0 partir de l'interface utilisateur Web.</p> <p>Les \u00e9tapes suivantes sont n\u00e9cessaires pour activer la fonctionnalit\u00e9 TOTP \u00e0 partir de l'interface utilisateur Web :</p> <ul> <li>Copiez la cl\u00e9 secr\u00e8te ou utilisez le code QR sur votre application d'authentification</li> <li>Entrez le code TOTP actuel dans la saisie 2FA</li> <li>Entrez votre mot de passe actuel</li> </ul> <p>Actualisation de la cl\u00e9 secr\u00e8te</p> <p>Une nouvelle cl\u00e9 secr\u00e8te est g\u00e9n\u00e9r\u00e9e chaque fois que vous visitez la page ou soumettez le formulaire. En cas de probl\u00e8me (par exemple, un code TOTP expir\u00e9), vous devrez copier la nouvelle cl\u00e9 secr\u00e8te dans votre application d'authentification jusqu'\u00e0 ce que 2FA soit activ\u00e9 avec succ\u00e8s.</p> <p>Codes de r\u00e9cup\u00e9ration</p> <p>Lorsque vous activez la 2FA, vous recevrez 5 codes de r\u00e9cup\u00e9ration. Ces codes peuvent \u00eatre utilis\u00e9s pour r\u00e9cup\u00e9rer votre compte si vous perdez votre cl\u00e9 secr\u00e8te TOTP. Chaque code ne peut \u00eatre utilis\u00e9 qu'une seule fois. Ces codes ne seront affich\u00e9s qu'une seule fois, assurez\u2011vous donc de les conserver dans un endroit s\u00fbr.</p> <p>Si vous perdez vos codes de r\u00e9cup\u00e9ration, vous pouvez les r\u00e9g\u00e9n\u00e9rer via la section TOTP de la page de gestion du compte. Veuillez noter que les anciens codes de r\u00e9cup\u00e9ration seront invalid\u00e9s.</p> <p>Vous pouvez activer ou d\u00e9sactiver l'authentification \u00e0 deux facteurs et actualiser les codes de r\u00e9cup\u00e9ration dans l'onglet S\u00e9curit\u00e9 :</p> <p> </p> Formulaires TOTP d'activation/d\u00e9sactivation/actualisation des codes de r\u00e9cup\u00e9ration <p>Une fois la combinaison connexion/mot de passe r\u00e9ussie vous sera demand\u00e9 de saisir votre code TOTP :</p> <p> </p> 2FA sur la page de connexion"},{"location":"fr/web-ui/#sessions-en-cours","title":"Sessions en cours","text":"<p>Dans l' onglet Session, vous pourrez lister et r\u00e9voquer les sessions en cours :</p> <p> </p> G\u00e9rer les sessions"},{"location":"fr/web-ui/#advanced-installation","title":"Advanced installation","text":"<p>L'interface utilisateur web peut \u00eatre d\u00e9ploy\u00e9e et configur\u00e9e sans passer par l'assistant d'installation : la configuration se fait par le biais de variables d'environnement, qui peuvent \u00eatre ajout\u00e9es directement aux conteneurs ou dans le <code>/etc/bunkerweb/ui.env</code> fichier dans le cas d'une int\u00e9gration Linux.</p> <p>Variables d'environnement sp\u00e9cifiques \u00e0 l'interface utilisateur Web</p> <p>L'interface utilisateur Web utilise les variables d'environnement suivantes :</p> <ul> <li><code>OVERRIDE_ADMIN_CREDS</code>: d\u00e9finissez-le sur <code>yes</code> pour activer le remplacement m\u00eame si les informations d'identification de l'administrateur sont d\u00e9j\u00e0 d\u00e9finies (la valeur par d\u00e9faut est <code>no</code>).</li> <li><code>ADMIN_USERNAME</code>: nom d'utilisateur pour acc\u00e9der \u00e0 l'interface web.</li> <li><code>ADMIN_PASSWORD</code>: mot de passe pour acc\u00e9der \u00e0 l'interface web.</li> <li><code>FLASK_SECRET</code>: une cl\u00e9 secr\u00e8te utilis\u00e9e pour chiffrer le cookie de session (si elle n'est pas d\u00e9finie, une cl\u00e9 al\u00e9atoire sera g\u00e9n\u00e9r\u00e9e).</li> <li><code>TOTP_ENCRYPTION_KEYS</code> (ou <code>TOTP_SECRETS</code>) : une liste de cl\u00e9s de chiffrement TOTP s\u00e9par\u00e9es par des espaces ou un dictionnaire (par exemple : <code>{\"1\": \"mysecretkey\"}</code> ou <code>mysecretkey</code> ou <code>mysecretkey mysecretkey1</code>). Nous vous recommandons vivement de d\u00e9finir cette variable si vous souhaitez utiliser 2FA, car elle sera utilis\u00e9e pour chiffrer les cl\u00e9s secr\u00e8tes TOTP (si elle n'est pas d\u00e9finie, un nombre al\u00e9atoire de cl\u00e9s secr\u00e8tes sera g\u00e9n\u00e9r\u00e9). Pour plus d'informations, consultez la documentation de passlib .</li> <li><code>UI_LISTEN_ADDR</code> (recommand\u00e9) : l'adresse \u00e0 laquelle l'interface utilisateur web \u00e9coutera (par d\u00e9faut <code>0.0.0.0</code> dans les images Docker et <code>127.0.0.1</code> sur les installations Linux). Revient \u00e0 <code>LISTEN_ADDR</code> si non d\u00e9fini.</li> <li><code>UI_LISTEN_PORT</code> (recommand\u00e9) : le port sur lequel l'interface utilisateur web \u00e9coutera (par d\u00e9faut <code>7000</code>). Revient \u00e0 <code>LISTEN_PORT</code> si non d\u00e9fini.</li> <li><code>MAX_WORKERS</code>: le nombre de workers utilis\u00e9s par l'interface utilisateur web (la valeur par d\u00e9faut est le nombre de CPU).</li> <li><code>MAX_THREADS</code>: le nombre de threads utilis\u00e9s par l'interface utilisateur web (* 2 par d\u00e9faut <code>MAX_WORKERS</code> ).</li> <li><code>FORWARDED_ALLOW_IPS</code>: une liste d'adresses IP ou de r\u00e9seaux autoris\u00e9s \u00e0 \u00eatre utilis\u00e9s dans l' <code>X-Forwarded-For</code> en-t\u00eate (par d\u00e9faut <code>*</code> dans les images Docker et <code>127.0.0.1</code> sur les installations Linux).</li> <li><code>CHECK_PRIVATE_IP</code>: d\u00e9finissez-le sur <code>yes</code> pour ne pas d\u00e9connecter les utilisateurs dont l'adresse IP a \u00e9t\u00e9 modifi\u00e9e au cours d'une session s'ils se trouvent dans un r\u00e9seau priv\u00e9 (par d\u00e9faut ). <code>yes</code> (Les adresses IP non priv\u00e9es sont toujours v\u00e9rifi\u00e9es).</li> <li><code>ENABLE_HEALTHCHECK</code>: d\u00e9finissez-le sur <code>yes</code> pour activer le point de <code>/healthcheck</code> terminaison qui renvoie une r\u00e9ponse JSON simple avec des informations d'\u00e9tat (la valeur par d\u00e9faut est <code>no</code>).</li> </ul> <p>L'interface utilisateur Web utilisera ces variables pour vous authentifier et g\u00e9rer la fonctionnalit\u00e9 2FA.</p> <p>G\u00e9n\u00e9ration de secrets recommand\u00e9s</p> <p>Pour g\u00e9n\u00e9rer un ADMIN_PASSWORD valide, nous vous recommandons d'utiliser un gestionnaire de mots de passe ou un g\u00e9n\u00e9rateur de mots de passe.</p> <p>Vous pouvez g\u00e9n\u00e9rer un FLASK_SECRET valide en utilisant la commande suivante :</p> <pre><code>python3 -c \"import secrets; print(secrets.token_hex(64))\"\n</code></pre> <p>Vous pouvez g\u00e9n\u00e9rer des TOTP_ENCRYPTION_KEYS valides, s\u00e9par\u00e9es par des espaces, en utilisant la commande suivante (le paquet <code>passlib</code> est requis) :</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> LinuxDockerDocker autoconfKubernetesSwarm <p>L'installation de l'interface utilisateur Web via l'int\u00e9gration Linux est assez simple puisqu'elle est install\u00e9e avec BunkerWeb.</p> <p>L'interface utilisateur est fournie en tant que service systemd nomm\u00e9 <code>bunkerweb-ui</code>. Veuillez vous assurer qu'il est activ\u00e9 :</p> <pre><code>sudo systemctl enable bunkerweb-ui &amp;&amp; \\\nsudo systemctl status bunkerweb-ui\n</code></pre> <p>Un fichier d'environnement d\u00e9di\u00e9 situ\u00e9 dans <code>/etc/bunkerweb/ui.env</code> est utilis\u00e9 pour configurer l'interface utilisateur :</p> <pre><code>ADMIN_USERNAME=changeme\nADMIN_PASSWORD=changeme\nTOTP_ENCRYPTION_KEYS=mysecret\n</code></pre> <p>Remplacez les valeurs <code>changeme</code> par vos propres valeurs.</p> <p>Pensez \u00e0 d\u00e9finir une cl\u00e9 secr\u00e8te plus robuste pour <code>TOTP_ENCRYPTION_KEYS</code>.</p> <p>Chaque fois que vous modifiez le fichier <code>/etc/bunkerweb/ui.env</code>, vous devez red\u00e9marrer le service :</p> <pre><code>systemctl restart bunkerweb-ui\n</code></pre> <p>L'acc\u00e8s \u00e0 l'interface utilisateur via BunkerWeb se fait via une configuration classique de proxy inverse. Notez que l'interface \u00e9coute sur le port <code>7000</code> et uniquement sur l'interface de loopback.</p> <p>Voici le mod\u00e8le <code>/etc/bunkerweb/variables.env</code> que vous pouvez utiliser :</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nSERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_TEMPLATE=ui\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/changeme\nwww.example.com_REVERSE_PROXY_HOST=http://127.0.0.1:7000\n</code></pre> <p>Don't forget to reload the <code>bunkerweb</code> service:</p> <pre><code>systemctl reload bunkerweb\n</code></pre> <p>L'interface Web peut \u00eatre d\u00e9ploy\u00e9e en utilisant un conteneur d\u00e9di\u00e9 disponible sur Docker Hub :</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Sinon, vous pouvez aussi le construire vous\u2011m\u00eame :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>L'acc\u00e8s \u00e0 l'interface Web via BunkerWeb se fait par une configuration classique de proxy inverse. Nous vous recommandons de connecter BunkerWeb et l'interface Web via un r\u00e9seau d\u00e9di\u00e9 (par exemple <code>bw-universe</code>, \u00e9galement utilis\u00e9 par le planificateur) afin qu'ils ne soient pas sur le m\u00eame r\u00e9seau que vos services Web, pour des raisons de s\u00e9curit\u00e9 \u00e9videntes. Notez que le conteneur de l'interface \u00e9coute sur le port <code>7000</code>.</p> <p>Backend de base de donn\u00e9es</p> <p>Si vous souhaitez utiliser un backend de base de donn\u00e9es autre que MariaDB, consultez les fichiers docker-compose dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>Voici le mod\u00e8le docker-compose que vous pouvez utiliser (n'oubliez pas de modifier les valeurs <code>changeme</code>) :</p> <pre><code>x-ui-env: &amp;ui-env\n  # We anchor the environment variables to avoid duplication\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    environment:\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Make sure to set the correct IP range so the scheduler can send the configuration to the instance\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Make sure to set the correct instance name\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # We mirror the API_WHITELIST_IP from the bunkerweb service\n      API_TOKEN: \"\" # Miroir du API_TOKEN si vous l'utilisez\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # Remember to set a stronger URI\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\" # The web UI container is listening on the 7000 port by default\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the changeme user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>L'interface Web peut \u00eatre d\u00e9ploy\u00e9e en utilisant un conteneur d\u00e9di\u00e9 disponible sur Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativement, vous pouvez aussi le construire vous\u2011m\u00eame :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Variables d'environnement</p> <p>Veuillez lire la section Pr\u00e9requis pour consulter toutes les variables d'environnement que vous pouvez d\u00e9finir pour personnaliser l'interface Web.</p> <p>L'acc\u00e8s \u00e0 l'interface Web via BunkerWeb se fait par une configuration classique de proxy inverse. Nous vous recommandons de connecter BunkerWeb et l'interface Web via un r\u00e9seau d\u00e9di\u00e9 (comme <code>bw-universe</code> utilis\u00e9 \u00e9galement par le planificateur et l'autoconf) afin qu'ils ne se trouvent pas sur le m\u00eame r\u00e9seau que vos services Web, pour des raisons de s\u00e9curit\u00e9 \u00e9videntes. Veuillez noter que le conteneur de l'interface Web \u00e9coute sur le port <code>7000</code>.</p> <p>Backend de base de donn\u00e9es</p> <p>Si vous souhaitez utiliser un backend de base de donn\u00e9es autre que MariaDB, consultez les fichiers docker-compose dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>Voici le mod\u00e8le docker-compose que vous pouvez utiliser (n'oubliez pas de modifier les valeurs <code>changeme</code>) :</p> <pre><code>x-ui-env: &amp;ui-env\n  # We anchor the environment variables to avoid duplication\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # For QUIC / HTTP3 support\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # We set the instance label to allow the autoconf to detect the instance\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the changeme user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    networks:\n      - bw-universe\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>L'interface Web peut \u00eatre d\u00e9ploy\u00e9e \u00e0 l'aide d'un conteneur d\u00e9di\u00e9 disponible sur Docker Hub et vous pouvez la d\u00e9ployer comme un Deployment Kubernetes standard (voir la documentation sur les Deployments).</p> <p>L'acc\u00e8s \u00e0 l'interface Web via BunkerWeb se fait par une configuration classique de proxy inverse. La segmentation r\u00e9seau entre l'interface Web et les services web n'est pas couverte par cette documentation. Veuillez noter que le conteneur de l'interface Web \u00e9coute sur le port <code>7000</code>.</p> <p>Backend de base de donn\u00e9es</p> <p>Si vous souhaitez utiliser un backend de base de donn\u00e9es autre que MariaDB, consultez les fichiers YAML dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>Voici la partie correspondante de votre fichier values.yaml que vous pouvez utiliser :</p> <pre><code>settings:\n  # Use an existing secret named bunkerweb and containing the following values:\n  # - admin-username\n  # - admin-password\n  # - flask-secret\n  # - totp-secrets\n  existingSecret: \"secret-bunkerweb\"\nui:\n  wizard: false\n  ingress:\n    enabled: true\n    serverName: \"www.example.com\"\n    serverPath: \"/admin\"\n  overrideAdminCreds: \"yes\"\n</code></pre> <p>Obsol\u00e8te</p> <p>L'int\u00e9gration Swarm est obsol\u00e8te et sera supprim\u00e9e dans une future version. Veuillez envisager d'utiliser l'int\u00e9gration Kubernetes \u00e0 la place.</p> <p>Plus d'informations sont disponibles dans la documentation de l'int\u00e9gration Swarm.</p> <p>L'interface Web peut \u00eatre d\u00e9ploy\u00e9e en utilisant un conteneur d\u00e9di\u00e9 disponible sur Docker Hub :</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativement, vous pouvez aussi la construire vous\u2011m\u00eame :</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>L'acc\u00e8s \u00e0 l'interface Web via BunkerWeb se fait par une configuration classique de proxy inverse. Nous vous recommandons de connecter BunkerWeb et l'interface Web via un r\u00e9seau d\u00e9di\u00e9 (par exemple <code>bw-universe</code>, \u00e9galement utilis\u00e9 par le planificateur et l'autoconf) afin qu'ils ne soient pas sur le m\u00eame r\u00e9seau que vos services Web, pour des raisons de s\u00e9curit\u00e9 \u00e9videntes. Notez que le conteneur de l'interface Web \u00e9coute sur le port <code>7000</code>.</p> <p>Backend de base de donn\u00e9es</p> <p>Si vous souhaitez utiliser un backend de base de donn\u00e9es autre que MariaDB, veuillez consulter les fichiers de stack dans le dossier misc/integrations du d\u00e9p\u00f4t.</p> <p>Voici le mod\u00e8le de stack que vous pouvez utiliser (n'oubliez pas de modifier les valeurs <code>changeme</code>) :</p> <pre><code>x-ui-env: &amp;ui-env\n  # We anchor the environment variables to avoid duplication\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Remember to set a stronger password for the database\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # For QUIC / HTTP3 support\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # This is used to persist the cache and other data like the backups\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # We set the max allowed packet size to avoid issues with large queries\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Remember to set a stronger password for the database\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Remember to set a stronger password for the changeme user\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Remember to set a stronger secret key (see the Prerequisites section)\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_TEMPLATE=ui\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"fr/web-ui/#prise-en-charge-linguistique-et-localisation","title":"Prise en charge linguistique et localisation","text":"<p>L'interface utilisateur de BunkerWeb prend en charge plusieurs langues. Les traductions sont g\u00e9r\u00e9es dans l' <code>src/ui/app/static/locales</code> annuaire. Les langues suivantes sont actuellement disponibles :</p> <ul> <li>Fran\u00e7ais (en)</li> <li>Fran\u00e7ais (fr)</li> <li>Arabe (ar)</li> <li>Bengali (bn)</li> <li>Fran\u00e7ais (en)</li> <li>Hindi (hi)</li> <li>Portugais (pt)</li> <li>Russe (ru)</li> <li>L'ourdou (votre)</li> <li>Chinois (zh)</li> <li>Allemand (de)</li> <li>Italien (it)</li> </ul> <p>Consultez locales/README.md pour plus de d\u00e9tails sur la provenance des traductions et l'\u00e9tat de la r\u00e9vision.</p>"},{"location":"fr/web-ui/#traduction-contributive","title":"Traduction contributive","text":"<p>Nous accueillons les contributions pour am\u00e9liorer ou ajouter de nouveaux fichiers de locale !</p> <p>Comment contribuer \u00e0 une traduction :</p> <ol> <li>Modifiez le <code>src/ui/app/lang_config.py</code> fichier pour ajouter votre langue (code, nom, drapeau, english_name).</li> <li>Copiez <code>en.json</code> en tant que mod\u00e8le dans <code>src/ui/app/static/locales/</code>, renommez-le avec votre code de langue (par exemple, <code>de.json</code> pour l'allemand).</li> <li>Traduisez les valeurs de votre nouveau fichier.</li> <li>Mettez \u00e0 jour le tableau pour <code>locales/README.md</code> ajouter votre langue et indiquez qui l'a cr\u00e9\u00e9/r\u00e9vis\u00e9.</li> <li>Envoyez une demande de tirage.</li> </ol> <p>Pour les mises \u00e0 jour, modifiez le fichier concern\u00e9 et mettez \u00e0 jour la table de provenance si n\u00e9cessaire.</p> <p>Voir le locales/README.md pour les directives compl\u00e8tes.</p>"},{"location":"de/","title":"Einf\u00fchrung","text":""},{"location":"de/#ubersicht","title":"\u00dcbersicht","text":"Machen Sie Ihre Webdienste standardm\u00e4\u00dfig sicher! <p>BunkerWeb ist eine Open-Source-Webanwendungs-Firewall (WAF) der n\u00e4chsten Generation.</p> <p>Als vollwertiger Webserver (basierend auf NGINX im Hintergrund) sch\u00fctzt es Ihre Webdienste, um sie \"standardm\u00e4\u00dfig sicher\" zu machen. BunkerWeb l\u00e4sst sich nahtlos in Ihre bestehenden Umgebungen integrieren (Linux, Docker, Swarm, Kubernetes, \u2026) als Reverse-Proxy und ist vollst\u00e4ndig konfigurierbar (keine Panik, es gibt eine gro\u00dfartige Weboberfl\u00e4che, wenn Sie die CLI nicht m\u00f6gen), um Ihre spezifischen Anwendungsf\u00e4lle zu erf\u00fcllen. Mit anderen Worten, Cybersicherheit ist kein Aufwand mehr.</p> <p>BunkerWeb enth\u00e4lt prim\u00e4re Sicherheitsfunktionen als Teil des Kerns, kann aber dank eines Pluginsystems leicht um zus\u00e4tzliche erweitert werden.</p>"},{"location":"de/#warum-bunkerweb","title":"Warum BunkerWeb?","text":"<ul> <li> <p>Einfache Integration in bestehende Umgebungen: Integrieren Sie BunkerWeb nahtlos in verschiedene Umgebungen wie Linux, Docker, Swarm, Kubernetes und mehr. Genie\u00dfen Sie einen reibungslosen \u00dcbergang und eine problemlose Implementierung.</p> </li> <li> <p>Hochgradig anpassbar: Passen Sie BunkerWeb m\u00fchelos an Ihre spezifischen Anforderungen an. Aktivieren, deaktivieren und konfigurieren Sie Funktionen m\u00fchelos, sodass Sie die Sicherheitseinstellungen an Ihren einzigartigen Anwendungsfall anpassen k\u00f6nnen.</p> </li> <li> <p>Standardm\u00e4\u00dfig sicher: BunkerWeb bietet eine sofort einsatzbereite, problemlose minimale Sicherheit f\u00fcr Ihre Webdienste. Erleben Sie von Anfang an Sorgenfreiheit und verbesserten Schutz.</p> </li> <li> <p>Gro\u00dfartige Weboberfl\u00e4che: Steuern Sie BunkerWeb effizienter mit der au\u00dfergew\u00f6hnlichen Web-Benutzeroberfl\u00e4che (UI). Navigieren Sie m\u00fchelos durch Einstellungen und Konfigurationen \u00fcber eine benutzerfreundliche grafische Oberfl\u00e4che, sodass die Befehlszeilenschnittstelle (CLI) nicht mehr erforderlich ist.</p> </li> <li> <p>Pluginsystem: Erweitern Sie die Funktionen von BunkerWeb, um Ihre eigenen Anwendungsf\u00e4lle zu erf\u00fcllen. Integrieren Sie nahtlos zus\u00e4tzliche Sicherheitsma\u00dfnahmen und passen Sie die Funktionalit\u00e4t von BunkerWeb an Ihre spezifischen Anforderungen an.</p> </li> <li> <p>Frei wie in \"Freiheit\": BunkerWeb ist unter der freien AGPLv3-Lizenz lizenziert und folgt den Prinzipien von Freiheit und Offenheit. Genie\u00dfen Sie die Freiheit, die Software zu verwenden, zu \u00e4ndern und zu verbreiten, unterst\u00fctzt von einer unterst\u00fctzenden Community.</p> </li> <li> <p>Professionelle Dienstleistungen: Erhalten Sie technischen Support, ma\u00dfgeschneiderte Beratung und kundenspezifische Entwicklung direkt von den Betreuern von BunkerWeb. Besuchen Sie das BunkerWeb Panel f\u00fcr weitere Informationen.</p> </li> </ul>"},{"location":"de/#sicherheitsfunktionen","title":"Sicherheitsfunktionen","text":"<p>Entdecken Sie die beeindruckende Auswahl an Sicherheitsfunktionen, die BunkerWeb bietet. Obwohl nicht vollst\u00e4ndig, hier einige bemerkenswerte Highlights:</p> <ul> <li> <p>HTTPS-Unterst\u00fctzung mit transparenter Let's Encrypt-Automatisierung: Sichern Sie Ihre Webdienste einfach mit automatisierter Let's Encrypt-Integration und gew\u00e4hrleisten Sie eine verschl\u00fcsselte Kommunikation zwischen Clients und Ihrem Server.</p> </li> <li> <p>Modernste Websicherheit: Profitieren Sie von modernsten Websicherheitsma\u00dfnahmen, einschlie\u00dflich umfassender HTTP-Sicherheitsheader, Verhinderung von Datenlecks und TLS-H\u00e4rtungstechniken.</p> </li> <li> <p>Integrierte ModSecurity WAF mit dem OWASP Core Rule Set: Genie\u00dfen Sie einen verbesserten Schutz vor Webanwendungsangriffen durch die Integration von ModSecurity, verst\u00e4rkt durch das renommierte OWASP Core Rule Set.</p> </li> <li> <p>Automatisches Sperren von seltsamem Verhalten basierend auf HTTP-Statuscodes: BunkerWeb identifiziert und blockiert intelligent verd\u00e4chtige Aktivit\u00e4ten, indem es Verhaltensweisen, die anormale HTTP-Statuscodes ausl\u00f6sen, automatisch sperrt.</p> </li> <li> <p>Anwenden von Verbindungs- und Anforderungslimits f\u00fcr Clients: Setzen Sie Limits f\u00fcr die Anzahl der Verbindungen und Anfragen von Clients, um eine Ressourcenersch\u00f6pfung zu verhindern und eine faire Nutzung der Serverressourcen zu gew\u00e4hrleisten.</p> </li> <li> <p>Blockieren von Bots mit herausforderungsbasierter \u00dcberpr\u00fcfung: Halten Sie b\u00f6sartige Bots in Schach, indem Sie sie herausfordern, R\u00e4tsel wie Cookies, JavaScript-Tests, Captchas, hCaptcha, reCAPTCHA oder Turnstile zu l\u00f6sen, und so unbefugten Zugriff effektiv blockieren.</p> </li> <li> <p>Blockieren bekannter b\u00f6sartiger IPs mit externen Blacklists und DNSBL: Nutzen Sie externe Blacklists und DNS-basierte Blackhole-Listen (DNSBL), um bekannte b\u00f6sartige IP-Adressen proaktiv zu blockieren und Ihre Verteidigung gegen potenzielle Bedrohungen zu st\u00e4rken.</p> </li> <li> <p>Und vieles mehr...: BunkerWeb ist mit einer F\u00fclle zus\u00e4tzlicher Sicherheitsfunktionen ausgestattet, die \u00fcber diese Liste hinausgehen und Ihnen umfassenden Schutz und Sorgenfreiheit bieten.</p> </li> </ul> <p>Um tiefer in die Kernsicherheitsfunktionen einzutauchen, laden wir Sie ein, den Abschnitt Sicherheits-Tuning der Dokumentation zu erkunden. Entdecken Sie, wie BunkerWeb Sie bef\u00e4higt, Sicherheitsma\u00dfnahmen entsprechend Ihren spezifischen Bed\u00fcrfnissen zu optimieren.</p>"},{"location":"de/#demo","title":"Demo","text":"<p>Eine mit BunkerWeb gesch\u00fctzte Demo-Website ist unter demo.bunkerweb.io verf\u00fcgbar. Besuchen Sie sie gerne und f\u00fchren Sie einige Sicherheitstests durch.</p>"},{"location":"de/#web-benutzeroberflache","title":"Web-Benutzeroberfl\u00e4che","text":"<p>BunkerWeb bietet eine optionale Benutzeroberfl\u00e4che zur Verwaltung Ihrer Instanzen und deren Konfigurationen. Eine schreibgesch\u00fctzte Online-Demo ist unter demo-ui.bunkerweb.io verf\u00fcgbar. Testen Sie sie gerne selbst.</p>"},{"location":"de/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>M\u00f6chten Sie Ihre eigene(n) BunkerWeb-Instanz(en) nicht selbst hosten und verwalten? Dann k\u00f6nnte Sie BunkerWeb Cloud interessieren, unser vollst\u00e4ndig verwaltetes SaaS-Angebot f\u00fcr BunkerWeb.</p> <p>Probieren Sie unser BunkerWeb Cloud-Angebot aus und erhalten Sie Zugang zu:</p> <ul> <li>Eine vollst\u00e4ndig verwaltete BunkerWeb-Instanz, die in unserer Cloud gehostet wird</li> <li>Alle BunkerWeb-Funktionen, einschlie\u00dflich der PRO-Funktionen</li> <li>Eine \u00dcberwachungsplattform mit Dashboards und Warnungen</li> <li>Technischer Support zur Unterst\u00fctzung bei der Konfiguration</li> </ul> <p>Wenn Sie am BunkerWeb Cloud-Angebot interessiert sind, z\u00f6gern Sie nicht, uns zu kontaktieren, damit wir Ihre Bed\u00fcrfnisse besprechen k\u00f6nnen.</p>"},{"location":"de/#pro-version","title":"PRO-Version","text":"<p>Kostenlose Testversion von BunkerWeb PRO</p> <p>M\u00f6chten Sie BunkerWeb PRO einen Monat lang schnell testen? Verwenden Sie den Code <code>freetrial</code> bei Ihrer Bestellung im BunkerWeb Panel oder klicken Sie hier, um den Promo-Code direkt anzuwenden (wird an der Kasse wirksam).</p> <p>Bei der Verwendung von BunkerWeb haben Sie die Wahl zwischen der Open-Source- oder der PRO-Version.</p> <p>Ob verbesserte Sicherheit, ein bereichertes Benutzererlebnis oder technische \u00dcberwachung, die BunkerWeb PRO-Version erm\u00f6glicht es Ihnen, BunkerWeb in vollem Umfang zu nutzen und Ihre beruflichen Anforderungen zu erf\u00fcllen.</p> <p>In der Dokumentation oder der Benutzeroberfl\u00e4che sind PRO-Funktionen mit einer Krone  gekennzeichnet, um sie von denen der Open-Source-Version zu unterscheiden.</p> <p>Sie k\u00f6nnen jederzeit einfach von der Open-Source-Version auf die PRO-Version upgraden. Der Vorgang ist unkompliziert:</p> <ul> <li>Fordern Sie Ihre kostenlose Testversion im BunkerWeb-Panel an, indem Sie den Promo-Code <code>freetrial</code> an der Kasse verwenden.</li> <li>Sobald Sie im Kundenbereich angemeldet sind, kopieren Sie Ihren PRO-Lizenzschl\u00fcssel.</li> <li>F\u00fcgen Sie Ihren privaten Schl\u00fcssel in BunkerWeb \u00fcber die Web-UI oder eine spezifische Einstellung ein.</li> </ul> <p>Z\u00f6gern Sie nicht, das BunkerWeb-Panel zu besuchen oder uns zu kontaktieren, wenn Sie Fragen zur PRO-Version haben.</p>"},{"location":"de/#professionelle-dienstleistungen","title":"Professionelle Dienstleistungen","text":"<p>Holen Sie das Beste aus BunkerWeb heraus, indem Sie professionelle Dienstleistungen direkt von den Betreuern des Projekts in Anspruch nehmen. Von technischem Support \u00fcber ma\u00dfgeschneiderte Beratung bis hin zur Entwicklung sind wir hier, um Sie bei der Sicherung Ihrer Webdienste zu unterst\u00fctzen.</p> <p>Weitere Informationen finden Sie im BunkerWeb Panel, unserer dedizierten Plattform f\u00fcr professionelle Dienstleistungen.</p> <p>Z\u00f6gern Sie nicht, uns zu kontaktieren, wenn Sie Fragen haben. Wir freuen uns, auf Ihre Bed\u00fcrfnisse einzugehen.</p>"},{"location":"de/#okosystem-community-und-ressourcen","title":"\u00d6kosystem, Community und Ressourcen","text":"<p>Offizielle Websites, Tools und Ressourcen zu BunkerWeb:</p> <ul> <li>Website: Erhalten Sie weitere Informationen, Neuigkeiten und Artikel \u00fcber BunkerWeb.</li> <li>Panel: Eine dedizierte Plattform zur Bestellung und Verwaltung professioneller Dienstleistungen (z. B. technischer Support) rund um BunkerWeb.</li> <li>Dokumentation: Technische Dokumentation der BunkerWeb-L\u00f6sung.</li> <li>Demo: Demonstrationswebsite von BunkerWeb. Z\u00f6gern Sie nicht, Angriffe zu versuchen, um die Robustheit der L\u00f6sung zu testen.</li> <li>Web-UI: Schreibgesch\u00fctzte Online-Demo der Web-UI von BunkerWeb.</li> <li>Threatmap: Live-Cyberangriffe, die von BunkerWeb-Instanzen auf der ganzen Welt blockiert werden.</li> </ul> <p>Community und soziale Netzwerke:</p> <ul> <li>Discord</li> <li>LinkedIn</li> <li>X (ehemals Twitter)</li> <li>Reddit</li> </ul>"},{"location":"de/about/","title":"\u00dcber uns","text":""},{"location":"de/about/#wer-pflegt-bunkerweb","title":"Wer pflegt BunkerWeb?","text":"<p>BunkerWeb wird von Bunkerity gepflegt, einem franz\u00f6sischen \ud83c\uddeb\ud83c\uddf7 Unternehmen, das auf Cybersicherheit \ud83d\udee1\ufe0f spezialisiert ist.</p>"},{"location":"de/about/#haben-sie-eine-professionelle-version","title":"Haben Sie eine professionelle Version?","text":"<p>Kostenlose Testversion von BunkerWeb PRO</p> <p>M\u00f6chten Sie BunkerWeb PRO einen Monat lang schnell testen? Verwenden Sie den Code <code>freetrial</code> bei Ihrer Bestellung im BunkerWeb Panel oder klicken Sie hier, um den Promo-Code direkt anzuwenden (wird an der Kasse wirksam).</p> <p>Ja, wir bieten eine professionelle Version von BunkerWeb namens \"BunkerWeb PRO\" mit zus\u00e4tzlichen Funktionen und (optionalem) technischem Support an.</p> <p>Z\u00f6gern Sie nicht, uns zu kontaktieren, wenn Sie Fragen haben. Wir werden uns sehr freuen, auf Ihre Bed\u00fcrfnisse einzugehen.</p>"},{"location":"de/about/#bieten-sie-professionelle-dienstleistungen-an","title":"Bieten Sie professionelle Dienstleistungen an?","text":"<p>Ja, wir bieten professionelle Dienstleistungen rund um BunkerWeb an.</p> <p>Sie k\u00f6nnen uns zu folgenden Themen kontaktieren:</p> <ul> <li>Beratung</li> <li>Support</li> <li>Kundenspezifische Entwicklung</li> <li>Partnerschaften</li> </ul> <p>Wir haben ein dediziertes Panel, um alle professionellen Anfragen zu zentralisieren.</p> <p>Sie k\u00f6nnen uns auch kontaktieren, wenn Sie interessiert sind.</p>"},{"location":"de/about/#wo-erhalte-ich-community-support","title":"Wo erhalte ich Community-Support?","text":"<p>Um kostenlosen Community-Support zu erhalten, k\u00f6nnen Sie die folgenden Medien nutzen:</p> <ul> <li>Den #help-Kanal von BunkerWeb auf dem Discord-Server</li> <li>Die Hilfe-Kategorie der GitHub-Diskussionen</li> <li>Das /r/BunkerWeb Subreddit</li> <li>Die Foren Server Fault und Super User</li> </ul> <p>Bitte verwenden Sie GitHub-Issues nicht, um um Hilfe zu bitten. Nutzen Sie es nur f\u00fcr Fehlerberichte und Funktionsw\u00fcnsche.</p>"},{"location":"de/about/#wie-kann-ich-beitragen","title":"Wie kann ich beitragen?","text":"<p>Hier ist eine nicht ersch\u00f6pfende Liste dessen, was Sie tun k\u00f6nnen:</p> <ul> <li>Treten Sie dem Discord-Server, dem /r/BunkerWeb Subreddit und den GitHub-Diskussionen bei, um \u00fcber das Projekt zu sprechen und anderen zu helfen.</li> <li>Folgen Sie uns auf LinkedIn, X (ehemals Twitter) und GitHub.</li> <li>Melden Sie Fehler und schlagen Sie neue Funktionen \u00fcber Issues vor.</li> <li>Tragen Sie zum Code bei, indem Sie Pull-Requests verwenden.</li> <li>Schreiben Sie ein gro\u00dfartiges Plugin.</li> <li>Sprechen Sie mit Ihren Freunden/Kollegen, in sozialen Medien, auf Ihrem Blog, ... \u00fcber BunkerWeb.</li> </ul>"},{"location":"de/about/#wie-melde-ich-sicherheitsprobleme","title":"Wie melde ich Sicherheitsprobleme?","text":"<p>Bitte kontaktieren Sie uns unter security@bunkerity.com.</p>"},{"location":"de/advanced/","title":"Fortgeschrittene Nutzungen","text":"<p>Viele Beispiele f\u00fcr reale Anwendungsf\u00e4lle sind im Ordner examples des GitHub-Repositorys verf\u00fcgbar.</p> <p>Wir stellen auch zahlreiche Boilerplates zur Verf\u00fcgung, wie z. B. YAML-Dateien f\u00fcr verschiedene Integrationen und Datenbanktypen. Diese sind im Ordner misc/integrations verf\u00fcgbar.</p> <p>Dieser Abschnitt konzentriert sich nur auf fortgeschrittene Nutzungen und Sicherheits-Tuning. Informationen zu allen verf\u00fcgbaren Einstellungen finden Sie im Features-Abschnitt der Dokumentation.</p>"},{"location":"de/advanced/#anwendungsfalle","title":"Anwendungsf\u00e4lle","text":"<p>Testen</p> <p>Um schnelle Tests durchzuf\u00fchren, wenn der Multisite-Modus aktiviert ist (und wenn Sie nicht die richtigen DNS-Eintr\u00e4ge f\u00fcr die Domains eingerichtet haben), k\u00f6nnen Sie <code>curl</code> mit dem HTTP-Host-Header Ihrer Wahl verwenden: <pre><code>curl -H \"Host: app1.example.com\" http://ip-oder-fqdn-des-servers\n</code></pre></p> <p>Wenn Sie HTTPS verwenden, m\u00fcssen Sie mit SNI spielen: <pre><code>curl -H \"Host: app1.example.com\" --resolve example.com:443:ip-des-servers https://example.com\n</code></pre></p>"},{"location":"de/advanced/#hinter-einem-load-balancer-oder-reverse-proxy","title":"Hinter einem Load Balancer oder Reverse Proxy","text":"<p>Echte IP</p> <p>Wenn BunkerWeb selbst hinter einem Load Balancer oder einem Reverse Proxy steht, m\u00fcssen Sie es so konfigurieren, dass es die echte IP-Adresse der Clients erh\u00e4lt. Wenn Sie dies nicht tun, werden die Sicherheitsfunktionen die IP-Adresse des Load Balancers oder Reverse Proxys anstelle der des Clients blockieren.</p> <p>BunkerWeb unterst\u00fctzt tats\u00e4chlich zwei Methoden, um die echte IP-Adresse des Clients abzurufen:</p> <ul> <li>Verwendung des <code>PROXY-Protokolls</code></li> <li>Verwendung eines HTTP-Headers wie <code>X-Forwarded-For</code></li> </ul> <p>Die folgenden Einstellungen k\u00f6nnen verwendet werden:</p> <ul> <li><code>USE_REAL_IP</code>: Aktivieren/Deaktivieren des Abrufs der echten IP</li> <li><code>USE_PROXY_PROTOCOL</code>: Aktivieren/Deaktivieren der Unterst\u00fctzung des PROXY-Protokolls.</li> <li><code>REAL_IP_FROM</code>: Liste der vertrauensw\u00fcrdigen IP-/Netzwerkadressen, die uns die \"echte IP\" senden d\u00fcrfen</li> <li><code>REAL_IP_HEADER</code>: Der HTTP-Header, der die echte IP enth\u00e4lt, oder der spezielle Wert <code>proxy_protocol</code> bei Verwendung des PROXY-Protokolls</li> </ul> <p>Weitere Einstellungen zur echten IP finden Sie im Features-Abschnitt der Dokumentation.</p> HTTP-HeaderProxy-Protokoll <p>Wir gehen von Folgendem bez\u00fcglich der Load Balancer oder Reverse Proxys aus (Sie m\u00fcssen die Einstellungen entsprechend Ihrer Konfiguration anpassen):</p> <ul> <li>Sie verwenden den <code>X-Forwarded-For</code>-Header, um die echte IP festzulegen</li> <li>Sie haben IPs in den Netzwerken <code>1.2.3.0/24</code> und <code>100.64.0.0/10</code></li> </ul> Web-UILinuxAll-in-oneDockerDocker autoconfKubernetesSwarm <p>Navigieren Sie zur Seite Globale Konfiguration, w\u00e4hlen Sie das Plugin Real IP und f\u00fcllen Sie die folgenden Einstellungen aus:</p> <p>Real IP Einstellungen (Header) mit Web-UI</p> <p>Bitte beachten Sie, dass es empfohlen wird, BunkerWeb neu zu starten, wenn Sie Einstellungen im Zusammenhang mit der echten IP \u00e4ndern.</p> <p>Sie m\u00fcssen die Einstellungen zur Datei <code>/etc/bunkerweb/variables.env</code> hinzuf\u00fcgen:</p> <pre><code>...\nUSE_REAL_IP=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=X-Forwarded-For\n...\n</code></pre> <p>Bitte beachten Sie, dass es empfohlen wird, einen Neustart anstelle eines Neuladens durchzuf\u00fchren, wenn Sie Einstellungen im Zusammenhang mit der echten IP konfigurieren:</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen hinzuf\u00fcgen, wenn Sie den All-in-one-Container ausf\u00fchren:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl des BunkerWeb- als auch des Scheduler-Containers hinzuf\u00fcgen:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl des BunkerWeb- als auch des Scheduler-Containers hinzuf\u00fcgen:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl der BunkerWeb- als auch der Scheduler-Pods hinzuf\u00fcgen.</p> <p>Hier ist der entsprechende Teil Ihrer <code>values.yaml</code>-Datei, den Sie verwenden k\u00f6nnen:</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl der BunkerWeb- als auch der Scheduler-Dienste hinzuf\u00fcgen:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Dienst bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sorgf\u00e4ltig lesen</p> <p>Verwenden Sie das PROXY-Protokoll nur, wenn Sie sicher sind, dass Ihr Load Balancer oder Reverse Proxy es sendet. Wenn Sie es aktivieren und es nicht verwendet wird, erhalten Sie Fehler.</p> <p>Wir gehen von Folgendem bez\u00fcglich der Load Balancer oder Reverse Proxys aus (Sie m\u00fcssen die Einstellungen entsprechend Ihrer Konfiguration anpassen):</p> <ul> <li>Sie verwenden das <code>PROXY-Protokoll</code> v1 oder v2, um die echte IP festzulegen</li> <li>Sie haben IPs in den Netzwerken <code>1.2.3.0/24</code> und <code>100.64.0.0/10</code></li> </ul> Web-UILinuxAll-in-oneDockerDocker autoconfKubernetesSwarm <p>Navigieren Sie zur Seite Globale Konfiguration, w\u00e4hlen Sie das Plugin Real IP und f\u00fcllen Sie die folgenden Einstellungen aus:</p> <p>Real IP Einstellungen (PROXY-Protokoll) mit Web-UI</p> <p>Bitte beachten Sie, dass es empfohlen wird, BunkerWeb neu zu starten, wenn Sie Einstellungen im Zusammenhang mit der echten IP \u00e4ndern.</p> <p>Sie m\u00fcssen die Einstellungen zur Datei <code>/etc/bunkerweb/variables.env</code> hinzuf\u00fcgen:</p> <pre><code>...\nUSE_REAL_IP=yes\nUSE_PROXY_PROTOCOL=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=proxy_protocol\n...\n</code></pre> <p>Bitte beachten Sie, dass es empfohlen wird, einen Neustart anstelle eines Neuladens durchzuf\u00fchren, wenn Sie Einstellungen im Zusammenhang mit Proxy-Protokollen konfigurieren:</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen hinzuf\u00fcgen, wenn Sie den All-in-one-Container ausf\u00fchren:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e USE_PROXY_PROTOCOL=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"proxy_protocol\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl des BunkerWeb- als auch des Scheduler-Containers hinzuf\u00fcgen:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl des BunkerWeb- als auch des Scheduler-Containers hinzuf\u00fcgen:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl der BunkerWeb- als auch der Scheduler-Pods hinzuf\u00fcgen.</p> <p>Hier ist der entsprechende Teil Ihrer <code>values.yaml</code>-Datei, den Sie verwenden k\u00f6nnen:</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen sowohl der BunkerWeb- als auch der Scheduler-Dienste hinzuf\u00fcgen.</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Dienst bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen aktualisiert werden.</p>"},{"location":"de/advanced/#verwendung-benutzerdefinierter-dns-auflosungsmechanismen","title":"Verwendung benutzerdefinierter DNS-Aufl\u00f6sungsmechanismen","text":"<p>BunkerWebs NGINX-Konfiguration kann angepasst werden, um je nach Ihren Bed\u00fcrfnissen unterschiedliche DNS-Resolver zu verwenden. Dies kann in verschiedenen Szenarien besonders n\u00fctzlich sein:</p> <ol> <li>Um Eintr\u00e4ge in Ihrer lokalen <code>/etc/hosts</code>-Datei zu ber\u00fccksichtigen</li> <li>Wenn Sie f\u00fcr bestimmte Domains benutzerdefinierte DNS-Server verwenden m\u00fcssen</li> <li>Zur Integration mit lokalen DNS-Caching-L\u00f6sungen</li> </ol>"},{"location":"de/advanced/#verwendung-von-systemd-resolved","title":"Verwendung von systemd-resolved","text":"<p>Viele moderne Linux-Systeme verwenden <code>systemd-resolved</code> f\u00fcr die DNS-Aufl\u00f6sung. Wenn Sie m\u00f6chten, dass BunkerWeb den Inhalt Ihrer <code>/etc/hosts</code>-Datei respektiert und den DNS-Aufl\u00f6sungsmechanismus des Systems verwendet, k\u00f6nnen Sie es so konfigurieren, dass es den lokalen systemd-resolved DNS-Dienst verwendet.</p> <p>Um zu \u00fcberpr\u00fcfen, ob systemd-resolved auf Ihrem System l\u00e4uft, k\u00f6nnen Sie Folgendes verwenden:</p> <pre><code>systemctl status systemd-resolved\n</code></pre> <p>Um systemd-resolved als Ihren DNS-Resolver in BunkerWeb zu aktivieren, setzen Sie die Einstellung <code>DNS_RESOLVERS</code> auf <code>127.0.0.53</code>, was die Standard-Listenadresse f\u00fcr systemd-resolved ist:</p> Web-UILinux <p>Navigieren Sie zur Seite Globale Konfiguration und setzen Sie die DNS-Resolver auf <code>127.0.0.53</code></p> <p>DNS-Resolver-Einstellung mit Web-UI</p> <p>Sie m\u00fcssen die Datei <code>/etc/bunkerweb/variables.env</code> \u00e4ndern:</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.53\n...\n</code></pre> <p>Nach dieser \u00c4nderung laden Sie den Scheduler neu, um die Konfiguration anzuwenden:</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre>"},{"location":"de/advanced/#verwendung-von-dnsmasq","title":"Verwendung von dnsmasq","text":"<p>dnsmasq ist ein leichtgewichtiger DNS-, DHCP- und TFTP-Server, der h\u00e4ufig f\u00fcr lokales DNS-Caching und Anpassungen verwendet wird. Er ist besonders n\u00fctzlich, wenn Sie mehr Kontrolle \u00fcber Ihre DNS-Aufl\u00f6sung ben\u00f6tigen, als systemd-resolved bietet.</p> LinuxAll-in-oneDocker <p>Installieren und konfigurieren Sie zuerst dnsmasq auf Ihrem Linux-System:</p> Debian/UbuntuRHEL/Fedora <pre><code># dnsmasq installieren\nsudo apt-get update &amp;&amp; sudo apt-get install dnsmasq\n\n# dnsmasq so konfigurieren, dass es nur auf localhost lauscht\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Bei Bedarf benutzerdefinierte DNS-Eintr\u00e4ge hinzuf\u00fcgen\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# dnsmasq neu starten\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <pre><code># dnsmasq installieren\nsudo dnf install dnsmasq\n\n# dnsmasq so konfigurieren, dass es nur auf localhost lauscht\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Bei Bedarf benutzerdefinierte DNS-Eintr\u00e4ge hinzuf\u00fcgen\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# dnsmasq neu starten\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <p>Konfigurieren Sie dann BunkerWeb, um dnsmasq zu verwenden, indem Sie <code>DNS_RESOLVERS</code> auf <code>127.0.0.1</code> setzen:</p> Web-UILinux <p>Navigieren Sie zur Seite Globale Konfiguration, w\u00e4hlen Sie das NGINX-Plugin und setzen Sie die DNS-Resolver auf <code>127.0.0.1</code>.</p> <p>DNS-Resolver-Einstellung mit Web-UI</p> <p>Sie m\u00fcssen die Datei <code>/etc/bunkerweb/variables.env</code> \u00e4ndern:</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.1\n...\n</code></pre> <p>Nach dieser \u00c4nderung laden Sie den Scheduler neu:</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre> <p>Wenn Sie den All-in-one-Container verwenden, f\u00fchren Sie dnsmasq in einem separaten Container aus und konfigurieren Sie BunkerWeb, um ihn zu verwenden:</p> <pre><code># Ein benutzerdefiniertes Netzwerk f\u00fcr die DNS-Kommunikation erstellen\ndocker network create bw-dns\n\n# dnsmasq-Container mit dockurr/dnsmasq und Quad9 DNS ausf\u00fchren\n# Quad9 bietet sicherheitsorientierte DNS-Aufl\u00f6sung mit Malware-Blockierung\ndocker run -d \\\n    --name dnsmasq \\\n    --network bw-dns \\\n    -e DNS1=\"9.9.9.9\" \\\n    -e DNS2=\"149.112.112.112\" \\\n    -p 53:53/udp \\\n    -p 53:53/tcp \\\n    --cap-add=NET_ADMIN \\\n    --restart=always \\\n    dockurr/dnsmasq\n\n# BunkerWeb All-in-one mit dnsmasq DNS-Resolver ausf\u00fchren\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network bw-dns \\\n    -v bw-storage:/data \\\n    -e DNS_RESOLVERS=\"dnsmasq\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>F\u00fcgen Sie einen dnsmasq-Dienst zu Ihrer docker-compose-Datei hinzu und konfigurieren Sie BunkerWeb, um ihn zu verwenden:</p> <pre><code>services:\n  dnsmasq:\n    image: dockurr/dnsmasq\n    container_name: dnsmasq\n    environment:\n      # Verwendung von Quad9 DNS-Servern f\u00fcr verbesserte Sicherheit und Datenschutz\n      # Prim\u00e4r: 9.9.9.9 (Quad9 mit Malware-Blockierung)\n      # Sekund\u00e4r: 149.112.112.112 (Quad9 Backup-Server)\n      DNS1: \"9.9.9.9\"\n      DNS2: \"149.112.112.112\"\n    ports:\n      - 53:53/udp\n      - 53:53/tcp\n    cap_add:\n      - NET_ADMIN\n    restart: always\n    networks:\n      - bw-dns\n\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-services\n      - bw-dns\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-dns\n\nnetworks:\n  # ...vorhandene Netzwerke...\n  bw-dns:\n    name: bw-dns\n</code></pre>"},{"location":"de/advanced/#benutzerdefinierte-konfigurationen","title":"Benutzerdefinierte Konfigurationen","text":"<p>Um benutzerdefinierte Konfigurationen zu BunkerWeb hinzuzuf\u00fcgen und anzupassen, k\u00f6nnen Sie die NGINX-Grundlage nutzen. Benutzerdefinierte NGINX-Konfigurationen k\u00f6nnen in verschiedenen NGINX-Kontexten hinzugef\u00fcgt werden, einschlie\u00dflich Konfigurationen f\u00fcr die ModSecurity Web Application Firewall (WAF), die eine Kernkomponente von BunkerWeb ist. Weitere Details zu ModSecurity-Konfigurationen finden Sie hier.</p> <p>Hier sind die verf\u00fcgbaren Typen von benutzerdefinierten Konfigurationen:</p> <ul> <li>http: Konfigurationen auf der HTTP-Ebene von NGINX.</li> <li>server-http: Konfigurationen auf der HTTP/Server-Ebene von NGINX.</li> <li>default-server-http: Konfigurationen auf der Server-Ebene von NGINX, speziell f\u00fcr den \"default server\", wenn der angegebene Client-Name mit keinem Servernamen in <code>SERVER_NAME</code> \u00fcbereinstimmt.</li> <li>modsec-crs: Konfigurationen, die angewendet werden, bevor das OWASP Core Rule Set geladen wird.</li> <li>modsec: Konfigurationen, die angewendet werden, nachdem das OWASP Core Rule Set geladen wurde, oder die verwendet werden, wenn das Core Rule Set nicht geladen ist.</li> <li>crs-plugins-before: Konfigurationen f\u00fcr die CRS-Plugins, die angewendet werden, bevor die CRS-Plugins geladen werden.</li> <li>crs-plugins-after: Konfigurationen f\u00fcr die CRS-Plugins, die angewendet werden, nachdem die CRS-Plugins geladen wurden.</li> <li>stream: Konfigurationen auf der Stream-Ebene von NGINX.</li> <li>server-stream: Konfigurationen auf der Stream/Server-Ebene von NGINX.</li> </ul> <p>Benutzerdefinierte Konfigurationen k\u00f6nnen global oder spezifisch f\u00fcr einen bestimmten Server angewendet werden, abh\u00e4ngig vom anwendbaren Kontext und ob der Multisite-Modus aktiviert ist.</p> <p>Die Methode zum Anwenden benutzerdefinierter Konfigurationen h\u00e4ngt von der verwendeten Integration ab. Der zugrunde liegende Prozess besteht jedoch darin, Dateien mit der <code>.conf</code>-Endung zu bestimmten Ordnern hinzuzuf\u00fcgen. Um eine benutzerdefinierte Konfiguration f\u00fcr einen bestimmten Server anzuwenden, sollte die Datei in einem Unterordner platziert werden, der nach dem prim\u00e4ren Servernamen benannt ist.</p> <p>Einige Integrationen bieten bequemere M\u00f6glichkeiten zum Anwenden von Konfigurationen, wie z. B. die Verwendung von Configs in Docker Swarm oder ConfigMap in Kubernetes. Diese Optionen bieten einfachere Ans\u00e4tze zur Verwaltung und Anwendung von Konfigurationen.</p> Web-UILinuxAll-in-oneDockerDocker autoconfKubernetesSwarm <p>Navigieren Sie zur Seite Konfigurationen, klicken Sie auf Neue benutzerdefinierte Konfiguration erstellen, Sie k\u00f6nnen dann w\u00e4hlen, ob es sich um eine globale oder eine f\u00fcr einen Dienst spezifische Konfiguration handelt, den Konfigurationstyp und den Konfigurationsnamen:</p> <p>Benutzerdefinierte Konfigurationen mit Web-UI</p> <p>Vergessen Sie nicht, auf die Schaltfl\u00e4che <code>\ud83d\udcbe Speichern</code> zu klicken.</p> <p>Bei Verwendung der Linux-Integration m\u00fcssen benutzerdefinierte Konfigurationen in den Ordner <code>/etc/bunkerweb/configs</code> geschrieben werden.</p> <p>Hier ist ein Beispiel f\u00fcr <code>server-http/hello-world.conf</code>:</p> <pre><code>location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\n</code></pre> <p>Da BunkerWeb als unprivilegierter Benutzer (nginx:nginx) l\u00e4uft, m\u00fcssen Sie die Berechtigungen bearbeiten:</p> <pre><code>chown -R root:nginx /etc/bunkerweb/configs &amp;&amp; \\\nchmod -R 770 /etc/bunkerweb/configs\n</code></pre> <p>\u00dcberpr\u00fcfen wir nun den Status des Schedulers:</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>Wenn er bereits l\u00e4uft, k\u00f6nnen wir ihn neu laden:</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Andernfalls m\u00fcssen wir ihn starten:</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Bei Verwendung des All-in-one-Images haben Sie zwei M\u00f6glichkeiten, benutzerdefinierte Konfigurationen hinzuzuf\u00fcgen:</p> <ul> <li>Verwendung spezifischer Einstellungen <code>*_CUSTOM_CONF_*</code> als Umgebungsvariablen beim Ausf\u00fchren des Containers (empfohlen).</li> <li>Schreiben von <code>.conf</code>-Dateien in das Verzeichnis <code>/data/configs/</code> innerhalb des an <code>/data</code> gemounteten Volumes.</li> </ul> <p>Verwendung von Einstellungen (Umgebungsvariablen)</p> <p>Die zu verwendenden Einstellungen m\u00fcssen dem Muster <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> folgen:</p> <ul> <li><code>&lt;SITE&gt;</code>: Optionaler prim\u00e4rer Servername, wenn der Multisite-Modus aktiviert ist und die Konfiguration auf einen bestimmten Dienst angewendet werden soll.</li> <li><code>&lt;TYPE&gt;</code>: Der Typ der Konfiguration, akzeptierte Werte sind <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> und <code>SERVER_STREAM</code>.</li> <li><code>&lt;NAME&gt;</code>: Der Name der Konfiguration ohne die <code>.conf</code>-Endung.</li> </ul> <p>Hier ist ein Dummy-Beispiel beim Ausf\u00fchren des All-in-one-Containers:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e \"CUSTOM_CONF_SERVER_HTTP_hello-world=location /hello { \\\n        default_type 'text/plain'; \\\n        content_by_lua_block { \\\n          ngx.say('world'); \\\n        } \\\n      }\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen angewendet werden.</p> <p>Verwendung von Dateien</p> <p>Als Erstes m\u00fcssen Sie die Ordner erstellen:</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Sie k\u00f6nnen nun Ihre Konfigurationen schreiben:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Da der Scheduler als unprivilegierter Benutzer mit UID und GID 101 l\u00e4uft, m\u00fcssen Sie die Berechtigungen bearbeiten:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Beim Starten des Scheduler-Containers m\u00fcssen Sie den Ordner an <code>/data</code> mounten:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v ./bw-data:/data \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Bei Verwendung der Docker-Integration haben Sie zwei M\u00f6glichkeiten, benutzerdefinierte Konfigurationen hinzuzuf\u00fcgen:</p> <ul> <li>Verwendung spezifischer Einstellungen <code>*_CUSTOM_CONF_*</code> als Umgebungsvariablen (empfohlen)</li> <li>Schreiben von <code>.conf</code>-Dateien in das an <code>/data</code> des Schedulers gemountete Volume</li> </ul> <p>Verwendung von Einstellungen</p> <p>Die zu verwendenden Einstellungen m\u00fcssen dem Muster <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> folgen:</p> <ul> <li><code>&lt;SITE&gt;</code>: Optionaler prim\u00e4rer Servername, wenn der Multisite-Modus aktiviert ist und die Konfiguration auf einen bestimmten Dienst angewendet werden soll</li> <li><code>&lt;TYPE&gt;</code>: Der Typ der Konfiguration, akzeptierte Werte sind <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> und <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code>: Der Name der Konfiguration ohne die <code>.conf</code>-Endung</li> </ul> <p>Hier ist ein Dummy-Beispiel mit einer <code>docker-compose</code>-Datei:</p> <pre><code>...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  environment:\n    - |\n      CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n          ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Verwendung von Dateien</p> <p>Als Erstes m\u00fcssen Sie die Ordner erstellen:</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Sie k\u00f6nnen nun Ihre Konfigurationen schreiben:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Da der Scheduler als unprivilegierter Benutzer mit UID und GID 101 l\u00e4uft, m\u00fcssen Sie die Berechtigungen bearbeiten:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Beim Starten des Scheduler-Containers m\u00fcssen Sie den Ordner an <code>/data</code> mounten:</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>Bei Verwendung der Docker-Autoconf-Integration haben Sie zwei M\u00f6glichkeiten, benutzerdefinierte Konfigurationen hinzuzuf\u00fcgen:</p> <ul> <li>Verwendung spezifischer Einstellungen <code>*_CUSTOM_CONF_*</code> als Labels (am einfachsten)</li> <li>Schreiben von <code>.conf</code>-Dateien in das an <code>/data</code> des Schedulers gemountete Volume</li> </ul> <p>Verwendung von Labels</p> <p>Einschr\u00e4nkungen bei der Verwendung von Labels</p> <p>Bei der Verwendung von Labels mit der Docker-Autoconf-Integration k\u00f6nnen Sie nur benutzerdefinierte Konfigurationen f\u00fcr den entsprechenden Webdienst anwenden. Das Anwenden von http-, default-server-http-, stream- oder globalen Konfigurationen (wie server-http oder server-stream f\u00fcr alle Dienste) ist nicht m\u00f6glich: Daf\u00fcr m\u00fcssen Sie Dateien mounten.</p> <p>Die zu verwendenden Labels m\u00fcssen dem Muster <code>bunkerweb.CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code> folgen:</p> <ul> <li><code>&lt;TYPE&gt;</code>: Der Typ der Konfiguration, akzeptierte Werte sind <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code> und <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code>: Der Name der Konfiguration ohne die <code>.conf</code>-Endung</li> </ul> <p>Hier ist ein Dummy-Beispiel mit einer <code>docker-compose</code>-Datei:</p> <pre><code>myapp:\n  image: nginxdemos/nginx-hello\n  labels:\n    - |\n      bunkerweb.CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n            ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Verwendung von Dateien</p> <p>Als Erstes m\u00fcssen Sie die Ordner erstellen:</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Sie k\u00f6nnen nun Ihre Konfigurationen schreiben:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Da der Scheduler als unprivilegierter Benutzer mit UID und GID 101 l\u00e4uft, m\u00fcssen Sie die Berechtigungen bearbeiten:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Beim Starten des Scheduler-Containers m\u00fcssen Sie den Ordner an <code>/data</code> mounten:</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>Bei Verwendung der Kubernetes-Integration werden benutzerdefinierte Konfigurationen \u00fcber ConfigMap verwaltet.</p> <p>Um es einfach zu halten, m\u00fcssen Sie die ConfigMap nicht einmal mit einem Pod verwenden (z. B. als Umgebungsvariable oder Volume): Der Autoconf-Pod lauscht auf ConfigMap-Ereignisse und aktualisiert die benutzerdefinierten Konfigurationen bei Bedarf.</p> <p>Beim Erstellen einer ConfigMap m\u00fcssen Sie spezielle Labels hinzuf\u00fcgen:</p> <ul> <li>bunkerweb.io/CONFIG_TYPE: Muss auf einen g\u00fcltigen Typ f\u00fcr benutzerdefinierte Konfigurationen gesetzt werden (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream oder server-stream)</li> <li>bunkerweb.io/CONFIG_SITE: Auf einen Servernamen setzen, um die Konfiguration auf diesen spezifischen Server anzuwenden (optional, wird global angewendet, wenn nicht gesetzt)</li> </ul> <p>Hier ist das Beispiel:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-all-server-http\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"server-http\"\ndata:\n  myconf: |\n  location /hello {\n    default_type 'text/plain';\n    content_by_lua_block {\n      ngx.say('world')\n    }\n  }\n</code></pre> <p>Benutzerdefinierte zus\u00e4tzliche Konfiguration</p> <p>Seit Version <code>1.6.0</code> k\u00f6nnen Sie Einstellungen \u00fcber die Annotation <code>bunkerweb.io/CONFIG_TYPE=settings</code> hinzuf\u00fcgen/\u00fcberschreiben. Hier ist ein Beispiel:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-extra-settings\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"settings\"\ndata:\n  USE_ANTIBOT: \"captcha\" # Multisite-Einstellung, die auf alle Dienste angewendet wird, die sie nicht \u00fcberschreiben\n  USE_REDIS: \"yes\" # Globale Einstellung, die global angewendet wird\n  ...\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Bei Verwendung der Swarm-Integration werden benutzerdefinierte Konfigurationen \u00fcber Docker Configs verwaltet.</p> <p>Um es einfach zu halten, m\u00fcssen Sie die Config nicht einmal an einen Dienst anh\u00e4ngen: Der Autoconf-Dienst lauscht auf Config-Ereignisse und aktualisiert die benutzerdefinierten Konfigurationen bei Bedarf.</p> <p>Beim Erstellen einer Config m\u00fcssen Sie spezielle Labels hinzuf\u00fcgen:</p> <ul> <li>bunkerweb.CONFIG_TYPE: Muss auf einen g\u00fcltigen Typ f\u00fcr benutzerdefinierte Konfigurationen gesetzt werden (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream oder server-stream)</li> <li>bunkerweb.CONFIG_SITE: Auf einen Servernamen setzen, um die Konfiguration auf diesen spezifischen Server anzuwenden (optional, wird global angewendet, wenn nicht gesetzt)</li> </ul> <p>Hier ist das Beispiel:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" | docker config create -l bunkerweb.CONFIG_TYPE=server-http my-config -\n</code></pre> <p>Es gibt keinen Aktualisierungsmechanismus: Die Alternative besteht darin, eine vorhandene Konfiguration mit <code>docker config rm</code> zu entfernen und sie dann neu zu erstellen.</p>"},{"location":"de/advanced/#viele-dienste-in-der-produktion-betreiben","title":"Viele Dienste in der Produktion betreiben","text":""},{"location":"de/advanced/#globales-crs","title":"Globales CRS","text":"<p>CRS-Plugins</p> <p>Wenn das CRS global geladen wird, werden CRS-Plugins nicht unterst\u00fctzt. Wenn Sie sie verwenden m\u00fcssen, m\u00fcssen Sie das CRS pro Dienst laden.</p> <p>Wenn Sie BunkerWeb in der Produktion mit einer gro\u00dfen Anzahl von Diensten verwenden und die ModSecurity-Funktion global mit CRS-Regeln aktivieren, kann die zum Laden der BunkerWeb-Konfigurationen erforderliche Zeit zu lang werden, was m\u00f6glicherweise zu einem Timeout f\u00fchrt.</p> <p>Die Problemumgehung besteht darin, die CRS-Regeln global anstatt pro Dienst zu laden. Dieses Verhalten ist aus Gr\u00fcnden der Abw\u00e4rtskompatibilit\u00e4t standardm\u00e4\u00dfig nicht aktiviert und weil es einen Nachteil hat: Wenn Sie das globale Laden von CRS-Regeln aktivieren, ist es nicht mehr m\u00f6glich, modsec-crs-Regeln (die vor den CRS-Regeln ausgef\u00fchrt werden) pro Dienst zu definieren. Diese Einschr\u00e4nkung kann jedoch umgangen werden, indem globale <code>modsec-crs</code>-Ausschlussregeln wie diese geschrieben werden:</p> <pre><code>SecRule REQUEST_FILENAME \"@rx ^/somewhere$\" \"nolog,phase:4,allow,id:1010,chain\"\nSecRule REQUEST_HEADERS:Host \"@rx ^app1\\.example\\.com$\" \"nolog\"\n</code></pre> <p>Sie k\u00f6nnen das globale Laden von CRS-Regeln aktivieren, indem Sie <code>USE_MODSECURITY_GLOBAL_CRS</code> auf <code>yes</code> setzen.</p>"},{"location":"de/advanced/#max_allowed_packet-fur-mariadbmysql-anpassen","title":"<code>max_allowed_packet</code> f\u00fcr MariaDB/MySQL anpassen","text":"<p>Es scheint, dass der Standardwert f\u00fcr den Parameter <code>max_allowed_packet</code> in MariaDB- und MySQL-Datenbankservern nicht ausreicht, wenn BunkerWeb mit einer gro\u00dfen Anzahl von Diensten verwendet wird.</p> <p>Wenn Sie Fehler wie diesen feststellen, insbesondere auf dem Scheduler:</p> <pre><code>[Warning] Aborted connection 5 to db: 'db' user: 'bunkerweb' host: '172.20.0.4' (Got a packet bigger than 'max_allowed_packet' bytes)\n</code></pre> <p>Sie m\u00fcssen den <code>max_allowed_packet</code> auf Ihrem Datenbankserver erh\u00f6hen.</p>"},{"location":"de/advanced/#persistenz-von-sperren-und-berichten","title":"Persistenz von Sperren und Berichten","text":"<p>Standardm\u00e4\u00dfig speichert BunkerWeb Sperren und Berichte in einem lokalen Lua-Datenspeicher. Obwohl dies einfach und effizient ist, bedeutet diese Einrichtung, dass Daten verloren gehen, wenn die Instanz neu gestartet wird. Um sicherzustellen, dass Sperren und Berichte \u00fcber Neustarts hinweg bestehen bleiben, k\u00f6nnen Sie BunkerWeb so konfigurieren, dass ein entfernter Redis- oder Valkey-Server verwendet wird.</p> <p>Warum Redis/Valkey verwenden?</p> <p>Redis und Valkey sind leistungsstarke In-Memory-Datenspeicher, die h\u00e4ufig als Datenbanken, Caches und Message Broker verwendet werden. Sie sind hoch skalierbar und unterst\u00fctzen eine Vielzahl von Datenstrukturen, darunter:</p> <ul> <li>Strings: Grundlegende Schl\u00fcssel-Wert-Paare.</li> <li>Hashes: Feld-Wert-Paare innerhalb eines einzelnen Schl\u00fcssels.</li> <li>Listen: Geordnete Sammlungen von Zeichenketten.</li> <li>Mengen: Ungeordnete Sammlungen von eindeutigen Zeichenketten.</li> <li>Sortierte Mengen: Geordnete Sammlungen mit Bewertungen.</li> </ul> <p>Durch die Nutzung von Redis oder Valkey kann BunkerWeb Sperren, Berichte und Cache-Daten dauerhaft speichern und so Haltbarkeit und Skalierbarkeit gew\u00e4hrleisten.</p> <p>Aktivieren der Redis/Valkey-Unterst\u00fctzung</p> <p>Um die Unterst\u00fctzung f\u00fcr Redis oder Valkey zu aktivieren, konfigurieren Sie die folgenden Einstellungen in Ihrer BunkerWeb-Konfigurationsdatei:</p> <pre><code># Redis/Valkey-Unterst\u00fctzung aktivieren\nUSE_REDIS=yes\n\n# Redis/Valkey-Server-Hostname oder IP-Adresse\nREDIS_HOST=&lt;hostname&gt;\n\n# Redis/Valkey-Server-Portnummer (Standard: 6379)\nREDIS_PORT=6379\n\n# Redis/Valkey-Datenbanknummer (Standard: 0)\nREDIS_DATABASE=0\n</code></pre> <ul> <li><code>USE_REDIS</code>: Auf <code>yes</code> setzen, um die Redis/Valkey-Integration zu aktivieren.</li> <li><code>REDIS_HOST</code>: Geben Sie den Hostnamen oder die IP-Adresse des Redis/Valkey-Servers an.</li> <li><code>REDIS_PORT</code>: Geben Sie die Portnummer f\u00fcr den Redis/Valkey-Server an. Standard ist <code>6379</code>.</li> <li><code>REDIS_DATABASE</code>: Geben Sie die zu verwendende Redis/Valkey-Datenbanknummer an. Standard ist <code>0</code>.</li> </ul> <p>Wenn Sie erweiterte Einstellungen wie Authentifizierung, SSL/TLS-Unterst\u00fctzung oder den Sentinel-Modus ben\u00f6tigen, finden Sie detaillierte Anleitungen in der Dokumentation zu den Redis-Plugin-Einstellungen.</p>"},{"location":"de/advanced/#udptcp-anwendungen-schutzen","title":"UDP/TCP-Anwendungen sch\u00fctzen","text":"<p>Experimentelles Feature</p> <p>Dieses Feature ist nicht produktionsreif. F\u00fchlen Sie sich frei, es zu testen und uns Fehler \u00fcber Issues im GitHub-Repository zu melden.</p> <p>BunkerWeb bietet die M\u00f6glichkeit, als generischer UDP/TCP-Reverse-Proxy zu fungieren, sodass Sie alle netzwerkbasierten Anwendungen sch\u00fctzen k\u00f6nnen, die mindestens auf Schicht 4 des OSI-Modells arbeiten. Anstelle des \"klassischen\" HTTP-Moduls verwendet BunkerWeb das Stream-Modul von NGINX.</p> <p>Es ist wichtig zu beachten, dass nicht alle Einstellungen und Sicherheitsfunktionen bei Verwendung des Stream-Moduls verf\u00fcgbar sind. Weitere Informationen hierzu finden Sie in den Features-Abschnitten der Dokumentation.</p> <p>Die Konfiguration eines einfachen Reverse-Proxys ist der HTTP-Einrichtung sehr \u00e4hnlich, da dieselben Einstellungen verwendet werden: <code>USE_REVERSE_PROXY=yes</code> und <code>REVERSE_PROXY_HOST=myapp:9000</code>. Selbst wenn BunkerWeb hinter einem Load Balancer positioniert ist, bleiben die Einstellungen gleich (wobei das PROXY-Protokoll aus offensichtlichen Gr\u00fcnden die unterst\u00fctzte Option ist).</p> <p>Dar\u00fcber hinaus werden die folgenden spezifischen Einstellungen verwendet:</p> <ul> <li><code>SERVER_TYPE=stream</code>: aktiviert den <code>stream</code>-Modus (generisches UDP/TCP) anstelle des <code>http</code>-Modus (Standard)</li> <li><code>LISTEN_STREAM_PORT=4242</code>: der lauschende \"einfache\" (ohne SSL/TLS) Port, auf dem BunkerWeb lauschen wird</li> <li><code>LISTEN_STREAM_PORT_SSL=4343</code>: der lauschende \"ssl/tls\"-Port, auf dem BunkerWeb lauschen wird</li> <li><code>USE_UDP=no</code>: lauscht auf UDP-Pakete und leitet sie anstelle von TCP weiter</li> </ul> <p>Eine vollst\u00e4ndige Liste der Einstellungen f\u00fcr den <code>stream</code>-Modus finden Sie im Abschnitt Features der Dokumentation.</p> <p>mehrere lauschende Ports</p> <p>Seit Version <code>1.6.0</code> unterst\u00fctzt BunkerWeb mehrere lauschende Ports f\u00fcr den <code>stream</code>-Modus. Sie k\u00f6nnen sie mit den Einstellungen <code>LISTEN_STREAM_PORT</code> und <code>LISTEN_STREAM_PORT_SSL</code> angeben.</p> <p>Hier ist ein Beispiel:</p> <pre><code>...\nLISTEN_STREAM_PORT=4242\nLISTEN_STREAM_PORT_SSL=4343\nLISTEN_STREAM_PORT_1=4244\nLISTEN_STREAM_PORT_SSL_1=4344\n...\n</code></pre> All-in-oneDockerDocker autoconfKubernetesLinuxSwarm <p>Sie m\u00fcssen die Einstellungen zu den Umgebungsvariablen hinzuf\u00fcgen, wenn Sie den All-in-one-Container ausf\u00fchren. Sie m\u00fcssen auch die Stream-Ports freigeben.</p> <p>Dieses Beispiel konfiguriert BunkerWeb, um zwei Stream-basierte Anwendungen, <code>app1.example.com</code> und <code>app2.example.com</code>, zu proxieren.</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e SERVICE_UI=\"no\" \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e USE_REVERSE_PROXY=\"yes\" \\\n    -e SERVER_TYPE=\"stream\" \\\n    -e app1.example.com_REVERSE_PROXY_HOST=\"myapp1:9000\" \\\n    -e app1.example.com_LISTEN_STREAM_PORT=\"10000\" \\\n    -e app2.example.com_REVERSE_PROXY_HOST=\"myapp2:9000\" \\\n    -e app2.example.com_LISTEN_STREAM_PORT=\"20000\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    -p 10000:10000/tcp \\\n    -p 20000:20000/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen angewendet werden.</p> <p>Ihre Anwendungen (<code>myapp1</code>, <code>myapp2</code>) sollten in separaten Containern laufen (oder anderweitig erreichbar sein) und ihre Hostnamen/IPs (z. B. <code>myapp1</code>, <code>myapp2</code>, die in <code>_REVERSE_PROXY_HOST</code> verwendet werden) m\u00fcssen vom <code>bunkerweb-aio</code>-Container aus aufl\u00f6sbar und erreichbar sein. Dies geschieht typischerweise, indem sie mit einem gemeinsamen Docker-Netzwerk verbunden werden.</p> <p>UI-Dienst deaktivieren</p> <p>Es wird empfohlen, den UI-Dienst zu deaktivieren (z. B. durch Setzen von <code>SERVICE_UI=no</code> als Umgebungsvariable), da die Web-UI nicht mit <code>SERVER_TYPE=stream</code> kompatibel ist.</p> <p>Bei Verwendung der Docker-Integration ist der einfachste Weg, bestehende Netzwerkanwendungen zu sch\u00fctzen, die Dienste zum <code>bw-services</code>-Netzwerk hinzuzuf\u00fcgen:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr alle Dienste zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n  # Optionaler API-Token f\u00fcr authentifizierte API-Aufrufe\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Behalten, wenn Sie die Let's Encrypt-Automatisierung mit dem http-Challenge-Typ verwenden m\u00f6chten\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Diese Einstellung ist obligatorisch, um die BunkerWeb-Instanz anzugeben\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      USE_REVERSE_PROXY: \"yes\" # Wird auf alle Dienste angewendet\n      SERVER_TYPE: \"stream\" # Wird auf alle Dienste angewendet\n      app1.example.com_REVERSE_PROXY_HOST: \"myapp1:9000\"\n      app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n      app2.example.com_REVERSE_PROXY_HOST: \"myapp2:9000\"\n      app2.example.com_LISTEN_STREAM_PORT: \"20000\"\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Bevor Sie den Docker-Autoconf-Integrations-Stack auf Ihrer Maschine ausf\u00fchren, m\u00fcssen Sie die Ports bearbeiten:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Behalten, wenn Sie die Let's Encrypt-Automatisierung mit dem http-Challenge-Typ verwenden m\u00f6chten\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n...\n</code></pre> <p>Sobald der Stack l\u00e4uft, k\u00f6nnen Sie Ihre bestehenden Anwendungen mit dem <code>bw-services</code>-Netzwerk verbinden und BunkerWeb mit Labels konfigurieren:</p> <pre><code>services:\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app1.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app2.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Experimentelles Feature</p> <p>Im Moment unterst\u00fctzen Ingresses den <code>stream</code>-Modus nicht. Was wir hier tun, ist ein Workaround, um es zum Laufen zu bringen.</p> <p>F\u00fchlen Sie sich frei, es zu testen und uns Fehler \u00fcber Issues im GitHub-Repository zu melden.</p> <p>Bevor Sie den Kubernetes-Integrations-Stack auf Ihrer Maschine ausf\u00fchren, m\u00fcssen Sie die Ports an Ihrem Load Balancer \u00f6ffnen:</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: lb\nspec:\n  type: LoadBalancer\n  ports:\n    - name: http # Behalten, wenn Sie die Let's Encrypt-Automatisierung mit dem http-Challenge-Typ verwenden m\u00f6chten\n      port: 80\n      targetPort: 8080\n    - name: app1\n      port: 10000\n      targetPort: 10000\n    - name: app2\n      port: 20000\n      targetPort: 20000\n  selector:\n    app: bunkerweb\n</code></pre> <p>Sobald der Stack l\u00e4uft, k\u00f6nnen Sie Ihre Ingress-Ressourcen erstellen:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  namespace: services\n  annotations:\n    bunkerweb.io/SERVER_TYPE: \"stream\" # Wird auf alle Dienste angewendet\n    bunkerweb.io/app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n    bunkerweb.io/app2.example.com_LISTEN_STREAM_PORT: \"20000\"\nspec:\n  rules:\n    - host: app1.example.com\n      http:\n        paths:\n          - path: / # Wird im Stream-Modus nicht verwendet, ist aber erforderlich\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app1\n                port:\n                  number: 9000\n    - host: app2.example.com\n      http:\n        paths:\n          - path: / # Wird im Stream-Modus nicht verwendet, ist aber erforderlich\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app2\n                port:\n                  number: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app1\n  namespace: services\n  labels:\n    app: app1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app1\n  template:\n    metadata:\n      labels:\n        app: app1\n    spec:\n      containers:\n        - name: app1\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app1\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app1\n  namespace: services\nspec:\n  selector:\n    app: app1\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app2\n  namespace: services\n  labels:\n    app: app2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app2\n  template:\n    metadata:\n      labels:\n        app: app2\n    spec:\n      containers:\n        - name: app2\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app2\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app2\n  namespace: services\nspec:\n  selector:\n    app: app2\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n</code></pre> <p>Sie m\u00fcssen die Einstellungen zur Datei <code>/etc/bunkerweb/variables.env</code> hinzuf\u00fcgen:</p> <pre><code>...\nSERVER_NAME=app1.example.com app2.example.com\nMULTISITE=yes\nUSE_REVERSE_PROXY=yes\nSERVER_TYPE=stream\napp1.example.com_REVERSE_PROXY_HOST=myapp1.domain.or.ip:9000\napp1.example.com_LISTEN_STREAM_PORT=10000\napp2.example.com_REVERSE_PROXY_HOST=myapp2.domain.or.ip:9000\napp2.example.com_LISTEN_STREAM_PORT=20000\n...\n</code></pre> <p>\u00dcberpr\u00fcfen wir nun den Status des Schedulers:</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>Wenn er bereits l\u00e4uft, k\u00f6nnen wir ihn neu laden:</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Andernfalls m\u00fcssen wir ihn starten:</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Bevor Sie den Swarm-Integrations-Stack auf Ihrer Maschine ausf\u00fchren, m\u00fcssen Sie die Ports bearbeiten:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      # Behalten, wenn Sie die Let's Encrypt-Automatisierung mit dem http-Challenge-Typ verwenden m\u00f6chten\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      # app1\n      - published: 10000\n        target: 10000\n        mode: host\n        protocol: tcp\n      # app2\n      - published: 20000\n        target: 20000\n        mode: host\n        protocol: tcp\n...\n</code></pre> <p>Sobald der Stack l\u00e4uft, k\u00f6nnen Sie Ihre bestehenden Anwendungen mit dem <code>bw-services</code>-Netzwerk verbinden und BunkerWeb mit Labels konfigurieren:</p> <pre><code>services:\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"de/advanced/#php","title":"PHP","text":"<p>Experimentelles Feature</p> <p>Im Moment ist die PHP-Unterst\u00fctzung mit BunkerWeb noch in der Beta-Phase und wir empfehlen Ihnen, wenn m\u00f6glich eine Reverse-Proxy-Architektur zu verwenden. \u00dcbrigens wird PHP f\u00fcr einige Integrationen wie Kubernetes \u00fcberhaupt nicht unterst\u00fctzt.</p> <p>BunkerWeb unterst\u00fctzt PHP \u00fcber externe oder entfernte PHP-FPM-Instanzen. Wir gehen davon aus, dass Sie bereits mit der Verwaltung solcher Dienste vertraut sind.</p> <p>Die folgenden Einstellungen k\u00f6nnen verwendet werden:</p> <ul> <li><code>REMOTE_PHP</code> : Hostname der entfernten PHP-FPM-Instanz.</li> <li><code>REMOTE_PHP_PATH</code> : Stammordner mit Dateien in der entfernten PHP-FPM-Instanz.</li> <li><code>REMOTE_PHP_PORT</code> : Port der entfernten PHP-FPM-Instanz (Standard ist 9000).</li> <li><code>LOCAL_PHP</code> : Pfad zur lokalen Socket-Datei der PHP-FPM-Instanz.</li> <li><code>LOCAL_PHP_PATH</code> : Stammordner mit Dateien in der lokalen PHP-FPM-Instanz.</li> </ul> All-in-oneDockerDocker autoconfKubernetesLinuxSwarm <p>Bei Verwendung des All-in-one-Images m\u00fcssen Sie zur Unterst\u00fctzung von PHP-Anwendungen Folgendes tun:</p> <ul> <li>Mounten Sie Ihre PHP-Dateien in den Ordner <code>/var/www/html</code> von BunkerWeb.</li> <li>Richten Sie einen PHP-FPM-Container f\u00fcr Ihre Anwendung ein und mounten Sie den Ordner mit den PHP-Dateien.</li> <li>Verwenden Sie die spezifischen Einstellungen <code>REMOTE_PHP</code> und <code>REMOTE_PHP_PATH</code> als Umgebungsvariablen beim Ausf\u00fchren von BunkerWeb.</li> </ul> <p>Wenn Sie den Multisite-Modus aktivieren, m\u00fcssen Sie separate Verzeichnisse f\u00fcr jede Ihrer Anwendungen erstellen. Jedes Unterverzeichnis sollte nach dem ersten Wert von <code>SERVER_NAME</code> benannt werden. Hier ist ein Dummy-Beispiel:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app2.example.com\n    \u2514\u2500\u2500 index.php\n\n2 Verzeichnisse, 2 Dateien\n</code></pre> <p>Wir gehen davon aus, dass sich Ihre PHP-Apps in einem Ordner namens <code>www</code> befinden. Bitte beachten Sie, dass Sie die Berechtigungen korrigieren m\u00fcssen, damit BunkerWeb (UID/GID 101) zumindest Dateien lesen und Ordner auflisten kann und PHP-FPM (UID/GID 33, wenn Sie das <code>php:fpm</code>-Image verwenden) der Eigent\u00fcmer der Dateien und Ordner ist:</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Sie k\u00f6nnen nun BunkerWeb ausf\u00fchren, es f\u00fcr Ihre PHP-Anwendung konfigurieren und auch die PHP-Apps ausf\u00fchren. Sie m\u00fcssen ein benutzerdefiniertes Docker-Netzwerk erstellen, damit BunkerWeb mit Ihren PHP-FPM-Containern kommunizieren kann.</p> <pre><code># Ein benutzerdefiniertes Netzwerk erstellen\ndocker network create php-network\n\n# PHP-FPM-Container ausf\u00fchren\ndocker run -d --name myapp1-php --network php-network -v ./www/app1.example.com:/app php:fpm\ndocker run -d --name myapp2-php --network php-network -v ./www/app2.example.com:/app php:fpm\n\n# BunkerWeb All-in-one ausf\u00fchren\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network php-network \\\n    -v ./www:/var/www/html \\\n    -v bw-storage:/data \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e REMOTE_PHP_PATH=\"/app\" \\\n    -e app1.example.com_REMOTE_PHP=\"myapp1-php\" \\\n    -e app2.example.com_REMOTE_PHP=\"myapp2-php\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Bitte beachten Sie, dass Sie, wenn Ihr Container bereits erstellt wurde, ihn l\u00f6schen und neu erstellen m\u00fcssen, damit die neuen Umgebungsvariablen angewendet werden.</p> <p>Bei Verwendung der Docker-Integration m\u00fcssen Sie zur Unterst\u00fctzung von PHP-Anwendungen Folgendes tun:</p> <ul> <li>Mounten Sie Ihre PHP-Dateien in den Ordner <code>/var/www/html</code> von BunkerWeb</li> <li>Richten Sie einen PHP-FPM-Container f\u00fcr Ihre Anwendung ein und mounten Sie den Ordner mit den PHP-Dateien</li> <li>Verwenden Sie die spezifischen Einstellungen <code>REMOTE_PHP</code> und <code>REMOTE_PHP_PATH</code> als Umgebungsvariablen beim Starten von BunkerWeb</li> </ul> <p>Wenn Sie den Multisite-Modus aktivieren, m\u00fcssen Sie separate Verzeichnisse f\u00fcr jede Ihrer Anwendungen erstellen. Jedes Unterverzeichnis sollte nach dem ersten Wert von <code>SERVER_NAME</code> benannt werden. Hier ist ein Dummy-Beispiel:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 Verzeichnisse, 3 Dateien\n</code></pre> <p>Wir gehen davon aus, dass sich Ihre PHP-Apps in einem Ordner namens <code>www</code> befinden. Bitte beachten Sie, dass Sie die Berechtigungen korrigieren m\u00fcssen, damit BunkerWeb (UID/GID 101) zumindest Dateien lesen und Ordner auflisten kann und PHP-FPM (UID/GID 33, wenn Sie das <code>php:fpm</code>-Image verwenden) der Eigent\u00fcmer der Dateien und Ordner ist:</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Sie k\u00f6nnen nun BunkerWeb ausf\u00fchren, es f\u00fcr Ihre PHP-Anwendung konfigurieren und auch die PHP-Apps ausf\u00fchren:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr alle Dienste zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Diese Einstellung ist obligatorisch, um die BunkerWeb-Instanz anzugeben\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      REMOTE_PHP_PATH: \"/app\" # Wird dank der MULTISITE-Einstellung auf alle Dienste angewendet\n      app1.example.com_REMOTE_PHP: \"myapp1\"\n      app2.example.com_REMOTE_PHP: \"myapp2\"\n      app3.example.com_REMOTE_PHP: \"myapp3\"\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: php:fpm\n    volumes:\n      - ./www/app1.example.com:/app\n    networks:\n      - bw-services\n\n  myapp2:\n    image: php:fpm\n    volumes:\n      - ./www/app2.example.com:/app\n    networks:\n      - bw-services\n\n  myapp3:\n    image: php:fpm\n    volumes:\n      - ./www/app3.example.com:/app\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Multisite-Modus aktiviert</p> <p>Die Docker-Autoconf-Integration impliziert die Verwendung des Multisite-Modus: Das Sch\u00fctzen einer PHP-Anwendung ist dasselbe wie das Sch\u00fctzen mehrerer.</p> <p>Bei Verwendung der Docker-Autoconf-Integration m\u00fcssen Sie zur Unterst\u00fctzung von PHP-Anwendungen Folgendes tun:</p> <ul> <li>Mounten Sie Ihre PHP-Dateien in den Ordner <code>/var/www/html</code> von BunkerWeb</li> <li>Richten Sie PHP-FPM-Container f\u00fcr Ihre Anwendungen ein und mounten Sie den Ordner mit den PHP-Apps</li> <li>Verwenden Sie die spezifischen Einstellungen <code>REMOTE_PHP</code> und <code>REMOTE_PHP_PATH</code> als Labels f\u00fcr Ihren PHP-FPM-Container</li> </ul> <p>Da die Docker-Autoconf die Verwendung des Multisite-Modus impliziert, m\u00fcssen Sie separate Verzeichnisse f\u00fcr jede Ihrer Anwendungen erstellen. Jedes Unterverzeichnis sollte nach dem ersten Wert von <code>SERVER_NAME</code> benannt werden. Hier ist ein Dummy-Beispiel:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 Verzeichnisse, 3 Dateien\n</code></pre> <p>Sobald die Ordner erstellt sind, kopieren Sie Ihre Dateien und korrigieren Sie die Berechtigungen, damit BunkerWeb (UID/GID 101) zumindest Dateien lesen und Ordner auflisten kann und PHP-FPM (UID/GID 33, wenn Sie das <code>php:fpm</code>-Image verwenden) der Eigent\u00fcmer der Dateien und Ordner ist:</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Wenn Sie den BunkerWeb-Autoconf-Stack starten, mounten Sie den Ordner <code>www</code> in <code>/var/www/html</code> f\u00fcr den Scheduler-Container:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr alle Dienste zu vermeiden\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"\" # Wir m\u00fcssen die BunkerWeb-Instanz hier nicht angeben, da sie automatisch vom Autoconf-Dienst erkannt werden\n      SERVER_NAME: \"\" # Der Servername wird \u00fcber Dienst-Labels gef\u00fcllt\n      MULTISITE: \"yes\" # Obligatorische Einstellung f\u00fcr Autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # Der Docker-Socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Sie k\u00f6nnen nun Ihre PHP-FPM-Container erstellen, die richtigen Unterordner mounten und Labels verwenden, um BunkerWeb zu konfigurieren:</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp1\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp2\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      labels:\n        - \"bunkerweb.SERVER_NAME=app3.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp3\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>PHP wird f\u00fcr Kubernetes nicht unterst\u00fctzt</p> <p>Die Kubernetes-Integration erm\u00f6glicht die Konfiguration \u00fcber Ingress und der BunkerWeb-Controller unterst\u00fctzt im Moment nur HTTP-Anwendungen.</p> <p>Wir gehen davon aus, dass Sie bereits den Linux-Integrations-Stack auf Ihrer Maschine laufen haben.</p> <p>Standardm\u00e4\u00dfig sucht BunkerWeb nach Web-Dateien im Ordner <code>/var/www/html</code>. Sie k\u00f6nnen ihn verwenden, um Ihre PHP-Anwendungen zu speichern. Bitte beachten Sie, dass Sie Ihren PHP-FPM-Dienst so konfigurieren m\u00fcssen, dass er den Benutzer/die Gruppe der laufenden Prozesse und die UNIX-Socket-Datei, die zur Kommunikation mit BunkerWeb verwendet wird, abruft oder festlegt.</p> <p>Zun\u00e4chst m\u00fcssen Sie sicherstellen, dass Ihre PHP-FPM-Instanz auf die Dateien im Ordner <code>/var/www/html</code> zugreifen kann und dass BunkerWeb auf die UNIX-Socket-Datei zugreifen kann, um mit PHP-FPM zu kommunizieren. Wir empfehlen, einen anderen Benutzer wie <code>www-data</code> f\u00fcr den PHP-FPM-Dienst festzulegen und der <code>nginx</code>-Gruppe Zugriff auf die UNIX-Socket-Datei zu geben. Hier ist die entsprechende PHP-FPM-Konfiguration:</p> <pre><code>...\n[www]\nuser = www-data\ngroup = www-data\nlisten = /run/php/php-fpm.sock\nlisten.owner = www-data\nlisten.group = nginx\nlisten.mode = 0660\n...\n</code></pre> <p>Vergessen Sie nicht, Ihren PHP-FPM-Dienst neu zu starten:</p> <pre><code>systemctl restart php-fpm\n</code></pre> <p>Wenn Sie den Multisite-Modus aktivieren, m\u00fcssen Sie separate Verzeichnisse f\u00fcr jede Ihrer Anwendungen erstellen. Jedes Unterverzeichnis sollte nach dem ersten Wert von <code>SERVER_NAME</code> benannt werden. Hier ist ein Dummy-Beispiel:</p> <pre><code>/var/www/html\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 Verzeichnisse, 3 Dateien\n</code></pre> <p>Bitte beachten Sie, dass Sie die Berechtigungen korrigieren m\u00fcssen, damit BunkerWeb (Gruppe <code>nginx</code>) zumindest Dateien lesen und Ordner auflisten kann und PHP-FPM (Benutzer <code>www-data</code>, kann je nach System unterschiedlich sein) der Eigent\u00fcmer der Dateien und Ordner ist:</p> <pre><code>chown -R www-data:nginx /var/www/html &amp;&amp; \\\nfind /var/www/html -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /var/www/html -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Sie k\u00f6nnen nun die Datei <code>/etc/bunkerweb/variable.env</code> bearbeiten:</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nMULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\napp1.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp1.example.com_LOCAL_PHP_PATH=/var/www/html/app1.example.com\napp2.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp2.example.com_LOCAL_PHP_PATH=/var/www/html/app2.example.com\napp3.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp3.example.com_LOCAL_PHP_PATH=/var/www/html/app3.example.com\n</code></pre> <p>\u00dcberpr\u00fcfen wir nun den Status des Schedulers:</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>Wenn er bereits l\u00e4uft, k\u00f6nnen wir ihn neu laden:</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Andernfalls m\u00fcssen wir ihn starten:</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Multisite-Modus aktiviert</p> <p>Die Swarm-Integration impliziert die Verwendung des Multisite-Modus: Das Sch\u00fctzen einer PHP-Anwendung ist dasselbe wie das Sch\u00fctzen mehrerer.</p> <p>Geteiltes Volume</p> <p>Die Verwendung von PHP mit der Docker Swarm-Integration erfordert ein geteiltes Volume zwischen allen BunkerWeb- und PHP-FPM-Instanzen, was in dieser Dokumentation nicht behandelt wird.</p> <p>Bei Verwendung von Swarm m\u00fcssen Sie zur Unterst\u00fctzung von PHP-Anwendungen Folgendes tun:</p> <ul> <li>Mounten Sie Ihre PHP-Dateien in den Ordner <code>/var/www/html</code> von BunkerWeb</li> <li>Richten Sie PHP-FPM-Container f\u00fcr Ihre Anwendungen ein und mounten Sie den Ordner mit den PHP-Apps</li> <li>Verwenden Sie die spezifischen Einstellungen <code>REMOTE_PHP</code> und <code>REMOTE_PHP_PATH</code> als Labels f\u00fcr Ihren PHP-FPM-Container</li> </ul> <p>Da die Swarm-Integration die Verwendung des Multisite-Modus impliziert, m\u00fcssen Sie separate Verzeichnisse f\u00fcr jede Ihrer Anwendungen erstellen. Jedes Unterverzeichnis sollte nach dem ersten Wert von <code>SERVER_NAME</code> benannt werden. Hier ist ein Dummy-Beispiel:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 Verzeichnisse, 3 Dateien\n</code></pre> <p>Als Beispiel gehen wir davon aus, dass Sie einen freigegebenen Ordner auf Ihren Worker-Knoten am Endpunkt <code>/shared</code> gemountet haben.</p> <p>Sobald die Ordner erstellt sind, kopieren Sie Ihre Dateien und korrigieren Sie die Berechtigungen, damit BunkerWeb (UID/GID 101) zumindest Dateien lesen und Ordner auflisten kann und PHP-FPM (UID/GID 33, wenn Sie das <code>php:fpm</code>-Image verwenden) der Eigent\u00fcmer der Dateien und Ordner ist:</p> <pre><code>chown -R 33:101 /shared/www &amp;&amp; \\\nfind /shared/www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /shared/www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Wenn Sie den BunkerWeb-Stack starten, mounten Sie den Ordner <code>/shared/www</code> in <code>/var/www/html</code> f\u00fcr den Scheduler-Container:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    volumes:\n      - /shared/www:/var/www/html\n...\n</code></pre> <p>Sie k\u00f6nnen nun Ihre PHP-FPM-Dienste erstellen, die richtigen Unterordner mounten und Labels verwenden, um BunkerWeb zu konfigurieren:</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app1.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp1\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app2.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp2\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app3.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp3\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"de/advanced/#ipv6","title":"IPv6","text":"<p>Experimentelles Feature</p> <p>Dieses Feature ist nicht produktionsreif. F\u00fchlen Sie sich frei, es zu testen und uns Fehler \u00fcber Issues im GitHub-Repository zu melden.</p> <p>Standardm\u00e4\u00dfig lauscht BunkerWeb nur auf IPv4-Adressen und verwendet kein IPv6 f\u00fcr die Netzwerkkommunikation. Wenn Sie die IPv6-Unterst\u00fctzung aktivieren m\u00f6chten, m\u00fcssen Sie <code>USE_IPV6=yes</code> setzen. Bitte beachten Sie, dass die IPv6-Konfiguration Ihres Netzwerks und Ihrer Umgebung au\u00dferhalb des Geltungsbereichs dieser Dokumentation liegt.</p> Docker / Autoconf / SwarmLinux <p>Zun\u00e4chst m\u00fcssen Sie Ihren Docker-Daemon so konfigurieren, dass er die IPv6-Unterst\u00fctzung f\u00fcr Container aktiviert und bei Bedarf ip6tables verwendet. Hier ist eine Beispielkonfiguration f\u00fcr Ihre <code>/etc/docker/daemon.json</code>-Datei:</p> <pre><code>{\n  \"experimental\": true,\n  \"ipv6\": true,\n  \"ip6tables\": true,\n  \"fixed-cidr-v6\": \"fd00:dead:beef::/48\"\n}\n</code></pre> <p>Sie k\u00f6nnen nun den Docker-Dienst neu starten, um die \u00c4nderungen zu \u00fcbernehmen:</p> <pre><code>systemctl restart docker\n</code></pre> <p>Sobald Docker f\u00fcr die Unterst\u00fctzung von IPv6 eingerichtet ist, k\u00f6nnen Sie die Einstellung <code>USE_IPV6</code> hinzuf\u00fcgen und die <code>bw-services</code> f\u00fcr IPv6 konfigurieren:</p> <pre><code>services:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      USE_IPv6: \"yes\"\n\n...\n\nnetworks:\n  bw-services:\n    name: bw-services\n    enable_ipv6: true\n    ipam:\n      config:\n        - subnet: fd00:13:37::/48\n          gateway: fd00:13:37::1\n\n...\n</code></pre> <p>Sie m\u00fcssen die Einstellungen zur Datei <code>/etc/bunkerweb/variables.env</code> hinzuf\u00fcgen:</p> <pre><code>...\nUSE_IPV6=yes\n...\n</code></pre> <p>\u00dcberpr\u00fcfen wir den Status von BunkerWeb:</p> <pre><code>systemctl status bunkerweb\n</code></pre> <p>Wenn er bereits l\u00e4uft, k\u00f6nnen wir ihn neu starten:</p> <pre><code>systemctl restart bunkerweb\n</code></pre> <p>Andernfalls m\u00fcssen wir ihn starten:</p> <pre><code>systemctl start bunkerweb\n</code></pre>"},{"location":"de/advanced/#sicherheits-tuning","title":"Sicherheits-Tuning","text":"<p>BunkerWeb bietet viele Sicherheitsfunktionen, die Sie mit Features konfigurieren k\u00f6nnen. Auch wenn die Standardwerte der Einstellungen eine minimale \"Sicherheit von Haus aus\" gew\u00e4hrleisten, empfehlen wir dringend, sie anzupassen. Dadurch k\u00f6nnen Sie das Sicherheitsniveau Ihrer Wahl sicherstellen und auch Fehlalarme verwalten.</p> <p>Andere Funktionen</p> <p>Dieser Abschnitt konzentriert sich nur auf das Sicherheits-Tuning, siehe den Abschnitt Features der Dokumentation f\u00fcr andere Einstellungen.</p> <p> </p> \u00dcbersicht und Reihenfolge der Kern-Sicherheits-Plugins"},{"location":"de/advanced/#crowdsec-console-integration","title":"CrowdSec Console-Integration","text":"<p>Wenn Sie noch nicht mit der CrowdSec Console-Integration vertraut sind, CrowdSec nutzt crowdsourced Intelligenz, um Cyber-Bedrohungen zu bek\u00e4mpfen. Stellen Sie es sich wie das \"Waze der Cybersicherheit\" vor \u2013 wenn ein Server angegriffen wird, werden andere Systeme weltweit alarmiert und vor denselben Angreifern gesch\u00fctzt. Mehr dar\u00fcber erfahren Sie hier.</p> <p>Herzlichen Gl\u00fcckwunsch, Ihre BunkerWeb-Instanz ist jetzt in Ihrer CrowdSec Console registriert!</p> <p>Pro-Tipp: Wenn Sie Ihre Warnungen anzeigen, klicken Sie auf die Option \"Spalten\" und aktivieren Sie das Kontrollk\u00e4stchen \"Kontext\", um auf BunkerWeb-spezifische Daten zuzugreifen.</p> <p> </p> BunkerWeb-Daten, die in der Kontextspalte angezeigt werden"},{"location":"de/advanced/#uberwachung-und-berichterstattung","title":"\u00dcberwachung und Berichterstattung","text":""},{"location":"de/advanced/#uberwachung-pro","title":"\u00dcberwachung  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das \u00dcberwachungs-Plugin erm\u00f6glicht es Ihnen, Metriken \u00fcber BunkerWeb zu sammeln und abzurufen. Durch die Aktivierung beginnen Ihre Instanz(en), verschiedene Daten zu Angriffen, Anfragen und Leistung zu sammeln. Sie k\u00f6nnen sie dann durch Aufrufen des API-Endpunkts <code>/monitoring</code> regelm\u00e4\u00dfig abrufen oder andere Plugins wie den Prometheus-Exporter verwenden.</p> <p>Liste der Funktionen</p> <ul> <li>Aktivierung der Sammlung verschiedener BunkerWeb-Metriken</li> <li>Abrufen von Metriken von der API</li> <li>Verwendung in Kombination mit anderen Plugins (z. B. Prometheus-Exporter)</li> <li>Dedizierte UI-Seite zur \u00dcberwachung Ihrer Instanz(en)</li> </ul> <p>Liste der Einstellungen</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_MONITORING</code> <code>yes</code> global nein Aktiviert die \u00dcberwachung von BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global nein Gr\u00f6\u00dfe des Diktion\u00e4rs zum Speichern von \u00dcberwachungsmetriken."},{"location":"de/advanced/#prometheus-exporter-pro","title":"Prometheus-Exporter  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Prometheus-Exporter-Plugin f\u00fcgt einen Prometheus-Exporter zu Ihrer/n BunkerWeb-Instanz(en) hinzu. Wenn aktiviert, k\u00f6nnen Sie Ihre Prometheus-Instanz(en) so konfigurieren, dass sie einen bestimmten Endpunkt auf BunkerWeb abrufen und interne Metriken sammeln.</p> <p>Wir stellen auch ein Grafana-Dashboard zur Verf\u00fcgung, das Sie in Ihre eigene Instanz importieren und mit Ihrer eigenen Prometheus-Datenquelle verbinden k\u00f6nnen.</p> <p>Bitte beachten Sie, dass die Verwendung des Prometheus-Exporter-Plugins die Aktivierung des \u00dcberwachungs-Plugins erfordert (<code>USE_MONITORING=yes</code>)</p> <p>Liste der Funktionen</p> <ul> <li>Prometheus-Exporter, der interne BunkerWeb-Metriken bereitstellt</li> <li>Dedizierter und konfigurierbarer Port, lauschende IP und URL</li> <li>Whitelist-IP/Netzwerk f\u00fcr maximale Sicherheit</li> </ul> <p>Liste der Einstellungen</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global nein Aktiviert den Prometheus-Export. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global nein Lauschende IP des Prometheus-Exporters. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global nein Lauschender Port des Prometheus-Exporters. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global nein HTTP-URL des Prometheus-Exporters. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global nein Liste der IP/Netzwerke, die den Prometheus-Exporter-Endpunkt kontaktieren d\u00fcrfen."},{"location":"de/advanced/#berichterstattung-pro","title":"Berichterstattung  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>\u00dcberwachungs-Plugin erforderlich</p> <p>Dieses Plugin erfordert, dass das Monitoring Pro-Plugin installiert und mit der Einstellung <code>USE_MONITORING</code> auf <code>yes</code> gesetzt ist.</p> <p>Das Reporting-Plugin bietet eine umfassende L\u00f6sung f\u00fcr die regelm\u00e4\u00dfige Berichterstattung wichtiger Daten aus BunkerWeb, einschlie\u00dflich globaler Statistiken, Angriffe, Sperren, Anfragen, Gr\u00fcnde und AS-Informationen. Es bietet eine breite Palette von Funktionen, einschlie\u00dflich automatischer Berichterstellung, Anpassungsoptionen und nahtloser Integration mit dem Monitoring Pro-Plugin. Mit dem Reporting-Plugin k\u00f6nnen Sie Berichte einfach erstellen und verwalten, um die Leistung und Sicherheit Ihrer Anwendung zu \u00fcberwachen.</p> <p>Liste der Funktionen</p> <ul> <li>Regelm\u00e4\u00dfige Berichterstattung wichtiger Daten aus BunkerWeb, einschlie\u00dflich globaler Statistiken, Angriffe, Sperren, Anfragen, Gr\u00fcnde und AS-Informationen.</li> <li>Integration mit dem Monitoring Pro-Plugin f\u00fcr nahtlose Integration und erweiterte Berichtsfunktionen.</li> <li>Unterst\u00fctzung f\u00fcr Webhooks (klassisch, Discord und Slack) f\u00fcr Echtzeit-Benachrichtigungen.</li> <li>Unterst\u00fctzung f\u00fcr SMTP f\u00fcr E-Mail-Benachrichtigungen.</li> <li>Konfigurationsoptionen zur Anpassung und Flexibilit\u00e4t.</li> </ul> <p>Liste der Einstellungen</p> Einstellung Standard Kontext Beschreibung <code>USE_REPORTING_SMTP</code> <code>no</code> global Aktiviert das Senden des Berichts per E-Mail. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global Aktiviert das Senden des Berichts per Webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global Die H\u00e4ufigkeit, mit der Berichte gesendet werden. <code>REPORTING_WEBHOOK_URLS</code> global Liste der Webhook-URLs, die den Bericht im Markdown-Format erhalten sollen (durch Leerzeichen getrennt). <code>REPORTING_SMTP_EMAILS</code> global Liste der E-Mail-Adressen, die den Bericht im HTML-Format erhalten sollen (durch Leerzeichen getrennt). <code>REPORTING_SMTP_HOST</code> global Der Host-Server, der f\u00fcr den SMTP-Versand verwendet wird. <code>REPORTING_SMTP_PORT</code> <code>465</code> global Der f\u00fcr SMTP verwendete Port. Bitte beachten Sie, dass es je nach Verbindungstyp unterschiedliche Standards gibt (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global Die als Absender verwendete E-Mail-Adresse. Beachten Sie, dass 2FA f\u00fcr diese E-Mail-Adresse deaktiviert sein muss. <code>REPORTING_SMTP_FROM_USER</code> global Der Benutzerauthentifizierungswert f\u00fcr das Senden \u00fcber die Absender-E-Mail-Adresse. <code>REPORTING_SMTP_FROM_PASSWORD</code> global Der Passwortauthentifizierungswert f\u00fcr das Senden \u00fcber die Absender-E-Mail-Adresse. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global Bestimmt, ob eine sichere Verbindung f\u00fcr SMTP verwendet werden soll oder nicht. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global Die Betreffzeile der E-Mail. <p>Information und Verhalten</p> <ul> <li>wenn <code>USE_REPORTING_SMTP</code> auf <code>yes</code> gesetzt ist, muss die Einstellung <code>REPORTING_SMTP_EMAILS</code> gesetzt werden.</li> <li>wenn <code>USE_REPORTING_WEBHOOK</code> auf <code>yes</code> gesetzt ist, muss die Einstellung <code>REPORTING_WEBHOOK_URLS</code> gesetzt werden.</li> <li>Akzeptierte Werte f\u00fcr <code>REPORTING_SCHEDULE</code> sind <code>daily</code>, <code>weekly</code> und <code>monthly</code>.</li> <li>wenn keine <code>REPORTING_SMTP_FROM_USER</code> und <code>REPORTING_SMTP_FROM_PASSWORD</code> gesetzt sind, versucht das Plugin, die E-Mail ohne Authentifizierung zu senden.</li> <li>wenn <code>REPORTING_SMTP_FROM_USER</code> nicht gesetzt ist, aber <code>REPORTING_SMTP_FROM_PASSWORD</code> gesetzt ist, verwendet das Plugin die <code>REPORTING_SMTP_FROM_EMAIL</code> als Benutzernamen.</li> <li>wenn der Job fehlschl\u00e4gt, versucht das Plugin, den Bericht bei der n\u00e4chsten Ausf\u00fchrung erneut zu senden.</li> </ul>"},{"location":"de/advanced/#sicherung-und-wiederherstellung","title":"Sicherung und Wiederherstellung","text":""},{"location":"de/advanced/#sicherung-s3-pro","title":"Sicherung S3  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Backup S3-Tool automatisiert nahtlos den Datenschutz, \u00e4hnlich dem Community-Backup-Plugin. Es zeichnet sich jedoch dadurch aus, dass es Backups direkt und sicher in einem S3-Bucket speichert.</p> <p>Durch die Aktivierung dieser Funktion sch\u00fctzen Sie proaktiv die Integrit\u00e4t Ihrer Daten. Das Speichern von Backups remote sch\u00fctzt wichtige Informationen vor Bedrohungen wie Hardwareausf\u00e4llen, Cyberangriffen oder Naturkatastrophen. Dies gew\u00e4hrleistet sowohl Sicherheit als auch Verf\u00fcgbarkeit, erm\u00f6glicht eine schnelle Wiederherstellung bei unerwarteten Ereignissen, bewahrt die betriebliche Kontinuit\u00e4t und sorgt f\u00fcr Sorgenfreiheit.</p> Informationen f\u00fcr Benutzer von Red Hat Enterprise Linux (RHEL) 8.9 <p>Wenn Sie RHEL 8.9 verwenden und eine externe Datenbank nutzen m\u00f6chten, m\u00fcssen Sie das Paket <code>mysql-community-client</code> installieren, um sicherzustellen, dass der Befehl <code>mysqldump</code> verf\u00fcgbar ist. Sie k\u00f6nnen das Paket mit den folgenden Befehlen installieren:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Installieren Sie das MySQL-Repository-Konfigurationspaket</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Aktivieren Sie das MySQL-Repository</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Installieren Sie den MySQL-Client</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Installieren Sie das PostgreSQL-Repository-Konfigurationspaket</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Installieren Sie den PostgreSQL-Client</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <p>Liste der Funktionen</p> <ul> <li>Automatische Datensicherung in einem S3-Bucket</li> <li>Flexible Planungsoptionen: t\u00e4glich, w\u00f6chentlich oder monatlich</li> <li>Rotationsmanagement zur Steuerung der Anzahl der aufzubewahrenden Backups</li> <li>Anpassbarer Komprimierungsgrad f\u00fcr Backup-Dateien</li> </ul> <p>Liste der Einstellungen</p> Einstellung Standard Kontext Beschreibung <code>USE_BACKUP_S3</code> <code>no</code> global Aktiviert oder deaktiviert die S3-Backup-Funktion <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global Die H\u00e4ufigkeit des Backups <code>BACKUP_S3_ROTATION</code> <code>7</code> global Die Anzahl der aufzubewahrenden Backups <code>BACKUP_S3_ENDPOINT</code> global Der S3-Endpunkt <code>BACKUP_S3_BUCKET</code> global Der S3-Bucket <code>BACKUP_S3_DIR</code> global Das S3-Verzeichnis <code>BACKUP_S3_REGION</code> global Die S3-Region <code>BACKUP_S3_ACCESS_KEY_ID</code> global Die S3-Zugriffsschl\u00fcssel-ID <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global Das S3-Zugriffsschl\u00fcsselgeheimnis <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global Der Komprimierungsgrad der Backup-Zip-Datei"},{"location":"de/advanced/#manuelle-sicherung","title":"Manuelle Sicherung","text":"<p>Um eine Sicherung manuell zu starten, f\u00fchren Sie den folgenden Befehl aus:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Dieser Befehl erstellt eine Sicherung Ihrer Datenbank und speichert sie im S3-Bucket, der in der Einstellung <code>BACKUP_S3_BUCKET</code> angegeben ist.</p> <p>Sie k\u00f6nnen auch einen benutzerdefinierten S3-Bucket f\u00fcr die Sicherung angeben, indem Sie die Umgebungsvariable <code>BACKUP_S3_BUCKET</code> bei der Ausf\u00fchrung des Befehls bereitstellen:</p> LinuxDocker <pre><code>BACKUP_S3_BUCKET=your-bucket-name bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it -e BACKUP_S3_BUCKET=your-bucket-name &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Spezifikationen f\u00fcr MariaDB/MySQL</p> <p>Falls Sie MariaDB/MySQL verwenden, kann beim Versuch, Ihre Datenbank zu sichern, der folgende Fehler auftreten:</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>Um dieses Problem zu l\u00f6sen, k\u00f6nnen Sie den folgenden Befehl ausf\u00fchren, um das Authentifizierungs-Plugin auf <code>mysql_native_password</code> zu \u00e4ndern:</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>Wenn Sie die Docker-Integration verwenden, k\u00f6nnen Sie den folgenden Befehl zur <code>docker-compose.yml</code>-Datei hinzuf\u00fcgen, um das Authentifizierungs-Plugin automatisch zu \u00e4ndern:</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"de/advanced/#manuelle-wiederherstellung","title":"Manuelle Wiederherstellung","text":"<p>Um eine Wiederherstellung manuell zu starten, f\u00fchren Sie den folgenden Befehl aus:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre> <p>Dieser Befehl erstellt eine tempor\u00e4re Sicherung Ihrer Datenbank im S3-Bucket, der in der Einstellung <code>BACKUP_S3_BUCKET</code> angegeben ist, und stellt Ihre Datenbank auf die neueste im Bucket verf\u00fcgbare Sicherung wieder her.</p> <p>Sie k\u00f6nnen auch eine benutzerdefinierte Sicherungsdatei f\u00fcr die Wiederherstellung angeben, indem Sie den Pfad dazu als Argument bei der Ausf\u00fchrung des Befehls angeben:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore s3_backup_file.zip\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup restore s3_backup_file.zip\n</code></pre> <p>Im Falle eines Fehlers</p> <p>Machen Sie sich keine Sorgen, wenn die Wiederherstellung fehlschl\u00e4gt, Sie k\u00f6nnen Ihre Datenbank jederzeit auf den vorherigen Zustand zur\u00fccksetzen, indem Sie den Befehl erneut ausf\u00fchren, da vor der Wiederherstellung eine Sicherung erstellt wird:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre>"},{"location":"de/advanced/#migration-pro","title":"Migration  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Migrations-Plugin revolutioniert die \u00dcbertragung von BunkerWeb-Konfigurationen zwischen Instanzen mit seiner benutzerfreundlichen Weboberfl\u00e4che, die den gesamten Migrationsprozess vereinfacht. Ob Sie Systeme aufr\u00fcsten, die Infrastruktur skalieren oder Umgebungen wechseln, dieses Tool erm\u00f6glicht es Ihnen, Einstellungen, Pr\u00e4ferenzen und Daten m\u00fchelos und mit un\u00fcbertroffener Leichtigkeit und Zuversicht zu \u00fcbertragen. Verabschieden Sie sich von umst\u00e4ndlichen manuellen Prozessen und begr\u00fc\u00dfen Sie ein nahtloses, problemloses Migrationserlebnis.</p> <p>Liste der Funktionen</p> <ul> <li> <p>M\u00fchelose Migration: \u00dcbertragen Sie BunkerWeb-Konfigurationen einfach zwischen Instanzen, ohne die Komplexit\u00e4t manueller Verfahren.</p> </li> <li> <p>Intuitive Weboberfl\u00e4che: Navigieren Sie m\u00fchelos durch den Migrationsprozess mit einer benutzerfreundlichen Weboberfl\u00e4che, die f\u00fcr eine intuitive Bedienung entwickelt wurde.</p> </li> <li> <p>Datenbank\u00fcbergreifende Kompatibilit\u00e4t: Genie\u00dfen Sie eine nahtlose Migration \u00fcber verschiedene Datenbankplattformen hinweg, einschlie\u00dflich SQLite, MySQL, MariaDB und PostgreSQL, und gew\u00e4hrleisten Sie die Kompatibilit\u00e4t mit Ihrer bevorzugten Datenbankumgebung.</p> </li> </ul>"},{"location":"de/advanced/#eine-migrationsdatei-erstellen","title":"Eine Migrationsdatei erstellen","text":"<p>Um eine Migrationsdatei manuell zu erstellen, f\u00fchren Sie den folgenden Befehl aus:</p> LinuxDocker <pre><code>bwcli plugin migration create /pfad/zur/migrations/datei\n</code></pre> <ol> <li> <p>Eine Migrationsdatei erstellen:</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration create /pfad/zur/migrations/datei\n</code></pre> </li> <li> <p>Kopieren Sie die Migrationsdatei auf Ihren lokalen Rechner:</p> <pre><code>docker cp &lt;scheduler_container&gt;:/pfad/zur/migrations/datei /pfad/zur/migrations/datei\n</code></pre> </li> </ol> <p>Dieser Befehl erstellt eine Sicherung Ihrer Datenbank und speichert sie im im Befehl angegebenen Sicherungsverzeichnis.</p> <p>Spezifikationen f\u00fcr MariaDB/MySQL</p> <p>Falls Sie MariaDB/MySQL verwenden, kann beim Versuch, Ihre Datenbank zu sichern, der folgende Fehler auftreten:</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>Um dieses Problem zu l\u00f6sen, k\u00f6nnen Sie den folgenden Befehl ausf\u00fchren, um das Authentifizierungs-Plugin auf <code>mysql_native_password</code> zu \u00e4ndern:</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>Wenn Sie die Docker-Integration verwenden, k\u00f6nnen Sie den folgenden Befehl zur <code>docker-compose.yml</code>-Datei hinzuf\u00fcgen, um das Authentifizierungs-Plugin automatisch zu \u00e4ndern:</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"de/advanced/#eine-migration-initialisieren","title":"Eine Migration initialisieren","text":"<p>Um eine Migration manuell zu initialisieren, f\u00fchren Sie den folgenden Befehl aus:</p> LinuxDockerAll-in-one <pre><code>bwcli plugin migration migrate /pfad/zur/migrations/datei\n</code></pre> <ol> <li> <p>Kopieren Sie die Migrationsdatei in den Container:</p> <pre><code>docker cp /pfad/zur/migrations/datei &lt;scheduler_container&gt;:/pfad/zur/migrations/datei\n</code></pre> </li> <li> <p>Initialisieren Sie die Migration:</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration migrate /pfad/zur/migrations/datei\n</code></pre> </li> </ol> <ol> <li> <p>Kopieren Sie die Migrationsdatei in den Container:</p> <pre><code>docker cp /pfad/zur/migrations/datei bunkerweb-aio:/pfad/zur/migrations/datei\n</code></pre> </li> <li> <p>Initialisieren Sie die Migration:</p> <pre><code>docker exec -it bunkerweb-aio bwcli plugin migration migrate /pfad/zur/migrations/datei\n</code></pre> </li> </ol> <p>Dieser Befehl migriert Ihre BunkerWeb-Daten nahtlos, um genau der in der Migrationsdatei beschriebenen Konfiguration zu entsprechen.</p>"},{"location":"de/advanced/#anti-ddos-pro","title":"Anti-DDoS  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Anti-DDoS-Plugin bietet fortschrittlichen Schutz gegen Distributed Denial of Service (DDoS)-Angriffe, indem es verd\u00e4chtigen Verkehr in Echtzeit \u00fcberwacht, analysiert und filtert.</p> <p>Durch die Verwendung eines gleitenden Fenstermechanismus unterh\u00e4lt das Plugin ein In-Memory-W\u00f6rterbuch mit Zeitstempeln von Anfragen, um anormale Verkehrsspitzen von einzelnen IP-Adressen zu erkennen. Basierend auf dem konfigurierten Sicherheitsmodus kann es entweder die beleidigenden Verbindungen blockieren oder die verd\u00e4chtige Aktivit\u00e4t zur weiteren \u00dcberpr\u00fcfung protokollieren.</p>"},{"location":"de/advanced/#funktionen","title":"Funktionen","text":"<ul> <li>Echtzeit-Verkehrsanalyse: \u00dcberwacht kontinuierlich eingehende Anfragen, um potenzielle DDoS-Angriffe zu erkennen.</li> <li>Gleitender Fenstermechanismus: Verfolgt die j\u00fcngsten Anforderungsaktivit\u00e4ten innerhalb eines konfigurierbaren Zeitfensters.</li> <li>Konfigurierbare Schwellenwerte: Erm\u00f6glicht die Definition der maximalen Anzahl verd\u00e4chtiger Anfragen pro IP.</li> <li>Fortschrittliche Blockierungslogik: Wertet sowohl die Anzahl der Anfragen pro IP als auch die Anzahl der unterschiedlichen IPs aus, die den Schwellenwert \u00fcberschreiten.</li> <li>Flexible Sicherheitsmodi: W\u00e4hlen Sie zwischen sofortiger Verbindungsblockierung oder dem reinen Erkennungsmodus (Protokollierung).</li> <li>Optimierter In-Memory-Datenspeicher: Gew\u00e4hrleistet Hochgeschwindigkeits-Lookups und effizientes Metrik-Tracking.</li> <li>Automatische Bereinigung: L\u00f6scht regelm\u00e4\u00dfig veraltete Daten, um eine optimale Leistung zu gew\u00e4hrleisten.</li> </ul>"},{"location":"de/advanced/#konfiguration","title":"Konfiguration","text":"<p>Passen Sie das Verhalten des Plugins mit den folgenden Einstellungen an:</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_ANTIDDOS</code> <code>no</code> global nein Aktiviert oder deaktiviert den Anti-DDoS-Schutz. Setzen Sie auf <code>\"yes\"</code>, um das Plugin zu aktivieren. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global nein Gr\u00f6\u00dfe des In-Memory-Datenspeichers zur Verfolgung von DDoS-Metriken (z. B. <code>10M</code>, <code>500k</code>). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global nein Maximale Anzahl verd\u00e4chtiger Anfragen pro IP innerhalb des definierten Zeitfensters. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global nein Zeitfenster in Sekunden, in dem verd\u00e4chtige Anfragen gez\u00e4hlt werden. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global nein HTTP-Statuscodes, die als verd\u00e4chtig gelten und zur Ausl\u00f6sung von Anti-DDoS-Aktionen verwendet werden. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global nein Mindestanzahl unterschiedlicher IPs, die den Schwellenwert \u00fcberschreiten m\u00fcssen, bevor der Blockierungsmodus erzwungen wird."},{"location":"de/advanced/#bewahrte-verfahren","title":"Bew\u00e4hrte Verfahren","text":"<ul> <li>Schwellenwert-Tuning: Passen Sie <code>ANTIDDOS_THRESHOLD</code> und <code>ANTIDDOS_WINDOW_TIME</code> basierend auf Ihren typischen Verkehrsmustern an.</li> <li>Statuscode-\u00dcberpr\u00fcfung: Aktualisieren Sie <code>ANTIDDOS_STATUS_CODES</code> regelm\u00e4\u00dfig, um neue oder sich entwickelnde verd\u00e4chtige Verhaltensweisen zu erfassen.</li> <li>\u00dcberwachung: Analysieren Sie Protokolle und Metriken regelm\u00e4\u00dfig, um die Einstellungen zu optimieren und den Gesamtschutz zu verbessern.</li> </ul>"},{"location":"de/advanced/#benutzer-manager-pro","title":"Benutzer-Manager  (PRO)","text":"<p>Das Benutzerverwaltungs-Plugin bietet eine robuste Schnittstelle zur Verwaltung von Benutzerkonten in Ihrem System.</p> <p>Mit diesem Plugin k\u00f6nnen Administratoren m\u00fchelos Benutzerkonten erstellen, aktualisieren und deaktivieren, Benutzerrollen verwalten, die Zwei-Faktor-Authentifizierung (2FA) umschalten und detaillierte Benutzerinformationen wie letzte Anmeldezeitstempel und Kontostatus (aktiv oder inaktiv) anzeigen. Dieses Plugin wurde mit Blick auf Sicherheit und Benutzerfreundlichkeit entwickelt und vereinfacht routinem\u00e4\u00dfige Benutzerverwaltungsaufgaben, w\u00e4hrend es gleichzeitig die Einhaltung von Vorschriften und die \u00dcberpr\u00fcfbarkeit gew\u00e4hrleistet.</p>"},{"location":"de/advanced/#funktionen_1","title":"Funktionen","text":"<ul> <li>Benutzerkonto-Operationen: Importieren im CSV/XSLX-Format, Erstellen, Bearbeiten und L\u00f6schen von Benutzerkonten mit Leichtigkeit.</li> <li>Rollenbasierte Zugriffskontrolle: Weisen Sie Benutzerrollen zu und \u00e4ndern Sie sie, um Berechtigungen und Zugriffsebenen zu verwalten.</li> <li>2FA-Verwaltung: Deaktivieren Sie die Zwei-Faktor-Authentifizierung basierend auf administrativen Entscheidungen.</li> <li>Umfassende Benutzereinblicke: \u00dcberwachen Sie wichtige Benutzerdaten, einschlie\u00dflich letzter Anmeldezeiten, Kontoerstellungsdaten und Aktiv/Inaktiv-Status.</li> <li>Audit-Protokollierung: F\u00fchren Sie eine Audit-Spur f\u00fcr alle Benutzerverwaltungsaktionen f\u00fcr verbesserte Sicherheit und Compliance.</li> </ul> Benutzer-Manager-Seite Benutzer-Manager - Benutzererstellungsformular Benutzer-Manager - Aktivit\u00e4tenseite"},{"location":"de/advanced/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>Das Easy Resolve Plugin erm\u00f6glicht es Ihnen, Fehlalarme und wiederkehrende Probleme direkt von der Berichtsseite aus schnell zu beheben. Es wandelt gef\u00fchrte \"Resolve\"-Aktionen in sichere, bereichsbezogene Konfigurationsupdates um \u2013 ohne manuelle Bearbeitung.</p>"},{"location":"de/advanced/#funktionen_2","title":"Funktionen","text":"<ul> <li>Ein-Klick-Aktionen aus Berichten und Berichtsdetails.</li> <li>Kontextbezogene Vorschl\u00e4ge f\u00fcr ModSecurity, Blacklist und DNSBL.</li> <li>Generiert sichere ModSecurity-Ausschl\u00fcsse oder aktualisiert Ignorierlisten.</li> <li>Wendet \u00c4nderungen auf Dienst- oder globaler Ebene mit Berechtigungspr\u00fcfungen an.</li> <li>Optionales automatisches \u00d6ffnen der zugeh\u00f6rigen Konfigurationsseite nach der Anwendung.</li> </ul> Berichtsseite - mit Easy Resolve ModSecurity beheben DNSBL beheben Blacklist - IP Blacklist - User-Agent Blacklist - rDNS Blacklist - ASN Blacklist - URI"},{"location":"de/api/#ubersicht","title":"\u00dcbersicht","text":"<p>Die BunkerWeb API ist die Steuerungsebene, die zur programmatischen Verwaltung von BunkerWeb-Instanzen verwendet wird: Auflisten und Verwalten von Instanzen, Neuladen/Stoppen, Handhabung von Sperren, Plugins, Jobs, Konfigurationen und mehr. Sie stellt eine dokumentierte FastAPI-Anwendung mit starker Authentifizierung, Autorisierung und Ratenbegrenzung bereit.</p> <p>\u00d6ffnen Sie die interaktive Dokumentation unter <code>/docs</code> (oder <code>&lt;root_path&gt;/docs</code>, wenn Sie <code>API_ROOT_PATH</code> gesetzt haben). Das OpenAPI-Schema ist unter <code>/openapi.json</code> verf\u00fcgbar.</p> <p>Sicherheit</p> <p>Die API ist eine privilegierte Steuerungsebene. Setzen Sie sie nicht ohne zus\u00e4tzliche Schutzma\u00dfnahmen im \u00f6ffentlichen Internet aus.</p> <p>Beschr\u00e4nken Sie mindestens die Quell-IPs (<code>API_WHITELIST_IPS</code>), aktivieren Sie die Authentifizierung (<code>API_TOKEN</code> oder API-Benutzer + Biscuit) und erw\u00e4gen Sie, sie hinter BunkerWeb mit einem nicht erratbaren Pfad und zus\u00e4tzlichen Zugriffskontrollen zu platzieren.</p>"},{"location":"de/api/#voraussetzungen","title":"Voraussetzungen","text":"<p>Der API-Dienst ben\u00f6tigt Zugriff auf die BunkerWeb-Datenbank (<code>DATABASE_URI</code>). Er wird in der Regel zusammen mit dem Scheduler und optional der Web-UI bereitgestellt. Die empfohlene Einrichtung besteht darin, BunkerWeb als Reverse-Proxy davor zu schalten und die API in einem internen Netzwerk zu isolieren.</p> <p>Siehe den Schnellstart-Assistenten und die Architekturhinweise im Schnellstart-Leitfaden.</p>"},{"location":"de/api/#highlights","title":"Highlights","text":"<ul> <li>Instanz-bewusst: sendet operative Aktionen an entdeckte Instanzen.</li> <li>Starke Authentifizierung: Basic f\u00fcr Admins, Bearer-Admin-\u00dcberschreibung oder Biscuit-ACL f\u00fcr feingranulare Berechtigungen.</li> <li>IP-Zulassungsliste und flexible Ratenbegrenzung pro Route.</li> <li>Standardm\u00e4\u00dfige Zustands-/Bereitschaftssignale und Sicherheitspr\u00fcfungen beim Start.</li> </ul>"},{"location":"de/api/#compose-vorlagen","title":"Compose-Vorlagen","text":"DockerDocker Autoconf <p>Reverse-Proxy der API unter <code>/api</code> mit BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # Geteilte Zulassungsliste der Instanz-Steuerungsebene f\u00fcr BunkerWeb/Scheduler\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\"  # Entspricht dem Dienstnamen der Instanz\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      # Reverse-Proxy der API auf /api\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/api\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-api:8888\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Verwenden Sie ein starkes Passwort\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"                      # API-Zulassungsliste\n      API_TOKEN: \"secret\"                                                 # Optionaler Admin-\u00dcberschreibungstoken\n      API_ROOT_PATH: \"/api\"                                               # Entspricht dem Reverse-Proxy-Pfad\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Probleme mit gro\u00dfen Abfragen vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"  # Verwenden Sie ein starkes Passwort\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Dasselbe wie oben, aber unter Nutzung des Autoconf-Dienstes, um Dienste automatisch zu entdecken und zu konfigurieren. Die API wird unter <code>/api</code> \u00fcber Labels auf dem API-Container bereitgestellt.</p> <pre><code>x-api-env: &amp;api-env\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Verwenden Sie ein starkes Passwort\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *api-env\n      BUNKERWEB_INSTANCES: \"\"    # Von Autoconf entdeckt\n      SERVER_NAME: \"\"            # \u00dcber Labels gef\u00fcllt\n      MULTISITE: \"yes\"           # Mit Autoconf obligatorisch\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *api-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      &lt;&lt;: *api-env\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      API_TOKEN: \"secret\"\n      API_ROOT_PATH: \"/api\"\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/api\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-api:8888\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: unless-stopped\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Reverse-Proxy-Pfad</p> <p>Halten Sie den API-Pfad unerratbar und kombinieren Sie ihn mit der API-Zulassungsliste und Authentifizierung.</p> <p>Wenn Sie bereits eine andere App auf demselben Servernamen mit einer Vorlage (z. B. <code>USE_TEMPLATE</code>) bereitstellen, bevorzugen Sie einen separaten Hostnamen f\u00fcr die API, um Konflikte zu vermeiden.</p>"},{"location":"de/api/#all-in-one","title":"All-in-One","text":"<p>Wenn Sie das All-in-One-Image verwenden, kann die API durch Setzen von <code>SERVICE_API=yes</code> aktiviert werden:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre>"},{"location":"de/api/#authentifizierung","title":"Authentifizierung","text":"<p>Unterst\u00fctzte Wege zur Authentifizierung von Anfragen:</p> <ul> <li>Basic admin: Wenn Anmeldeinformationen zu einem Admin-API-Benutzer geh\u00f6ren, akzeptieren gesch\u00fctzte Endpunkte <code>Authorization: Basic &lt;base64(username:password)&gt;</code>.</li> <li>Admin Bearer override: Wenn <code>API_TOKEN</code> konfiguriert ist, gew\u00e4hrt <code>Authorization: Bearer &lt;API_TOKEN&gt;</code> vollen Zugriff.</li> <li>Biscuit-Token (empfohlen): Erhalten Sie ein Token von <code>POST /auth</code> unter Verwendung von Basic-Anmeldeinformationen oder einem JSON-/Formular-Body, der <code>username</code> und <code>password</code> enth\u00e4lt. Verwenden Sie das zur\u00fcckgegebene Token als <code>Authorization: Bearer &lt;token&gt;</code> bei nachfolgenden Aufrufen.</li> </ul> <p>Beispiel: Holen Sie sich ein Biscuit, listen Sie Instanzen auf und laden Sie dann alle Instanzen neu.</p> <pre><code># 1) Holen Sie sich ein Biscuit-Token mit Admin-Anmeldeinformationen\nTOKEN=$(curl -s -X POST -u admin:changeme http://api.example.com/auth | jq -r .token)\n\n# 2) Instanzen auflisten\ncurl -H \"Authorization: Bearer $TOKEN\" http://api.example.com/instances\n\n# 3) Konfiguration \u00fcber alle Instanzen hinweg neu laden (kein Test)\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n     \"http://api.example.com/instances/reload?test=no\"\n</code></pre>"},{"location":"de/api/#biscuit-fakten-und-prufungen","title":"Biscuit Fakten und Pr\u00fcfungen","text":"<p>Tokens enthalten Fakten wie <code>user(&lt;username&gt;)</code>, <code>client_ip(&lt;ip&gt;)</code>, <code>domain(&lt;host&gt;)</code> und eine grobe Rolle <code>role(\"api_user\", [\"read\", \"write\"])</code>, die von den DB-Berechtigungen abgeleitet ist. Admins enthalten <code>admin(true)</code>, w\u00e4hrend Nicht-Admins feingranulare Fakten wie <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code> tragen.</p> <p>Die Autorisierung ordnet die Route/Methode den erforderlichen Berechtigungen zu; <code>admin(true)</code> wird immer akzeptiert. Wenn feingranulare Fakten fehlen, greift der W\u00e4chter auf die grobe Rolle zur\u00fcck: GET/HEAD/OPTIONS erfordern <code>read</code>; Schreibverben erfordern <code>write</code>.</p> <p>Schl\u00fcssel werden unter <code>/var/lib/bunkerweb/.api_biscuit_private_key</code> und <code>/var/lib/bunkerweb/.api_biscuit_public_key</code> gespeichert. Sie k\u00f6nnen <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> auch \u00fcber Umgebungsvariablen bereitstellen; wenn weder Dateien noch Umgebungsvariablen gesetzt sind, generiert die API beim Start ein Schl\u00fcsselpaar und speichert es sicher.</p>"},{"location":"de/api/#berechtigungen-acl","title":"Berechtigungen (ACL)","text":"<p>Diese API unterst\u00fctzt zwei Autorisierungsebenen:</p> <ul> <li>Grobe Rolle: Tokens tragen <code>role(\"api_user\", [\"read\"[, \"write\"]])</code> f\u00fcr Endpunkte ohne feingranulare Zuordnung. Lesen wird auf GET/HEAD/OPTIONS abgebildet; Schreiben wird auf POST/PUT/PATCH/DELETE abgebildet.</li> <li>Feingranulare ACL: Tokens enthalten <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code> und Routen deklarieren, was sie ben\u00f6tigen. <code>admin(true)</code> umgeht alle Pr\u00fcfungen.</li> </ul> <p>Unterst\u00fctzte Ressourcentypen: <code>instances</code>, <code>global_config</code>, <code>services</code>, <code>configs</code>, <code>plugins</code>, <code>cache</code>, <code>bans</code>, <code>jobs</code>.</p> <p>Berechtigungsnamen nach Ressourcentyp:</p> <ul> <li>instances: <code>instances_read</code>, <code>instances_update</code>, <code>instances_delete</code>, <code>instances_create</code>, <code>instances_execute</code></li> <li>global_config: <code>global_config_read</code>, <code>global_config_update</code></li> <li>services: <code>service_read</code>, <code>service_create</code>, <code>service_update</code>, <code>service_delete</code>, <code>service_convert</code>, <code>service_export</code></li> <li>configs: <code>configs_read</code>, <code>config_read</code>, <code>config_create</code>, <code>config_update</code>, <code>config_delete</code></li> <li>plugins: <code>plugin_read</code>, <code>plugin_create</code>, <code>plugin_delete</code></li> <li>cache: <code>cache_read</code>, <code>cache_delete</code></li> <li>bans: <code>ban_read</code>, <code>ban_update</code>, <code>ban_delete</code>, <code>ban_created</code></li> <li>jobs: <code>job_read</code>, <code>job_run</code></li> </ul> <p>Ressourcen-IDs: F\u00fcr feingranulare Pr\u00fcfungen wird das zweite Pfadsegment als <code>resource_id</code> behandelt, wenn es sinnvoll ist. Beispiele: <code>/services/{service}</code> -&gt; <code>{service}</code>; <code>/configs/{service}/...</code> -&gt; <code>{service}</code>. Verwenden Sie <code>\"*\"</code> (oder lassen Sie es weg), um global f\u00fcr einen Ressourcentyp zu gew\u00e4hren.</p> <p>Benutzer- und ACL-Konfiguration:</p> <ul> <li>Admin-Benutzer: Setzen Sie <code>API_USERNAME</code> und <code>API_PASSWORD</code>, um den ersten Admin beim Start zu erstellen. Um Anmeldeinformationen sp\u00e4ter zu rotieren, setzen Sie <code>OVERRIDE_API_CREDS=yes</code> (oder stellen Sie sicher, dass der Admin mit der Methode <code>manual</code> erstellt wurde). Es gibt nur einen Admin; zus\u00e4tzliche Versuche fallen auf die Erstellung von Nicht-Admin-Benutzern zur\u00fcck.</li> <li>Nicht-Admin-Benutzer und Berechtigungen: Geben Sie <code>API_ACL_BOOTSTRAP_FILE</code> an, das auf eine JSON-Datei verweist, oder mounten Sie <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>. Die API liest sie beim Start, um Benutzer und Berechtigungen zu erstellen/aktualisieren.</li> <li>ACL-Cache-Datei: Eine schreibgesch\u00fctzte Zusammenfassung wird beim Start unter <code>/var/lib/bunkerweb/api_acl.json</code> zur Introspektion geschrieben; die Autorisierung wertet DB-gest\u00fctzte Berechtigungen aus, die in das Biscuit-Token eingebettet sind.</li> </ul> <p>Bootstrap-JSON-Beispiele (beide Formen werden unterst\u00fctzt):</p> <pre><code>{\n  \"users\": {\n    \"ci\": {\n      \"admin\": false,\n      \"password\": \"Str0ng&amp;P@ss!\",\n      \"permissions\": {\n        \"services\": {\n          \"*\": { \"service_read\": true },\n          \"app-frontend\": { \"service_update\": true, \"service_delete\": false }\n        },\n        \"configs\": {\n          \"app-frontend\": { \"config_read\": true, \"config_update\": true }\n        }\n      }\n    },\n    \"ops\": {\n      \"admin\": false,\n      \"password_hash\": \"$2b$13$...bcrypt-hash...\",\n      \"permissions\": {\n        \"instances\": { \"*\": { \"instances_execute\": true } },\n        \"jobs\": { \"*\": { \"job_run\": true } }\n      }\n    }\n  }\n}\n</code></pre> <p>Oder Listenform:</p> <pre><code>{\n  \"users\": [\n    {\n      \"username\": \"ci\",\n      \"password\": \"Str0ng&amp;P@ss!\",\n      \"permissions\": [\n        { \"resource_type\": \"services\", \"resource_id\": \"*\", \"permission\": \"service_read\" },\n        { \"resource_type\": \"services\", \"resource_id\": \"app-frontend\", \"permission\": \"service_update\" }\n      ]\n    }\n  ]\n}\n</code></pre> <p>Hinweise:</p> <ul> <li>Passw\u00f6rter k\u00f6nnen im Klartext (<code>password</code>) oder bcrypt (<code>password_hash</code> / <code>password_bcrypt</code>) sein. Schwache Klartext-Passw\u00f6rter werden in Nicht-Debug-Builds abgelehnt; wenn sie fehlen, wird ein zuf\u00e4lliges generiert und eine Warnung protokolliert.</li> <li><code>resource_id: \"*\"</code> (oder null/leer) gew\u00e4hrt global f\u00fcr diesen Ressourcentyp.</li> <li>Bestehende Benutzer k\u00f6nnen Passw\u00f6rter aktualisieren und zus\u00e4tzliche Berechtigungen \u00fcber Bootstrap erhalten.</li> </ul>"},{"location":"de/api/#funktionsreferenz","title":"Funktionsreferenz","text":"<p>Die API ist nach ressourcenorientierten Routern organisiert. Verwenden Sie die folgenden Abschnitte als F\u00e4higkeitskarte; das interaktive Schema unter <code>/docs</code> dokumentiert Anfrage-/Antwortmodelle im Detail.</p>"},{"location":"de/api/#kern-und-authentifizierung","title":"Kern und Authentifizierung","text":"<ul> <li><code>GET /ping</code>, <code>GET /health</code>: leichtgewichtige Liveness-Probes f\u00fcr den API-Dienst selbst.</li> <li><code>POST /auth</code>: tauschen Sie Basic-Anmeldeinformationen (oder den Admin-\u00dcberschreibungstoken) gegen ein Biscuit. Akzeptiert JSON-, Formular- oder <code>Authorization</code>-Header. Admins k\u00f6nnen bei Bedarf auch weiterhin HTTP Basic direkt auf gesch\u00fctzten Routen verwenden.</li> </ul>"},{"location":"de/api/#instanzen-steuerungsebene","title":"Instanzen-Steuerungsebene","text":"<ul> <li><code>GET /instances</code>: listet registrierte Instanzen auf, einschlie\u00dflich Erstellungs-/Zuletzt-gesehen-Zeitstempel, Registrierungsmethode und Metadaten.</li> <li><code>POST /instances</code>: registriert eine neue API-verwaltete Instanz (Hostname, optionaler Port, Servername, Anzeigename, Methode).</li> <li><code>GET /instances/{hostname}</code> / <code>PATCH /instances/{hostname}</code> / <code>DELETE /instances/{hostname}</code>: inspizieren, aktualisieren Sie ver\u00e4nderbare Felder oder entfernen Sie API-verwaltete Instanzen.</li> <li><code>DELETE /instances</code>: Massenentfernung; \u00fcberspringt Nicht-API-Instanzen und meldet sie in <code>skipped</code>.</li> <li><code>GET /instances/ping</code> und <code>GET /instances/{hostname}/ping</code>: Zustandspr\u00fcfungen \u00fcber alle oder einzelne Instanzen hinweg.</li> <li><code>POST /instances/reload?test=yes|no</code>, <code>POST /instances/{hostname}/reload</code>: l\u00f6st Konfigurationsneuladungen aus (Testmodus f\u00fchrt eine Trockenlaufvalidierung durch).</li> <li><code>POST /instances/stop</code>, <code>POST /instances/{hostname}/stop</code>: leitet Stopp-Befehle an Instanzen weiter.</li> </ul>"},{"location":"de/api/#globale-konfiguration","title":"Globale Konfiguration","text":"<ul> <li><code>GET /global_config</code>: ruft nicht standardm\u00e4\u00dfige Einstellungen ab (verwenden Sie <code>full=true</code> f\u00fcr die gesamte Konfiguration, <code>methods=true</code>, um die Herkunft einzuschlie\u00dfen).</li> <li><code>PATCH /global_config</code>: aktualisiert oder f\u00fcgt API-eigene (<code>method=\"api\"</code>) globale Einstellungen ein; Validierungsfehler weisen auf unbekannte oder schreibgesch\u00fctzte Schl\u00fcssel hin.</li> </ul>"},{"location":"de/api/#dienstlebenszyklus","title":"Dienstlebenszyklus","text":"<ul> <li><code>GET /services</code>: listet Dienste mit Metadaten auf, einschlie\u00dflich Entwurfsstatus und Zeitstempeln.</li> <li><code>GET /services/{service}</code>: ruft nicht standardm\u00e4\u00dfige Overlays (<code>full=false</code>) oder den vollst\u00e4ndigen Konfigurations-Snapshot (<code>full=true</code>) f\u00fcr einen Dienst ab.</li> <li><code>POST /services</code>: erstellt Dienste, optional als Entwurf, und initialisiert pr\u00e4fixierte Variablen (<code>{service}_{KEY}</code>). Aktualisiert die <code>SERVER_NAME</code>-Liste atomar.</li> <li><code>PATCH /services/{service}</code>: benennt Dienste um, schaltet Entwurfs-Flags um und aktualisiert pr\u00e4fixierte Variablen. Ignoriert aus Sicherheitsgr\u00fcnden direkte Bearbeitungen von <code>SERVER_NAME</code> innerhalb von <code>variables</code>.</li> <li><code>DELETE /services/{service}</code>: entfernt einen Dienst und seine abgeleiteten Konfigurationsschl\u00fcssel.</li> <li><code>POST /services/{service}/convert?convert_to=online|draft</code>: wechselt schnell zwischen Entwurfs-/Online-Status, ohne andere Variablen zu \u00e4ndern.</li> </ul>"},{"location":"de/api/#benutzerdefinierte-konfigurations-snippets","title":"Benutzerdefinierte Konfigurations-Snippets","text":"<ul> <li><code>GET /configs</code>: listet benutzerdefinierte Konfigurationsfragmente (HTTP/Server/Stream/ModSecurity/CRS-Hooks) f\u00fcr einen Dienst auf (<code>service=global</code> standardm\u00e4\u00dfig). <code>with_data=true</code> bettet UTF-8-Inhalt ein, wenn er druckbar ist.</li> <li><code>POST /configs</code> und <code>POST /configs/upload</code>: erstellt neue Snippets aus JSON-Payloads oder hochgeladenen Dateien. Akzeptierte Typen sind <code>http</code>, <code>server_http</code>, <code>default_server_http</code>, <code>modsec</code>, <code>modsec_crs</code>, <code>stream</code>, <code>server_stream</code> und CRS-Plugin-Hooks. Namen m\u00fcssen mit <code>^[\\w_-]{1,64}$</code> \u00fcbereinstimmen.</li> <li><code>GET /configs/{service}/{type}/{name}</code>: ruft ein Snippet mit optionalem Inhalt ab (<code>with_data=true</code>).</li> <li><code>PATCH /configs/{service}/{type}/{name}</code> und <code>PATCH .../upload</code>: aktualisiert oder verschiebt API-verwaltete Snippets; vorlagen- oder dateiverwaltete Eintr\u00e4ge bleiben schreibgesch\u00fctzt.</li> <li><code>DELETE /configs</code> und <code>DELETE /configs/{service}/{type}/{name}</code>: entfernt API-verwaltete Snippets unter Beibehaltung von vorlagenverwalteten, wobei eine <code>skipped</code>-Liste f\u00fcr ignorierte Eintr\u00e4ge zur\u00fcckgegeben wird.</li> </ul>"},{"location":"de/api/#sperren-orchestrierung","title":"Sperren-Orchestrierung","text":"<ul> <li><code>GET /bans</code>: aggregiert aktive Sperren, die von allen Instanzen gemeldet werden.</li> <li><code>POST /bans</code> oder <code>POST /bans/ban</code>: wendet eine oder mehrere Sperren an. Payloads k\u00f6nnen JSON-Objekte, Arrays oder stringifizierte JSON sein. <code>service</code> ist optional; wenn es weggelassen wird, ist die Sperre global.</li> <li><code>POST /bans/unban</code> oder <code>DELETE /bans</code>: entfernt Sperren global oder pro Dienst unter Verwendung derselben flexiblen Payloads.</li> </ul>"},{"location":"de/api/#plugin-verwaltung","title":"Plugin-Verwaltung","text":"<ul> <li><code>GET /plugins?type=all|external|ui|pro</code>: listet Plugins mit Metadaten auf; <code>with_data=true</code> schlie\u00dft verpackte Bytes ein, wenn verf\u00fcgbar.</li> <li><code>POST /plugins/upload</code>: installiert UI-Plugins aus <code>.zip</code>, <code>.tar.gz</code> oder <code>.tar.xz</code> Archiven. Archive k\u00f6nnen mehrere Plugins b\u00fcndeln, solange jedes eine <code>plugin.json</code> enth\u00e4lt.</li> <li><code>DELETE /plugins/{id}</code>: entfernt ein UI-Plugin nach ID (<code>^[\\w.-]{4,64}$</code>).</li> </ul>"},{"location":"de/api/#job-cache-und-ausfuhrung","title":"Job-Cache und Ausf\u00fchrung","text":"<ul> <li><code>GET /cache</code>: listet gecachte Artefakte auf, die von Scheduler-Jobs erstellt wurden, gefiltert nach Dienst, Plugin-ID oder Job-Namen. <code>with_data=true</code> schlie\u00dft druckbaren Dateiinhalt ein.</li> <li><code>GET /cache/{service}/{plugin}/{job}/{file}</code>: ruft eine bestimmte Cache-Datei ab (<code>download=true</code> streamt einen Anhang).</li> <li><code>DELETE /cache</code> oder <code>DELETE /cache/{service}/{plugin}/{job}/{file}</code>: l\u00f6scht Cache-Dateien und benachrichtigt den Scheduler \u00fcber betroffene Plugins.</li> <li><code>GET /jobs</code>: inspiziert bekannte Jobs, ihre Zeitplan-Metadaten und Cache-Zusammenfassungen.</li> <li><code>POST /jobs/run</code>: fordert die Ausf\u00fchrung eines Jobs an, indem die zugeh\u00f6rigen Plugins als ge\u00e4ndert markiert werden.</li> </ul>"},{"location":"de/api/#betriebshinweise","title":"Betriebshinweise","text":"<ul> <li>Schreibendpunkte persistieren in der gemeinsamen Datenbank; Instanzen \u00fcbernehmen \u00c4nderungen \u00fcber Scheduler-Sync oder nach einem <code>/instances/reload</code>.</li> <li>Fehler werden auf <code>{ \"status\": \"error\", \"message\": \"...\" }</code> normalisiert mit entsprechenden HTTP-Statuscodes (422 Validierung, 404 nicht gefunden, 403 ACL, 5xx Upstream-Fehler).</li> </ul>"},{"location":"de/api/#ratenbegrenzung","title":"Ratenbegrenzung","text":"<p>Die Ratenbegrenzung pro Client wird von SlowAPI gehandhabt. Aktivieren/deaktivieren Sie sie und gestalten Sie die Limits \u00fcber Umgebungsvariablen oder <code>/etc/bunkerweb/api.yml</code>.</p> <ul> <li><code>API_RATE_LIMIT_ENABLED</code> (Standard: <code>yes</code>)</li> <li>Standardlimit: <code>API_RATE_LIMIT_TIMES</code> pro <code>API_RATE_LIMIT_SECONDS</code> (z. B. <code>100</code> pro <code>60</code>)</li> <li><code>API_RATE_LIMIT_RULES</code>: inline JSON/CSV oder ein Pfad zu einer YAML/JSON-Datei mit Regeln pro Route</li> <li>Speicher-Backend: In-Memory oder Redis/Valkey, wenn <code>USE_REDIS=yes</code> und <code>REDIS_*</code>-Variablen bereitgestellt werden (Sentinel unterst\u00fctzt)</li> <li>Header: <code>API_RATE_LIMIT_HEADERS_ENABLED</code> (Standard: <code>yes</code>)</li> </ul> <p>Beispiel YAML (gemountet unter <code>/etc/bunkerweb/api.yml</code>):</p> <pre><code>API_RATE_LIMIT_ENABLED: yes\nAPI_RATE_LIMIT_DEFAULTS: [\"200/minute\"]\nAPI_RATE_LIMIT_RULES:\n  - path: \"/auth\"\n    methods: \"POST\"\n    times: 10\n    seconds: 60\n  - path: \"/instances*\"\n    methods: \"GET|POST\"\n    times: 100\n    seconds: 60\n</code></pre>"},{"location":"de/api/#konfiguration","title":"Konfiguration","text":"<p>Sie k\u00f6nnen die API \u00fcber Umgebungsvariablen, Docker-Secrets und die optionalen Dateien <code>/etc/bunkerweb/api.yml</code> oder <code>/etc/bunkerweb/api.env</code> konfigurieren. Wichtige Einstellungen:</p> <ul> <li>Dokumentation &amp; Schema: <code>API_DOCS_URL</code>, <code>API_REDOC_URL</code>, <code>API_OPENAPI_URL</code>, <code>API_ROOT_PATH</code>.</li> <li>Grundlagen der Authentifizierung: <code>API_TOKEN</code> (Admin-\u00dcberschreibung Bearer), <code>API_USERNAME</code>/<code>API_PASSWORD</code> (Admin erstellen/aktualisieren), <code>OVERRIDE_API_CREDS</code>.</li> <li>ACL und Benutzer: <code>API_ACL_BOOTSTRAP_FILE</code> (JSON-Pfad).</li> <li>Biscuit-Richtlinie: <code>API_BISCUIT_TTL_SECONDS</code> (0/off deaktiviert TTL), <code>CHECK_PRIVATE_IP</code> (bindet Token an Client-IP, es sei denn, es ist privat).</li> <li>IP-Zulassungsliste: <code>API_WHITELIST_ENABLED</code>, <code>API_WHITELIST_IPS</code>.</li> <li>Ratenbegrenzung (Kern): <code>API_RATE_LIMIT_ENABLED</code>, <code>API_RATE_LIMIT_TIMES</code>, <code>API_RATE_LIMIT_SECONDS</code>, <code>API_RATE_LIMIT_HEADERS_ENABLED</code>.</li> <li>Ratenbegrenzung (fortgeschritten): <code>API_RATE_LIMIT_AUTH_TIMES</code>, <code>API_RATE_LIMIT_AUTH_SECONDS</code>, <code>API_RATE_LIMIT_RULES</code>, <code>API_RATE_LIMIT_DEFAULTS</code>, <code>API_RATE_LIMIT_APPLICATION_LIMITS</code>, <code>API_RATE_LIMIT_STRATEGY</code>, <code>API_RATE_LIMIT_KEY</code>, <code>API_RATE_LIMIT_EXEMPT_IPS</code>, <code>API_RATE_LIMIT_STORAGE_OPTIONS</code>.</li> <li>Speicher f\u00fcr Ratenbegrenzung: In-Memory oder Redis/Valkey, wenn <code>USE_REDIS=yes</code> und Redis-Einstellungen wie <code>REDIS_HOST</code>, <code>REDIS_PORT</code>, <code>REDIS_PASSWORD</code>, <code>REDIS_DATABASE</code>, <code>REDIS_SSL</code> oder Sentinel-Variablen gesetzt sind. Siehe die Redis-Einstellungstabelle in <code>docs/features.md</code>.</li> <li>Netzwerk/TLS: <code>API_LISTEN_ADDR</code>, <code>API_LISTEN_PORT</code>, <code>API_FORWARDED_ALLOW_IPS</code>, <code>API_SSL_ENABLED</code>, <code>API_SSL_CERTFILE</code>, <code>API_SSL_KEYFILE</code>, <code>API_SSL_CA_CERTS</code>.</li> </ul>"},{"location":"de/api/#wie-die-konfiguration-geladen-wird","title":"Wie die Konfiguration geladen wird","text":"<p>Priorit\u00e4t von h\u00f6chster zu niedrigster:</p> <ul> <li>Umgebungsvariablen (z. B. <code>environment:</code> im Container oder exportierte Shell-Variablen)</li> <li>Secrets-Dateien unter <code>/run/secrets</code> (Docker/K8s-Secrets; Dateinamen entsprechen Variablennamen)</li> <li>YAML-Datei unter <code>/etc/bunkerweb/api.yml</code></li> <li>Env-Datei unter <code>/etc/bunkerweb/api.env</code> (key=value Zeilen)</li> <li>Eingebaute Standardwerte</li> </ul> <p>Hinweise:</p> <ul> <li>YAML unterst\u00fctzt das Einbetten von Secret-Dateien mit <code>&lt;file:relative/path&gt;</code>; der Pfad wird relativ zu <code>/run/secrets</code> aufgel\u00f6st.</li> <li>Setzen Sie Doc-URLs auf <code>off</code>/<code>disabled</code>/<code>none</code>, um Endpunkte zu deaktivieren (z. B. <code>API_DOCS_URL=off</code>).</li> <li>Wenn <code>API_SSL_ENABLED=yes</code>, m\u00fcssen Sie auch <code>API_SSL_CERTFILE</code> und <code>API_SSL_KEYFILE</code> setzen.</li> <li>Wenn Redis aktiviert ist (<code>USE_REDIS=yes</code>), geben Sie Redis-Details an; siehe Redis-Abschnitt in <code>docs/features.md</code>.</li> </ul>"},{"location":"de/api/#authentifizierung-und-benutzer","title":"Authentifizierung und Benutzer","text":"<ul> <li>Admin-Bootstrap: Setzen Sie <code>API_USERNAME</code> und <code>API_PASSWORD</code>, um den ersten Admin zu erstellen. Um sp\u00e4ter erneut anzuwenden, setzen Sie <code>OVERRIDE_API_CREDS=yes</code>.</li> <li>Nicht-Admins und Berechtigungen: Geben Sie <code>API_ACL_BOOTSTRAP_FILE</code> mit einem JSON-Pfad an (oder mounten Sie auf <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>). Die Datei kann Benutzer und feingranulare Berechtigungen auflisten.</li> <li>Biscuit-Schl\u00fcssel: Setzen Sie entweder <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> oder mounten Sie Dateien unter <code>/var/lib/bunkerweb/.api_biscuit_public_key</code> und <code>/var/lib/bunkerweb/.api_biscuit_private_key</code>. Wenn keine bereitgestellt werden, generiert und speichert die API beim Start ein Schl\u00fcsselpaar.</li> </ul>"},{"location":"de/api/#tls-und-netzwerk","title":"TLS und Netzwerk","text":"<ul> <li>Bindungsadresse/-port: <code>API_LISTEN_ADDR</code> (Standard <code>0.0.0.0</code>), <code>API_LISTEN_PORT</code> (Standard <code>8888</code>).</li> <li>Reverse-Proxys: Setzen Sie <code>API_FORWARDED_ALLOW_IPS</code> auf die Proxy-IPs, damit Gunicorn <code>X-Forwarded-*</code>-Headern vertraut.</li> <li>TLS-Terminierung in der API: <code>API_SSL_ENABLED=yes</code> plus <code>API_SSL_CERTFILE</code> und <code>API_SSL_KEYFILE</code>; optional <code>API_SSL_CA_CERTS</code></li> </ul>"},{"location":"de/api/#schnelle-rezepte-zur-ratenbegrenzung","title":"Schnelle Rezepte zur Ratenbegrenzung","text":"<ul> <li>Global deaktivieren: <code>API_RATE_LIMIT_ENABLED=no</code></li> <li>Einfaches globales Limit setzen: <code>API_RATE_LIMIT_TIMES=100</code>, <code>API_RATE_LIMIT_SECONDS=60</code></li> <li>Regeln pro Route: Setzen Sie <code>API_RATE_LIMIT_RULES</code> auf einen JSON/YAML-Dateipfad oder inline YAML in <code>/etc/bunkerweb/api.yml</code>.</li> </ul> <p>Startsicherheit</p> <p>Die API wird beendet, wenn kein Authentifizierungspfad konfiguriert ist (keine Biscuit-Schl\u00fcssel, kein Admin-Benutzer und kein <code>API_TOKEN</code>). Stellen Sie sicher, dass mindestens eine Methode vor dem Start festgelegt ist.</p> <p>Startsicherheit: Die API wird beendet, wenn kein Authentifizierungspfad verf\u00fcgbar ist (keine Biscuit-Schl\u00fcssel, kein Admin-API-Benutzer und kein <code>API_TOKEN</code>). Stellen Sie sicher, dass mindestens einer konfiguriert ist.</p> <p>Root-Pfad und Proxys</p> <p>Wenn Sie die API hinter BunkerWeb auf einem Unterpfad bereitstellen, setzen Sie <code>API_ROOT_PATH</code> auf diesen Pfad, damit <code>/docs</code> und relative Routen bei der Proxy-Weiterleitung korrekt funktionieren.</p>"},{"location":"de/api/#betrieb","title":"Betrieb","text":"<ul> <li>Zustand: <code>GET /health</code> gibt <code>{\"status\":\"ok\"}</code> zur\u00fcck, wenn der Dienst betriebsbereit ist.</li> <li>Linux-Dienst: eine <code>systemd</code>-Einheit namens <code>bunkerweb-api.service</code> ist enthalten. Passen Sie sie \u00fcber <code>/etc/bunkerweb/api.env</code> an und verwalten Sie sie mit <code>systemctl</code>.</li> <li>Startsicherheit: Die API schl\u00e4gt schnell fehl, wenn kein Authentifizierungspfad verf\u00fcgbar ist (keine Biscuit-Schl\u00fcssel, kein Admin-Benutzer, kein <code>API_TOKEN</code>). Fehler werden nach <code>/var/tmp/bunkerweb/api.error</code> geschrieben.</li> </ul>"},{"location":"de/concepts/","title":"Konzepte","text":""},{"location":"de/concepts/#architektur","title":"Architektur","text":"<p>Innerhalb Ihrer Infrastruktur agiert BunkerWeb als Reverse-Proxy vor Ihren Webdiensten. Die typische Architektur beinhaltet den Zugriff auf BunkerWeb aus dem Internet, das dann Anfragen an den entsprechenden Anwendungsdienst in einem sicheren Netzwerk weiterleitet.</p> <p>Die Verwendung von BunkerWeb auf diese Weise (klassische Reverse-Proxy-Architektur) mit TLS-Offloading und zentralisierten Sicherheitsrichtlinien verbessert die Leistung durch Reduzierung des Verschl\u00fcsselungsaufwands auf den Backend-Servern und gew\u00e4hrleistet gleichzeitig eine konsistente Zugriffskontrolle, Bedrohungsabwehr und Einhaltung von Vorschriften f\u00fcr alle Dienste.</p>"},{"location":"de/concepts/#integrationen","title":"Integrationen","text":"<p>Das erste Konzept ist die Integration von BunkerWeb in die Zielumgebung. Wir bevorzugen das Wort \"Integration\" anstelle von \"Installation\", da eines der Ziele von BunkerWeb darin besteht, sich nahtlos in bestehende Umgebungen zu integrieren.</p> <p>Die folgenden Integrationen werden offiziell unterst\u00fctzt:</p> <ul> <li>Docker</li> <li>Linux</li> <li>Docker Autoconf</li> <li>Kubernetes</li> <li>Swarm</li> </ul> <p>Wenn Sie der Meinung sind, dass eine neue Integration unterst\u00fctzt werden sollte, z\u00f6gern Sie nicht, ein neues Issue im GitHub-Repository zu er\u00f6ffnen.</p> <p>Weiterf\u00fchrende Informationen</p> <p>Die technischen Details aller BunkerWeb-Integrationen sind im Integrations-Abschnitt der Dokumentation verf\u00fcgbar.</p>"},{"location":"de/concepts/#einstellungen","title":"Einstellungen","text":"<p>BunkerWeb PRO Einstellungen</p> <p>Einige Plugins sind der PRO-Version vorbehalten. M\u00f6chten Sie BunkerWeb PRO einen Monat lang schnell testen? Verwenden Sie den Code <code>freetrial</code> bei Ihrer Bestellung im BunkerWeb Panel oder klicken Sie hier, um den Promo-Code direkt anzuwenden (wird an der Kasse wirksam).</p> <p>Sobald BunkerWeb in Ihre Umgebung integriert ist, m\u00fcssen Sie es konfigurieren, um Ihre Webanwendungen bereitzustellen und zu sch\u00fctzen.</p> <p>Die Konfiguration von BunkerWeb erfolgt \u00fcber sogenannte \"Einstellungen\" oder \"Variablen\". Jede Einstellung wird durch einen Namen wie <code>AUTO_LETS_ENCRYPT</code> oder <code>USE_ANTIBOT</code> identifiziert. Sie k\u00f6nnen diesen Einstellungen Werte zuweisen, um BunkerWeb zu konfigurieren.</p> <p>Hier ist ein Dummy-Beispiel f\u00fcr eine BunkerWeb-Konfiguration:</p> <pre><code>SERVER_NAME=www.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_ANTIBOT=captcha\nREFERRER_POLICY=no-referrer\nUSE_MODSECURITY=no\nUSE_GZIP=yes\nUSE_BROTLI=no\n</code></pre> <p>Bitte beachten Sie, dass bei Verwendung der Web-Benutzeroberfl\u00e4che die Einstellungsnamen zus\u00e4tzlich zu einem \"menschenfreundlichen\" Label angezeigt werden:</p> <p> </p> Einstellungsname in der Web-UI <p>Sie k\u00f6nnen auch die Suchleiste verwenden und direkt einen Einstellungsnamen angeben:</p> <p> </p> Einstellungssuche in der Web-UI <p>Weiterf\u00fchrende Informationen</p> <p>Die vollst\u00e4ndige Liste der verf\u00fcgbaren Einstellungen mit Beschreibungen und m\u00f6glichen Werten ist im Feature-Abschnitt der Dokumentation verf\u00fcgbar.</p>"},{"location":"de/concepts/#multisite-modus","title":"Multisite-Modus","text":"<p>Das Verst\u00e4ndnis des Multisite-Modus ist bei der Nutzung von BunkerWeb unerl\u00e4sslich. Da unser Hauptaugenmerk auf dem Schutz von Webanwendungen liegt, ist unsere L\u00f6sung eng mit dem Konzept der \"virtuellen Hosts\" oder \"vhosts\" verbunden (weitere Informationen hier). Diese virtuellen Hosts erm\u00f6glichen die Bereitstellung mehrerer Webanwendungen von einer einzigen Instanz oder einem Cluster aus.</p> <p>Standardm\u00e4\u00dfig ist der Multisite-Modus in BunkerWeb deaktiviert. Das bedeutet, dass nur eine Webanwendung bereitgestellt wird und alle Einstellungen darauf angewendet werden. Diese Einrichtung ist ideal, wenn Sie eine einzelne Anwendung zu sch\u00fctzen haben, da Sie sich nicht um Multisite-Konfigurationen k\u00fcmmern m\u00fcssen.</p> <p>Wenn der Multisite-Modus jedoch aktiviert ist, kann BunkerWeb mehrere Webanwendungen bereitstellen und sch\u00fctzen. Jede Webanwendung wird durch einen eindeutigen Servernamen identifiziert und hat ihre eigenen Einstellungen. Dieser Modus ist vorteilhaft, wenn Sie mehrere Anwendungen zu sichern haben und eine einzige Instanz (oder einen Cluster) von BunkerWeb verwenden m\u00f6chten.</p> <p>Die Aktivierung des Multisite-Modus wird durch die Einstellung <code>MULTISITE</code> gesteuert, die auf <code>yes</code> gesetzt werden kann, um ihn zu aktivieren, oder auf <code>no</code>, um ihn deaktiviert zu lassen (Standardwert).</p> <p>Jede Einstellung in BunkerWeb hat einen spezifischen Kontext, der bestimmt, wo sie angewendet werden kann. Wenn der Kontext auf \"global\" gesetzt ist, kann die Einstellung nicht pro Server oder Site angewendet werden, sondern wird auf die gesamte Konfiguration als Ganzes angewendet. Wenn der Kontext andererseits \"multisite\" ist, kann die Einstellung global und pro Server angewendet werden. Um eine Multisite-Einstellung f\u00fcr einen bestimmten Server zu definieren, f\u00fcgen Sie einfach den Servernamen als Pr\u00e4fix zum Einstellungsnamen hinzu. Zum Beispiel sind <code>app1.example.com_AUTO_LETS_ENCRYPT</code> oder <code>app2.example.com_USE_ANTIBOT</code> Beispiele f\u00fcr Einstellungsnamen mit Servernamenpr\u00e4fixen. Wenn eine Multisite-Einstellung global ohne Serverpr\u00e4fix definiert ist, erben alle Server diese Einstellung. Einzelne Server k\u00f6nnen die Einstellung jedoch immer noch \u00fcberschreiben, wenn dieselbe Einstellung mit einem Servernamenpr\u00e4fix definiert ist.</p> <p>Das Verst\u00e4ndnis der Feinheiten des Multisite-Modus und der zugeh\u00f6rigen Einstellungen erm\u00f6glicht es Ihnen, das Verhalten von BunkerWeb an Ihre spezifischen Anforderungen anzupassen und einen optimalen Schutz f\u00fcr Ihre Webanwendungen zu gew\u00e4hrleisten.</p> <p>Hier ist ein Dummy-Beispiel f\u00fcr eine Multisite-BunkerWeb-Konfiguration:</p> <pre><code>MULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_GZIP=yes\nUSE_BROTLI=yes\napp1.example.com_USE_ANTIBOT=javascript\napp1.example.com_USE_MODSECURITY=no\napp2.example.com_USE_ANTIBOT=cookie\napp2.example.com_WHITELIST_COUNTRY=FR\napp3.example.com_USE_BAD_BEHAVIOR=no\n</code></pre> <p>Bitte beachten Sie, dass der Multisite-Modus bei Verwendung der Web-Benutzeroberfl\u00e4che implizit ist. Sie haben die M\u00f6glichkeit, Konfigurationen direkt auf Ihre Dienste anzuwenden oder eine globale Konfiguration festzulegen, die auf alle Ihre Dienste angewendet wird (Sie k\u00f6nnen immer noch Ausnahmen direkt auf bestimmte Dienste anwenden):</p> <p> </p> Anwenden einer Einstellung auf alle Dienste \u00fcber die Web-UI <p>Weiterf\u00fchrende Informationen</p> <p>Konkrete Beispiele f\u00fcr den Multisite-Modus finden Sie in den fortgeschrittenen Nutzungen der Dokumentation und im Beispiele-Verzeichnis des Repositorys.</p>"},{"location":"de/concepts/#benutzerdefinierte-konfigurationen","title":"Benutzerdefinierte Konfigurationen","text":"<p>Um einzigartige Herausforderungen zu bew\u00e4ltigen und spezifische Anwendungsf\u00e4lle zu bedienen, bietet BunkerWeb die Flexibilit\u00e4t von benutzerdefinierten Konfigurationen. W\u00e4hrend die bereitgestellten Einstellungen und externen Plugins eine breite Palette von Szenarien abdecken, kann es Situationen geben, die zus\u00e4tzliche Anpassungen erfordern.</p> <p>BunkerWeb basiert auf dem renommierten NGINX-Webserver, der ein leistungsstarkes Konfigurationssystem bietet. Das bedeutet, dass Sie die Konfigurationsm\u00f6glichkeiten von NGINX nutzen k\u00f6nnen, um Ihre spezifischen Anforderungen zu erf\u00fcllen. Benutzerdefinierte NGINX-Konfigurationen k\u00f6nnen in verschiedenen Kontexten wie HTTP oder Server eingebunden werden, sodass Sie das Verhalten von BunkerWeb entsprechend Ihren Anforderungen feinabstimmen k\u00f6nnen. Ob Sie globale Einstellungen anpassen oder Konfigurationen auf bestimmte Serverbl\u00f6cke anwenden m\u00fcssen, BunkerWeb erm\u00f6glicht es Ihnen, sein Verhalten zu optimieren, um es perfekt auf Ihren Anwendungsfall abzustimmen.</p> <p>Ein weiterer integraler Bestandteil von BunkerWeb ist die ModSecurity Web Application Firewall. Mit benutzerdefinierten Konfigurationen haben Sie die Flexibilit\u00e4t, auf Fehlalarme zu reagieren oder benutzerdefinierte Regeln hinzuzuf\u00fcgen, um den von ModSecurity bereitgestellten Schutz weiter zu verbessern. Diese benutzerdefinierten Konfigurationen erm\u00f6glichen es Ihnen, das Verhalten der Firewall feinabzustimmen und sicherzustellen, dass es den spezifischen Anforderungen Ihrer Webanwendungen entspricht.</p> <p>Durch die Nutzung benutzerdefinierter Konfigurationen erschlie\u00dfen Sie eine Welt von M\u00f6glichkeiten, um das Verhalten und die Sicherheitsma\u00dfnahmen von BunkerWeb genau auf Ihre Bed\u00fcrfnisse abzustimmen. Ob es sich um die Anpassung von NGINX-Konfigurationen oder die Feinabstimmung von ModSecurity handelt, BunkerWeb bietet die Flexibilit\u00e4t, um Ihre einzigartigen Herausforderungen effektiv zu meistern.</p> <p>Die Verwaltung benutzerdefinierter Konfigurationen \u00fcber die Web-Benutzeroberfl\u00e4che erfolgt \u00fcber das Men\u00fc Konfigurationen:</p> <p> </p> Benutzerdefinierte Konfigurationen \u00fcber die Web-UI verwalten <p>Weiterf\u00fchrende Informationen</p> <p>Konkrete Beispiele f\u00fcr benutzerdefinierte Konfigurationen finden Sie in den fortgeschrittenen Nutzungen der Dokumentation und im Beispiele-Verzeichnis des Repositorys.</p>"},{"location":"de/concepts/#datenbank","title":"Datenbank","text":"<p>BunkerWeb speichert seine aktuelle Konfiguration sicher in einer Backend-Datenbank, die wesentliche Daten f\u00fcr einen reibungslosen Betrieb enth\u00e4lt. Die folgenden Informationen werden in der Datenbank gespeichert:</p> <ul> <li> <p>Einstellungen f\u00fcr alle Dienste: Die Datenbank enth\u00e4lt die definierten Einstellungen f\u00fcr alle von BunkerWeb bereitgestellten Dienste. Dadurch wird sichergestellt, dass Ihre Konfigurationen und Pr\u00e4ferenzen erhalten bleiben und leicht zug\u00e4nglich sind.</p> </li> <li> <p>Benutzerdefinierte Konfigurationen: Alle von Ihnen erstellten benutzerdefinierten Konfigurationen werden ebenfalls in der Backend-Datenbank gespeichert. Dies umfasst personalisierte Einstellungen und \u00c4nderungen, die auf Ihre spezifischen Anforderungen zugeschnitten sind.</p> </li> <li> <p>BunkerWeb-Instanzen: Informationen \u00fcber BunkerWeb-Instanzen, einschlie\u00dflich ihrer Einrichtung und relevanter Details, werden in der Datenbank gespeichert. Dies erm\u00f6glicht eine einfache Verwaltung und \u00dcberwachung mehrerer Instanzen, falls zutreffend.</p> </li> <li> <p>Metadaten zur Job-Ausf\u00fchrung: Die Datenbank speichert Metadaten im Zusammenhang mit der Ausf\u00fchrung verschiedener Jobs in BunkerWeb. Dies umfasst Informationen zu geplanten Aufgaben, Wartungsprozessen und anderen automatisierten Aktivit\u00e4ten.</p> </li> <li> <p>Gecachte Dateien: BunkerWeb verwendet Caching-Mechanismen f\u00fcr eine verbesserte Leistung. Die Datenbank enth\u00e4lt gecachte Dateien, die ein effizientes Abrufen und Bereitstellen h\u00e4ufig aufgerufener Ressourcen gew\u00e4hrleisten.</p> </li> </ul> <p>Im Hintergrund speichert BunkerWeb bei jeder Bearbeitung einer Einstellung oder Hinzuf\u00fcgung einer neuen Konfiguration die \u00c4nderungen automatisch in der Datenbank und gew\u00e4hrleistet so Datenpersistenz und -konsistenz. BunkerWeb unterst\u00fctzt mehrere Backend-Datenbankoptionen, darunter SQLite, MariaDB, MySQL und PostgreSQL.</p> <p>Die Konfiguration der Datenbank ist einfach \u00fcber die Einstellung <code>DATABASE_URI</code> m\u00f6glich, die den angegebenen Formaten f\u00fcr jede unterst\u00fctzte Datenbank folgt:</p> <p>Warning</p> <p>Bei Verwendung der Docker-Integration m\u00fcssen Sie die Umgebungsvariable <code>DATABASE_URI</code> in allen BunkerWeb-Containern (au\u00dfer dem BunkerWeb-Container selbst) festlegen, um sicherzustellen, dass alle Komponenten auf die Datenbank zugreifen k\u00f6nnen. Dies ist entscheidend f\u00fcr die Aufrechterhaltung der Integrit\u00e4t und Funktionalit\u00e4t des Systems.</p> <p>Stellen Sie in allen F\u00e4llen sicher, dass <code>DATABASE_URI</code> vor dem Start von BunkerWeb festgelegt ist, da es f\u00fcr den ordnungsgem\u00e4\u00dfen Betrieb erforderlich ist.</p> <ul> <li>SQLite: <code>sqlite:///var/lib/bunkerweb/db.sqlite3</code></li> <li>MariaDB: <code>mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>MySQL: <code>mysql+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>PostgreSQL: <code>postgresql://bunkerweb:changeme@bw-db:5432/db</code></li> </ul> <p>Durch Angabe des entsprechenden Datenbank-URI in der Konfiguration k\u00f6nnen Sie BunkerWeb nahtlos in Ihr bevorzugtes Datenbank-Backend integrieren und so eine effiziente und zuverl\u00e4ssige Speicherung Ihrer Konfigurationsdaten gew\u00e4hrleisten.</p> <p> </p> Datenbankschema"},{"location":"de/concepts/#scheduler","title":"Scheduler","text":"<p>F\u00fcr eine nahtlose Koordination und Automatisierung verwendet BunkerWeb einen spezialisierten Dienst, der als Scheduler bekannt ist. Der Scheduler spielt eine entscheidende Rolle bei der Gew\u00e4hrleistung eines reibungslosen Betriebs, indem er die folgenden Aufgaben ausf\u00fchrt:</p> <ul> <li> <p>Speichern von Einstellungen und benutzerdefinierten Konfigurationen: Der Scheduler ist f\u00fcr das Speichern aller Einstellungen und benutzerdefinierten Konfigurationen in der Backend-Datenbank verantwortlich. Dies zentralisiert die Konfigurationsdaten und macht sie leicht zug\u00e4nglich und verwaltbar.</p> </li> <li> <p>Ausf\u00fchren verschiedener Aufgaben (Jobs): Der Scheduler \u00fcbernimmt die Ausf\u00fchrung verschiedener Aufgaben, die als Jobs bezeichnet werden. Diese Jobs umfassen eine Reihe von Aktivit\u00e4ten wie regelm\u00e4\u00dfige Wartung, geplante Updates oder andere von BunkerWeb ben\u00f6tigte automatisierte Aufgaben.</p> </li> <li> <p>Generieren der BunkerWeb-Konfiguration: Der Scheduler generiert eine Konfiguration, die von BunkerWeb leicht verstanden wird. Diese Konfiguration wird aus den gespeicherten Einstellungen und benutzerdefinierten Konfigurationen abgeleitet und gew\u00e4hrleistet, dass das gesamte System koh\u00e4siv arbeitet.</p> </li> <li> <p>Fungieren als Vermittler f\u00fcr andere Dienste: Der Scheduler fungiert als Vermittler und erleichtert die Kommunikation und Koordination zwischen verschiedenen Komponenten von BunkerWeb. Er interagiert mit Diensten wie der Web-UI oder Autoconf und sorgt f\u00fcr einen nahtlosen Informations- und Datenaustausch.</p> </li> </ul> <p>Im Wesentlichen dient der Scheduler als das Gehirn von BunkerWeb, das verschiedene Operationen orchestriert und das reibungslose Funktionieren des Systems gew\u00e4hrleistet.</p> <p>Je nach Integrationsansatz kann die Ausf\u00fchrungsumgebung des Schedulers unterschiedlich sein. Bei containerbasierten Integrationen wird der Scheduler in seinem eigenen dedizierten Container ausgef\u00fchrt, was Isolation und Flexibilit\u00e4t bietet. Bei Linux-basierten Integrationen ist der Scheduler hingegen in den BunkerWeb-Dienst integriert, was die Bereitstellung und Verwaltung vereinfacht.</p> <p>Durch den Einsatz des Schedulers optimiert BunkerWeb die Automatisierung und Koordination wesentlicher Aufgaben und erm\u00f6glicht einen effizienten und zuverl\u00e4ssigen Betrieb des gesamten Systems.</p> <p>Wenn Sie die Web-Benutzeroberfl\u00e4che verwenden, k\u00f6nnen Sie Scheduler-Jobs verwalten, indem Sie im Men\u00fc auf Jobs klicken:</p> <p> </p> Jobs \u00fcber die Web-UI verwalten"},{"location":"de/concepts/#zustandsprufung-der-instanzen","title":"Zustandspr\u00fcfung der Instanzen","text":"<p>Seit Version 1.6.0 verf\u00fcgt der Scheduler \u00fcber ein integriertes System zur Zustandspr\u00fcfung, das den Zustand der Instanzen \u00fcberwacht. Wenn eine Instanz ungesund wird, sendet der Scheduler die Konfiguration nicht mehr an sie. Wenn die Instanz wieder gesund wird, sendet der Scheduler die Konfiguration wieder.</p> <p>Das Intervall f\u00fcr die Zustandspr\u00fcfung wird durch die Umgebungsvariable <code>HEALTHCHECK_INTERVAL</code> festgelegt, mit einem Standardwert von <code>30</code>, was bedeutet, dass der Scheduler den Zustand der Instanzen alle 30 Sekunden \u00fcberpr\u00fcft.</p>"},{"location":"de/concepts/#vorlagen","title":"Vorlagen","text":"<p>BunkerWeb nutzt die Leistungsf\u00e4higkeit von Vorlagen, um den Konfigurationsprozess zu vereinfachen und die Flexibilit\u00e4t zu erh\u00f6hen. Vorlagen bieten einen strukturierten und standardisierten Ansatz zur Definition von Einstellungen und benutzerdefinierten Konfigurationen, der Konsistenz und Benutzerfreundlichkeit gew\u00e4hrleistet.</p> <ul> <li> <p>Vordefinierte Vorlagen: Die Community-Version bietet drei vordefinierte Vorlagen, die g\u00e4ngige benutzerdefinierte Konfigurationen und Einstellungen zusammenfassen. Diese Vorlagen dienen als Ausgangspunkt f\u00fcr die Konfiguration von BunkerWeb und erm\u00f6glichen eine schnelle Einrichtung und Bereitstellung. Die vordefinierten Vorlagen sind die folgenden:</p> <ul> <li>low: Eine grundlegende Vorlage, die wesentliche Einstellungen f\u00fcr den Schutz von Webanwendungen bietet.</li> <li>medium: Eine ausgewogene Vorlage, die eine Mischung aus Sicherheitsfunktionen und Leistungsoptimierungen bietet.</li> <li>high: Eine erweiterte Vorlage, die sich auf robuste Sicherheitsma\u00dfnahmen und umfassenden Schutz konzentriert.</li> </ul> </li> <li> <p>Benutzerdefinierte Vorlagen: Zus\u00e4tzlich zu den vordefinierten Vorlagen erm\u00f6glicht BunkerWeb den Benutzern, benutzerdefinierte Vorlagen zu erstellen, die auf ihre spezifischen Anforderungen zugeschnitten sind. Benutzerdefinierte Vorlagen erm\u00f6glichen die Feinabstimmung von Einstellungen und benutzerdefinierten Konfigurationen und stellen sicher, dass BunkerWeb perfekt auf die Bed\u00fcrfnisse des Benutzers abgestimmt ist.</p> </li> </ul> <p>Mit der Web-Benutzeroberfl\u00e4che sind Vorlagen \u00fcber den Einfachmodus verf\u00fcgbar, wenn Sie einen Dienst hinzuf\u00fcgen oder bearbeiten:</p> <p> </p> Verwendung von Vorlagen \u00fcber die Web-UI <p>Erstellen benutzerdefinierter Vorlagen</p> <p>Das Erstellen einer benutzerdefinierten Vorlage ist ein unkomplizierter Prozess, bei dem die gew\u00fcnschten Einstellungen, benutzerdefinierten Konfigurationen und Schritte in einem strukturierten Format definiert werden.</p> <ul> <li>Vorlagenstruktur: Eine benutzerdefinierte Vorlage besteht aus einem Namen, einer Reihe von Einstellungen, benutzerdefinierten Konfigurationen und optionalen Schritten. Die Vorlagenstruktur wird in einer JSON-Datei definiert, die dem angegebenen Format entspricht. Die Schl\u00fcsselkomponenten einer benutzerdefinierten Vorlage umfassen:<ul> <li>Einstellungen: Eine Einstellung wird mit einem Namen und einem entsprechenden Wert definiert. Dieser Wert \u00fcberschreibt den Standardwert der Einstellung. Es werden nur Multisite-Einstellungen unterst\u00fctzt.</li> <li>Konfigurationen: Eine benutzerdefinierte Konfiguration ist ein Pfad zu einer NGINX-Konfigurationsdatei, die als benutzerdefinierte Konfiguration eingebunden wird. Um zu wissen, wo die benutzerdefinierte Konfigurationsdatei platziert werden muss, verweisen Sie auf das Beispiel eines Plugin-Baums unten. Es werden nur Multisite-Konfigurationstypen unterst\u00fctzt.</li> <li>Schritte: Ein Schritt enth\u00e4lt einen Titel, einen Untertitel, Einstellungen und benutzerdefinierte Konfigurationen. Jeder Schritt stellt einen Konfigurationsschritt dar, dem der Benutzer folgen kann, um BunkerWeb gem\u00e4\u00df der benutzerdefinierten Vorlage in der Web-UI einzurichten.</li> </ul> </li> </ul> <p>Spezifikationen zu Schritten</p> <p>Wenn Schritte deklariert sind, ist es nicht zwingend erforderlich, alle Einstellungen und benutzerdefinierten Konfigurationen in den Abschnitten \"Einstellungen\" und \"Konfigurationen\" aufzunehmen. Beachten Sie, dass, wenn eine Einstellung oder eine benutzerdefinierte Konfiguration in einem Schritt deklariert ist, der Benutzer sie in der Web-UI bearbeiten kann.</p> <ul> <li> <p>Vorlagendatei: Die benutzerdefinierte Vorlage wird in einer JSON-Datei in einem <code>templates</code>-Ordner im Plugin-Verzeichnis definiert, die der angegebenen Struktur entspricht. Die Vorlagendatei enth\u00e4lt einen Namen, die Einstellungen, benutzerdefinierten Konfigurationen und Schritte, die erforderlich sind, um BunkerWeb gem\u00e4\u00df den Pr\u00e4ferenzen des Benutzers zu konfigurieren.</p> </li> <li> <p>Ausw\u00e4hlen einer Vorlage: Sobald die benutzerdefinierte Vorlage definiert ist, k\u00f6nnen Benutzer sie w\u00e4hrend des Einfachmodus-Konfigurationsprozesses eines Dienstes in der Web-UI ausw\u00e4hlen. Eine Vorlage kann auch mit der Einstellung <code>USE_TEMPLATE</code> in der Konfiguration ausgew\u00e4hlt werden. Der Name der Vorlagendatei (ohne die <code>.json</code>-Erweiterung) sollte als Wert der Einstellung <code>USE_TEMPLATE</code> angegeben werden.</p> </li> </ul> <p>Beispiel f\u00fcr eine benutzerdefinierte Vorlagendatei: <pre><code>{\n    \"name\": \"Vorlagenname\",\n    // optional\n    \"settings\": {\n        \"EINSTELLUNG_1\": \"Wert\",\n        \"EINSTELLUNG_2\": \"Wert\"\n    },\n    // optional\n    \"configs\": [\n        \"modsec/false_positives.conf\",\n        \"modsec/non_editable.conf\",\n        \"modsec-crs/custom_rules.conf\"\n    ],\n    // optional\n    \"steps\": [\n        {\n            \"title\": \"Titel 1\",\n            \"subtitle\": \"Untertitel 1\",\n            \"settings\": [\n                \"EINSTELLUNG_1\"\n            ],\n            \"configs\": [\n                \"modsec-crs/custom_rules.conf\"\n            ]\n        },\n        {\n            \"title\": \"Titel 2\",\n            \"subtitle\": \"Untertitel 2\",\n            \"settings\": [\n                \"EINSTELLUNG_2\"\n            ],\n            \"configs\": [\n                \"modsec/false_positives.conf\"\n            ]\n        }\n    ]\n}\n</code></pre></p> <p>Beispiel f\u00fcr einen Plugin-Baum mit benutzerdefinierten Vorlagen: <pre><code>.\n\u251c\u2500\u2500 plugin.json\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 meine_andere_vorlage.json\n    \u251c\u2500\u2500 meine_vorlage\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 configs\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 modsec\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 false_positives.conf\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 non_editable.conf\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 modsec-crs\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 custom_rules.conf\n    \u2514\u2500\u2500 meine_vorlage.json\n</code></pre></p>"},{"location":"de/features/","title":"Funktionen","text":"<p>Dieser Abschnitt enth\u00e4lt die vollst\u00e4ndige Liste der von BunkerWeb unterst\u00fctzten Einstellungen. Wenn Sie mit BunkerWeb noch nicht vertraut sind, lesen Sie zuerst den Abschnitt Konzepte der Dokumentation. Befolgen Sie anschlie\u00dfend die Anweisungen f\u00fcr Ihre Integration, um die Einstellungen anzuwenden.</p>"},{"location":"de/features/#globale-einstellungen","title":"Globale Einstellungen","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Allgemein-Plugin stellt das zentrale Konfigurations-Framework f\u00fcr BunkerWeb bereit und erm\u00f6glicht es Ihnen, wesentliche Einstellungen zu definieren, die steuern, wie Ihre Webdienste gesch\u00fctzt und bereitgestellt werden. Dieses grundlegende Plugin verwaltet fundamentale Aspekte wie Sicherheitsmodi, Server-Standardeinstellungen, Protokollierungsverhalten und kritische Betriebsparameter f\u00fcr das gesamte BunkerWeb-\u00d6kosystem.</p> <p>So funktioniert es:</p> <ol> <li>Beim Start von BunkerWeb l\u00e4dt und wendet das Allgemein-Plugin Ihre zentralen Konfigurationseinstellungen an.</li> <li>Sicherheitsmodi werden entweder global oder pro Website festgelegt und bestimmen das angewendete Schutzniveau.</li> <li>Standard-Servereinstellungen legen Fallback-Werte f\u00fcr alle nicht spezifizierten Multisite-Konfigurationen fest.</li> <li>Protokollierungsparameter steuern, welche Informationen aufgezeichnet und wie sie formatiert werden.</li> <li>Diese Einstellungen bilden die Grundlage, auf der alle anderen BunkerWeb-Plugins und -Funktionen aufbauen.</li> </ol>"},{"location":"de/features/#multisite-modus","title":"Multisite-Modus","text":"<p>Wenn <code>MULTISITE</code> auf <code>yes</code> gesetzt ist, kann BunkerWeb mehrere Websites hosten und sch\u00fctzen, jede mit ihrer eigenen einzigartigen Konfiguration. Diese Funktion ist besonders n\u00fctzlich f\u00fcr Szenarien wie:</p> <ul> <li>Hosten mehrerer Domains mit unterschiedlichen Konfigurationen</li> <li>Betreiben mehrerer Anwendungen mit unterschiedlichen Sicherheitsanforderungen</li> <li>Anwenden ma\u00dfgeschneiderter Sicherheitsrichtlinien auf verschiedene Dienste</li> </ul> <p>Im Multisite-Modus wird jede Website durch einen eindeutigen <code>SERVER_NAME</code> identifiziert. Um Einstellungen spezifisch auf eine Website anzuwenden, stellen Sie den prim\u00e4ren <code>SERVER_NAME</code> dem Einstellungsnamen voran. Zum Beispiel:</p> <ul> <li><code>www.example.com_USE_ANTIBOT=captcha</code> aktiviert CAPTCHA f\u00fcr <code>www.example.com</code>.</li> <li><code>myapp.example.com_USE_GZIP=yes</code> aktiviert die GZIP-Komprimierung f\u00fcr <code>myapp.example.com</code>.</li> </ul> <p>Dieser Ansatz stellt sicher, dass die Einstellungen in einer Multisite-Umgebung der richtigen Website zugeordnet werden.</p>"},{"location":"de/features/#mehrfacheinstellungen","title":"Mehrfacheinstellungen","text":"<p>Einige Einstellungen in BunkerWeb unterst\u00fctzen mehrere Konfigurationen f\u00fcr dieselbe Funktion. Um mehrere Einstellungsgruppen zu definieren, h\u00e4ngen Sie ein numerisches Suffix an den Einstellungsnamen an. Zum Beispiel:</p> <ul> <li><code>REVERSE_PROXY_URL_1=/subdir</code> und <code>REVERSE_PROXY_HOST_1=http://myhost1</code> konfigurieren den ersten Reverse-Proxy.</li> <li><code>REVERSE_PROXY_URL_2=/anotherdir</code> und <code>REVERSE_PROXY_HOST_2=http://myhost2</code> konfigurieren den zweiten Reverse-Proxy.</li> </ul> <p>Dieses Muster erm\u00f6glicht es Ihnen, mehrere Konfigurationen f\u00fcr Funktionen wie Reverse-Proxys, Ports oder andere Einstellungen zu verwalten, die f\u00fcr unterschiedliche Anwendungsf\u00e4lle unterschiedliche Werte erfordern.</p>"},{"location":"de/features/#sicherheitsmodi","title":"Sicherheitsmodi","text":"<p>Die Einstellung <code>SECURITY_MODE</code> bestimmt, wie BunkerWeb erkannte Bedrohungen behandelt. Diese flexible Funktion erm\u00f6glicht es Ihnen, je nach Ihren spezifischen Bed\u00fcrfnissen zwischen der \u00dcberwachung oder dem aktiven Blockieren verd\u00e4chtiger Aktivit\u00e4ten zu w\u00e4hlen:</p> <ul> <li><code>detect</code>: Protokolliert potenzielle Bedrohungen, ohne den Zugriff zu blockieren. Dieser Modus ist n\u00fctzlich, um Falsch-Positive auf sichere und unterbrechungsfreie Weise zu identifizieren und zu analysieren.</li> <li><code>block</code> (Standard): Blockiert aktiv erkannte Bedrohungen und protokolliert Vorf\u00e4lle, um unbefugten Zugriff zu verhindern und Ihre Anwendung zu sch\u00fctzen.</li> </ul> <p>Das Umschalten in den <code>detect</code>-Modus kann Ihnen helfen, potenzielle Falsch-Positive zu identifizieren und zu beheben, ohne legitime Clients zu st\u00f6ren. Sobald diese Probleme behoben sind, k\u00f6nnen Sie f\u00fcr vollen Schutz getrost in den <code>block</code>-Modus zur\u00fcckwechseln.</p>"},{"location":"de/features/#konfigurationseinstellungen","title":"Konfigurationseinstellungen","text":"Kerneinstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>SERVER_NAME</code> <code>www.example.com</code> multisite Nein Prim\u00e4re Domain: Der Hauptdomainname f\u00fcr diese Website. Im Multisite-Modus erforderlich. <code>BUNKERWEB_INSTANCES</code> <code>127.0.0.1</code> global Nein BunkerWeb-Instanzen: Liste der BunkerWeb-Instanzen, durch Leerzeichen getrennt. <code>MULTISITE</code> <code>no</code> global Nein Mehrere Websites: Auf <code>yes</code> setzen, um das Hosten mehrerer Websites mit unterschiedlichen Konfigurationen zu erm\u00f6glichen. <code>SECURITY_MODE</code> <code>block</code> multisite Nein Sicherheitsstufe: Steuert die Stufe der Sicherheitsdurchsetzung. Optionen: <code>detect</code> oder <code>block</code>. <code>SERVER_TYPE</code> <code>http</code> multisite Nein Servertyp: Definiert, ob der Server vom Typ <code>http</code> oder <code>stream</code> ist. API-Einstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_API</code> <code>yes</code> global Nein API aktivieren: Aktivieren Sie die API, um BunkerWeb zu steuern. <code>API_HTTP_PORT</code> <code>5000</code> global Nein API-Port: Lauschportnummer f\u00fcr die API. <code>API_HTTPS_PORT</code> <code>6000</code> global Nein API-HTTPS-Port: Lauschportnummer (TLS) f\u00fcr die API. <code>API_LISTEN_HTTP</code> <code>yes</code> global Nein API-HTTP-Lauschen: HTTP-Listener f\u00fcr die API aktivieren. <code>API_LISTEN_HTTPS</code> <code>no</code> global Nein API-HTTPS-Lauschen: HTTPS (TLS)-Listener f\u00fcr die API aktivieren. <code>API_LISTEN_IP</code> <code>0.0.0.0</code> global Nein API-Lausch-IP: Lausch-IP-Adresse f\u00fcr die API. <code>API_SERVER_NAME</code> <code>bwapi</code> global Nein API-Servername: Servername (virtueller Host) f\u00fcr die API. <code>API_WHITELIST_IP</code> <code>127.0.0.0/8</code> global Nein API-Whitelist-IP: Liste der IP/Netzwerke, die die API kontaktieren d\u00fcrfen. <code>API_TOKEN</code> global Nein API-Zugriffstoken (optional): Wenn gesetzt, m\u00fcssen alle API-Anfragen <code>Authorization: Bearer &lt;token&gt;</code> enthalten. <p>Hinweis: Aus Bootstrap-Gr\u00fcnden m\u00fcssen Sie, wenn Sie <code>API_TOKEN</code> aktivieren, es in der Umgebung SOWOHL der BunkerWeb-Instanz als auch des Schedulers setzen. Der Scheduler f\u00fcgt den <code>Authorization</code>-Header automatisch hinzu, wenn <code>API_TOKEN</code> in seiner Umgebung vorhanden ist. Wenn es nicht gesetzt ist, wird kein Header gesendet und BunkerWeb erzwingt keine Token-Authentifizierung. Sie k\u00f6nnen die API \u00fcber HTTPS bereitstellen, indem Sie <code>API_LISTEN_HTTPS=yes</code> setzen (Port: <code>API_HTTPS_PORT</code>, Standard <code>6000</code>).</p> <p>Beispieltest mit curl (Token und Host ersetzen):</p> <pre><code>curl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://&lt;bunkerweb-host&gt;:5000/ping\n\ncurl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     --insecure \\\n     https://&lt;bunkerweb-host&gt;:6000/ping\n</code></pre> Netzwerk- &amp; Port-Einstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>HTTP_PORT</code> <code>8080</code> global Ja HTTP-Port: Portnummer f\u00fcr HTTP-Verkehr. <code>HTTPS_PORT</code> <code>8443</code> global Ja HTTPS-Port: Portnummer f\u00fcr HTTPS-Verkehr. <code>USE_IPV6</code> <code>no</code> global Nein IPv6-Unterst\u00fctzung: IPv6-Konnektivit\u00e4t aktivieren. <code>DNS_RESOLVERS</code> <code>127.0.0.11</code> global Nein DNS-Resolver: DNS-Adressen der zu verwendenden Resolver. Stream-Server-Einstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>LISTEN_STREAM</code> <code>yes</code> multisite Nein Stream lauschen: Lauschen f\u00fcr Nicht-SSL (Passthrough) aktivieren. <code>LISTEN_STREAM_PORT</code> <code>1337</code> multisite Ja Stream-Port: Lauschport f\u00fcr Nicht-SSL (Passthrough). <code>LISTEN_STREAM_PORT_SSL</code> <code>4242</code> multisite Ja Stream-SSL-Port: Lauschport f\u00fcr SSL (Passthrough). <code>USE_TCP</code> <code>yes</code> multisite Nein TCP lauschen: TCP-Lauschen (Stream) aktivieren. <code>USE_UDP</code> <code>no</code> multisite Nein UDP lauschen: UDP-Lauschen (Stream) aktivieren. Worker-Einstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>WORKER_PROCESSES</code> <code>auto</code> global Nein Worker-Prozesse: Anzahl der Worker-Prozesse. Auf <code>auto</code> setzen, um verf\u00fcgbare Kerne zu verwenden. <code>WORKER_CONNECTIONS</code> <code>1024</code> global Nein Worker-Verbindungen: Maximale Anzahl von Verbindungen pro Worker. <code>WORKER_RLIMIT_NOFILE</code> <code>2048</code> global Nein Dateideskriptor-Limit: Maximale Anzahl offener Dateien pro Worker. Speichereinstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>WORKERLOCK_MEMORY_SIZE</code> <code>48k</code> global Nein Workerlock-Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des lua_shared_dict f\u00fcr Initialisierungs-Worker. <code>DATASTORE_MEMORY_SIZE</code> <code>64m</code> global Nein Datastore-Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des internen Datastores. <code>CACHESTORE_MEMORY_SIZE</code> <code>64m</code> global Nein Cachestore-Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des internen Cachestores. <code>CACHESTORE_IPC_MEMORY_SIZE</code> <code>16m</code> global Nein Cachestore-IPC-Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des internen Cachestores (ipc). <code>CACHESTORE_MISS_MEMORY_SIZE</code> <code>16m</code> global Nein Cachestore-Miss-Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des internen Cachestores (miss). <code>CACHESTORE_LOCKS_MEMORY_SIZE</code> <code>16m</code> global Nein Cachestore-Locks-Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des internen Cachestores (locks). Protokollierungseinstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>LOG_FORMAT</code> <code>$host $remote_addr - $request_id $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\"</code> global Nein Protokollformat: Das Format, das f\u00fcr Zugriffsprotokolle verwendet werden soll. <code>LOG_LEVEL</code> <code>notice</code> global Nein Protokollstufe: Ausf\u00fchrlichkeitsstufe f\u00fcr Fehlerprotokolle. Optionen: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>error</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <code>TIMERS_LOG_LEVEL</code> <code>debug</code> global Nein Timer-Protokollstufe: Protokollstufe f\u00fcr Timer. Optionen: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>err</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <p>Bew\u00e4hrte Praktiken bei der Protokollierung</p> <ul> <li>Verwenden Sie f\u00fcr Produktionsumgebungen die Protokollstufen <code>notice</code>, <code>warn</code> oder <code>error</code>, um das Protokollvolumen zu minimieren.</li> <li>Setzen Sie zur Fehlersuche vor\u00fcbergehend die Protokollstufe auf <code>debug</code>, um detailliertere Informationen zu erhalten.</li> </ul> Integrationseinstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>AUTOCONF_MODE</code> <code>no</code> global Nein Autoconf-Modus: Autoconf-Docker-Integration aktivieren. <code>SWARM_MODE</code> <code>no</code> global Nein Swarm-Modus: Docker-Swarm-Integration aktivieren. <code>KUBERNETES_MODE</code> <code>no</code> global Nein Kubernetes-Modus: Kubernetes-Integration aktivieren. <code>USE_TEMPLATE</code> multisite Nein Vorlage verwenden: Konfigurationsvorlage, die die Standardwerte bestimmter Einstellungen \u00fcberschreibt. Nginx-Einstellungen Einstellung Standard Kontext Mehrfach Beschreibung <code>NGINX_PREFIX</code> <code>/etc/nginx/</code> global Nein Nginx-Pr\u00e4fix: Wo Nginx nach Konfigurationen suchen wird. <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> global Nein Server-Namen-Hash-Bucket-Gr\u00f6\u00dfe: Wert f\u00fcr die <code>server_names_hash_bucket_size</code>-Direktive."},{"location":"de/features/#beispielkonfigurationen","title":"Beispielkonfigurationen","text":"Grundlegendes Produktions-SetupEntwicklungsmodusMultisite-KonfigurationStream-Server-Konfiguration <p>Eine Standardkonfiguration f\u00fcr eine Produktionswebsite mit strenger Sicherheit:</p> <pre><code>SECURITY_MODE: \"block\"\nSERVER_NAME: \"example.com\"\nLOG_LEVEL: \"notice\"\n</code></pre> <p>Konfiguration f\u00fcr eine Entwicklungsumgebung mit zus\u00e4tzlicher Protokollierung:</p> <pre><code>SECURITY_MODE: \"detect\"\nSERVER_NAME: \"dev.example.com\"\nLOG_LEVEL: \"debug\"\n</code></pre> <p>Konfiguration zum Hosten mehrerer Websites:</p> <pre><code>MULTISITE: \"yes\"\n\n# Erste Website\nsite1.example.com_SERVER_NAME: \"site1.example.com\"\nsite1.example.com_SECURITY_MODE: \"block\"\n\n# Zweite Website\nsite2.example.com_SERVER_NAME: \"site2.example.com\"\nsite2.example.com_SECURITY_MODE: \"detect\"\n</code></pre> <p>Konfiguration f\u00fcr einen TCP/UDP-Server:</p> <pre><code>SERVER_TYPE: \"stream\"\nSERVER_NAME: \"stream.example.com\"\nLISTEN_STREAM: \"yes\"\nLISTEN_STREAM_PORT: \"1337\"\nUSE_TCP: \"yes\"\nUSE_UDP: \"no\"\n</code></pre>"},{"location":"de/features/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Provides enhanced protection against DDoS attacks by analyzing and filtering suspicious traffic.</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USE_ANTIDDOS</code> <code>no</code> global nein Enable or disable anti DDoS protection to mitigate high traffic spikes. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global nein Size of in-memory storage for DDoS metrics (e.g., 10M, 500k). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global nein Maximum suspicious requests allowed from a single IP before blocking. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global nein Time window (seconds) to detect abnormal request patterns. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global nein HTTP status codes treated as suspicious for DDoS analysis. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global nein Minimum distinct IP count before enabling anti DDoS measures."},{"location":"de/features/#antibot","title":"Antibot","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Angreifer nutzen oft automatisierte Tools (Bots), um zu versuchen, Ihre Website auszunutzen. Zum Schutz davor enth\u00e4lt BunkerWeb eine \u201eAntibot\u201c-Funktion, die Benutzer auffordert, zu beweisen, dass sie menschlich sind. Wenn ein Benutzer die Herausforderung besteht, erh\u00e4lt er Zugriff auf Ihre Website. Diese Funktion ist standardm\u00e4\u00dfig deaktiviert.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Benutzer Ihre Website besucht, pr\u00fcft BunkerWeb, ob er bereits eine Antibot-Herausforderung bestanden hat.</li> <li>Andernfalls wird der Benutzer auf eine Herausforderungsseite umgeleitet.</li> <li>Der Benutzer muss die Herausforderung abschlie\u00dfen (z. B. ein CAPTCHA l\u00f6sen, JavaScript ausf\u00fchren).</li> <li>Wenn die Herausforderung erfolgreich ist, wird der Benutzer auf die urspr\u00fcnglich angeforderte Seite umgeleitet und kann normal navigieren.</li> </ol>"},{"location":"de/features/#so-verwenden-sie-es","title":"So verwenden Sie es","text":"<p>Befolgen Sie diese Schritte, um Antibot zu aktivieren und zu konfigurieren:</p> <ol> <li>W\u00e4hlen Sie einen Herausforderungstyp: Entscheiden Sie sich f\u00fcr den zu verwendenden Mechanismus (z. B. captcha, hcaptcha, javascript).</li> <li>Aktivieren Sie die Funktion: Setzen Sie den Parameter <code>USE_ANTIBOT</code> in Ihrer BunkerWeb-Konfiguration auf den gew\u00e4hlten Typ.</li> <li>Konfigurieren Sie die Einstellungen: Passen Sie bei Bedarf andere <code>ANTIBOT_*</code>-Parameter an. F\u00fcr reCAPTCHA, hCaptcha, Turnstile und mCaptcha erstellen Sie ein Konto beim gew\u00e4hlten Dienst und erhalten Sie API-Schl\u00fcssel.</li> <li>Wichtig: Stellen Sie sicher, dass <code>ANTIBOT_URI</code> eine eindeutige URL Ihrer Website ist und nirgendwo anders verwendet wird.</li> </ol> <p>\u00dcber den Parameter <code>ANTIBOT_URI</code></p> <p>Stellen Sie sicher, dass <code>ANTIBOT_URI</code> eine eindeutige URL Ihrer Website ist und nirgendwo anders verwendet wird.</p> <p>Sitzungen in Cluster-Umgebungen</p> <p>Die Antibot-Funktion verwendet Cookies, um zu verfolgen, ob ein Benutzer die Herausforderung abgeschlossen hat. Wenn Sie BunkerWeb in einem Cluster (mehrere Instanzen) betreiben, m\u00fcssen Sie die Sitzungsverwaltung korrekt konfigurieren: Setzen Sie <code>SESSIONS_SECRET</code> und <code>SESSIONS_NAME</code> auf allen BunkerWeb-Instanzen auf dieselben Werte. Andernfalls k\u00f6nnten Benutzer aufgefordert werden, die Herausforderung zu wiederholen. Weitere Informationen zur Sitzungskonfiguration finden Sie hier.</p>"},{"location":"de/features/#allgemeine-parameter","title":"Allgemeine Parameter","text":"<p>Die folgenden Parameter werden von allen Herausforderungsmechanismen gemeinsam genutzt:</p> Parameter Standardwert Kontext Mehrfach Beschreibung <code>ANTIBOT_URI</code> <code>/challenge</code> Multisite nein Herausforderungs-URL: Die URL, zu der Benutzer umgeleitet werden, um die Herausforderung abzuschlie\u00dfen. Stellen Sie sicher, dass diese URL nicht f\u00fcr andere Zwecke verwendet wird. <code>ANTIBOT_TIME_RESOLVE</code> <code>60</code> Multisite nein Herausforderungs-Timeout: Maximale Zeit (in Sekunden) zum Abschlie\u00dfen der Herausforderung. Danach wird eine neue Herausforderung generiert. <code>ANTIBOT_TIME_VALID</code> <code>86400</code> Multisite nein Herausforderungs-G\u00fcltigkeit: Dauer (in Sekunden), f\u00fcr die eine erfolgreiche Herausforderung g\u00fcltig bleibt. Nach dieser Zeit wird eine neue Herausforderung erforderlich sein."},{"location":"de/features/#ausschlieen-von-traffic-von-herausforderungen","title":"Ausschlie\u00dfen von Traffic von Herausforderungen","text":"<p>BunkerWeb erm\u00f6glicht es, bestimmte Benutzer, IPs oder Anfragen anzugeben, die die Antibot-Herausforderung vollst\u00e4ndig umgehen sollen. N\u00fctzlich f\u00fcr vertrauensw\u00fcrdige Dienste, interne Netzwerke oder Seiten, die immer zug\u00e4nglich sein sollen:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>ANTIBOT_IGNORE_URI</code> Multisite nein Ausgeschlossene URLs: Eine durch Leerzeichen getrennte Liste von URI-Regul\u00e4ren Ausdr\u00fccken, die die Herausforderung umgehen sollen. <code>ANTIBOT_IGNORE_IP</code> Multisite nein Ausgeschlossene IPs: Eine durch Leerzeichen getrennte Liste von IP-Adressen oder CIDR-Bereichen, die die Herausforderung umgehen sollen. <code>ANTIBOT_IGNORE_RDNS</code> Multisite nein Ausgeschlossene rDNS: Eine durch Leerzeichen getrennte Liste von Reverse-DNS-Suffixen, die die Herausforderung umgehen sollen. <code>ANTIBOT_RDNS_GLOBAL</code> <code>yes</code> Multisite nein Nur \u00f6ffentliche IPs: Wenn <code>yes</code>, werden rDNS-Pr\u00fcfungen nur f\u00fcr \u00f6ffentliche IPs durchgef\u00fchrt. <code>ANTIBOT_IGNORE_ASN</code> Multisite nein Ausgeschlossene ASNs: Eine durch Leerzeichen getrennte Liste von ASN-Nummern, die die Herausforderung umgehen sollen. <code>ANTIBOT_IGNORE_USER_AGENT</code> Multisite nein Ausgeschlossene User-Agents: Eine durch Leerzeichen getrennte Liste von User-Agent-Regex-Mustern, die die Herausforderung umgehen sollen. <p>Beispiele:</p> <ul> <li> <p><code>ANTIBOT_IGNORE_URI: \"^/api/ ^/webhook/ ^/assets/\"</code>   Schlie\u00dft alle URIs aus, die mit <code>/api/</code>, <code>/webhook/</code> oder <code>/assets/</code> beginnen.</p> </li> <li> <p><code>ANTIBOT_IGNORE_IP: \"192.168.1.0/24 10.0.0.1\"</code>   Schlie\u00dft das interne Netzwerk <code>192.168.1.0/24</code> und die spezifische IP <code>10.0.0.1</code> aus.</p> </li> <li> <p><code>ANTIBOT_IGNORE_RDNS: \".googlebot.com .bingbot.com\"</code>   Schlie\u00dft Anfragen von Hosts aus, deren Reverse-DNS auf <code>googlebot.com</code> oder <code>bingbot.com</code> endet.</p> </li> <li> <p><code>ANTIBOT_IGNORE_ASN: \"15169 8075\"</code>   Schlie\u00dft Anfragen von den ASNs 15169 (Google) und 8075 (Microsoft) aus.</p> </li> <li> <p><code>ANTIBOT_IGNORE_USER_AGENT: \"^Mozilla.+Chrome.+Safari\"</code>   Schlie\u00dft Anfragen aus, deren User-Agent dem angegebenen Regex-Muster entspricht.</p> </li> </ul>"},{"location":"de/features/#herausforderungsmechanismen","title":"Herausforderungsmechanismen","text":"CookieJavaScriptCaptchareCAPTCHAhCaptchaTurnstilemCaptcha <p>Die Cookie-Herausforderung ist ein leichter Mechanismus, der auf der Installation eines Cookies im Browser des Benutzers basiert. Wenn ein Benutzer auf die Website zugreift, sendet der Server ein Cookie an den Client. Bei nachfolgenden Anfragen \u00fcberpr\u00fcft der Server das Vorhandensein dieses Cookies, um zu best\u00e4tigen, dass der Benutzer legitim ist. Diese Methode ist einfach und effektiv f\u00fcr einen grundlegenden Schutz vor Bots, ohne zus\u00e4tzliche Benutzerinteraktion zu erfordern.</p> <p>So funktioniert es:</p> <ol> <li>Der Server generiert ein eindeutiges Cookie und sendet es an den Client.</li> <li>Der Client muss das Cookie bei nachfolgenden Anfragen zur\u00fccksenden.</li> <li>Wenn das Cookie fehlt oder ung\u00fcltig ist, wird der Benutzer auf die Herausforderungsseite umgeleitet.</li> </ol> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>cookie</code> setzen, um diesen Mechanismus zu aktivieren. <p>Die JavaScript-Herausforderung fordert den Client auf, eine Rechenaufgabe mithilfe von JavaScript zu l\u00f6sen. Dieser Mechanismus stellt sicher, dass der Client JavaScript aktiviert hat und den erforderlichen Code ausf\u00fchren kann, was f\u00fcr die meisten Bots in der Regel nicht m\u00f6glich ist.</p> <p>So funktioniert es:</p> <ol> <li>Der Server sendet ein JavaScript-Skript an den Client.</li> <li>Das Skript f\u00fchrt eine Rechenaufgabe aus (z. B. einen Hash) und \u00fcbermittelt das Ergebnis an den Server.</li> <li>Der Server \u00fcberpr\u00fcft das Ergebnis, um die Legitimit\u00e4t des Clients zu best\u00e4tigen.</li> </ol> <p>Hauptmerkmale:</p> <ul> <li>Die Herausforderung generiert dynamisch eine einzigartige Aufgabe f\u00fcr jeden Client.</li> <li>Die Rechenaufgabe beinhaltet ein Hashing mit spezifischen Bedingungen (z. B. das Finden eines Hashes mit einem bestimmten Pr\u00e4fix).</li> </ul> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>javascript</code> setzen, um diesen Mechanismus zu aktivieren. <p>Die Captcha-Herausforderung ist ein hauseigener Mechanismus, der bildbasierte Herausforderungen generiert, die vollst\u00e4ndig in Ihrer BunkerWeb-Umgebung gehostet werden. Er testet die F\u00e4higkeit der Benutzer, zuf\u00e4llige Zeichen zu erkennen und zu interpretieren, wodurch sichergestellt wird, dass automatisierte Bots effektiv blockiert werden, ohne auf externe Dienste angewiesen zu sein.</p> <p>So funktioniert es:</p> <ol> <li>Der Server generiert ein CAPTCHA-Bild mit zuf\u00e4lligen Zeichen.</li> <li>Der Benutzer muss die im Bild angezeigten Zeichen in ein Textfeld eingeben.</li> <li>Der Server validiert die Benutzereingabe anhand des generierten CAPTCHAs.</li> </ol> <p>Hauptmerkmale:</p> <ul> <li>Vollst\u00e4ndig selbst gehostet, wodurch die Notwendigkeit von Drittanbieter-APIs entf\u00e4llt.</li> <li>Dynamisch generierte Herausforderungen gew\u00e4hrleisten die Einzigartigkeit f\u00fcr jede Benutzersitzung.</li> <li>Verwendet einen anpassbaren Zeichensatz f\u00fcr die CAPTCHA-Generierung.</li> </ul> <p>Unterst\u00fctzte Zeichen:</p> <p>Das CAPTCHA-System unterst\u00fctzt die folgenden Zeichentypen:</p> <ul> <li>Buchstaben: Alle Kleinbuchstaben (a-z) und Gro\u00dfbuchstaben (A-Z)</li> <li>Ziffern: 2, 3, 4, 5, 6, 7, 8, 9 (schlie\u00dft 0 und 1 aus, um Verwechslungen zu vermeiden)</li> <li>Sonderzeichen: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code></li> </ul> <p>Eine vollst\u00e4ndige Liste der unterst\u00fctzten Zeichen finden Sie in der Zeichentabelle der f\u00fcr das CAPTCHA verwendeten Schriftart.</p> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>captcha</code> setzen, um diesen Mechanismus zu aktivieren. <code>ANTIBOT_CAPTCHA_ALPHABET</code> <code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code> Multisite nein Captcha-Alphabet: Eine Zeichenkette, die zur Generierung des CAPTCHAs verwendet werden soll. Unterst\u00fctzte Zeichen: alle Buchstaben (a-z, A-Z), die Ziffern 2-9 (schlie\u00dft 0 und 1 aus) und die Sonderzeichen: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code> <p>Googles reCAPTCHA bietet eine Benutzervalidierung, die im Hintergrund (v3) ausgef\u00fchrt wird, um eine Verhaltensbewertung zuzuweisen. Eine Bewertung unterhalb des konfigurierten Schwellenwerts l\u00f6st eine zus\u00e4tzliche \u00dcberpr\u00fcfung aus oder blockiert die Anfrage. Bei sichtbaren Herausforderungen (v2) m\u00fcssen Benutzer mit dem reCAPTCHA-Widget interagieren, bevor sie fortfahren k\u00f6nnen.</p> <p>Es gibt jetzt zwei M\u00f6glichkeiten, reCAPTCHA zu integrieren: - Die klassische Version (Site-/Geheimschl\u00fcssel, v2/v3-Verifizierungsendpunkt) - Die neue Version mit Google Cloud (Projekt-ID + API-Schl\u00fcssel). Die klassische Version bleibt verf\u00fcgbar und kann mit <code>ANTIBOT_RECAPTCHA_CLASSIC</code> aktiviert werden.</p> <p>F\u00fcr die klassische Version erhalten Sie Ihre Site- und Geheimschl\u00fcssel \u00fcber die Google reCAPTCHA Admin-Konsole. F\u00fcr die neue Version erstellen Sie einen reCAPTCHA-Schl\u00fcssel in Ihrem Google Cloud-Projekt und verwenden Sie die Projekt-ID sowie einen API-Schl\u00fcssel (siehe Google Cloud reCAPTCHA-Konsole). Ein Site-Schl\u00fcssel ist immer erforderlich.</p> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>recaptcha</code> setzen, um diesen Mechanismus zu aktivieren. <code>ANTIBOT_RECAPTCHA_CLASSIC</code> <code>yes</code> Multisite nein Klassisches reCAPTCHA verwenden. Auf <code>no</code> setzen, um die neue Google Cloud-basierte Version zu verwenden. <code>ANTIBOT_RECAPTCHA_SITEKEY</code> Multisite nein reCAPTCHA Site-Schl\u00fcssel. F\u00fcr beide Versionen erforderlich. <code>ANTIBOT_RECAPTCHA_SECRET</code> Multisite nein reCAPTCHA Geheimschl\u00fcssel. Nur f\u00fcr die klassische Version erforderlich. <code>ANTIBOT_RECAPTCHA_PROJECT_ID</code> Multisite nein Google Cloud Projekt-ID. Nur f\u00fcr die neue Version erforderlich. <code>ANTIBOT_RECAPTCHA_API_KEY</code> Multisite nein Google Cloud API-Schl\u00fcssel, der zum Aufrufen der reCAPTCHA Enterprise API verwendet wird. Nur f\u00fcr die neue Version erforderlich. <code>ANTIBOT_RECAPTCHA_JA3</code> Multisite nein Optionaler JA3 TLS-Fingerabdruck, der in Enterprise-Bewertungen enthalten sein soll. <code>ANTIBOT_RECAPTCHA_JA4</code> Multisite nein Optionaler JA4 TLS-Fingerabdruck, der in Enterprise-Bewertungen enthalten sein soll. <code>ANTIBOT_RECAPTCHA_SCORE</code> <code>0.7</code> Multisite nein Mindestpunktzahl, die zum Bestehen erforderlich ist (gilt f\u00fcr klassische v3 und die neue Version). <p>Wenn aktiviert, bietet hCaptcha eine effektive Alternative zu reCAPTCHA, indem es Benutzerinteraktionen \u00fcberpr\u00fcft, ohne auf einen Bewertungsmechanismus angewiesen zu sein. Es fordert Benutzer mit einem einfachen, interaktiven Test heraus, um ihre Legitimit\u00e4t zu best\u00e4tigen.</p> <p>Um hCaptcha mit BunkerWeb zu integrieren, m\u00fcssen Sie die erforderlichen Anmeldeinformationen vom hCaptcha-Dashboard unter hCaptcha abrufen. Diese Informationen umfassen einen Site-Schl\u00fcssel und einen Geheimschl\u00fcssel.</p> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>hcaptcha</code> setzen, um diesen Mechanismus zu aktivieren. <code>ANTIBOT_HCAPTCHA_SITEKEY</code> Multisite nein hCaptcha Site-Schl\u00fcssel. <code>ANTIBOT_HCAPTCHA_SECRET</code> Multisite nein hCaptcha Geheimschl\u00fcssel. <p>Turnstile ist ein moderner, datenschutzfreundlicher Herausforderungsmechanismus, der auf der Technologie von Cloudflare basiert, um automatisierten Traffic zu erkennen und zu blockieren. Er validiert Benutzerinteraktionen transparent und im Hintergrund, wodurch die Reibung f\u00fcr legitime Benutzer reduziert und Bots effektiv abgeschreckt werden.</p> <p>Um Turnstile mit BunkerWeb zu integrieren, stellen Sie sicher, dass Sie die erforderlichen Anmeldeinformationen von Cloudflare Turnstile erhalten.</p> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>turnstile</code> setzen, um diesen Mechanismus zu aktivieren. <code>ANTIBOT_TURNSTILE_SITEKEY</code> Multisite nein Turnstile Site-Schl\u00fcssel (Cloudflare). <code>ANTIBOT_TURNSTILE_SECRET</code> Multisite nein Turnstile Geheimschl\u00fcssel (Cloudflare). <p>mCaptcha ist ein alternativer CAPTCHA-Herausforderungsmechanismus, der die Legitimit\u00e4t von Benutzern \u00fcberpr\u00fcft, indem er einen interaktiven Test pr\u00e4sentiert, \u00e4hnlich wie andere Antibot-L\u00f6sungen. Wenn aktiviert, fordert es Benutzer mit einem von mCaptcha bereitgestellten CAPTCHA heraus, um sicherzustellen, dass nur authentische Benutzer die automatisierten Sicherheitskontrollen umgehen.</p> <p>mCaptcha ist datenschutzfreundlich konzipiert. Es ist vollst\u00e4ndig DSGVO-konform und stellt sicher, dass alle am Herausforderungsprozess beteiligten Benutzerdaten strenge Datenschutzstandards erf\u00fcllen. Dar\u00fcber hinaus bietet mCaptcha die Flexibilit\u00e4t, selbst gehostet zu werden, sodass Organisationen die volle Kontrolle \u00fcber ihre Daten und Infrastruktur behalten. Diese Selbsthosting-F\u00e4higkeit verbessert nicht nur den Datenschutz, sondern optimiert auch die Leistung und Anpassung an spezifische Bereitstellungsanforderungen.</p> <p>Um mCaptcha mit BunkerWeb zu integrieren, m\u00fcssen Sie die erforderlichen Anmeldeinformationen von der mCaptcha-Plattform oder Ihrem eigenen Anbieter abrufen. Diese Informationen umfassen einen Site-Schl\u00fcssel und einen Geheimschl\u00fcssel zur \u00dcberpr\u00fcfung.</p> <p>Parameter:</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_ANTIBOT</code> <code>no</code> Multisite nein Antibot aktivieren: Auf <code>mcaptcha</code> setzen, um diesen Mechanismus zu aktivieren. <code>ANTIBOT_MCAPTCHA_SITEKEY</code> Multisite nein mCaptcha Site-Schl\u00fcssel. <code>ANTIBOT_MCAPTCHA_SECRET</code> Multisite nein mCaptcha Geheimschl\u00fcssel. <code>ANTIBOT_MCAPTCHA_URL</code> <code>https://demo.mcaptcha.org</code> Multisite nein Zu verwendende Domain f\u00fcr mCaptcha. <p>Siehe Allgemeine Parameter f\u00fcr zus\u00e4tzliche Optionen.</p>"},{"location":"de/features/#konfigurationsbeispiele","title":"Konfigurationsbeispiele","text":"Cookie-Herausforderung <pre><code>USE_ANTIBOT: \"cookie\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> JavaScript-Herausforderung <pre><code>USE_ANTIBOT: \"javascript\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> Captcha-Herausforderung <pre><code>USE_ANTIBOT: \"captcha\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\nANTIBOT_CAPTCHA_ALPHABET: \"23456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n</code></pre> <p>Hinweis: Das obige Beispiel verwendet die Ziffern 2-9 und alle Buchstaben, die h\u00e4ufig f\u00fcr CAPTCHAs verwendet werden. Sie k\u00f6nnen das Alphabet bei Bedarf anpassen, um Sonderzeichen einzuschlie\u00dfen.</p> Klassische reCAPTCHA-HerausforderungreCAPTCHA-Herausforderung (neu)hCaptcha-Herausforderung <p>Beispielkonfiguration f\u00fcr das klassische reCAPTCHA (Site-/Geheimschl\u00fcssel):</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"yes\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Beispielkonfiguration f\u00fcr das neue Google Cloud-basierte reCAPTCHA (Projekt-ID + API-Schl\u00fcssel):</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"no\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_PROJECT_ID: \"your-gcp-project-id\"\nANTIBOT_RECAPTCHA_API_KEY: \"your-gcp-api-key\"\n# Optionale Fingerabdr\u00fccke zur Verbesserung der Enterprise-Bewertungen\n# ANTIBOT_RECAPTCHA_JA3: \"&lt;ja3-fingerprint&gt;\"\n# ANTIBOT_RECAPTCHA_JA4: \"&lt;ja4-fingerprint&gt;\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <pre><code>USE_ANTIBOT: \"hcaptcha\"\nANTIBOT_HCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_HCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> Turnstile-Herausforderung <pre><code>USE_ANTIBOT: \"turnstile\"\nANTIBOT_TURNSTILE_SITEKEY: \"your-site-key\"\nANTIBOT_TURNSTILE_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> mCaptcha-Herausforderung <pre><code>USE_ANTIBOT: \"mcaptcha\"\nANTIBOT_MCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_MCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_MCAPTCHA_URL: \"https://demo.mcaptcha.org\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre>"},{"location":"de/features/#auth-basic","title":"Auth basic","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Auth Basic-Plugin bietet eine HTTP-Basisauthentifizierung zum Schutz Ihrer Website oder bestimmter Ressourcen. Diese Funktion f\u00fcgt eine zus\u00e4tzliche Sicherheitsebene hinzu, indem sie von den Benutzern die Eingabe eines Benutzernamens und eines Passworts verlangt, bevor sie auf gesch\u00fctzte Inhalte zugreifen k\u00f6nnen. Diese Art der Authentifizierung ist einfach zu implementieren und wird von den Browsern weitgehend unterst\u00fctzt.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Benutzer versucht, auf einen gesch\u00fctzten Bereich Ihrer Website zuzugreifen, sendet der Server eine Authentifizierungsaufforderung.</li> <li>Der Browser zeigt ein Anmeldedialogfeld an, in dem der Benutzer zur Eingabe von Benutzername und Passwort aufgefordert wird.</li> <li>Der Benutzer gibt seine Anmeldedaten ein, die an den Server gesendet werden.</li> <li>Wenn die Anmeldeinformationen g\u00fcltig sind, erh\u00e4lt der Benutzer Zugriff auf den angeforderten Inhalt.</li> <li>Wenn die Anmeldeinformationen ung\u00fcltig sind, wird dem Benutzer eine Fehlermeldung mit dem Statuscode 401 Unauthorized angezeigt.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Auth Basic-Authentifizierung zu aktivieren und zu konfigurieren:</p> <ol> <li>Aktivieren Sie die Funktion: Setzen Sie die Einstellung <code>USE_AUTH_BASIC</code> in Ihrer BunkerWeb-Konfiguration auf <code>yes</code>.</li> <li>W\u00e4hlen Sie den Schutzumfang: Entscheiden Sie, ob Sie Ihre gesamte Website oder nur bestimmte URLs sch\u00fctzen m\u00f6chten, indem Sie die Einstellung <code>AUTH_BASIC_LOCATION</code> konfigurieren.</li> <li>Anmeldeinformationen definieren: Richten Sie mindestens ein Paar aus Benutzername und Passwort mit den Einstellungen <code>AUTH_BASIC_USER</code> und <code>AUTH_BASIC_PASSWORD</code> ein.</li> <li>Passen Sie die Nachricht an: \u00c4ndern Sie optional den <code>AUTH_BASIC_TEXT</code>, um eine benutzerdefinierte Nachricht in der Anmeldeaufforderung anzuzeigen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_1","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_AUTH_BASIC</code> <code>no</code> multisite nein Auth Basic aktivieren: Auf <code>yes</code> setzen, um die Basisauthentifizierung zu aktivieren. <code>AUTH_BASIC_LOCATION</code> <code>sitewide</code> multisite nein Schutzumfang: Auf <code>sitewide</code> setzen, um die gesamte Website zu sch\u00fctzen, oder einen URL-Pfad angeben (z.B. <code>/admin</code>), um nur bestimmte Bereiche zu sch\u00fctzen. <code>AUTH_BASIC_USER</code> <code>changeme</code> multisite ja Benutzername: Der f\u00fcr die Authentifizierung erforderliche Benutzername. Sie k\u00f6nnen mehrere Paare aus Benutzername und Passwort definieren. <code>AUTH_BASIC_PASSWORD</code> <code>changeme</code> multisite ja Passwort: Das f\u00fcr die Authentifizierung erforderliche Passwort. Jedes Passwort korrespondiert mit einem Benutzernamen. <code>AUTH_BASIC_TEXT</code> <code>Restricted area</code> multisite nein Aufforderungstext: Die Nachricht, die in der dem Benutzer angezeigten Authentifizierungsaufforderung erscheint. <p>Sicherheitshinweise</p> <p>Die HTTP-Basisauthentifizierung \u00fcbertr\u00e4gt Anmeldeinformationen, die in Base64 kodiert (nicht verschl\u00fcsselt) sind. Obwohl dies bei Verwendung \u00fcber HTTPS akzeptabel ist, sollte es \u00fcber reines HTTP nicht als sicher angesehen werden. Aktivieren Sie immer SSL/TLS, wenn Sie die Basisauthentifizierung verwenden.</p> <p>Verwendung mehrerer Anmeldeinformationen</p> <p>Sie k\u00f6nnen mehrere Paare aus Benutzername/Passwort f\u00fcr den Zugriff konfigurieren. Jede <code>AUTH_BASIC_USER</code>-Einstellung sollte eine entsprechende <code>AUTH_BASIC_PASSWORD</code>-Einstellung haben.</p>"},{"location":"de/features/#beispielkonfigurationen_1","title":"Beispielkonfigurationen","text":"Schutz der gesamten WebsiteSchutz bestimmter BereicheMehrere Benutzer <p>So sch\u00fctzen Sie Ihre gesamte Website mit einem einzigen Satz von Anmeldeinformationen:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> <p>Um nur einen bestimmten Pfad zu sch\u00fctzen, wie z.B. ein Admin-Panel:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"/admin/\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> <p>So richten Sie mehrere Benutzer mit unterschiedlichen Anmeldeinformationen ein:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_TEXT: \"Staff Area\"\n\n# Erster Benutzer\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"admin_password\"\n\n# Zweiter Benutzer\nAUTH_BASIC_USER_2: \"editor\"\nAUTH_BASIC_PASSWORD_2: \"editor_password\"\n\n# Dritter Benutzer\nAUTH_BASIC_USER_3: \"viewer\"\nAUTH_BASIC_PASSWORD_3: \"viewer_password\"\n</code></pre>"},{"location":"de/features/#backup","title":"Backup","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Backup-Plugin bietet eine automatisierte Backup-L\u00f6sung zum Schutz Ihrer BunkerWeb-Daten. Diese Funktion gew\u00e4hrleistet die Sicherheit und Verf\u00fcgbarkeit Ihrer wichtigen Datenbank, indem sie regelm\u00e4\u00dfige Backups nach Ihrem bevorzugten Zeitplan erstellt. Backups werden an einem bestimmten Ort gespeichert und k\u00f6nnen sowohl durch automatisierte Prozesse als auch durch manuelle Befehle einfach verwaltet werden.</p> <p>So funktioniert es:</p> <ol> <li>Ihre Datenbank wird automatisch gem\u00e4\u00df dem von Ihnen festgelegten Zeitplan (t\u00e4glich, w\u00f6chentlich oder monatlich) gesichert.</li> <li>Backups werden in einem angegebenen Verzeichnis auf Ihrem System gespeichert.</li> <li>Alte Backups werden automatisch basierend auf Ihren Aufbewahrungseinstellungen rotiert.</li> <li>Sie k\u00f6nnen jederzeit manuell Backups erstellen, vorhandene Backups auflisten oder eine Wiederherstellung aus einem Backup durchf\u00fchren.</li> <li>Vor jeder Wiederherstellung wird der aktuelle Zustand als Sicherheitsma\u00dfnahme automatisch gesichert.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_1","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Backup-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die Backup-Funktion ist standardm\u00e4\u00dfig aktiviert. Bei Bedarf k\u00f6nnen Sie dies mit der Einstellung <code>USE_BACKUP</code> steuern.</li> <li>Backup-Zeitplan konfigurieren: W\u00e4hlen Sie mit dem Parameter <code>BACKUP_SCHEDULE</code>, wie oft Backups durchgef\u00fchrt werden sollen.</li> <li>Aufbewahrungsrichtlinie festlegen: Geben Sie mit der Einstellung <code>BACKUP_ROTATION</code> an, wie viele Backups aufbewahrt werden sollen.</li> <li>Speicherort festlegen: W\u00e4hlen Sie mit der Einstellung <code>BACKUP_DIRECTORY</code>, wo die Backups gespeichert werden sollen.</li> <li>CLI-Befehle verwenden: Verwalten Sie Backups bei Bedarf manuell mit den <code>bwcli plugin backup</code>-Befehlen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_2","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_BACKUP</code> <code>yes</code> global nein Backup aktivieren: Auf <code>yes</code> setzen, um automatische Backups zu aktivieren. <code>BACKUP_SCHEDULE</code> <code>daily</code> global nein Backup-Frequenz: Wie oft Backups durchgef\u00fchrt werden sollen. Optionen: <code>daily</code>, <code>weekly</code> oder <code>monthly</code>. <code>BACKUP_ROTATION</code> <code>7</code> global nein Backup-Aufbewahrung: Die Anzahl der aufzubewahrenden Backup-Dateien. \u00c4ltere Backups werden automatisch gel\u00f6scht. <code>BACKUP_DIRECTORY</code> <code>/var/lib/bunkerweb/backups</code> global nein Backup-Speicherort: Das Verzeichnis, in dem die Backup-Dateien gespeichert werden."},{"location":"de/features/#befehlszeilenschnittstelle","title":"Befehlszeilenschnittstelle","text":"<p>Das Backup-Plugin bietet mehrere CLI-Befehle zur Verwaltung Ihrer Backups:</p> <pre><code># Alle verf\u00fcgbaren Backups auflisten\nbwcli plugin backup list\n\n# Ein manuelles Backup erstellen\nbwcli plugin backup save\n\n# Ein Backup an einem benutzerdefinierten Ort erstellen\nbwcli plugin backup save --directory /pfad/zum/benutzerdefinierten/ort\n\n# Aus dem neuesten Backup wiederherstellen\nbwcli plugin backup restore\n\n# Aus einer bestimmten Backup-Datei wiederherstellen\nbwcli plugin backup restore /pfad/zum/backup/backup-sqlite-2023-08-15_12-34-56.zip\n</code></pre> <p>Sicherheit geht vor</p> <p>Vor jeder Wiederherstellung erstellt das Backup-Plugin automatisch ein Backup des aktuellen Zustands Ihrer Datenbank an einem tempor\u00e4ren Ort. Dies bietet eine zus\u00e4tzliche Absicherung f\u00fcr den Fall, dass Sie die Wiederherstellung r\u00fcckg\u00e4ngig machen m\u00fcssen.</p> <p>Datenbankkompatibilit\u00e4t</p> <p>Das Backup-Plugin unterst\u00fctzt SQLite, MySQL/MariaDB und PostgreSQL-Datenbanken. Oracle-Datenbanken werden derzeit f\u00fcr Backup- und Wiederherstellungsvorg\u00e4nge nicht unterst\u00fctzt.</p>"},{"location":"de/features/#beispielkonfigurationen_2","title":"Beispielkonfigurationen","text":"T\u00e4gliche Backups mit 7-t\u00e4giger AufbewahrungW\u00f6chentliche Backups mit erweiterter AufbewahrungMonatliche Backups an einem benutzerdefinierten Speicherort <p>Standardkonfiguration, die t\u00e4gliche Backups erstellt und die letzten 7 Dateien aufbewahrt:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"daily\"\nBACKUP_ROTATION: \"7\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> <p>Konfiguration f\u00fcr seltenere Backups mit l\u00e4ngerer Aufbewahrung:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"weekly\"\nBACKUP_ROTATION: \"12\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> <p>Konfiguration f\u00fcr monatliche Backups, die an einem benutzerdefinierten Ort gespeichert werden:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"monthly\"\nBACKUP_ROTATION: \"24\"\nBACKUP_DIRECTORY: \"/mnt/backup-drive/bunkerweb-backups\"\n</code></pre>"},{"location":"de/features/#backup-s3-pro","title":"Backup S3  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Automatically backup your data to an S3 bucket</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USE_BACKUP_S3</code> <code>no</code> global nein Enable or disable the S3 backup feature <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global nein The frequency of the backup <code>BACKUP_S3_ROTATION</code> <code>7</code> global nein The number of backups to keep <code>BACKUP_S3_ENDPOINT</code> global nein The S3 endpoint <code>BACKUP_S3_BUCKET</code> global nein The S3 bucket <code>BACKUP_S3_DIR</code> global nein The S3 directory <code>BACKUP_S3_REGION</code> global nein The S3 region <code>BACKUP_S3_ACCESS_KEY_ID</code> global nein The S3 access key ID <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global nein The S3 access key secret <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global nein The compression level of the backup zip file"},{"location":"de/features/#bad-behavior","title":"Bad behavior","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Bad Behavior-Plugin sch\u00fctzt Ihre Website, indem es IP-Adressen, die innerhalb eines bestimmten Zeitraums zu viele Fehler oder \u201eschlechte\u201c HTTP-Statuscodes erzeugen, automatisch erkennt und sperrt. Dies hilft bei der Abwehr von Brute-Force-Angriffen, Web-Scrapern, Schwachstellen-Scannern und anderen b\u00f6swilligen Aktivit\u00e4ten, die zahlreiche Fehlerantworten erzeugen k\u00f6nnten.</p> <p>Angreifer erzeugen oft \u201everd\u00e4chtige\u201c HTTP-Statuscodes, wenn sie nach Schwachstellen suchen oder diese ausnutzen \u2013 Codes, die ein typischer Benutzer innerhalb eines bestimmten Zeitrahmens wahrscheinlich nicht ausl\u00f6sen w\u00fcrde. Durch die Erkennung dieses Verhaltens kann BunkerWeb die betreffende IP-Adresse automatisch sperren und den Angreifer zwingen, eine neue IP-Adresse zu verwenden, um seine Versuche fortzusetzen.</p> <p>So funktioniert es:</p> <ol> <li>Das Plugin \u00fcberwacht die HTTP-Antworten Ihrer Website.</li> <li>Wenn ein Besucher einen \u201eschlechten\u201c HTTP-Statuscode (wie 400, 401, 403, 404 usw.) erh\u00e4lt, wird der Z\u00e4hler f\u00fcr diese IP-Adresse erh\u00f6ht.</li> <li>Wenn eine IP-Adresse den konfigurierten Schwellenwert f\u00fcr schlechte Statuscodes innerhalb des angegebenen Zeitraums \u00fcberschreitet, wird die IP automatisch gesperrt.</li> <li>Gesperrte IPs k\u00f6nnen je nach Konfiguration entweder auf Dienstebene (nur f\u00fcr die spezifische Website) oder global (\u00fcber alle Websites hinweg) blockiert werden.</li> <li>Sperren laufen automatisch nach der konfigurierten Sperrdauer ab oder bleiben dauerhaft, wenn sie mit <code>0</code> konfiguriert sind.</li> </ol> <p>Wichtige Vorteile</p> <ol> <li>Automatischer Schutz: Erkennt und blockiert potenziell b\u00f6sartige Clients ohne manuellen Eingriff.</li> <li>Anpassbare Regeln: Passen Sie genau an, was als \u201eschlechtes Verhalten\u201c gilt, basierend auf Ihren spezifischen Anforderungen.</li> <li>Ressourcenschonung: Verhindert, dass b\u00f6swillige Akteure Serverressourcen durch wiederholte ung\u00fcltige Anfragen verbrauchen.</li> <li>Flexibler Geltungsbereich: W\u00e4hlen Sie, ob Sperren nur f\u00fcr den aktuellen Dienst oder global f\u00fcr alle Dienste gelten sollen.</li> <li>Kontrolle der Sperrdauer: Legen Sie tempor\u00e4re Sperren fest, die automatisch nach der konfigurierten Dauer ablaufen, oder permanente Sperren, die bis zur manuellen Aufhebung bestehen bleiben.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_2","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Bad Behavior-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die Bad Behavior-Funktion ist standardm\u00e4\u00dfig aktiviert. Bei Bedarf k\u00f6nnen Sie dies mit der Einstellung <code>USE_BAD_BEHAVIOR</code> steuern.</li> <li>Statuscodes konfigurieren: Definieren Sie mit der Einstellung <code>BAD_BEHAVIOR_STATUS_CODES</code>, welche HTTP-Statuscodes als \u201eschlecht\u201c gelten sollen.</li> <li>Schwellenwerte festlegen: Bestimmen Sie mit der Einstellung <code>BAD_BEHAVIOR_THRESHOLD</code>, wie viele \u201eschlechte\u201c Antworten eine Sperre ausl\u00f6sen sollen.</li> <li>Zeitr\u00e4ume konfigurieren: Geben Sie die Dauer f\u00fcr die Z\u00e4hlung schlechter Antworten und die Sperrdauer mit den Einstellungen <code>BAD_BEHAVIOR_COUNT_TIME</code> und <code>BAD_BEHAVIOR_BAN_TIME</code> an.</li> <li>Sperrbereich w\u00e4hlen: Entscheiden Sie mit der Einstellung <code>BAD_BEHAVIOR_BAN_SCOPE</code>, ob die Sperren nur f\u00fcr den aktuellen Dienst oder global f\u00fcr alle Dienste gelten sollen.</li> </ol> <p>Stream-Modus</p> <p>Im Stream-Modus wird nur der Statuscode <code>444</code> als \u201eschlecht\u201c angesehen und l\u00f6st dieses Verhalten aus.</p>"},{"location":"de/features/#konfigurationseinstellungen_3","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_BAD_BEHAVIOR</code> <code>yes</code> multisite nein Bad Behavior aktivieren: Auf <code>yes</code> setzen, um die Funktion zur Erkennung und Sperrung von schlechtem Verhalten zu aktivieren. <code>BAD_BEHAVIOR_STATUS_CODES</code> <code>400 401 403 404 405 429 444</code> multisite nein Schlechte Statuscodes: Liste der HTTP-Statuscodes, die als \u201eschlechtes\u201c Verhalten gez\u00e4hlt werden, wenn sie an einen Client zur\u00fcckgegeben werden. <code>BAD_BEHAVIOR_THRESHOLD</code> <code>10</code> multisite nein Schwellenwert: Die Anzahl der \u201eschlechten\u201c Statuscodes, die eine IP innerhalb des Z\u00e4hlzeitraums erzeugen kann, bevor sie gesperrt wird. <code>BAD_BEHAVIOR_COUNT_TIME</code> <code>60</code> multisite nein Z\u00e4hlzeitraum: Das Zeitfenster (in Sekunden), in dem schlechte Statuscodes auf den Schwellenwert angerechnet werden. <code>BAD_BEHAVIOR_BAN_TIME</code> <code>86400</code> multisite nein Sperrdauer: Wie lange (in Sekunden) eine IP nach \u00dcberschreiten des Schwellenwerts gesperrt bleibt. Standard ist 24 Stunden (86400 Sekunden). <code>0</code> f\u00fcr permanente Sperren. <code>BAD_BEHAVIOR_BAN_SCOPE</code> <code>service</code> global nein Sperrbereich: Legt fest, ob Sperren nur f\u00fcr den aktuellen Dienst (<code>service</code>) oder f\u00fcr alle Dienste (<code>global</code>) gelten. <p>Falsch-Positive</p> <p>Seien Sie vorsichtig bei der Einstellung des Schwellenwerts und der Z\u00e4hlzeit. Zu niedrige Werte k\u00f6nnen versehentlich legitime Benutzer sperren, die beim Surfen auf Ihrer Website auf Fehler sto\u00dfen.</p> <p>Anpassen Ihrer Konfiguration</p> <p>Beginnen Sie mit konservativen Einstellungen (h\u00f6herer Schwellenwert, k\u00fcrzere Sperrzeit) und passen Sie diese je nach Ihren spezifischen Bed\u00fcrfnissen und Verkehrsmustern an. \u00dcberwachen Sie Ihre Protokolle, um sicherzustellen, dass legitime Benutzer nicht f\u00e4lschlicherweise gesperrt werden.</p>"},{"location":"de/features/#beispielkonfigurationen_3","title":"Beispielkonfigurationen","text":"StandardkonfigurationStrikte KonfigurationNachsichtige KonfigurationKonfiguration f\u00fcr permanente Sperren <p>Die Standardkonfiguration bietet einen ausgewogenen Ansatz, der f\u00fcr die meisten Websites geeignet ist:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"86400\"\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> <p>F\u00fcr Hochsicherheitsanwendungen, bei denen Sie potenzielle Bedrohungen aggressiver sperren m\u00f6chten:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444 500 502 503\"\nBAD_BEHAVIOR_THRESHOLD: \"5\"\nBAD_BEHAVIOR_COUNT_TIME: \"120\"\nBAD_BEHAVIOR_BAN_TIME: \"604800\"  # 7 Tage\nBAD_BEHAVIOR_BAN_SCOPE: \"global\" # Sperre \u00fcber alle Dienste hinweg\n</code></pre> <p>F\u00fcr Websites mit hohem legitimen Datenverkehr, bei denen Sie Falsch-Positive vermeiden m\u00f6chten:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"401 403 429\"  # Nur unautorisierte, verbotene und ratenlimitierte z\u00e4hlen\nBAD_BEHAVIOR_THRESHOLD: \"20\"\nBAD_BEHAVIOR_COUNT_TIME: \"30\"\nBAD_BEHAVIOR_BAN_TIME: \"3600\"  # 1 Stunde\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> <p>F\u00fcr Szenarien, in denen erkannte Angreifer dauerhaft gesperrt werden sollen, bis sie manuell entsperrt werden:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"0\"  # Permanente Sperre (l\u00e4uft nie ab)\nBAD_BEHAVIOR_BAN_SCOPE: \"global\" # Sperre \u00fcber alle Dienste hinweg\n</code></pre>"},{"location":"de/features/#blacklist","title":"Blacklist","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Blacklist-Plugin sch\u00fctzt Ihre Website, indem es den Zugriff basierend auf verschiedenen Client-Attributen blockiert. Diese Funktion wehrt bekannte b\u00f6sartige Entit\u00e4ten, Scanner und verd\u00e4chtige Besucher ab, indem sie den Zugriff basierend auf IP-Adressen, Netzwerken, Reverse-DNS-Eintr\u00e4gen (rDNS), ASNs, User-Agents und spezifischen URI-Mustern verweigert.</p> <p>So funktioniert's:[1][2][3]</p> <ol> <li>Das Plugin \u00fcberpr\u00fcft eingehende Anfragen anhand mehrerer Blacklist-Kriterien (IP-Adressen, Netzwerke, rDNS, ASN, User-Agent oder URI-Muster).</li> <li>Blacklists k\u00f6nnen direkt in Ihrer Konfiguration angegeben oder von externen URLs geladen werden.</li> <li>Wenn ein Besucher einer Blacklist-Regel entspricht (und keiner Ignorier-Regel), wird der Zugriff verweigert.</li> <li>Blacklists werden automatisch in regelm\u00e4\u00dfigen Abst\u00e4nden von den konfigurierten URLs aktualisiert.[4][5][6][7][8]</li> <li>Sie k\u00f6nnen genau anpassen, welche Kriterien \u00fcberpr\u00fcft und ignoriert werden, basierend auf Ihren spezifischen Sicherheitsanforderungen.</li> </ol>"},{"location":"de/features/#so-verwenden-sie-es_1","title":"So verwenden Sie es","text":"<p>Befolgen Sie diese Schritte, um die Blacklist-Funktion einzurichten und zu verwenden:</p> <ol> <li>Funktion aktivieren: Die Blacklist-Funktion ist standardm\u00e4\u00dfig aktiviert. Bei Bedarf k\u00f6nnen Sie sie mit dem Parameter <code>USE_BLACKLIST</code> steuern.</li> <li>Blockierregeln konfigurieren: Definieren Sie, welche IPs, Netzwerke, rDNS-Muster, ASNs, User-Agents oder URIs blockiert werden sollen.</li> <li>Ignorierregeln einrichten: Geben Sie Ausnahmen an, die die Blacklist-\u00dcberpr\u00fcfungen umgehen sollen.</li> <li>Externe Quellen hinzuf\u00fcgen: Konfigurieren Sie URLs, um Blacklist-Daten automatisch herunterzuladen und zu aktualisieren.[4][5][6][7][8]</li> <li>Effektivit\u00e4t \u00fcberwachen: Konsultieren Sie die Web-Oberfl\u00e4che, um Statistiken \u00fcber blockierte Anfragen anzuzeigen.</li> </ol> <p>Stream-Modus</p> <p>Im Stream-Modus werden nur \u00dcberpr\u00fcfungen nach IP, rDNS und ASN durchgef\u00fchrt.</p>"},{"location":"de/features/#konfigurationsparameter91011121314151617","title":"Konfigurationsparameter[9][10][11][12][13][14][15][16][17]","text":"<p>Allgemein</p> Parameter Standard Kontext Mehrfach Beschreibung <code>USE_BLACKLIST</code> <code>yes</code> Multisite Nein Blacklist aktivieren: Setzen Sie auf <code>yes</code>, um die Blacklist-Funktion zu aktivieren. <code>BLACKLIST_COMMUNITY_LISTS</code> <code>ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents</code> Multisite Nein Community-Blacklists: W\u00e4hlen Sie vorkonfigurierte und von der Community gepflegte Blacklists aus, die in die Blockierung einbezogen werden sollen. Community-Blacklists <p>Was es bewirkt: Erm\u00f6glicht Ihnen, schnell gut gepflegte und von der Community stammende Blacklists hinzuzuf\u00fcgen, ohne die URLs manuell konfigurieren zu m\u00fcssen.</p> <pre><code>Der Parameter `BLACKLIST_COMMUNITY_LISTS` erm\u00f6glicht Ihnen die Auswahl aus ausgew\u00e4hlten Blacklist-Quellen. Die verf\u00fcgbaren Optionen umfassen:\n\n| ID                                        | Beschreibung                                                                                                                                                                                                              | Quelle                                                                                                                         |\n| :---------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :----------------------------------------------------------------------------------------------------------------------------- |\n| `ip:laurent-minne-data-shield-aggressive` | Data-Shield IPv4 Blocklist. DST = Europa                                                                                                                                                                                  | `https://raw.githubusercontent.com/duggytuxy/Data-Shield_IPv4_Blocklist/refs/heads/main/prod_data-shield_ipv4_blocklist.txt`   |\n| `ip:danmeuk-tor-exit`                     | IP-Adressen von Tor-Exit-Nodes (dan.me.uk)                                                                                                                                                                                | `https://www.dan.me.uk/torlist/?exit`                                                                                          |\n| `ua:mitchellkrogza-bad-user-agents`       | Nginx Block Bad Bots, Spam Referrer Blocker, Vulnerability Scanners, User-Agents, Malware, Adware, Ransomware, Malicious Sites, mit Anti-DDOS, Wordpress Theme Detector Blocking und Fail2Ban Jail f\u00fcr Wiederholungst\u00e4ter | `https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list` |\n\n**Konfiguration:** Geben Sie mehrere Listen durch Leerzeichen getrennt an. Zum Beispiel:\n```yaml\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n```\n\n!!! tip \"Community-Listen vs. manuelle Konfiguration\"\n    Community-Blacklists bieten eine bequeme M\u00f6glichkeit, mit bew\u00e4hrten Blacklist-Quellen zu beginnen. Sie k\u00f6nnen diese parallel zu manuellen URL-Konfigurationen f\u00fcr maximale Flexibilit\u00e4t verwenden.\n</code></pre> <p>=== \"IP-Adresse\"[18][19][20][21][22] Was es bewirkt: Blockiert Besucher basierend auf ihrer IP-Adresse oder ihrem Netzwerk.</p> <pre><code>| Parameter                  | Standard                              | Kontext   | Mehrfach | Beschreibung                                                                                                                 |\n| :------------------------- | :------------------------------------ | :-------- | :------- | :--------------------------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_IP`             |                                       | Multisite | Nein     | **IP-Blacklist:** Liste von IP-Adressen oder Netzwerken (CIDR-Notation) zum Blockieren, durch Leerzeichen getrennt.          |\n| `BLACKLIST_IGNORE_IP`      |                                       | Multisite | Nein     | **IP-Ignorierliste:** Liste von IP-Adressen oder Netzwerken, die IP-Blacklist-\u00dcberpr\u00fcfungen umgehen sollen.                  |\n| `BLACKLIST_IP_URLS`        | `https://www.dan.me.uk/torlist/?exit` | Multisite | Nein     | **IP-Blacklist-URLs:** Liste von URLs, die zu blockierende IP-Adressen oder Netzwerke enthalten, durch Leerzeichen getrennt. |\n| `BLACKLIST_IGNORE_IP_URLS` |                                       | Multisite | Nein     | **IP-Ignorierlisten-URLs:** Liste von URLs, die zu ignorierende IP-Adressen oder Netzwerke enthalten.                        |\n\nDer Standardparameter `BLACKLIST_IP_URLS` enth\u00e4lt eine URL, die eine **Liste bekannter Tor-Exit-Nodes** bereitstellt. Dies ist eine h\u00e4ufige Quelle f\u00fcr b\u00f6sartigen Datenverkehr und ein guter Ausgangspunkt f\u00fcr viele Websites.\n</code></pre> <p>=== \"Reverse DNS\"[23][24][25][26][27] Was es bewirkt: Blockiert Besucher basierend auf ihrem Reverse-Domain-Namen. Dies ist n\u00fctzlich, um bekannte Scanner und Crawler basierend auf ihren Organisationsdom\u00e4nen zu blockieren.</p> <pre><code>| Parameter                    | Standard                | Kontext   | Mehrfach | Beschreibung                                                                                               |\n| :--------------------------- | :---------------------- | :-------- | :------- | :--------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_RDNS`             | `.shodan.io .censys.io` | Multisite | Nein     | **rDNS-Blacklist:** Liste von Reverse-DNS-Suffixen zum Blockieren, durch Leerzeichen getrennt.             |\n| `BLACKLIST_RDNS_GLOBAL`      | `yes`                   | Multisite | Nein     | **Nur globales rDNS:** F\u00fchrt rDNS-\u00dcberpr\u00fcfungen nur f\u00fcr globale IP-Adressen durch, wenn auf `yes` gesetzt. |\n| `BLACKLIST_IGNORE_RDNS`      |                         | Multisite | Nein     | **rDNS-Ignorierliste:** Liste von Reverse-DNS-Suffixen, die rDNS-Blacklist-\u00dcberpr\u00fcfungen umgehen sollen.   |\n| `BLACKLIST_RDNS_URLS`        |                         | Multisite | Nein     | **rDNS-Blacklist-URLs:** Liste von URLs, die zu blockierende Reverse-DNS-Suffixe enthalten.                |\n| `BLACKLIST_IGNORE_RDNS_URLS` |                         | Multisite | Nein     | **rDNS-Ignorierlisten-URLs:** Liste von URLs, die zu ignorierende Reverse-DNS-Suffixe enthalten.           |\n\nDer Standardparameter `BLACKLIST_RDNS` enth\u00e4lt Dom\u00e4nen g\u00e4ngiger Scanner wie **Shodan** und **Censys**. Diese werden oft von Sicherheitsforschern und Scannern verwendet, um anf\u00e4llige Websites zu identifizieren.\n</code></pre> ASN <p>Was es bewirkt: Blockiert Besucher von bestimmten Netzwerkanbietern. ASNs sind wie Postleitzahlen f\u00fcr das Internet \u2013 sie identifizieren, zu welchem Anbieter oder welcher Organisation eine IP geh\u00f6rt.</p> <pre><code>| Parameter                   | Standard | Kontext   | Mehrfach | Beschreibung                                                                                     |\n| :-------------------------- | :------- | :-------- | :------- | :----------------------------------------------------------------------------------------------- |\n| `BLACKLIST_ASN`             |          | Multisite | Nein     | **ASN-Blacklist:** Liste von autonomen Systemnummern zum Blockieren, durch Leerzeichen getrennt. |\n| `BLACKLIST_IGNORE_ASN`      |          | Multisite | Nein     | **ASN-Ignorierliste:** Liste von ASNs, die ASN-Blacklist-\u00dcberpr\u00fcfungen umgehen sollen.           |\n| `BLACKLIST_ASN_URLS`        |          | Multisite | Nein     | **ASN-Blacklist-URLs:** Liste von URLs, die zu blockierende ASNs enthalten.                      |\n| `BLACKLIST_IGNORE_ASN_URLS` |          | Multisite | Nein     | **ASN-Ignorierlisten-URLs:** Liste von URLs, die zu ignorierende ASNs enthalten.                 |\n</code></pre> <p>=== \"User-Agent\"[28][29][30][31][32] Was es bewirkt: Blockiert Besucher basierend auf dem Browser oder Tool, das sie angeblich verwenden. Dies ist effektiv gegen Bots, die sich ehrlich identifizieren (wie \"ScannerBot\" oder \"WebHarvestTool\").</p> <pre><code>| Parameter                          | Standard                                                                                                                       | Kontext   | Mehrfach | Beschreibung                                                                                                       |\n| :--------------------------------- | :----------------------------------------------------------------------------------------------------------------------------- | :-------- | :------- | :----------------------------------------------------------------------------------------------------------------- |\n| `BLACKLIST_USER_AGENT`             |                                                                                                                                | Multisite | Nein     | **User-Agent-Blacklist:** Liste von User-Agent-Mustern (PCRE-Regex) zum Blockieren, durch Leerzeichen getrennt.    |\n| `BLACKLIST_IGNORE_USER_AGENT`      |                                                                                                                                | Multisite | Nein     | **User-Agent-Ignorierliste:** Liste von User-Agent-Mustern, die User-Agent-Blacklist-\u00dcberpr\u00fcfungen umgehen sollen. |\n| `BLACKLIST_USER_AGENT_URLS`        | `https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list` | Multisite | Nein     | **User-Agent-Blacklist-URLs:** Liste von URLs, die zu blockierende User-Agent-Muster enthalten.                    |\n| `BLACKLIST_IGNORE_USER_AGENT_URLS` |                                                                                                                                | Multisite | Nein     | **User-Agent-Ignorierlisten-URLs:** Liste von URLs, die zu ignorierende User-Agent-Muster enthalten.               |\n\nDer Standardparameter `BLACKLIST_USER_AGENT_URLS` enth\u00e4lt eine URL, die eine **Liste bekannter b\u00f6sartiger User-Agents** bereitstellt. Diese werden oft von b\u00f6sartigen Bots und Scannern verwendet, um anf\u00e4llige Websites zu identifizieren.\n</code></pre> <p>=== \"URI\"[33][34][35][36][37] Was es bewirkt: Blockiert Anfragen an spezifische URLs auf Ihrer Website. Dies ist n\u00fctzlich, um Zugriffsversuche auf Admin-Seiten, Anmeldeformulare oder andere sensible Bereiche zu blockieren, die angegriffen werden k\u00f6nnten.</p> <pre><code>| Parameter                   | Standard | Kontext   | Mehrfach | Beschreibung                                                                                      |\n| :-------------------------- | :------- | :-------- | :------- | :------------------------------------------------------------------------------------------------ |\n| `BLACKLIST_URI`             |          | Multisite | Nein     | **URI-Blacklist:** Liste von URI-Mustern (PCRE-Regex) zum Blockieren, durch Leerzeichen getrennt. |\n| `BLACKLIST_IGNORE_URI`      |          | Multisite | Nein     | **URI-Ignorierliste:** Liste von URI-Mustern, die URI-Blacklist-\u00dcberpr\u00fcfungen umgehen sollen.     |\n| `BLACKLIST_URI_URLS`        |          | Multisite | Nein     | **URI-Blacklist-URLs:** Liste von URLs, die zu blockierende URI-Muster enthalten.                 |\n| `BLACKLIST_IGNORE_URI_URLS` |          | Multisite | Nein     | **URI-Ignorierlisten-URLs:** Liste von URLs, die zu ignorierende URI-Muster enthalten.            |\n</code></pre> <p>Unterst\u00fctzung von URL-Formaten</p> <p>Alle <code>*_URLS</code>-Parameter unterst\u00fctzen HTTP/HTTPS-URLs sowie lokale Dateipfade unter Verwendung des Pr\u00e4fixes <code>file:///</code>. Die Basisauthentifizierung wird im Format <code>http://user:pass@url</code> unterst\u00fctzt.</p> <p>!!! tip \"Regelm\u00e4\u00dfige Updates\"[4][5][6][7][8] Blacklists von URLs werden automatisch st\u00fcndlich heruntergeladen und aktualisiert, um sicherzustellen, dass Ihr Schutz gegen die neuesten Bedrohungen auf dem neuesten Stand bleibt.</p>"},{"location":"de/features/#konfigurationsbeispiele38","title":"Konfigurationsbeispiele[38]","text":"Grundlegender Schutz durch IP und User-AgentErweiterter Schutz mit benutzerdefinierten RegelnVerwendung lokaler Dateien <p>Eine einfache Konfiguration, die bekannte Tor-Exit-Nodes und g\u00e4ngige b\u00f6sartige User-Agents mithilfe der Community-Blacklists blockiert:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n</code></pre> <p>Alternativ k\u00f6nnen Sie eine manuelle Konfiguration per URL verwenden:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Eine umfassendere Konfiguration mit benutzerdefinierten Blacklist-Eintr\u00e4gen und Ausnahmen:</p> <pre><code>USE_BLACKLIST: \"yes\"\n\n# Benutzerdefinierte Blacklist-Eintr\u00e4ge\nBLACKLIST_IP: \"192.168.1.100 203.0.113.0/24\"\nBLACKLIST_RDNS: \".shodan.io .censys.io .scanner.com\"\nBLACKLIST_ASN: \"16509 14618\"  # ASN von AWS und Amazon\nBLACKLIST_USER_AGENT: \"(?:\\b)SemrushBot(?:\\b) (?:\\b)AhrefsBot(?:\\b)\"\nBLACKLIST_URI: \"^/wp-login\\.php$ ^/administrator/\"\n\n# Benutzerdefinierte Ignorierregeln\nBLACKLIST_IGNORE_IP: \"192.168.1.200 203.0.113.42\"\n\n# Externe Blacklist-Quellen\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit https://www.spamhaus.org/drop/drop.txt\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Konfiguration mit lokalen Dateien f\u00fcr Blacklists:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"file:///chemin/vers/ip-blacklist.txt\"\nBLACKLIST_RDNS_URLS: \"file:///chemin/vers/rdns-blacklist.txt\"\nBLACKLIST_ASN_URLS: \"file:///chemin/vers/asn-blacklist.txt\"\nBLACKLIST_USER_AGENT_URLS: \"file:///chemin/vers/user-agent-blacklist.txt\"\nBLACKLIST_URI_URLS: \"file:///chemin/vers/uri-blacklist.txt\"\n</code></pre>"},{"location":"de/features/#brotli","title":"Brotli","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Brotli-Plugin aktiviert die Komprimierung von HTTP-Antworten mit dem Brotli-Algorithmus. Es reduziert die Bandbreitennutzung and beschleunigt das Laden, indem es Inhalte vor dem Senden an den Browser komprimiert.</p> <p>Im Vergleich zu Gzip erreicht Brotli in der Regel bessere Kompressionsraten, was zu kleineren Dateien and einer schnelleren Bereitstellung f\u00fchrt.</p> <p>So funktioniert's:</p> <ol> <li>Auf Anfrage eines Clients pr\u00fcft BunkerWeb, ob der Browser Brotli unterst\u00fctzt.</li> <li>Wenn ja, wird die Antwort auf dem konfigurierten Niveau (<code>BROTLI_COMP_LEVEL</code>) komprimiert.</li> <li>Die entsprechenden Header zeigen die Brotli-Komprimierung an.</li> <li>Der Browser dekomprimiert vor der Anzeige.</li> <li>Bandbreite and Ladezeiten nehmen ab.</li> </ol>"},{"location":"de/features/#so-wirds-verwendet","title":"So wird's verwendet","text":"<ol> <li>Aktivieren: <code>USE_BROTLI: yes</code> (standardm\u00e4\u00dfig deaktiviert).</li> <li>MIME-Typen: Definieren Sie die zu komprimierenden Inhalte \u00fcber <code>BROTLI_TYPES</code>.</li> <li>Mindestgr\u00f6\u00dfe: <code>BROTLI_MIN_LENGTH</code>, um die Komprimierung kleiner Antworten zu vermeiden.</li> <li>Komprimierungsstufe: <code>BROTLI_COMP_LEVEL</code> f\u00fcr das Gleichgewicht zwischen Geschwindigkeit and Verh\u00e4ltnis.</li> </ol>"},{"location":"de/features/#parameter","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>USE_BROTLI</code> <code>no</code> Multisite nein Brotli-Komprimierung aktivieren. <code>BROTLI_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> Multisite nein Komprimierte MIME-Typen. <code>BROTLI_MIN_LENGTH</code> <code>1000</code> Multisite nein Mindestgr\u00f6\u00dfe (Bytes) f\u00fcr die Anwendung der Komprimierung. <code>BROTLI_COMP_LEVEL</code> <code>6</code> Multisite nein Stufe 0\u201311: h\u00f6her = bessere Komprimierung, aber mehr CPU. <p>Komprimierungsstufe</p> <p><code>6</code> bietet einen guten Kompromiss. F\u00fcr statische Inhalte and verf\u00fcgbare CPU: 9\u201311. F\u00fcr dynamische Inhalte oder bei CPU-Einschr\u00e4nkungen: 4\u20135.</p>"},{"location":"de/features/#beispiele","title":"Beispiele","text":"Basis <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json application/xml application/xhtml+xml text/css text/html text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"6\"\n</code></pre> Maximale Komprimierung <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"500\"\nBROTLI_COMP_LEVEL: \"11\"\n</code></pre> Ausgewogene Leistung <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"4\"\n</code></pre>"},{"location":"de/features/#bunkernet","title":"BunkerNet","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das BunkerNet-Plugin erm\u00f6glicht den kollektiven Austausch von Bedrohungsdaten zwischen BunkerWeb-Instanzen und schafft so ein leistungsstarkes Schutznetzwerk gegen b\u00f6swillige Akteure. Durch die Teilnahme an BunkerNet profitiert Ihre Instanz von einer globalen Datenbank bekannter Bedrohungen und tr\u00e4gt gleichzeitig dazu bei, die Sicherheit der gesamten BunkerWeb-Community zu verbessern.</p> <p>So funktioniert es:</p> <ol> <li>Ihre BunkerWeb-Instanz registriert sich automatisch bei der BunkerNet-API, um eine eindeutige Kennung zu erhalten.</li> <li>Wenn Ihre Instanz eine b\u00f6sartige IP-Adresse oder ein b\u00f6sartiges Verhalten erkennt und blockiert, meldet sie die Bedrohung anonym an BunkerNet.</li> <li>BunkerNet sammelt Bedrohungsdaten von allen teilnehmenden Instanzen und verteilt die konsolidierte Datenbank.</li> <li>Ihre Instanz l\u00e4dt regelm\u00e4\u00dfig eine aktualisierte Datenbank bekannter Bedrohungen von BunkerNet herunter.</li> <li>Diese kollektive Intelligenz erm\u00f6glicht es Ihrer Instanz, proaktiv IP-Adressen zu blockieren, die auf anderen BunkerWeb-Instanzen b\u00f6sartiges Verhalten gezeigt haben.</li> </ol> <p>Wichtige Vorteile</p> <ol> <li>Kollektive Verteidigung: Nutzen Sie die Sicherheitserkenntnisse von Tausenden anderer BunkerWeb-Instanzen weltweit.</li> <li>Proaktiver Schutz: Blockieren Sie b\u00f6swillige Akteure, bevor sie Ihre Website angreifen k\u00f6nnen, basierend auf ihrem Verhalten an anderer Stelle.</li> <li>Beitrag zur Gemeinschaft: Helfen Sie, andere BunkerWeb-Benutzer zu sch\u00fctzen, indem Sie anonymisierte Bedrohungsdaten \u00fcber Angreifer teilen.</li> <li>Keine Konfiguration erforderlich: Funktioniert standardm\u00e4\u00dfig mit sinnvollen Voreinstellungen und erfordert nur minimale Einrichtung.</li> <li>Datenschutzorientiert: Teilt nur notwendige Bedrohungsinformationen, ohne Ihre Privatsph\u00e4re oder die Ihrer Benutzer zu gef\u00e4hrden.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_3","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die BunkerNet-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die BunkerNet-Funktion ist standardm\u00e4\u00dfig aktiviert. Bei Bedarf k\u00f6nnen Sie dies mit der Einstellung <code>USE_BUNKERNET</code> steuern.</li> <li>Erstregistrierung: Beim ersten Start registriert sich Ihre Instanz automatisch bei der BunkerNet-API und erh\u00e4lt eine eindeutige Kennung.</li> <li>Automatische Updates: Ihre Instanz l\u00e4dt automatisch in regelm\u00e4\u00dfigen Abst\u00e4nden die neueste Bedrohungsdatenbank herunter.</li> <li>Automatisches Melden: Wenn Ihre Instanz eine b\u00f6sartige IP-Adresse blockiert, tr\u00e4gt sie diese Daten automatisch zur Gemeinschaft bei.</li> <li>Schutz \u00fcberwachen: \u00dcberpr\u00fcfen Sie die Web-Benutzeroberfl\u00e4che, um Statistiken zu den von BunkerNet-Informationen blockierten Bedrohungen anzuzeigen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_4","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_BUNKERNET</code> <code>yes</code> multisite nein BunkerNet aktivieren: Auf <code>yes</code> setzen, um den Austausch von Bedrohungsdaten zu aktivieren. <code>BUNKERNET_SERVER</code> <code>https://api.bunkerweb.io</code> global nein BunkerNet-Server: Die Adresse des BunkerNet-API-Servers f\u00fcr den Austausch von Bedrohungsdaten. <p>Netzwerkschutz</p> <p>Wenn BunkerNet feststellt, dass eine IP-Adresse an b\u00f6sartigen Aktivit\u00e4ten auf mehreren BunkerWeb-Instanzen beteiligt war, wird diese IP zu einer kollektiven schwarzen Liste hinzugef\u00fcgt. Dies bietet eine proaktive Verteidigungsebene, die Ihre Website vor Bedrohungen sch\u00fctzt, bevor sie Sie direkt angreifen k\u00f6nnen.</p> <p>Anonymes Melden</p> <p>Bei der Meldung von Bedrohungsinformationen an BunkerNet teilt Ihre Instanz nur die zur Identifizierung der Bedrohung erforderlichen Daten: die IP-Adresse, den Grund f\u00fcr die Sperrung und minimale kontextbezogene Daten. Es werden keine pers\u00f6nlichen Informationen \u00fcber Ihre Benutzer oder sensible Details \u00fcber Ihre Website weitergegeben.</p>"},{"location":"de/features/#beispielkonfigurationen_4","title":"Beispielkonfigurationen","text":"Standardkonfiguration (empfohlen)Deaktivierte KonfigurationBenutzerdefinierte Serverkonfiguration <p>Die Standardkonfiguration aktiviert BunkerNet mit dem offiziellen BunkerWeb-API-Server:</p> <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://api.bunkerweb.io\"\n</code></pre> <p>Wenn Sie nicht am BunkerNet-Bedrohungsdatennetzwerk teilnehmen m\u00f6chten:</p> <pre><code>USE_BUNKERNET: \"no\"\n</code></pre> <p>F\u00fcr Organisationen, die ihren eigenen BunkerNet-Server betreiben (ungew\u00f6hnlich):</p> <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://bunkernet.example.com\"\n</code></pre>"},{"location":"de/features/#integration-der-crowdsec-konsole","title":"Integration der CrowdSec-Konsole","text":"<p>Falls Sie noch nicht mit der CrowdSec-Konsolenintegration vertraut sind: CrowdSec nutzt crowdsourced Intelligence zur Bek\u00e4mpfung von Cyber-Bedrohungen. Stellen Sie es sich als das \u201eWaze der Cybersicherheit\u201c vor \u2013 wenn ein Server angegriffen wird, werden andere Systeme weltweit alarmiert und vor denselben Angreifern gesch\u00fctzt. Mehr dar\u00fcber erfahren Sie hier.</p> <p>Durch unsere Partnerschaft mit CrowdSec k\u00f6nnen Sie Ihre BunkerWeb-Instanzen in Ihre CrowdSec-Konsole eintragen. Das bedeutet, dass von BunkerWeb blockierte Angriffe in Ihrer CrowdSec-Konsole neben den von CrowdSec Security Engines blockierten Angriffen sichtbar sind, was Ihnen einen einheitlichen \u00dcberblick \u00fcber Bedrohungen gibt.</p> <p>Wichtig ist, dass CrowdSec f\u00fcr diese Integration nicht installiert sein muss (obwohl wir dringend empfehlen, es mit dem CrowdSec-Plugin f\u00fcr BunkerWeb auszuprobieren, um die Sicherheit Ihrer Webdienste weiter zu erh\u00f6hen). Zus\u00e4tzlich k\u00f6nnen Sie Ihre CrowdSec Security Engines in dasselbe Konsolenkonto eintragen, um eine noch gr\u00f6\u00dfere Synergie zu erzielen.</p> <p>Schritt 1: Erstellen Sie Ihr CrowdSec-Konsolenkonto</p> <p>Gehen Sie zur CrowdSec-Konsole und registrieren Sie sich, falls Sie noch kein Konto haben. Notieren Sie sich anschlie\u00dfend den Anmeldeschl\u00fcssel, den Sie unter \u201eSecurity Engines\u201c finden, nachdem Sie auf \u201eAdd Security Engine\u201c geklickt haben:</p> <p> </p> Holen Sie sich Ihren CrowdSec-Konsolen-Anmeldeschl\u00fcssel <p>Schritt 2: Holen Sie sich Ihre BunkerNet-ID</p> <p>Die Aktivierung der BunkerNet-Funktion (standardm\u00e4\u00dfig aktiviert) ist obligatorisch, wenn Sie Ihre BunkerWeb-Instanz(en) in Ihrer CrowdSec-Konsole registrieren m\u00f6chten. Aktivieren Sie sie, indem Sie <code>USE_BUNKERNET</code> auf <code>yes</code> setzen.</p> <p>F\u00fcr Docker erhalten Sie Ihre BunkerNet-ID mit:</p> <pre><code>docker exec my-bw-scheduler cat /var/cache/bunkerweb/bunkernet/instance.id\n</code></pre> <p>F\u00fcr Linux verwenden Sie:</p> <pre><code>cat /var/cache/bunkerweb/bunkernet/instance.id\n</code></pre> <p>Schritt 3: Registrieren Sie Ihre Instanz \u00fcber das Panel</p> <p>Sobald Sie Ihre BunkerNet-ID und den CrowdSec-Konsolen-Anmeldeschl\u00fcssel haben, bestellen Sie das kostenlose Produkt \u201eBunkerNet / CrowdSec\u201c im Panel. M\u00f6glicherweise werden Sie aufgefordert, ein Konto zu erstellen, falls Sie noch keines haben.</p> <p>Sie k\u00f6nnen nun den Dienst \u201eBunkerNet / CrowdSec\u201c ausw\u00e4hlen und das Formular ausf\u00fcllen, indem Sie Ihre BunkerNet-ID und den CrowdSec-Konsolen-Anmeldeschl\u00fcssel einf\u00fcgen:</p> <p> </p> Registrieren Sie Ihre BunkerWeb-Instanz in der CrowdSec-Konsole <p>Schritt 4: Akzeptieren Sie die neue Security Engine in der Konsole</p> <p>Gehen Sie dann zur\u00fcck zu Ihrer CrowdSec-Konsole und akzeptieren Sie die neue Security Engine:</p> <p> </p> Akzeptieren Sie die Registrierung in der CrowdSec-Konsole <p>Herzlichen Gl\u00fcckwunsch, Ihre BunkerWeb-Instanz ist jetzt in Ihrer CrowdSec-Konsole registriert!</p> <p>Profi-Tipp: Wenn Sie Ihre Warnungen anzeigen, klicken Sie auf die Option \u201eSpalten\u201c und aktivieren Sie das Kontrollk\u00e4stchen \u201eKontext\u201c, um auf BunkerWeb-spezifische Daten zuzugreifen.</p> <p> </p> BunkerWeb-Daten werden in der Kontextspalte angezeigt"},{"location":"de/features/#cors","title":"CORS","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das CORS-Plugin erm\u00f6glicht Cross-Origin Resource Sharing (Ressourcenfreigabe zwischen verschiedenen Urspr\u00fcngen) f\u00fcr Ihre Website und erlaubt so den kontrollierten Zugriff auf Ihre Ressourcen von verschiedenen Domains aus. Diese Funktion hilft Ihnen, Ihre Inhalte sicher mit vertrauensw\u00fcrdigen Drittanbieter-Websites zu teilen, w\u00e4hrend die Sicherheit durch die explizite Definition der erlaubten Urspr\u00fcnge, Methoden und Header gew\u00e4hrleistet wird.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Browser eine Cross-Origin-Anfrage an Ihre Website stellt, sendet er zuerst eine Preflight-Anfrage mit der <code>OPTIONS</code>-Methode.</li> <li>BunkerWeb pr\u00fcft, ob der anfragende Ursprung basierend auf Ihrer Konfiguration zul\u00e4ssig ist.</li> <li>Wenn dies der Fall ist, antwortet BunkerWeb mit den entsprechenden CORS-Headern, die definieren, was die anfragende Website tun darf.</li> <li>Bei nicht zul\u00e4ssigen Urspr\u00fcngen kann die Anfrage entweder komplett verweigert oder ohne CORS-Header ausgeliefert werden.</li> <li>Zus\u00e4tzliche Cross-Origin-Richtlinien wie COEP, COOP und CORP k\u00f6nnen konfiguriert werden, um die Sicherheit weiter zu erh\u00f6hen.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_4","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die CORS-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die CORS-Funktion ist standardm\u00e4\u00dfig deaktiviert. Setzen Sie die Einstellung <code>USE_CORS</code> auf <code>yes</code>, um sie zu aktivieren.</li> <li>Erlaubte Urspr\u00fcnge konfigurieren: Geben Sie mit der Einstellung <code>CORS_ALLOW_ORIGIN</code> an, welche Domains auf Ihre Ressourcen zugreifen d\u00fcrfen.</li> <li>Zul\u00e4ssige Methoden festlegen: Definieren Sie mit <code>CORS_ALLOW_METHODS</code>, welche HTTP-Methoden f\u00fcr Cross-Origin-Anfragen erlaubt sind.</li> <li>Erlaubte Header konfigurieren: Geben Sie mit <code>CORS_ALLOW_HEADERS</code> an, welche Header in Anfragen verwendet werden d\u00fcrfen.</li> <li>Anmeldeinformationen steuern: Entscheiden Sie mit <code>CORS_ALLOW_CREDENTIALS</code>, ob Cross-Origin-Anfragen Anmeldeinformationen enthalten d\u00fcrfen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_5","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_CORS</code> <code>no</code> multisite nein CORS aktivieren: Auf <code>yes</code> setzen, um Cross-Origin Resource Sharing zu aktivieren. <code>CORS_ALLOW_ORIGIN</code> <code>self</code> multisite nein Erlaubte Urspr\u00fcnge: PCRE-regul\u00e4rer Ausdruck f\u00fcr erlaubte Urspr\u00fcnge; <code>*</code> f\u00fcr jeden Ursprung, <code>self</code> nur f\u00fcr denselben Ursprung. <code>CORS_ALLOW_METHODS</code> <code>GET, POST, OPTIONS</code> multisite nein Erlaubte Methoden: HTTP-Methoden, die bei Cross-Origin-Anfragen verwendet werden k\u00f6nnen. <code>CORS_ALLOW_HEADERS</code> <code>DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range</code> multisite nein Erlaubte Header: HTTP-Header, die bei Cross-Origin-Anfragen verwendet werden k\u00f6nnen. <code>CORS_ALLOW_CREDENTIALS</code> <code>no</code> multisite nein Anmeldeinformationen erlauben: Auf <code>yes</code> setzen, um Anmeldeinformationen (Cookies, HTTP-Auth) in CORS-Anfragen zu erlauben. <code>CORS_EXPOSE_HEADERS</code> <code>Content-Length,Content-Range</code> multisite nein Verf\u00fcgbar gemachte Header: HTTP-Header, auf die Browser von Cross-Origin-Antworten zugreifen d\u00fcrfen. <code>CROSS_ORIGIN_OPENER_POLICY</code> <code>same-origin</code> multisite nein Cross-Origin-Opener-Policy: Steuert die Kommunikation zwischen Browser-Kontexten. <code>CROSS_ORIGIN_EMBEDDER_POLICY</code> <code>require-corp</code> multisite nein Cross-Origin-Embedder-Policy: Steuert, ob ein Dokument Ressourcen von anderen Urspr\u00fcngen laden kann. <code>CROSS_ORIGIN_RESOURCE_POLICY</code> <code>same-site</code> multisite nein Cross-Origin-Resource-Policy: Steuert, welche Websites Ihre Ressourcen einbetten d\u00fcrfen. <code>CORS_MAX_AGE</code> <code>86400</code> multisite nein Cache-Dauer f\u00fcr Preflight: Wie lange (in Sekunden) Browser die Preflight-Antwort zwischenspeichern sollen. <code>CORS_DENY_REQUEST</code> <code>yes</code> multisite nein Nicht autorisierte Urspr\u00fcnge ablehnen: Wenn <code>yes</code>, werden Anfragen von nicht autorisierten Urspr\u00fcngen mit einem Fehlercode abgelehnt. <p>Optimierung von Preflight-Anfragen</p> <p>Die Einstellung <code>CORS_MAX_AGE</code> bestimmt, wie lange Browser die Ergebnisse einer Preflight-Anfrage zwischenspeichern. Ein h\u00f6herer Wert (wie der Standardwert von 86400 Sekunden/24 Stunden) reduziert die Anzahl der Preflight-Anfragen und verbessert die Leistung f\u00fcr h\u00e4ufig aufgerufene Ressourcen.</p> <p>Sicherheitshinweise</p> <p>Seien Sie vorsichtig, wenn Sie <code>CORS_ALLOW_ORIGIN</code> auf <code>*</code> (alle Urspr\u00fcnge) oder <code>CORS_ALLOW_CREDENTIALS</code> auf <code>yes</code> setzen, da diese Konfigurationen bei unsachgem\u00e4\u00dfer Verwaltung Sicherheitsrisiken mit sich bringen k\u00f6nnen. Es ist im Allgemeinen sicherer, vertrauensw\u00fcrdige Urspr\u00fcnge explizit aufzulisten und die erlaubten Methoden und Header zu beschr\u00e4nken.</p>"},{"location":"de/features/#beispielkonfigurationen_5","title":"Beispielkonfigurationen","text":"<p>Hier sind Beispiele f\u00fcr m\u00f6gliche Werte der Einstellung <code>CORS_ALLOW_ORIGIN</code> und deren Verhalten:</p> <ul> <li><code>*</code>: Erlaubt Anfragen von allen Urspr\u00fcngen.</li> <li><code>self</code>: Erlaubt automatisch Anfragen vom selben Ursprung wie der konfigurierte <code>server_name</code>.</li> <li><code>^https://www\\.example\\.com$</code>: Erlaubt Anfragen nur von <code>https://www.example.com</code>.</li> <li><code>^https://.+\\.example\\.com$</code>: Erlaubt Anfragen von jeder Subdomain, die auf <code>.example.com</code> endet.</li> <li><code>^https://(www\\.example1\\.com|www\\.example2\\.com)$</code>: Erlaubt Anfragen entweder von <code>https://www.example1.com</code> oder <code>https://www.example2.com</code>.</li> <li><code>^https?://www\\.example\\.com$</code>: Erlaubt Anfragen sowohl von <code>https://www.example.com</code> als auch von <code>http://www.example.com</code>.</li> </ul> Grundlegende KonfigurationKonfiguration f\u00fcr \u00f6ffentliche APIMehrere vertrauensw\u00fcrdige DomainsSubdomain-PlatzhalterMehrere Domain-Muster <p>Eine einfache Konfiguration, die Cross-Origin-Anfragen von derselben Domain erlaubt:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"self\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Konfiguration f\u00fcr eine \u00f6ffentliche API, die von jedem Ursprung aus zug\u00e4nglich sein muss:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"*\"\nCORS_ALLOW_METHODS: \"GET, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, X-API-Key\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"3600\"\nCORS_DENY_REQUEST: \"no\"\n</code></pre> <p>Konfiguration, die mehrere spezifische Domains mit einem einzigen PCRE-regul\u00e4ren Ausdrucksmuster erlaubt:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(app|api|dashboard)\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, DELETE, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Requested-With\"\nCORS_ALLOW_CREDENTIALS: \"yes\"\nCORS_EXPOSE_HEADERS: \"Content-Length, Content-Range, X-RateLimit-Remaining\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Konfiguration, die alle Subdomains einer Hauptdomain mithilfe eines PCRE-regul\u00e4ren Ausdrucksmusters erlaubt:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://.*\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Konfiguration, die Anfragen von mehreren Domain-Mustern mit Alternation erlaubt:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(.*\\\\.example\\\\.com|.*\\\\.trusted-partner\\\\.org|api\\\\.third-party\\\\.net)$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Custom-Header\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre>"},{"location":"de/features/#client-cache","title":"Client cache","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Client-Cache-Plugin optimiert die Leistung von Websites, indem es steuert, wie Browser statische Inhalte zwischenspeichern. Es reduziert die Bandbreitennutzung, senkt die Serverlast und verbessert die Ladezeiten von Seiten, indem es Browser anweist, statische Assets wie Bilder, CSS- und JavaScript-Dateien lokal zu speichern und wiederzuverwenden, anstatt sie bei jedem Seitenbesuch erneut anzufordern.</p> <p>So funktioniert es:</p> <ol> <li>Wenn aktiviert, f\u00fcgt BunkerWeb den Antworten f\u00fcr statische Dateien Cache-Control-Header hinzu.</li> <li>Diese Header teilen den Browsern mit, wie lange sie den Inhalt lokal zwischenspeichern sollen.</li> <li>F\u00fcr Dateien mit bestimmten Erweiterungen (wie Bilder, CSS, JavaScript) wendet BunkerWeb die konfigurierte Caching-Richtlinie an.</li> <li>Die optionale ETag-Unterst\u00fctzung bietet einen zus\u00e4tzlichen Validierungsmechanismus, um festzustellen, ob der zwischengespeicherte Inhalt noch aktuell ist.</li> <li>Wenn Besucher auf Ihre Website zur\u00fcckkehren, k\u00f6nnen ihre Browser lokal zwischengespeicherte Dateien verwenden, anstatt sie erneut herunterzuladen, was zu schnelleren Ladezeiten der Seite f\u00fchrt.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_5","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Client-Cache-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die Client-Cache-Funktion ist standardm\u00e4\u00dfig deaktiviert. Setzen Sie die Einstellung <code>USE_CLIENT_CACHE</code> auf <code>yes</code>, um sie zu aktivieren.</li> <li>Dateierweiterungen konfigurieren: Geben Sie mit der Einstellung <code>CLIENT_CACHE_EXTENSIONS</code> an, welche Dateitypen zwischengespeichert werden sollen.</li> <li>Cache-Control-Anweisungen festlegen: Passen Sie mit der Einstellung <code>CLIENT_CACHE_CONTROL</code> an, wie Clients Inhalte zwischenspeichern sollen.</li> <li>ETag-Unterst\u00fctzung konfigurieren: Entscheiden Sie mit der Einstellung <code>CLIENT_CACHE_ETAG</code>, ob ETags zur Validierung der Cache-Frische aktiviert werden sollen.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration werden Caching-Header automatisch auf berechtigte Antworten angewendet.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_6","title":"Konfigurationseinstellungen","text":"<p>| Einstellung               | Standard                   | Kontext   | Mehrfach | Beschreibung                                                                                                      | | ------------------------- | -------------------------- | --------- | -------- | ----------------------------------------------------------------------------------------------------------------- | --- | | <code>USE_CLIENT_CACHE</code>        | <code>no</code>                       | multisite | nein     | Client-Cache aktivieren: Auf <code>yes</code> setzen, um das clientseitige Caching von statischen Dateien zu aktivieren. | | <code>CLIENT_CACHE_EXTENSIONS</code> | <code>jpg                       | jpeg      | png      | bmp                                                                                                               | ico | svg | tif | css | js | otf | ttf | eot | woff | woff2</code> | global | nein | Cache-f\u00e4hige Erweiterungen: Liste der Dateierweiterungen (getrennt durch <code>|</code>), die vom Client zwischengespeichert werden sollen. | | <code>CLIENT_CACHE_CONTROL</code>    | <code>public, max-age=15552000</code> | multisite | nein     | Cache-Control-Header: Wert f\u00fcr den Cache-Control-HTTP-Header zur Steuerung des Caching-Verhaltens.            | | <code>CLIENT_CACHE_ETAG</code>       | <code>yes</code>                      | multisite | nein     | ETags aktivieren: Auf <code>yes</code> setzen, um den HTTP-ETag-Header f\u00fcr statische Ressourcen zu senden.               |</p> <p>Optimierung der Cache-Einstellungen</p> <p>F\u00fcr h\u00e4ufig aktualisierte Inhalte sollten Sie k\u00fcrzere <code>max-age</code>-Werte verwenden. F\u00fcr Inhalte, die sich selten \u00e4ndern (wie versionierte JavaScript-Bibliotheken oder Logos), verwenden Sie l\u00e4ngere Cache-Zeiten. Der Standardwert von 15552000 Sekunden (180 Tage) ist f\u00fcr die meisten statischen Assets angemessen.</p> <p>Browser-Verhalten</p> <p>Unterschiedliche Browser implementieren Caching geringf\u00fcgig anders, aber alle modernen Browser respektieren die Standard-Cache-Control-Anweisungen. ETags bieten einen zus\u00e4tzlichen Validierungsmechanismus, der Browsern hilft festzustellen, ob zwischengespeicherte Inhalte noch g\u00fcltig sind.</p>"},{"location":"de/features/#beispielkonfigurationen_6","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationAggressives CachingStrategie f\u00fcr gemischte Inhalte <p>Eine einfache Konfiguration, die das Caching f\u00fcr g\u00e4ngige statische Assets aktiviert:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|gif|css|js|svg|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=86400\"  # 1 Tag\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> <p>Eine f\u00fcr maximales Caching optimierte Konfiguration, geeignet f\u00fcr Websites mit selten aktualisierten statischen Inhalten:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2|pdf|xml|txt\"\nCLIENT_CACHE_CONTROL: \"public, max-age=31536000, immutable\"  # 1 Jahr\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> <p>F\u00fcr Websites mit einer Mischung aus h\u00e4ufig und selten aktualisierten Inhalten sollten Sie die Dateiversionierung in Ihrer Anwendung und eine Konfiguration wie diese in Betracht ziehen:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=604800\"  # 1 Woche\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre>"},{"location":"de/features/#country","title":"Country","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das L\u00e4nder-Plugin aktiviert Geoblocking und erm\u00f6glicht die Einschr\u00e4nkung des Zugriffs basierend auf dem geografischen Standort der Besucher. Dies ist n\u00fctzlich f\u00fcr die Einhaltung regionaler Vorschriften, zur Begrenzung von Betrug in Risikogebieten und zur Anwendung von Inhaltsbeschr\u00e4nkungen \u00fcber L\u00e4ndergrenzen hinweg.</p> <p>So funktioniert's:</p> <ol> <li>Bei jedem Besuch ermittelt BunkerWeb das Herkunftsland \u00fcber die IP-Adresse.</li> <li>Ihre Konfiguration definiert eine Whitelist (erlaubt) oder Blacklist (blockiert).</li> <li>Bei einer Whitelist: Nur die gelisteten L\u00e4nder sind zugelassen.</li> <li>Bei einer Blacklist: Die gelisteten L\u00e4nder werden abgelehnt.</li> <li>Das Ergebnis wird f\u00fcr wiederholte Besuche zwischengespeichert.</li> </ol>"},{"location":"de/features/#anwendung","title":"Anwendung","text":"<ol> <li>Strategie: W\u00e4hlen Sie eine Whitelist (wenige zugelassene L\u00e4nder) oder eine Blacklist (bestimmte L\u00e4nder blockieren).</li> <li>L\u00e4ndercodes: F\u00fcgen Sie ISO 3166-1 Alpha-2 Codes (US, GB, FR) zu <code>WHITELIST_COUNTRY</code> oder <code>BLACKLIST_COUNTRY</code> hinzu.</li> <li>Anwendung: Nach der Konfiguration gilt die Beschr\u00e4nkung f\u00fcr alle Besucher.</li> <li>\u00dcberwachung: Konsultieren Sie die Web-UI f\u00fcr Statistiken nach L\u00e4ndern.</li> </ol>"},{"location":"de/features/#parameter_1","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>WHITELIST_COUNTRY</code> Multisite Nein Whitelist: ISO 3166-1 Alpha-2 L\u00e4ndercodes, durch Leerzeichen getrennt. Nur diese L\u00e4nder sind zugelassen. <code>BLACKLIST_COUNTRY</code> Multisite Nein Blacklist: ISO 3166-1 Alpha-2 L\u00e4ndercodes, durch Leerzeichen getrennt. Diese L\u00e4nder sind blockiert. <p>Whitelist vs. Blacklist</p> <p>Whitelist: Zugriff auf wenige L\u00e4nder beschr\u00e4nkt. Blacklist: Problematische Regionen blockieren und den Rest zulassen.</p> <p>Priorit\u00e4t</p> <p>Wenn eine Whitelist und eine Blacklist definiert sind, hat die Whitelist Vorrang: Wenn das Land nicht auf der Whitelist steht, wird der Zugriff verweigert.</p> <p>L\u00e4ndererkennung</p> <p>BunkerWeb verwendet die mmdb-Datenbank db-ip lite.</p>"},{"location":"de/features/#beispiele_1","title":"Beispiele","text":"Nur Whitelist <pre><code>WHITELIST_COUNTRY: \"US CA GB\"\n</code></pre> Nur Blacklist <pre><code>BLACKLIST_COUNTRY: \"RU CN KP\"\n</code></pre> Nur EU <pre><code>WHITELIST_COUNTRY: \"AT BE BG HR CY CZ DK EE FI FR DE GR HU IE IT LV LT LU MT NL PL PT RO SK SI ES SE\"\n</code></pre> Blockierung von Risikol\u00e4ndern <pre><code>BLACKLIST_COUNTRY: \"RU CN KP IR SY\"\n</code></pre>"},{"location":"de/features/#crowdsec","title":"CrowdSec","text":"<p>STREAM-Unterst\u00fctzung </p> <p></p> <p>Das CrowdSec-Plugin integriert BunkerWeb mit der CrowdSec-Sicherheits-Engine und bietet eine zus\u00e4tzliche Schutzschicht gegen verschiedene Cyberbedrohungen. Dieses Plugin fungiert als CrowdSec-Bouncer und lehnt Anfragen basierend auf den Entscheidungen der CrowdSec-API ab.</p> <p>CrowdSec ist eine moderne Open-Source-Sicherheits-Engine, die b\u00f6sartige IP-Adressen basierend auf Verhaltensanalyse und der kollektiven Intelligenz ihrer Community erkennt und blockiert. Sie k\u00f6nnen auch Szenarien konfigurieren, um IP-Adressen basierend auf verd\u00e4chtigem Verhalten automatisch zu sperren und so von einer partizipativen Blacklist zu profitieren.</p> <p>So funktioniert's:</p> <ol> <li>Die CrowdSec-Engine analysiert Protokolle und erkennt verd\u00e4chtige Aktivit\u00e4ten in Ihrer Infrastruktur.</li> <li>Wenn eine b\u00f6sartige Aktivit\u00e4t erkannt wird, erstellt CrowdSec eine Entscheidung, die betreffende IP-Adresse zu blockieren.</li> <li>BunkerWeb, das als Bouncer fungiert, fragt die lokale CrowdSec-API nach Entscheidungen bez\u00fcglich eingehender Anfragen ab.</li> <li>Wenn die IP-Adresse eines Clients einer aktiven Blockierungsentscheidung unterliegt, verweigert BunkerWeb den Zugriff auf die gesch\u00fctzten Dienste.</li> <li>Optional kann die Anwendungssicherheitskomponente (Application Security Component) eine eingehende \u00dcberpr\u00fcfung der Anfragen f\u00fcr erh\u00f6hte Sicherheit durchf\u00fchren.</li> </ol> <p>Hauptvorteile</p> <ol> <li>Community-Sicherheit: Profitieren Sie von Bedrohungsinformationen, die von der CrowdSec-Benutzergemeinschaft geteilt werden.</li> <li>Verhaltensanalyse: Erkennen Sie ausgekl\u00fcgelte Angriffe basierend auf Verhaltensmustern, nicht nur auf Signaturen.</li> <li>Leichte Integration: Minimaler Einfluss auf die Leistung Ihrer BunkerWeb-Instanz.</li> <li>Mehrstufiger Schutz: Kombinieren Sie Perimeterverteidigung (IP-Blockierung) mit Anwendungssicherheit f\u00fcr einen umfassenden Schutz.</li> </ol>"},{"location":"de/features/#einrichtung","title":"Einrichtung","text":"Docker <p>Akquisitionsdatei</p> <pre><code>Sie m\u00fcssen eine CrowdSec-Instanz ausf\u00fchren und diese so konfigurieren, dass sie die BunkerWeb-Protokolle analysiert. Da BunkerWeb auf NGINX basiert, k\u00f6nnen Sie den Wert `nginx` f\u00fcr den Parameter `type` in Ihrer Akquisitionsdatei verwenden (vorausgesetzt, die BunkerWeb-Protokolle werden unver\u00e4ndert ohne zus\u00e4tzliche Daten gespeichert):\n\n```yaml\nfilenames:\n  - /var/log/bunkerweb.log\nlabels:\n  type: nginx\n```\n\n**Anwendungssicherheitskomponente (*optional*)**\n\nCrowdSec bietet auch eine [Anwendungssicherheitskomponente](https://docs.crowdsec.net/docs/appsec/intro?utm_source=external-docs&amp;utm_medium=cta&amp;utm_campaign=bunker-web-docs), die zum Schutz Ihrer Anwendung vor Angriffen verwendet werden kann. Wenn Sie diese verwenden m\u00f6chten, m\u00fcssen Sie eine weitere Akquisitionsdatei f\u00fcr die AppSec-Komponente erstellen:\n\n```yaml\nappsec_config: crowdsecurity/appsec-default\nlabels:\n  type: appsec\nlisten_addr: 0.0.0.0:7422\nsource: appsec\n```\n\n**Syslog**\n\nF\u00fcr containerbasierte Integrationen empfehlen wir, die Protokolle des BunkerWeb-Containers an einen Syslog-Dienst umzuleiten, damit CrowdSec leicht darauf zugreifen kann. Hier ist ein Beispiel f\u00fcr eine syslog-ng-Konfiguration, die die Rohprotokolle von BunkerWeb in einer lokalen Datei `/var/log/bunkerweb.log` speichert:\n\n```syslog\n@version: 4.8\n\nsource s_net {\n    udp(\n        ip(\"0.0.0.0\")\n    );\n};\n\ntemplate t_imp {\n    template(\"$MSG\\n\");\n    template_escape(no);\n};\n\ndestination d_file {\n    file(\"/var/log/bunkerweb.log\" template(t_imp));\n};\n\nlog {\n    source(s_net);\n    destination(d_file);\n};\n```\n\n**Docker Compose**\n\nHier ist die Docker-Compose-Vorlage, die Sie verwenden k\u00f6nnen (vergessen Sie nicht, den Bouncer-Schl\u00fcssel zu aktualisieren):\n\n```yaml\nx-bw-env: &amp;bw-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Parameter f\u00fcr beide Dienste zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Stellen Sie sicher, dass Sie den richtigen IP-Bereich festlegen, damit der Scheduler die Konfiguration an die Instanz senden kann\n\nservices:\n  bunkerweb:\n    # Dies ist der Name, der zur Identifizierung der Instanz im Scheduler verwendet wird\n    image: bunkerity/bunkerweb:1.6.5-rc3\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # F\u00fcr QUIC / HTTP3 Unterst\u00fctzung\n    environment:\n      &lt;&lt;: *bw-env # Wir verwenden den Anker, um die Wiederholung derselben Parameter f\u00fcr alle Dienste zu vermeiden\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog # Protokolle an syslog senden\n      options:\n        syslog-address: \"udp://10.20.30.254:514\" # Die IP-Adresse des syslog-Dienstes\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:1.6.5-rc3\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Stellen Sie sicher, dass Sie den richtigen Instanznamen festlegen\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Vergessen Sie nicht, ein st\u00e4rkeres Datenbankpasswort festzulegen\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      USE_CROWDSEC: \"yes\"\n      CROWDSEC_API: \"http://crowdsec:8080\" # Dies ist die Adresse der CrowdSec-Container-API im selben Netzwerk\n      CROWDSEC_APPSEC_URL: \"http://crowdsec:7422\" # Auskommentieren, wenn Sie die AppSec-Komponente nicht verwenden m\u00f6chten\n      CROWDSEC_API_KEY: \"s3cr3tb0unc3rk3y\" # Vergessen Sie nicht, einen st\u00e4rkeren Schl\u00fcssel f\u00fcr den Bouncer festzulegen\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Wir legen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe fest, um Probleme mit gro\u00dfen Anfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Vergessen Sie nicht, ein st\u00e4rkeres Datenbankpasswort festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  crowdsec:\n    image: crowdsecurity/crowdsec:v1.7.0 # Verwenden Sie die neueste Version, aber pinnen Sie immer die Version f\u00fcr bessere Stabilit\u00e4t/Sicherheit\n    volumes:\n      - cs-data:/var/lib/crowdsec/data # Zum Persistieren der CrowdSec-Daten\n      - bw-logs:/var/log:ro # Die BunkerWeb-Protokolle, die von CrowdSec analysiert werden sollen\n      - ./acquis.yaml:/etc/crowdsec/acquis.yaml # Die Akquisitionsdatei f\u00fcr die BunkerWeb-Protokolle\n      - ./appsec.yaml:/etc/crowdsec/acquis.d/appsec.yaml # Auskommentieren, wenn Sie die AppSec-Komponente nicht verwenden m\u00f6chten\n    environment:\n      BOUNCER_KEY_bunkerweb: \"s3cr3tb0unc3rk3y\" # Vergessen Sie nicht, einen st\u00e4rkeren Schl\u00fcssel f\u00fcr den Bouncer festzulegen\n      COLLECTIONS: \"crowdsecurity/nginx crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules\"\n      #   COLLECTIONS: \"crowdsecurity/nginx\" # Wenn Sie die AppSec-Komponente nicht verwenden m\u00f6chten, verwenden Sie stattdessen diese Zeile\n    networks:\n      - bw-universe\n\n  syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # An niedrige Ports binden\n      - NET_BROADCAST  # Broadcasts senden\n      - NET_RAW  # Raw-Sockets verwenden\n      - DAC_READ_SEARCH  # Dateien lesen, Berechtigungen umgehen\n      - DAC_OVERRIDE  # Dateiberechtigungen \u00fcberschreiben\n      - CHOWN  # Besitzer \u00e4ndern\n      - SYSLOG  # In Systemprotokolle schreiben\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Dies ist das Volume, das zum Speichern der Protokolle verwendet wird\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # Dies ist die Konfigurationsdatei von syslog-ng\n    networks:\n        bw-universe:\n          ipv4_address: 10.20.30.254\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n  cs-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Stellen Sie sicher, dass Sie den richtigen IP-Bereich festlegen, damit der Scheduler die Konfiguration an die Instanz senden kann\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n```\n</code></pre> <p>=== \"Linux\"</p> <pre><code>Sie m\u00fcssen CrowdSec installieren und so konfigurieren, dass es die BunkerWeb-Protokolle analysiert. Befolgen Sie die [offizielle Dokumentation](https://doc.crowdsec.net/docs/getting_started/install_crowdsec?utm_source=external-docs&amp;utm_medium=cta&amp;utm_campaign=bunker-web-docs#scenarios).\n\nDamit CrowdSec die BunkerWeb-Protokolle analysieren kann, f\u00fcgen Sie die folgenden Zeilen zu Ihrer Akquisitionsdatei unter `/etc/crowdsec/acquis.yaml` hinzu:\n\n```yaml\nfilenames:\n  - /var/log/bunkerweb/access.log\n  - /var/log/bunkerweb/error.log\n  - /var/log/bunkerweb/modsec_audit.log\nlabels:\n    type: nginx\n```\n\nF\u00fcgen Sie nun Ihren benutzerdefinierten Bouncer zur CrowdSec-API hinzu, indem Sie das Tool `cscli` verwenden:\n\n```shell\nsudo cscli bouncers add crowdsec-bunkerweb-bouncer/v1.6\n```\n\n!!! warning \"API-Schl\u00fcssel\"\n    Bewahren Sie den von dem `cscli`-Befehl generierten Schl\u00fcssel auf; Sie werden ihn sp\u00e4ter ben\u00f6tigen.\n\nStarten Sie anschlie\u00dfend den CrowdSec-Dienst neu:\n\n```shell\nsudo systemctl restart crowdsec\n```\n\n**Anwendungssicherheitskomponente (*optional*)**\n\nWenn Sie die AppSec-Komponente verwenden m\u00f6chten, m\u00fcssen Sie eine weitere Akquisitionsdatei daf\u00fcr erstellen, die sich unter `/etc/crowdsec/acquis.d/appsec.yaml` befindet:\n\n```yaml\nappsec_config: crowdsecurity/appsec-default\nlabels:\n    type: appsec\nlisten_addr: 127.0.0.1:7422\nsource: appsec\n```\n\nSie m\u00fcssen auch die Sammlungen der AppSec-Komponente installieren:\n\n```shell\nsudo cscli collections install crowdsecurity/appsec-virtual-patching\nsudo cscli collections install crowdsecurity/appsec-generic-rules\n```\n\nStarten Sie schlie\u00dflich den CrowdSec-Dienst neu:\n\n```shell\nsudo systemctl restart crowdsec\n```\n\n**Parameter**\n\nKonfigurieren Sie das Plugin, indem Sie die folgenden Parameter zu Ihrer BunkerWeb-Konfigurationsdatei hinzuf\u00fcgen:\n\n```env\nUSE_CROWDSEC=yes\nCROWDSEC_API=http://127.0.0.1:8080\nCROWDSEC_API_KEY=&lt;Der von cscli bereitgestellte Schl\u00fcssel&gt;\n# Auskommentieren, wenn Sie die AppSec-Komponente nicht verwenden m\u00f6chten\nCROWDSEC_APPSEC_URL=http://127.0.0.1:7422\n```\n\nLaden Sie schlie\u00dflich den BunkerWeb-Dienst neu:\n\n```shell\nsudo systemctl reload bunkerweb\n```\n</code></pre> <p>=== \"All-in-one\"</p> <pre><code>Das Docker-Image BunkerWeb All-In-One (AIO) wird mit vollst\u00e4ndig integriertem CrowdSec geliefert. Sie m\u00fcssen keine separate CrowdSec-Instanz einrichten oder die Akquisitionsdateien f\u00fcr die BunkerWeb-Protokolle manuell konfigurieren, wenn Sie den internen CrowdSec-Agenten verwenden.\n\nBeachten Sie die [Integrationsdokumentation des All-In-One (AIO)-Images](integrations.md#crowdsec-integration).\n</code></pre>"},{"location":"de/features/#konfigurationsparameter","title":"Konfigurationsparameter","text":"Parameter Standardwert Kontext Mehrfach Beschreibung <code>USE_CROWDSEC</code> <code>no</code> multisite no CrowdSec aktivieren: Auf <code>yes</code> setzen, um den CrowdSec-Bouncer zu aktivieren. <code>CROWDSEC_API</code> <code>http://crowdsec:8080</code> global no CrowdSec API URL: Die Adresse des lokalen CrowdSec API-Dienstes. <code>CROWDSEC_API_KEY</code> global no CrowdSec API-Schl\u00fcssel: Der API-Schl\u00fcssel zur Authentifizierung bei der CrowdSec-API, erhalten mit <code>cscli bouncers add</code>. <code>CROWDSEC_MODE</code> <code>live</code> global no Betriebsmodus: Entweder <code>live</code> (fragt die API f\u00fcr jede Anfrage ab) oder <code>stream</code> (cacht alle Entscheidungen periodisch). <code>CROWDSEC_ENABLE_INTERNAL</code> <code>no</code> global no Interner Traffic: Auf <code>yes</code> setzen, um den internen Traffic anhand der CrowdSec-Entscheidungen zu \u00fcberpr\u00fcfen. <code>CROWDSEC_REQUEST_TIMEOUT</code> <code>1000</code> global no Anfrage-Timeout: Timeout in Millisekunden f\u00fcr HTTP-Anfragen an die lokale CrowdSec-API im Live-Modus. <code>CROWDSEC_EXCLUDE_LOCATION</code> global no Ausgeschlossene Orte: Kommagetrennte Liste von Orten (URIs), die von CrowdSec-Pr\u00fcfungen ausgeschlossen werden sollen. <code>CROWDSEC_CACHE_EXPIRATION</code> <code>1</code> global no Cache-Ablauf: Die Cache-Ablaufzeit in Sekunden f\u00fcr IP-Entscheidungen im Live-Modus. <code>CROWDSEC_UPDATE_FREQUENCY</code> <code>10</code> global no Update-Frequenz: Wie oft (in Sekunden) neue/abgelaufene Entscheidungen von der CrowdSec-API im Stream-Modus abgerufen werden sollen."},{"location":"de/features/#parameter-der-anwendungssicherheitskomponente","title":"Parameter der Anwendungssicherheitskomponente","text":"Parameter Standardwert Kontext Mehrfach Beschreibung <code>CROWDSEC_APPSEC_URL</code> global no AppSec URL: Die URL der CrowdSec-Anwendungssicherheitskomponente. Leer lassen, um AppSec zu deaktivieren. <code>CROWDSEC_APPSEC_FAILURE_ACTION</code> <code>passthrough</code> global no Aktion bei Fehler: Aktion, die ausgef\u00fchrt werden soll, wenn AppSec einen Fehler zur\u00fcckgibt. Kann <code>passthrough</code> oder <code>deny</code> sein. <code>CROWDSEC_APPSEC_CONNECT_TIMEOUT</code> <code>100</code> global no Verbindungs-Timeout: Das Timeout in Millisekunden f\u00fcr die Verbindung zur AppSec-Komponente. <code>CROWDSEC_APPSEC_SEND_TIMEOUT</code> <code>100</code> global no Sende-Timeout: Das Timeout in Millisekunden f\u00fcr das Senden von Daten an die AppSec-Komponente. <code>CROWDSEC_APPSEC_PROCESS_TIMEOUT</code> <code>500</code> global no Verarbeitungs-Timeout: Das Timeout in Millisekunden f\u00fcr die Verarbeitung der Anfrage in der AppSec-Komponente. <code>CROWDSEC_ALWAYS_SEND_TO_APPSEC</code> <code>no</code> global no Immer senden: Auf <code>yes</code> setzen, um Anfragen immer an AppSec zu senden, auch wenn eine Entscheidung auf IP-Ebene vorliegt. <code>CROWDSEC_APPSEC_SSL_VERIFY</code> <code>no</code> global no SSL-Verifizierung: Auf <code>yes</code> setzen, um das SSL-Zertifikat der AppSec-Komponente zu \u00fcberpr\u00fcfen. <p>!!! info \"\u00dcber die Betriebsmodi\" - Der Live-Modus fragt die CrowdSec-API f\u00fcr jede eingehende Anfrage ab und bietet Echtzeitschutz auf Kosten einer h\u00f6heren Latenz. - Der Stream-Modus l\u00e4dt periodisch alle Entscheidungen von der CrowdSec-API herunter und speichert sie lokal im Cache, wodurch die Latenz mit einer leichten Verz\u00f6gerung bei der Anwendung neuer Entscheidungen reduziert wird.</p>"},{"location":"de/features/#konfigurationsbeispiele_1","title":"Konfigurationsbeispiele","text":"Basiskonfiguration <p>Dies ist eine einfache Konfiguration, wenn CrowdSec auf demselben Host ausgef\u00fchrt wird:</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"your-api-key-here\"\nCROWDSEC_MODE: \"live\"\n</code></pre> <p>=== \"Erweiterte Konfiguration mit AppSec\"</p> <pre><code>Eine umfassendere Konfiguration, einschlie\u00dflich der Anwendungssicherheitskomponente:\n\n```yaml\nUSE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"your-api-key-here\"\nCROWDSEC_MODE: \"stream\"\nCROWDSEC_UPDATE_FREQUENCY: \"30\"\nCROWDSEC_EXCLUDE_LOCATION: \"/health,/metrics\"\n\n# AppSec-Konfiguration\nCROWDSEC_APPSEC_URL: \"http://crowdsec:7422\"\nCROWDSEC_APPSEC_FAILURE_ACTION: \"deny\"\nCROWDSEC_ALWAYS_SEND_TO_APPSEC: \"yes\"\nCROWDSEC_APPSEC_SSL_VERIFY: \"yes\"\n```\n</code></pre>"},{"location":"de/features/#custom-ssl-certificate","title":"Custom SSL certificate","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Plugin f\u00fcr benutzerdefinierte SSL-Zertifikate erm\u00f6glicht die Verwendung Ihrer eigenen SSL/TLS-Zertifikate mit BunkerWeb, anstelle der automatisch generierten. Dies ist n\u00fctzlich, wenn Sie bereits Zertifikate von einer vertrauensw\u00fcrdigen CA besitzen, spezifische Anforderungen haben oder die Zertifikatsverwaltung zentralisieren.</p> <p>So funktioniert's:</p> <ol> <li>Sie stellen das Zertifikat und den privaten Schl\u00fcssel bereit (Dateipfade oder Daten in base64/PEM).</li> <li>BunkerWeb validiert das Format und die Verwendbarkeit der Dateien.</li> <li>Bei einer sicheren Verbindung stellt BunkerWeb Ihr benutzerdefiniertes Zertifikat bereit.</li> <li>Die G\u00fcltigkeit wird \u00fcberwacht und Warnungen werden vor dem Ablauf ausgegeben.</li> <li>Sie behalten die volle Kontrolle \u00fcber den Lebenszyklus der Zertifikate.</li> </ol> <p>Automatische \u00dcberwachung</p> <p>Mit <code>USE_CUSTOM_SSL: yes</code> \u00fcberwacht BunkerWeb das Zertifikat <code>CUSTOM_SSL_CERT</code>, erkennt \u00c4nderungen und l\u00e4dt NGINX bei Bedarf neu.</p>"},{"location":"de/features/#verwendung","title":"Verwendung","text":"<ol> <li>Aktivieren: <code>USE_CUSTOM_SSL: yes</code>.</li> <li>Methode: Dateien vs. Daten, Priorit\u00e4t \u00fcber <code>CUSTOM_SSL_CERT_PRIORITY</code>.</li> <li>Dateien: Geben Sie die Pfade zum Zertifikat und zum privaten Schl\u00fcssel an.</li> <li>Daten: Geben Sie die base64- oder Klartext-PEM-Strings an.</li> </ol> <p>Stream-Modus</p> <p>Im Stream-Modus konfigurieren Sie <code>LISTEN_STREAM_PORT_SSL</code> f\u00fcr den SSL/TLS-Port.</p>"},{"location":"de/features/#parameter_2","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>USE_CUSTOM_SSL</code> <code>no</code> multisite nein Aktiviert die Verwendung eines benutzerdefinierten Zertifikats. <code>CUSTOM_SSL_CERT_PRIORITY</code> <code>file</code> multisite nein Priorit\u00e4t der Quellen: <code>file</code> (Dateien) oder <code>data</code> (Daten). <code>CUSTOM_SSL_CERT</code> multisite nein Vollst\u00e4ndiger Pfad zum Zertifikat (oder Bundle). <code>CUSTOM_SSL_KEY</code> multisite nein Vollst\u00e4ndiger Pfad zum privaten Schl\u00fcssel. <code>CUSTOM_SSL_CERT_DATA</code> multisite nein Zertifikatsdaten (base64 oder Klartext-PEM). <code>CUSTOM_SSL_KEY_DATA</code> multisite nein Daten des privaten Schl\u00fcssels (base64 oder Klartext-PEM). <p>Sicherheit</p> <p>Sch\u00fctzen Sie den privaten Schl\u00fcssel (angemessene Berechtigungen, nur vom BunkerWeb-Scheduler lesbar).</p> <p>Format</p> <p>Zertifikate m\u00fcssen im PEM-Format vorliegen. Konvertieren Sie bei Bedarf.</p> <p>Zertifikatsketten</p> <p>Wenn eine Zwischenkette erforderlich ist, stellen Sie das vollst\u00e4ndige Bundle in der richtigen Reihenfolge bereit (Zertifikat, dann Zwischenzertifikate).</p>"},{"location":"de/features/#beispiele_2","title":"Beispiele","text":"Dateien <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/path/to/your/certificate.pem\"\nCUSTOM_SSL_KEY: \"/path/to/your/private-key.pem\"\n</code></pre> Base64-Daten <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...\"\n</code></pre> Klartext-PEM <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: |\n  -----BEGIN CERTIFICATE-----\n  MIIDdzCCAl+gAwIBAgIUJH...certificate content...AAAA\n  -----END CERTIFICATE-----\nCUSTOM_SSL_KEY_DATA: |\n  -----BEGIN PRIVATE KEY-----\n  MIIEvQIBADAN...key content...AAAA\n  -----END PRIVATE KEY-----\n</code></pre> Fallback <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/path/to/your/certificate.pem\"\nCUSTOM_SSL_KEY: \"/path/to/your/private-key.pem\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...\"\n</code></pre>"},{"location":"de/features/#dnsbl","title":"DNSBL","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das DNSBL (Domain Name System Blacklist) Plugin bietet Schutz vor bekannten b\u00f6sartigen IP-Adressen, indem es die IP-Adressen von Clients mit externen DNSBL-Servern abgleicht. Diese Funktion sch\u00fctzt Ihre Website vor Spam, Botnetzen und verschiedenen Arten von Cyber-Bedrohungen, indem sie auf von der Community gepflegte Listen problematischer IP-Adressen zur\u00fcckgreift.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Client eine Verbindung zu Ihrer Website herstellt, fragt BunkerWeb die von Ihnen ausgew\u00e4hlten DNSBL-Server \u00fcber das DNS-Protokoll ab.</li> <li>Die \u00dcberpr\u00fcfung erfolgt durch Senden einer umgekehrten DNS-Anfrage mit der IP-Adresse des Clients an jeden DNSBL-Server.</li> <li>Wenn ein DNSBL-Server best\u00e4tigt, dass die IP-Adresse des Clients als b\u00f6sartig aufgef\u00fchrt ist, wird BunkerWeb den Client automatisch sperren und so verhindern, dass potenzielle Bedrohungen Ihre Anwendung erreichen.</li> <li>Die Ergebnisse werden zwischengespeichert, um die Leistung bei wiederholten Besuchen von derselben IP-Adresse zu verbessern.</li> <li>Die Abfragen werden effizient mit asynchronen Abfragen durchgef\u00fchrt, um die Auswirkungen auf die Ladezeiten der Seite zu minimieren.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_6","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die DNSBL-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die DNSBL-Funktion ist standardm\u00e4\u00dfig deaktiviert. Setzen Sie die Einstellung <code>USE_DNSBL</code> auf <code>yes</code>, um sie zu aktivieren.</li> <li>DNSBL-Server konfigurieren: F\u00fcgen Sie die Domainnamen der DNSBL-Dienste, die Sie verwenden m\u00f6chten, zur Einstellung <code>DNSBL_LIST</code> hinzu.</li> <li>Einstellungen anwenden: Nach der Konfiguration \u00fcberpr\u00fcft BunkerWeb eingehende Verbindungen automatisch mit den angegebenen DNSBL-Servern.</li> <li>Wirksamkeit \u00fcberwachen: \u00dcberpr\u00fcfen Sie die Web-Benutzeroberfl\u00e4che, um Statistiken \u00fcber Anfragen zu sehen, die durch DNSBL-Pr\u00fcfungen blockiert wurden.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_7","title":"Konfigurationseinstellungen","text":"<p>Allgemein</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_DNSBL</code> <code>no</code> multisite nein DNSBL aktivieren: auf <code>yes</code> setzen, um DNSBL-Pr\u00fcfungen f\u00fcr eingehende Verbindungen zu aktivieren. <code>DNSBL_LIST</code> <code>bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org</code> global nein DNSBL-Server: Liste der zu \u00fcberpr\u00fcfenden DNSBL-Server-Domains, durch Leerzeichen getrennt. <p>Ausnahmelisten</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>DNSBL_IGNORE_IP</code> `` multisite ja Durch Leerzeichen getrennte IPs/CIDRs, f\u00fcr die DNSBL-Pr\u00fcfungen \u00fcbersprungen werden sollen (Whitelist). <code>DNSBL_IGNORE_IP_URLS</code> `` multisite ja Durch Leerzeichen getrennte URLs, die IPs/CIDRs zum \u00dcberspringen bereitstellen. Unterst\u00fctzt <code>http(s)://</code> und <code>file://</code>. <p>Auswahl von DNSBL-Servern</p> <p>W\u00e4hlen Sie seri\u00f6se DNSBL-Anbieter, um Falschmeldungen zu minimieren. Die Standardliste enth\u00e4lt etablierte Dienste, die f\u00fcr die meisten Websites geeignet sind:</p> <pre><code>- **bl.blocklist.de:** Listet IPs, die bei Angriffen auf andere Server erkannt wurden.\n- **sbl.spamhaus.org:** Konzentriert sich auf Spam-Quellen und andere b\u00f6sartige Aktivit\u00e4ten.\n- **xbl.spamhaus.org:** Zielt auf infizierte Systeme ab, wie z. B. kompromittierte Maschinen oder offene Proxys.\n</code></pre> <p>Wie DNSBL funktioniert</p> <p>DNSBL-Server funktionieren, indem sie auf speziell formatierte DNS-Anfragen antworten. Wenn BunkerWeb eine IP-Adresse \u00fcberpr\u00fcft, kehrt es die IP um und h\u00e4ngt den DNSBL-Domainnamen an. Wenn die resultierende DNS-Anfrage eine \u201eErfolgs\u201c-Antwort zur\u00fcckgibt, wird die IP als auf der schwarzen Liste stehend betrachtet.</p> <p>Leistungs\u00fcberlegungen</p> <p>Obwohl BunkerWeb DNSBL-Abfragen auf Leistung optimiert, k\u00f6nnte das Hinzuf\u00fcgen einer gro\u00dfen Anzahl von DNSBL-Servern potenziell die Antwortzeiten beeintr\u00e4chtigen. Beginnen Sie mit einigen seri\u00f6sen DNSBL-Servern und \u00fcberwachen Sie die Leistung, bevor Sie weitere hinzuf\u00fcgen.</p>"},{"location":"de/features/#beispielkonfigurationen_7","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationMinimale KonfigurationAusschluss vertrauensw\u00fcrdiger IPsVerwendung von Remote-URLsVerwendung lokaler Dateien <p>Eine einfache Konfiguration mit den Standard-DNSBL-Servern:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org\"\n</code></pre> <p>Eine minimale Konfiguration, die sich auf die zuverl\u00e4ssigsten DNSBL-Dienste konzentriert:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\n</code></pre> <p>Diese Konfiguration verwendet nur:</p> <ul> <li>zen.spamhaus.org: Die kombinierte Liste von Spamhaus wird aufgrund ihrer breiten Abdeckung und ihres Rufs f\u00fcr Genauigkeit oft als eigenst\u00e4ndige L\u00f6sung als ausreichend angesehen. Sie kombiniert die SBL-, XBL- und PBL-Listen in einer einzigen Abfrage, was sie effizient und umfassend macht.</li> </ul> <p>Sie k\u00f6nnen bestimmte Clients von DNSBL-Pr\u00fcfungen ausschlie\u00dfen, indem Sie statische Werte und/oder entfernte Dateien verwenden:</p> <ul> <li><code>DNSBL_IGNORE_IP</code>: F\u00fcgen Sie durch Leerzeichen getrennte IPs und CIDR-Bereiche hinzu. Beispiel: <code>192.0.2.10 203.0.113.0/24 2001:db8::/32</code>.</li> <li><code>DNSBL_IGNORE_IP_URLS</code>: Geben Sie URLs an, deren Inhalte eine IP/CIDR pro Zeile auflisten. Kommentare, die mit <code>#</code> oder <code>;</code> beginnen, werden ignoriert. Doppelte Eintr\u00e4ge werden entfernt.</li> </ul> <p>Wenn eine eingehende Client-IP mit der Ausnahmeliste \u00fcbereinstimmt, \u00fcberspringt BunkerWeb die DNSBL-Abfragen und speichert das Ergebnis als \u201eok\u201c f\u00fcr schnellere nachfolgende Anfragen zwischen.</p> <p>Der Job <code>dnsbl-download</code> l\u00e4dt und speichert st\u00fcndlich zu ignorierende IPs:</p> <ul> <li>Protokolle: <code>https://</code>, <code>http://</code> und lokale <code>file://</code>-Pfade.</li> <li>Pro-URL-Cache mit Pr\u00fcfsumme verhindert redundante Downloads (1 Stunde Toleranz).</li> <li>Pro Dienst zusammengef\u00fchrte Datei: <code>/var/cache/bunkerweb/dnsbl/&lt;service&gt;/IGNORE_IP.list</code>.</li> <li>Wird beim Start geladen und mit <code>DNSBL_IGNORE_IP</code> zusammengef\u00fchrt.</li> </ul> <p>Beispiel, das statische und URL-Quellen kombiniert:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP: \"10.0.0.0/8 192.168.0.0/16 2001:db8::/32\"\nDNSBL_IGNORE_IP_URLS: \"https://example.com/allow-cidrs.txt file:///etc/bunkerweb/dnsbl/ignore.txt\"\n</code></pre> <p>Laden Sie zu ignorierende IPs aus lokalen Dateien unter Verwendung von <code>file://</code>-URLs:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP_URLS: \"file:///etc/bunkerweb/dnsbl/ignore.txt file:///opt/data/allow-cidrs.txt\"\n</code></pre>"},{"location":"de/features/#database","title":"Database","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Datenbank-Plugin bietet eine robuste Datenbankintegration f\u00fcr BunkerWeb, indem es die zentrale Speicherung und Verwaltung von Konfigurationsdaten, Protokollen und anderen wichtigen Informationen erm\u00f6glicht.</p> <p>Diese Kernkomponente unterst\u00fctzt mehrere Datenbank-Engines, darunter SQLite, PostgreSQL, MySQL/MariaDB und Oracle, sodass Sie die Datenbankl\u00f6sung w\u00e4hlen k\u00f6nnen, die am besten zu Ihrer Umgebung und Ihren Anforderungen passt.</p> <p>So funktioniert es:</p> <ol> <li>BunkerWeb verbindet sich mit Ihrer konfigurierten Datenbank \u00fcber die bereitgestellte URI im SQLAlchemy-Format.</li> <li>Kritische Konfigurationsdaten, Laufzeitinformationen und Job-Protokolle werden sicher in der Datenbank gespeichert.</li> <li>Automatische Wartungsprozesse optimieren Ihre Datenbank, indem sie das Datenwachstum verwalten und \u00fcbersch\u00fcssige Datens\u00e4tze bereinigen.</li> <li>F\u00fcr Hochverf\u00fcgbarkeitsszenarien k\u00f6nnen Sie eine schreibgesch\u00fctzte Datenbank-URI konfigurieren, die sowohl als Failover als auch zur Entlastung von Leseoperationen dient.</li> <li>Datenbankoperationen werden entsprechend Ihrer angegebenen Protokollierungsstufe protokolliert, um eine angemessene Transparenz der Datenbankinteraktionen zu gew\u00e4hrleisten.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_7","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Datenbankfunktion zu konfigurieren und zu verwenden:</p> <ol> <li>W\u00e4hlen Sie eine Datenbank-Engine: W\u00e4hlen Sie je nach Ihren Anforderungen zwischen SQLite (Standard), PostgreSQL, MySQL/MariaDB oder Oracle.</li> <li>Konfigurieren Sie die Datenbank-URI: Setzen Sie <code>DATABASE_URI</code>, um sich mit Ihrer prim\u00e4ren Datenbank im SQLAlchemy-Format zu verbinden.</li> <li>Optionale schreibgesch\u00fctzte Datenbank: Konfigurieren Sie f\u00fcr Hochverf\u00fcgbarkeits-Setups eine <code>DATABASE_URI_READONLY</code> als Fallback oder f\u00fcr Leseoperationen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_8","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>DATABASE_URI</code> <code>sqlite:////var/lib/bunkerweb/db.sqlite3</code> global nein Datenbank-URI: Die prim\u00e4re Datenbankverbindungszeichenfolge im SQLAlchemy-Format. <code>DATABASE_URI_READONLY</code> global nein Schreibgesch\u00fctzte Datenbank-URI: Optionale Datenbank f\u00fcr schreibgesch\u00fctzte Operationen oder als Failover. <code>DATABASE_LOG_LEVEL</code> <code>warning</code> global nein Protokollierungsstufe: Die Ausf\u00fchrlichkeitsstufe f\u00fcr Datenbankprotokolle. Optionen: <code>debug</code>, <code>info</code>, <code>warn</code>, <code>warning</code> oder <code>error</code>. <code>DATABASE_MAX_JOBS_RUNS</code> <code>10000</code> global nein Maximale Job-Ausf\u00fchrungen: Die maximale Anzahl von Job-Ausf\u00fchrungsdatens\u00e4tzen, die vor der automatischen Bereinigung aufbewahrt werden. <p>!!! tip \"Auswahl der Datenbank\" - SQLite (Standard): Ideal f\u00fcr Single-Node-Bereitstellungen oder Testumgebungen aufgrund seiner Einfachheit und dateibasierten Natur. - PostgreSQL: Empfohlen f\u00fcr Produktionsumgebungen mit mehreren BunkerWeb-Instanzen aufgrund seiner Robustheit und Unterst\u00fctzung f\u00fcr Gleichzeitigkeit. - MySQL/MariaDB: Eine gute Alternative zu PostgreSQL mit \u00e4hnlichen produktionsreifen F\u00e4higkeiten. - Oracle: Geeignet f\u00fcr Unternehmensumgebungen, in denen Oracle bereits die Standard-Datenbankplattform ist.</p> <p>SQLAlchemy-URI-Format</p> <p>Die Datenbank-URI folgt dem SQLAlchemy-Format:</p> <pre><code>- SQLite: `sqlite:////pfad/zur/datenbank.sqlite3`\n- PostgreSQL: `postgresql://benutzername:passwort@hostname:port/datenbank`\n- MySQL/MariaDB: `mysql://benutzername:passwort@hostname:port/datenbank` oder `mariadb://benutzername:passwort@hostname:port/datenbank`\n- Oracle: `oracle://benutzername:passwort@hostname:port/datenbank`\n</code></pre> <p>Datenbankwartung</p> <p>Das Plugin f\u00fchrt automatisch einen t\u00e4glichen Job aus, der \u00fcbersch\u00fcssige Job-Ausf\u00fchrungen basierend auf der Einstellung <code>DATABASE_MAX_JOBS_RUNS</code> bereinigt. Dies verhindert unbegrenztes Datenbankwachstum und bewahrt gleichzeitig eine n\u00fctzliche Historie der Job-Ausf\u00fchrungen.</p>"},{"location":"de/features/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Provides a simpler way to fix false positives in reports.</p>"},{"location":"de/features/#errors","title":"Errors","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Errors-Plugin bietet eine anpassbare Verwaltung von HTTP-Fehlern, um das Erscheinungsbild der Fehlerantworten f\u00fcr Ihre Benutzer zu definieren. So k\u00f6nnen Sie klare and konsistente Fehlerseiten anzeigen, die Ihrer Identit\u00e4t entsprechen, anstatt der technischen Standardseiten des Servers.</p> <p>So funktioniert's:</p> <ol> <li>Wenn ein HTTP-Fehler auftritt (z.B. 400, 404, 500), f\u00e4ngt BunkerWeb die Antwort ab.</li> <li>Anstelle der Standardseite zeigt BunkerWeb eine angepasste and sorgf\u00e4ltig gestaltete Seite an.</li> <li>Die Fehlerseiten sind konfigurierbar: Sie k\u00f6nnen f\u00fcr jeden Fehlercode eine HTML-Datei bereitstellen. Die Dateien m\u00fcssen in dem durch <code>ROOT_FOLDER</code> definierten Verzeichnis abgelegt werden (siehe Misc-Plugin).<ul> <li>Standardm\u00e4\u00dfig ist <code>ROOT_FOLDER</code> auf <code>/var/www/html/{server_name}</code> gesetzt.</li> <li>Im Multisite-Modus hat jede Site ihren eigenen <code>ROOT_FOLDER</code>; platzieren Sie die Fehlerseiten im entsprechenden Ordner f\u00fcr jede Site.</li> </ul> </li> <li>Die Standardseiten erkl\u00e4ren das Problem klar and schlagen m\u00f6gliche Ma\u00dfnahmen vor.</li> </ol>"},{"location":"de/features/#verwendung_1","title":"Verwendung","text":"<ol> <li>Benutzerdefinierte Seiten definieren: Verwenden Sie <code>ERRORS</code>, um HTTP-Codes mit HTML-Dateien (im <code>ROOT_FOLDER</code>) zu verkn\u00fcpfen.</li> <li>Ihre Seiten konfigurieren: Verwenden Sie die Standardseiten von BunkerWeb oder Ihre eigenen Dateien.</li> <li>Abgefangene Codes definieren: W\u00e4hlen Sie mit <code>INTERCEPTED_ERROR_CODES</code> die Codes aus, die immer von BunkerWeb verwaltet werden sollen.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Die Fehlerverwaltung wird automatisch angewendet.</li> </ol>"},{"location":"de/features/#parameter_3","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>ERRORS</code> Multisite Nein Benutzerdefinierte Fehlerseiten: Paare <code>CODE=/pfad/seite.html</code>. <code>INTERCEPTED_ERROR_CODES</code> <code>400 401 403 404 405 413 429 500 501 502 503 504</code> Multisite Nein Abgefangene Codes: Liste der Codes, die mit der Standardseite verwaltet werden, wenn keine benutzerdefinierte Seite definiert ist. <p>Seiten-Design</p> <p>Die Standardseiten sind klar and lehrreich: Fehlerbeschreibung, m\u00f6gliche Ursachen, vorgeschlagene Ma\u00dfnahmen and visuelle Anhaltspunkte.</p> <p>Fehlertypen</p> <ul> <li>4xx (Client-seitig): Ung\u00fcltige Anfragen, nicht existierende Ressource, fehlende Authentifizierung\u2026</li> <li>5xx (Server-seitig): Unm\u00f6glichkeit, eine g\u00fcltige Anfrage zu bearbeiten (interner Fehler, vor\u00fcbergehende Nichtverf\u00fcgbarkeit\u2026).</li> </ul>"},{"location":"de/features/#beispiele_3","title":"Beispiele","text":"Standardverwaltung <pre><code>INTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> Benutzerdefinierte Seiten <pre><code>ERRORS: \"404=/custom/404.html 500=/custom/500.html\"\nINTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> Selektive Verwaltung <pre><code>INTERCEPTED_ERROR_CODES: \"404 500\"\n</code></pre>"},{"location":"de/features/#greylist","title":"Greylist","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Greylist-Plugin bietet einen flexiblen Sicherheitsansatz, der Besuchern den Zugriff erm\u00f6glicht, w\u00e4hrend wesentliche Sicherheitsfunktionen weiterhin aktiv bleiben.</p> <p>Im Gegensatz zu traditionellen Blacklist/Whitelist-Ans\u00e4tzen, die den Zugriff vollst\u00e4ndig blockieren oder erlauben, schafft die Greylist einen Mittelweg, indem sie bestimmten Besuchern den Zugriff gew\u00e4hrt, sie aber dennoch Sicherheitspr\u00fcfungen unterzieht.</p> <p>So funktioniert es:</p> <ol> <li>Sie definieren Kriterien f\u00fcr Besucher, die auf die Greylist gesetzt werden sollen (IP-Adressen, Netzwerke, rDNS, ASN, User-Agent oder URI-Muster).</li> <li>Wenn ein Besucher einem dieser Kriterien entspricht, erh\u00e4lt er Zugriff auf Ihre Website, w\u00e4hrend die anderen Sicherheitsfunktionen aktiv bleiben.</li> <li>Wenn ein Besucher keinem Greylist-Kriterium entspricht, wird sein Zugriff verweigert.</li> <li>Greylist-Daten k\u00f6nnen in regelm\u00e4\u00dfigen Abst\u00e4nden automatisch aus externen Quellen aktualisiert werden.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_8","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Greylist-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die Greylist-Funktion ist standardm\u00e4\u00dfig deaktiviert. Setzen Sie die Einstellung <code>USE_GREYLIST</code> auf <code>yes</code>, um sie zu aktivieren.</li> <li>Greylist-Regeln konfigurieren: Definieren Sie, welche IPs, Netzwerke, rDNS-Muster, ASNs, User-Agents oder URIs auf die Greylist gesetzt werden sollen.</li> <li>Externe Quellen hinzuf\u00fcgen: Konfigurieren Sie optional URLs zum automatischen Herunterladen und Aktualisieren von Greylist-Daten.</li> <li>Zugriff \u00fcberwachen: \u00dcberpr\u00fcfen Sie die Web-Benutzeroberfl\u00e4che, um zu sehen, welchen Besuchern der Zugriff gew\u00e4hrt oder verweigert wird.</li> </ol> <p>Verhalten der Zugriffskontrolle</p> <p>Wenn die Greylist-Funktion aktiviert ist, indem die Einstellung <code>USE_GREYLIST</code> auf <code>yes</code> gesetzt wird:</p> <pre><code>1. **Greylist-Besucher:** Erhalten Zugriff, unterliegen aber weiterhin allen Sicherheitspr\u00fcfungen.\n2. **Nicht-Greylist-Besucher:** Wird der Zugriff vollst\u00e4ndig verweigert.\n</code></pre> <p>Stream-Modus</p> <p>Im Stream-Modus werden nur IP-, rDNS- und ASN-Pr\u00fcfungen durchgef\u00fchrt.</p>"},{"location":"de/features/#konfigurationseinstellungen_9","title":"Konfigurationseinstellungen","text":"<p>Allgemein</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_GREYLIST</code> <code>no</code> multisite nein Greylist aktivieren: Auf <code>yes</code> setzen, um Greylisting zu aktivieren. IP-Adresse <p>Was dies bewirkt: Setzt Besucher basierend auf ihrer IP-Adresse oder ihrem Netzwerk auf die Greylist. Diese Besucher erhalten Zugriff, unterliegen aber weiterhin den Sicherheitspr\u00fcfungen.</p> <pre><code>| Einstellung        | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                                            |\n| ------------------ | -------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_IP`      |          | multisite | nein     | **IP-Greylist:** Liste von IP-Adressen oder Netzwerken (in CIDR-Notation), die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen.      |\n| `GREYLIST_IP_URLS` |          | multisite | nein     | **IP-Greylist-URLs:** Liste von URLs, die IP-Adressen oder Netzwerke enthalten, die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen. |\n</code></pre> Reverse DNS <p>Was dies bewirkt: Setzt Besucher basierend auf ihrem Domainnamen (in umgekehrter Reihenfolge) auf die Greylist. N\u00fctzlich, um Besuchern von bestimmten Organisationen oder Netzwerken bedingten Zugriff zu gew\u00e4hren.</p> <pre><code>| Einstellung            | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                                       |\n| ---------------------- | -------- | --------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_RDNS`        |          | multisite | nein     | **rDNS-Greylist:** Liste von Reverse-DNS-Suffixen, die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen.                         |\n| `GREYLIST_RDNS_GLOBAL` | `yes`    | multisite | nein     | **Nur globales rDNS:** F\u00fchrt rDNS-Greylist-Pr\u00fcfungen nur f\u00fcr globale IP-Adressen durch, wenn auf `yes` gesetzt.                                    |\n| `GREYLIST_RDNS_URLS`   |          | multisite | nein     | **rDNS-Greylist-URLs:** Liste von URLs, die Reverse-DNS-Suffixe enthalten, die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen. |\n</code></pre> ASN <p>Was dies bewirkt: Setzt Besucher von bestimmten Netzwerkanbietern mithilfe von Autonomen Systemnummern auf die Greylist. ASNs identifizieren, zu welchem Anbieter oder welcher Organisation eine IP geh\u00f6rt.</p> <pre><code>| Einstellung         | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                       |\n| ------------------- | -------- | --------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_ASN`      |          | multisite | nein     | **ASN-Greylist:** Liste von Autonomen Systemnummern, die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen.       |\n| `GREYLIST_ASN_URLS` |          | multisite | nein     | **ASN-Greylist-URLs:** Liste von URLs, die ASNs enthalten, die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen. |\n</code></pre> User-Agent <p>Was dies bewirkt: Setzt Besucher basierend auf dem Browser oder Tool, das sie angeben zu verwenden, auf die Greylist. Dies erm\u00f6glicht kontrollierten Zugriff f\u00fcr bestimmte Tools, w\u00e4hrend die Sicherheitspr\u00fcfungen aufrechterhalten werden.</p> <pre><code>| Einstellung                | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                                |\n| -------------------------- | -------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_USER_AGENT`      |          | multisite | nein     | **User-Agent-Greylist:** Liste von User-Agent-Mustern (PCRE-Regex), die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen. |\n| `GREYLIST_USER_AGENT_URLS` |          | multisite | nein     | **User-Agent-Greylist-URLs:** Liste von URLs, die User-Agent-Muster enthalten, die auf die Greylist gesetzt werden sollen.                  |\n</code></pre> URI <p>Was dies bewirkt: Setzt Anfragen an bestimmte URLs auf Ihrer Website auf die Greylist. Dies erm\u00f6glicht bedingten Zugriff auf bestimmte Endpunkte, w\u00e4hrend die Sicherheitspr\u00fcfungen aufrechterhalten werden.</p> <pre><code>| Einstellung         | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                             |\n| ------------------- | -------- | --------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_URI`      |          | multisite | nein     | **URI-Greylist:** Liste von URI-Mustern (PCRE-Regex), die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen.            |\n| `GREYLIST_URI_URLS` |          | multisite | nein     | **URI-Greylist-URLs:** Liste von URLs, die URI-Muster enthalten, die auf die Greylist gesetzt werden sollen, getrennt durch Leerzeichen. |\n</code></pre> <p>Unterst\u00fctzung von URL-Formaten</p> <p>Alle <code>*_URLS</code>-Einstellungen unterst\u00fctzen HTTP/HTTPS-URLs sowie lokale Dateipfade mit dem Pr\u00e4fix <code>file:///</code>. Die Basisauthentifizierung wird im Format <code>http://user:pass@url</code> unterst\u00fctzt.</p> <p>Regelm\u00e4\u00dfige Aktualisierungen</p> <p>Greylists von URLs werden st\u00fcndlich automatisch heruntergeladen und aktualisiert, um sicherzustellen, dass Ihr Schutz mit den neuesten vertrauensw\u00fcrdigen Quellen auf dem neuesten Stand bleibt.</p>"},{"location":"de/features/#beispielkonfigurationen_8","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationErweiterte KonfigurationVerwendung lokaler DateienSelektiver API-Zugriff <p>Eine einfache Konfiguration, die Greylisting auf das interne Netzwerk eines Unternehmens und einen Crawler anwendet:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_IP: \"192.168.1.0/24 10.0.0.0/8\"\nGREYLIST_USER_AGENT: \"(?:\\b)CompanyCrawler(?:\\b)\"\n</code></pre> <p>Eine umfassendere Konfiguration mit mehreren Greylist-Kriterien:</p> <pre><code>USE_GREYLIST: \"yes\"\n\n# Unternehmensressourcen und genehmigte Crawler\nGREYLIST_IP: \"192.168.1.0/24 203.0.113.0/24\"\nGREYLIST_RDNS: \".company.com .partner-company.org\"\nGREYLIST_ASN: \"12345 67890\"  # ASNs von Unternehmen und Partnern\nGREYLIST_USER_AGENT: \"(?:\\b)GoodBot(?:\\b) (?:\\b)PartnerCrawler(?:\\b)\"\nGREYLIST_URI: \"^/api/v1/\"\n\n# Externe vertrauensw\u00fcrdige Quellen\nGREYLIST_IP_URLS: \"https://example.com/trusted-networks.txt\"\nGREYLIST_USER_AGENT_URLS: \"https://example.com/trusted-crawlers.txt\"\n</code></pre> <p>Konfiguration mit lokalen Dateien f\u00fcr Greylists:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_IP_URLS: \"file:///path/to/ip-greylist.txt\"\nGREYLIST_RDNS_URLS: \"file:///path/to/rdns-greylist.txt\"\nGREYLIST_ASN_URLS: \"file:///path/to/asn-greylist.txt\"\nGREYLIST_USER_AGENT_URLS: \"file:///path/to/user-agent-greylist.txt\"\nGREYLIST_URI_URLS: \"file:///path/to/uri-greylist.txt\"\n</code></pre> <p>Eine Konfiguration, die den Zugriff auf bestimmte API-Endpunkte erlaubt:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_URI: \"^/api/v1/public/ ^/api/v1/status\"\nGREYLIST_IP: \"203.0.113.0/24\"  # Externes Partnernetzwerk\n</code></pre>"},{"location":"de/features/#gzip","title":"Gzip","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Der GZIP-Plugin komprimiert HTTP-Antworten mit dem GZIP-Algorithmus, um die Bandbreite zu reduzieren und das Laden von Seiten zu beschleunigen.</p>"},{"location":"de/features/#funktionsweise","title":"Funktionsweise","text":"<ol> <li>BunkerWeb erkennt, ob der Client GZIP unterst\u00fctzt.</li> <li>Falls ja, wird die Antwort auf dem konfigurierten Niveau komprimiert.</li> <li>Die Header zeigen die Verwendung von GZIP an.</li> <li>Der Browser dekomprimiert vor der Anzeige.</li> </ol>"},{"location":"de/features/#verwendung_2","title":"Verwendung","text":"<ol> <li>Aktivieren: <code>USE_GZIP: yes</code> (standardm\u00e4\u00dfig deaktiviert).</li> <li>MIME-Typen: <code>GZIP_TYPES</code> definieren.</li> <li>Mindestgr\u00f6\u00dfe: <code>GZIP_MIN_LENGTH</code>, um sehr kleine Dateien zu vermeiden.</li> <li>Kompressionsstufe: <code>GZIP_COMP_LEVEL</code> (1\u20139).</li> <li>Proxied-Inhalt: <code>GZIP_PROXIED</code> anpassen.</li> </ol>"},{"location":"de/features/#parameter_4","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>USE_GZIP</code> <code>no</code> Multisite nein Aktiviert die GZIP-Kompression. <code>GZIP_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> Multisite nein Komprimierte MIME-Typen. <code>GZIP_MIN_LENGTH</code> <code>1000</code> Multisite nein Mindestgr\u00f6\u00dfe (Bytes) f\u00fcr die Anwendung der Kompression. <code>GZIP_COMP_LEVEL</code> <code>5</code> Multisite nein Stufe 1\u20139: h\u00f6her = bessere Kompression, aber mehr CPU. <code>GZIP_PROXIED</code> <code>no-cache no-store private expired auth</code> Multisite nein Gibt an, welche proxied-Inhalte basierend auf den Antwort-Headern komprimiert werden sollen. <p>Kompressionsstufe</p> <p><code>5</code> ist ein guter Kompromiss. Statisch/CPU verf\u00fcgbar: 7\u20139. Dynamisch/CPU begrenzt: 1\u20133.</p>"},{"location":"de/features/#beispiele_4","title":"Beispiele","text":"Standard <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json application/xml text/css text/html text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"5\"\n</code></pre> Maximale Kompression <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"500\"\nGZIP_COMP_LEVEL: \"9\"\nGZIP_PROXIED: \"any\"\n</code></pre> Ausgewogene Leistung <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"3\"\nGZIP_PROXIED: \"no-cache no-store private expired\"\n</code></pre> Proxied-Inhalt <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"4\"\nGZIP_PROXIED: \"any\"\n</code></pre>"},{"location":"de/features/#html-injection","title":"HTML injection","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das HTML-Injection-Plugin erm\u00f6glicht es Ihnen, nahtlos benutzerdefinierten HTML-Code zu den Seiten Ihrer Website vor den schlie\u00dfenden <code>&lt;/body&gt;</code>- oder <code>&lt;/head&gt;</code>-Tags hinzuzuf\u00fcgen. Diese Funktion ist besonders n\u00fctzlich, um Analyses-Skripte, Tracking-Pixel, benutzerdefiniertes JavaScript, CSS-Stile oder andere Integrationen von Drittanbietern hinzuzuf\u00fcgen, ohne den Quellcode Ihrer Website \u00e4ndern zu m\u00fcssen.</p> <p>So funktioniert es:</p> <ol> <li>Wenn eine Seite von Ihrer Website ausgeliefert wird, untersucht BunkerWeb die HTML-Antwort.</li> <li>Wenn Sie die Body-Injection konfiguriert haben, f\u00fcgt BunkerWeb Ihren benutzerdefinierten HTML-Code direkt vor dem schlie\u00dfenden <code>&lt;/body&gt;</code>-Tag ein.</li> <li>Wenn Sie die Head-Injection konfiguriert haben, f\u00fcgt BunkerWeb Ihren benutzerdefinierten HTML-Code direkt vor dem schlie\u00dfenden <code>&lt;/head&gt;</code>-Tag ein.</li> <li>Das Einf\u00fcgen erfolgt automatisch f\u00fcr alle HTML-Seiten, die von Ihrer Website ausgeliefert werden.</li> <li>Dies erm\u00f6glicht es Ihnen, Skripte, Stile oder andere Elemente hinzuzuf\u00fcgen, ohne den Code Ihrer Anwendung \u00e4ndern zu m\u00fcssen.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_9","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die HTML-Injection-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Bereiten Sie Ihren benutzerdefinierten HTML-Code vor: Entscheiden Sie, welchen HTML-Code Sie in Ihre Seiten einf\u00fcgen m\u00f6chten.</li> <li>W\u00e4hlen Sie die Einf\u00fcgeorte: Bestimmen Sie, ob Sie Code im <code>&lt;head&gt;</code>-Bereich, im <code>&lt;body&gt;</code>-Bereich oder in beiden einf\u00fcgen m\u00fcssen.</li> <li>Konfigurieren Sie die Einstellungen: F\u00fcgen Sie Ihren benutzerdefinierten HTML-Code zu den entsprechenden Einstellungen (<code>INJECT_HEAD</code> und/oder <code>INJECT_BODY</code>) hinzu.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration wird der HTML-Code automatisch in alle ausgelieferten HTML-Seiten eingef\u00fcgt.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_10","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>INJECT_HEAD</code> multisite nein Head-HTML-Code: Der HTML-Code, der vor dem <code>&lt;/head&gt;</code>-Tag eingef\u00fcgt wird. <code>INJECT_BODY</code> multisite nein Body-HTML-Code: Der HTML-Code, der vor dem <code>&lt;/body&gt;</code>-Tag eingef\u00fcgt wird. <p>!!! tip \"Bew\u00e4hrte Praktiken\" - Aus Leistungsgr\u00fcnden sollten Sie JavaScript-Dateien am Ende des Body platzieren, um das Rendern nicht zu blockieren. - Platzieren Sie CSS und kritisches JavaScript im Head-Bereich, um ein Aufblitzen von ungestyltem Inhalt zu vermeiden. - Seien Sie vorsichtig mit eingef\u00fcgtem Inhalt, der die Funktionalit\u00e4t Ihrer Website beeintr\u00e4chtigen k\u00f6nnte.</p> <p>!!! info \"H\u00e4ufige Anwendungsf\u00e4lle\" - Hinzuf\u00fcgen von Analyses-Skripten (wie Google Analytics, Matomo) - Integration von Chat-Widgets oder Kundensupport-Tools - Einbinden von Tracking-Pixeln f\u00fcr Marketingkampagnen - Hinzuf\u00fcgen von benutzerdefinierten CSS-Stilen oder JavaScript-Funktionen - Einbinden von Bibliotheken von Drittanbietern, ohne den Anwendungscode zu \u00e4ndern</p>"},{"location":"de/features/#beispielkonfigurationen_9","title":"Beispielkonfigurationen","text":"Google AnalyticsBenutzerdefinierte StileMehrere IntegrationenCookie-Einwilligungsbanner <p>Hinzuf\u00fcgen von Google-Analytics-Tracking zu Ihrer Website:</p> <pre><code>INJECT_HEAD: \"\"\nINJECT_BODY: \"&lt;script async src=\\\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\\\"&gt;&lt;/script&gt;&lt;script&gt;window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-XXXXXXXXXX');&lt;/script&gt;\"\n</code></pre> <p>Hinzuf\u00fcgen von benutzerdefinierten CSS-Stilen zu Ihrer Website:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .custom-element { color: blue; }&lt;/style&gt;\"\nINJECT_BODY: \"\"\n</code></pre> <p>Hinzuf\u00fcgen von sowohl benutzerdefinierten Stilen als auch JavaScript:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .notification-banner { background: #f8f9fa; padding: 10px; text-align: center; }&lt;/style&gt;\"\nINJECT_BODY: \"&lt;script src=\\\"https://cdn.example.com/js/widget.js\\\"&gt;&lt;/script&gt;&lt;script&gt;initializeWidget('your-api-key');&lt;/script&gt;\"\n</code></pre> <p>Hinzuf\u00fcgen eines einfachen Cookie-Einwilligungsbanners:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;.cookie-banner { position: fixed; bottom: 0; left: 0; right: 0; background: #f1f1f1; padding: 20px; text-align: center; z-index: 1000; } .cookie-banner button { background: #4CAF50; border: none; color: white; padding: 10px 20px; cursor: pointer; }&lt;/style&gt;\"\nINJECT_BODY: \"&lt;div id=\\\"cookie-banner\\\" class=\\\"cookie-banner\\\"&gt;Diese Website verwendet Cookies, um sicherzustellen, dass Sie das beste Erlebnis erhalten. &lt;button onclick=\\\"acceptCookies()\\\"&gt;Akzeptieren&lt;/button&gt;&lt;/div&gt;&lt;script&gt;function acceptCookies() { document.getElementById('cookie-banner').style.display = 'none'; localStorage.setItem('cookies-accepted', 'true'); } if(localStorage.getItem('cookies-accepted') === 'true') { document.getElementById('cookie-banner').style.display = 'none'; }&lt;/script&gt;\"\n</code></pre>"},{"location":"de/features/#headers","title":"Headers","text":"<p>STREAM-Unterst\u00fctzung </p> <p>HTTP-Header spielen eine entscheidende Rolle bei der Sicherheit. Das Headers-Plugin bietet eine robuste Verwaltung von Standard- und benutzerdefinierten HTTP-Headern und verbessert so Sicherheit und Funktionalit\u00e4t. Es wendet dynamisch Sicherheitsma\u00dfnahmen an, wie HSTS, CSP (einschlie\u00dflich eines reinen Berichtsmodus) und die Injektion benutzerdefinierter Header, w\u00e4hrend es gleichzeitig Informationslecks verhindert.</p> <p>Wie es funktioniert</p> <ol> <li>Wenn ein Client Inhalte von Ihrer Website anfordert, verarbeitet BunkerWeb die Antwort-Header.</li> <li>Sicherheits-Header werden gem\u00e4\u00df Ihrer Konfiguration angewendet.</li> <li>Benutzerdefinierte Header k\u00f6nnen hinzugef\u00fcgt werden, um Clients zus\u00e4tzliche Informationen oder Funktionen bereitzustellen.</li> <li>Unerw\u00fcnschte Header, die Serverinformationen preisgeben k\u00f6nnten, werden automatisch entfernt.</li> <li>Cookies werden so ge\u00e4ndert, dass sie je nach Ihren Einstellungen die entsprechenden Sicherheitsflags enthalten.</li> <li>Header von Upstream-Servern k\u00f6nnen bei Bedarf selektiv beibehalten werden.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_10","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Headers-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Sicherheits-Header konfigurieren: Legen Sie Werte f\u00fcr g\u00e4ngige Header fest.</li> <li>Benutzerdefinierte Header hinzuf\u00fcgen: Definieren Sie beliebige benutzerdefinierte Header mit der Einstellung <code>CUSTOM_HEADER</code>.</li> <li>Unerw\u00fcnschte Header entfernen: Verwenden Sie <code>REMOVE_HEADERS</code>, um sicherzustellen, dass Header, die Serverdetails preisgeben k\u00f6nnten, entfernt werden.</li> <li>Cookie-Sicherheit einstellen: Aktivieren Sie eine robuste Cookie-Sicherheit, indem Sie <code>COOKIE_FLAGS</code> konfigurieren und <code>COOKIE_AUTO_SECURE_FLAG</code> auf <code>yes</code> setzen, damit das Secure-Flag bei HTTPS-Verbindungen automatisch hinzugef\u00fcgt wird.</li> <li>Upstream-Header beibehalten: Geben Sie mit <code>KEEP_UPSTREAM_HEADERS</code> an, welche Upstream-Header beibehalten werden sollen.</li> <li>Bedingte Header-Anwendung nutzen: Wenn Sie Richtlinien ohne Unterbrechung testen m\u00f6chten, aktivieren Sie den CSP Report-Only-Modus \u00fcber <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code>.</li> </ol>"},{"location":"de/features/#konfigurationsleitfaden","title":"Konfigurationsleitfaden","text":"Sicherheits-HeaderCookie-EinstellungenBenutzerdefinierte Header <p>\u00dcberblick</p> <p>Sicherheits-Header erzwingen eine sichere Kommunikation, schr\u00e4nken das Laden von Ressourcen ein und verhindern Angriffe wie Clickjacking und Injection. Richtig konfigurierte Header bilden eine robuste Verteidigungsschicht f\u00fcr Ihre Website.</p> <p>Vorteile von Sicherheits-Headern</p> <ul> <li>HSTS: Stellt sicher, dass alle Verbindungen verschl\u00fcsselt sind, und sch\u00fctzt so vor Protokoll-Downgrade-Angriffen.</li> <li>CSP: Verhindert die Ausf\u00fchrung b\u00f6sartiger Skripte und verringert so das Risiko von XSS-Angriffen.</li> <li>X-Frame-Options: Blockiert Clickjacking-Versuche durch die Kontrolle der Iframe-Einbettung.</li> <li>Referrer Policy: Begrenzt das Durchsickern sensibler Informationen \u00fcber Referrer-Header.</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>STRICT_TRANSPORT_SECURITY</code> <code>max-age=63072000; includeSubDomains; preload</code> multisite nein HSTS: Erzwingt sichere HTTPS-Verbindungen und verringert das Risiko von Man-in-the-Middle-Angriffen. <code>CONTENT_SECURITY_POLICY</code> <code>object-src 'none'; form-action 'self'; frame-ancestors 'self';</code> multisite nein CSP: Beschr\u00e4nkt das Laden von Ressourcen auf vertrauensw\u00fcrdige Quellen und mindert Cross-Site-Scripting- und Dateninjektionsangriffe. <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code> <code>no</code> multisite nein CSP-Berichtsmodus: Meldet Verst\u00f6\u00dfe, ohne Inhalte zu blockieren, und hilft beim Testen von Sicherheitsrichtlinien, w\u00e4hrend Protokolle erfasst werden. <code>X_FRAME_OPTIONS</code> <code>SAMEORIGIN</code> multisite nein X-Frame-Options: Verhindert Clickjacking, indem es steuert, ob Ihre Website in einem Frame dargestellt werden kann. <code>X_CONTENT_TYPE_OPTIONS</code> <code>nosniff</code> multisite nein X-Content-Type-Options: Verhindert, dass Browser MIME-Sniffing betreiben, und sch\u00fctzt so vor Drive-by-Download-Angriffen. <code>X_DNS_PREFETCH_CONTROL</code> <code>off</code> multisite nein X-DNS-Prefetch-Control: Reguliert das DNS-Prefetching, um unbeabsichtigte Netzwerkanfragen zu reduzieren und die Privatsph\u00e4re zu verbessern. <code>REFERRER_POLICY</code> <code>strict-origin-when-cross-origin</code> multisite nein Referrer Policy: Steuert die Menge der gesendeten Referrer-Informationen und sch\u00fctzt die Privatsph\u00e4re der Benutzer. <code>PERMISSIONS_POLICY</code> <code>accelerometer=(), ambient-light-sensor=(), attribution-reporting=(), autoplay=(), battery=(), ...</code> multisite nein Permissions Policy: Beschr\u00e4nkt den Zugriff auf Browserfunktionen und reduziert potenzielle Angriffsvektoren. <code>KEEP_UPSTREAM_HEADERS</code> <code>Content-Security-Policy Permissions-Policy X-Frame-Options</code> multisite nein Header beibehalten: Beh\u00e4lt ausgew\u00e4hlte Upstream-Header bei, was die Integration von Altsystemen erleichtert und gleichzeitig die Sicherheit aufrechterh\u00e4lt. <p>Bew\u00e4hrte Praktiken</p> <ul> <li>\u00dcberpr\u00fcfen und aktualisieren Sie Ihre Sicherheits-Header regelm\u00e4\u00dfig, um sie an die sich entwickelnden Sicherheitsstandards anzupassen.</li> <li>Verwenden Sie Tools wie das Mozilla Observatory, um Ihre Header-Konfiguration zu validieren.</li> <li>Testen Sie CSP im <code>Report-Only</code>-Modus, bevor Sie es erzwingen, um zu vermeiden, dass die Funktionalit\u00e4t beeintr\u00e4chtigt wird.</li> </ul> <p>\u00dcberblick</p> <p>Richtige Cookie-Einstellungen gew\u00e4hrleisten sichere Benutzersitzungen, indem sie Hijacking, Fixierung und Cross-Site-Scripting verhindern. Sichere Cookies erhalten die Sitzungsintegrit\u00e4t \u00fcber HTTPS und verbessern den allgemeinen Schutz der Benutzerdaten.</p> <p>Vorteile sicherer Cookies</p> <ul> <li>HttpOnly-Flag: Verhindert, dass clientseitige Skripte auf Cookies zugreifen, und mindert so XSS-Risiken.</li> <li>SameSite-Flag: Reduziert CSRF-Angriffe, indem die Verwendung von Cookies \u00fcber verschiedene Urspr\u00fcnge hinweg eingeschr\u00e4nkt wird.</li> <li>Secure-Flag: Stellt sicher, dass Cookies nur \u00fcber verschl\u00fcsselte HTTPS-Verbindungen \u00fcbertragen werden.</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>COOKIE_FLAGS</code> <code>* HttpOnly SameSite=Lax</code> multisite ja Cookie-Flags: F\u00fcgt automatisch Sicherheitsflags wie HttpOnly und SameSite hinzu und sch\u00fctzt Cookies so vor dem Zugriff durch clientseitige Skripte und CSRF-Angriffe. <code>COOKIE_AUTO_SECURE_FLAG</code> <code>yes</code> multisite nein Automatisches Secure-Flag: Stellt sicher, dass Cookies nur \u00fcber sichere HTTPS-Verbindungen gesendet werden, indem das Secure-Flag automatisch angeh\u00e4ngt wird. <p>Bew\u00e4hrte Praktiken</p> <ul> <li>Verwenden Sie <code>SameSite=Strict</code> f\u00fcr sensible Cookies, um den Zugriff \u00fcber verschiedene Urspr\u00fcnge hinweg zu verhindern.</li> <li>\u00dcberpr\u00fcfen Sie Ihre Cookie-Einstellungen regelm\u00e4\u00dfig, um die Einhaltung der Sicherheits- und Datenschutzbestimmungen sicherzustellen.</li> <li>Vermeiden Sie es, Cookies ohne das Secure-Flag in Produktionsumgebungen zu setzen.</li> </ul> <p>\u00dcberblick</p> <p>Benutzerdefinierte Header erm\u00f6glichen es Ihnen, spezifische HTTP-Header hinzuzuf\u00fcgen, um Anwendungs- oder Leistungsanforderungen zu erf\u00fcllen. Sie bieten Flexibilit\u00e4t, m\u00fcssen aber sorgf\u00e4ltig konfiguriert werden, um die Preisgabe sensibler Serverdetails zu vermeiden.</p> <p>Vorteile von benutzerdefinierten Headern</p> <ul> <li>Verbessern Sie die Sicherheit, indem Sie unn\u00f6tige Header entfernen, die Serverdetails preisgeben k\u00f6nnten.</li> <li>F\u00fcgen Sie anwendungsspezifische Header hinzu, um die Funktionalit\u00e4t oder das Debugging zu verbessern.</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>CUSTOM_HEADER</code> multisite ja Benutzerdefinierter Header: Bietet eine M\u00f6glichkeit, benutzerdefinierte Header im Format <code>HeaderName: HeaderValue</code> f\u00fcr spezielle Sicherheits- oder Leistungsverbesserungen hinzuzuf\u00fcgen. <code>REMOVE_HEADERS</code> <code>Server Expect-CT X-Powered-By X-AspNet-Version X-AspNetMvc-Version Public-Key-Pins</code> multisite nein Header entfernen: Gibt an, welche Header entfernt werden sollen, um die Wahrscheinlichkeit der Preisgabe interner Serverdetails und bekannter Schwachstellen zu verringern. <p>Sicherheitsaspekte</p> <ul> <li>Vermeiden Sie die Preisgabe sensibler Informationen durch benutzerdefinierte Header.</li> <li>\u00dcberpr\u00fcfen und aktualisieren Sie benutzerdefinierte Header regelm\u00e4\u00dfig, um sie an die Anforderungen Ihrer Anwendung anzupassen.</li> </ul> <p>Bew\u00e4hrte Praktiken</p> <ul> <li>Verwenden Sie <code>REMOVE_HEADERS</code>, um Header wie <code>Server</code> und <code>X-Powered-By</code> zu entfernen und so das Risiko des Fingerprintings zu verringern.</li> <li>Testen Sie benutzerdefinierte Header in einer Staging-Umgebung, bevor Sie sie in der Produktion einsetzen.</li> </ul>"},{"location":"de/features/#beispielkonfigurationen_10","title":"Beispielkonfigurationen","text":"Grundlegende Sicherheits-HeaderVerbesserte Cookie-SicherheitBenutzerdefinierte Header f\u00fcr APIContent Security Policy - Berichtsmodus <p>Eine Standardkonfiguration mit wesentlichen Sicherheits-Headern:</p> <pre><code>STRICT_TRANSPORT_SECURITY: \"max-age=63072000; includeSubDomains; preload\"\nCONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self'; object-src 'none'; frame-ancestors 'self'\"\nX_FRAME_OPTIONS: \"SAMEORIGIN\"\nX_CONTENT_TYPE_OPTIONS: \"nosniff\"\nREFERRER_POLICY: \"strict-origin-when-cross-origin\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version\"\n</code></pre> <p>Konfiguration mit robusten Cookie-Sicherheitseinstellungen:</p> <pre><code>COOKIE_FLAGS: \"* HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_2: \"session_cookie Secure HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_3: \"auth_cookie Secure HttpOnly SameSite=Strict Max-Age=3600\"\nCOOKIE_AUTO_SECURE_FLAG: \"yes\"\n</code></pre> <p>Konfiguration f\u00fcr einen API-Dienst mit benutzerdefinierten Headern:</p> <pre><code>CUSTOM_HEADER: \"API-Version: 1.2.3\"\nCUSTOM_HEADER_2: \"Access-Control-Max-Age: 86400\"\nCONTENT_SECURITY_POLICY: \"default-src 'none'; frame-ancestors 'none'\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version X-Runtime\"\n</code></pre> <p>Konfiguration zum Testen von CSP, ohne die Funktionalit\u00e4t zu beeintr\u00e4chtigen:</p> <pre><code>CONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self' https://trusted-cdn.example.com; img-src 'self' data: https://*.example.com; style-src 'self' 'unsafe-inline' https://trusted-cdn.example.com; connect-src 'self' https://api.example.com; object-src 'none'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; report-uri https://example.com/csp-reports\"\nCONTENT_SECURITY_POLICY_REPORT_ONLY: \"yes\"\n</code></pre>"},{"location":"de/features/#lets-encrypt","title":"Let's Encrypt","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Let's Encrypt-Plugin vereinfacht die Verwaltung von SSL/TLS-Zertifikaten durch die Automatisierung der Erstellung, Erneuerung und Konfiguration von kostenlosen Zertifikaten von Let's Encrypt. Diese Funktion erm\u00f6glicht sichere HTTPS-Verbindungen f\u00fcr Ihre Websites ohne die Komplexit\u00e4t der manuellen Zertifikatsverwaltung, was sowohl Kosten als auch administrativen Aufwand reduziert.</p> <p>Wie es funktioniert:</p> <ol> <li>Nach der Aktivierung erkennt BunkerWeb automatisch die f\u00fcr Ihre Website konfigurierten Domains.</li> <li>BunkerWeb beantragt kostenlose SSL/TLS-Zertifikate bei der Zertifizierungsstelle von Let's Encrypt.</li> <li>Der Domainbesitz wird entweder durch HTTP-Challenges (Nachweis, dass Sie die Website kontrollieren) oder DNS-Challenges (Nachweis, dass Sie die DNS Ihrer Domain kontrollieren) verifiziert.</li> <li>Zertifikate werden automatisch f\u00fcr Ihre Domains installiert und konfiguriert.</li> <li>BunkerWeb k\u00fcmmert sich im Hintergrund um die Erneuerung der Zertifikate vor deren Ablauf und gew\u00e4hrleistet so eine kontinuierliche HTTPS-Verf\u00fcgbarkeit.</li> <li>Der gesamte Prozess ist vollst\u00e4ndig automatisiert und erfordert nach der Ersteinrichtung nur minimale Eingriffe.</li> </ol> <p>Voraussetzungen</p> <p>Um diese Funktion nutzen zu k\u00f6nnen, stellen Sie sicher, dass f\u00fcr jede Domain korrekte DNS-A-Eintr\u00e4ge konfiguriert sind, die auf die \u00f6ffentliche(n) IP(s) verweisen, unter der/denen BunkerWeb erreichbar ist. Ohne korrekte DNS-Konfiguration schl\u00e4gt der Domain-Verifizierungsprozess fehl.</p>"},{"location":"de/features/#wie-man-es-benutzt_11","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Let's Encrypt-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Setzen Sie die Einstellung <code>AUTO_LETS_ENCRYPT</code> auf <code>yes</code>, um die automatische Ausstellung und Erneuerung von Zertifikaten zu aktivieren.</li> <li>Geben Sie eine Kontakt-E-Mail an: Geben Sie Ihre E-Mail-Adresse in der Einstellung <code>EMAIL_LETS_ENCRYPT</code> ein, um wichtige Benachrichtigungen \u00fcber Ihre Zertifikate zu erhalten.</li> <li>W\u00e4hlen Sie den Challenge-Typ: W\u00e4hlen Sie entweder die <code>http</code>- oder <code>dns</code>-Verifizierung mit der Einstellung <code>LETS_ENCRYPT_CHALLENGE</code>.</li> <li>DNS-Anbieter konfigurieren: Wenn Sie DNS-Challenges verwenden, geben Sie Ihren DNS-Anbieter und Ihre Anmeldeinformationen an.</li> <li>Zertifikatsprofil ausw\u00e4hlen: W\u00e4hlen Sie Ihr bevorzugtes Zertifikatsprofil mit der Einstellung <code>LETS_ENCRYPT_PROFILE</code> (classic, tlsserver oder shortlived).</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration werden Zertifikate automatisch ausgestellt, installiert und bei Bedarf erneuert.</li> </ol> <p>Zertifikatsprofile</p> <p>Let's Encrypt bietet verschiedene Zertifikatsprofile f\u00fcr unterschiedliche Anwendungsf\u00e4lle: - classic: Allzweck-Zertifikate mit 90-t\u00e4giger G\u00fcltigkeit (Standard) - tlsserver: Optimiert f\u00fcr die TLS-Server-Authentifizierung mit 90-t\u00e4giger G\u00fcltigkeit und kleinerem Payload - shortlived: Erh\u00f6hte Sicherheit mit 7-t\u00e4giger G\u00fcltigkeit f\u00fcr automatisierte Umgebungen - custom: Wenn Ihr ACME-Server ein anderes Profil unterst\u00fctzt, legen Sie es mit <code>LETS_ENCRYPT_CUSTOM_PROFILE</code> fest.</p> <p>Profilverf\u00fcgbarkeit</p> <p>Beachten Sie, dass die Profile <code>tlsserver</code> und <code>shortlived</code> derzeit m\u00f6glicherweise nicht in allen Umgebungen oder mit allen ACME-Clients verf\u00fcgbar sind. Das <code>classic</code>-Profil hat die breiteste Kompatibilit\u00e4t und wird f\u00fcr die meisten Benutzer empfohlen. Wenn ein ausgew\u00e4hltes Profil nicht verf\u00fcgbar ist, greift das System automatisch auf das <code>classic</code>-Profil zur\u00fcck.</p>"},{"location":"de/features/#konfigurationseinstellungen_11","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>AUTO_LETS_ENCRYPT</code> <code>no</code> multisite nein Let's Encrypt aktivieren: Auf <code>yes</code> setzen, um die automatische Ausstellung und Erneuerung von Zertifikaten zu aktivieren. <code>LETS_ENCRYPT_PASSTHROUGH</code> <code>no</code> multisite nein Let's Encrypt durchleiten: Auf <code>yes</code> setzen, um Let's Encrypt-Anfragen an den Webserver weiterzuleiten. Dies ist n\u00fctzlich, wenn BunkerWeb hinter einem anderen Reverse-Proxy mit SSL-Handling steht. <code>EMAIL_LETS_ENCRYPT</code> <code>contact@{FIRST_SERVER}</code> multisite nein Kontakt-E-Mail: E-Mail-Adresse, die f\u00fcr Let's Encrypt-Benachrichtigungen verwendet und in Zertifikate aufgenommen wird. <code>LETS_ENCRYPT_CHALLENGE</code> <code>http</code> multisite nein Challenge-Typ: Methode zur \u00dcberpr\u00fcfung des Domainbesitzes. Optionen: <code>http</code> oder <code>dns</code>. <code>LETS_ENCRYPT_DNS_PROVIDER</code> multisite nein DNS-Anbieter: Bei Verwendung von DNS-Challenges der zu verwendende DNS-Anbieter (z.B. cloudflare, route53, digitalocean). <code>LETS_ENCRYPT_DNS_PROPAGATION</code> <code>default</code> multisite nein DNS-Propagation: Die Wartezeit f\u00fcr die DNS-Propagation in Sekunden. Wenn kein Wert angegeben wird, wird die Standard-Propagationszeit des Anbieters verwendet. <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> multisite ja Anmeldeinformationselement: Konfigurationselemente f\u00fcr die Authentifizierung des DNS-Anbieters (z. B. <code>cloudflare_api_token 123456</code>). Werte k\u00f6nnen Rohtext, base64-kodiert oder ein JSON-Objekt sein. <code>USE_LETS_ENCRYPT_WILDCARD</code> <code>no</code> multisite nein Wildcard-Zertifikate: Wenn auf <code>yes</code> gesetzt, werden Wildcard-Zertifikate f\u00fcr alle Domains erstellt. Nur mit DNS-Challenges verf\u00fcgbar. <code>USE_LETS_ENCRYPT_STAGING</code> <code>no</code> multisite nein Staging verwenden: Wenn auf <code>yes</code> gesetzt, wird die Staging-Umgebung von Let's Encrypt zum Testen verwendet. Staging hat h\u00f6here Ratenbegrenzungen, aber die Zertifikate sind nicht vertrauensw\u00fcrdig. <code>LETS_ENCRYPT_CLEAR_OLD_CERTS</code> <code>no</code> global nein Alte Zertifikate l\u00f6schen: Wenn auf <code>yes</code> gesetzt, werden alte Zertifikate, die bei der Erneuerung nicht mehr ben\u00f6tigt werden, entfernt. <code>LETS_ENCRYPT_PROFILE</code> <code>classic</code> multisite nein Zertifikatsprofil: W\u00e4hlen Sie das zu verwendende Zertifikatsprofil aus. Optionen: <code>classic</code> (Allzweck), <code>tlsserver</code> (optimiert f\u00fcr TLS-Server) oder <code>shortlived</code> (7-Tage-Zertifikate). <code>LETS_ENCRYPT_CUSTOM_PROFILE</code> multisite nein Benutzerdefiniertes Zertifikatsprofil: Geben Sie ein benutzerdefiniertes Zertifikatsprofil ein, wenn Ihr ACME-Server nicht standardm\u00e4\u00dfige Profile unterst\u00fctzt. Dies \u00fcberschreibt <code>LETS_ENCRYPT_PROFILE</code>, falls gesetzt. <code>LETS_ENCRYPT_MAX_RETRIES</code> <code>3</code> multisite nein Maximale Wiederholungen: Anzahl der Wiederholungsversuche bei der Zertifikatserstellung bei einem Fehler. Auf <code>0</code> setzen, um Wiederholungen zu deaktivieren. N\u00fctzlich bei tempor\u00e4ren Netzwerkproblemen. <p>!!! info \"Informationen und Verhalten\" - Die Einstellung <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> ist eine Mehrfacheinstellung und kann verwendet werden, um mehrere Elemente f\u00fcr den DNS-Anbieter festzulegen. Die Elemente werden als Cache-Datei gespeichert, und Certbot liest die Anmeldeinformationen daraus. - Wenn keine <code>LETS_ENCRYPT_DNS_PROPAGATION</code>-Einstellung angegeben ist, wird die Standard-Propagationszeit des Anbieters verwendet. - Die vollst\u00e4ndige Let's Encrypt-Automatisierung mit der <code>http</code>-Challenge funktioniert im Stream-Modus, solange Sie den Port <code>80/tcp</code> von au\u00dfen \u00f6ffnen. Verwenden Sie die Einstellung <code>LISTEN_STREAM_PORT_SSL</code>, um Ihren SSL/TLS-Listening-Port zu w\u00e4hlen. - Wenn <code>LETS_ENCRYPT_PASSTHROUGH</code> auf <code>yes</code> gesetzt ist, behandelt BunkerWeb die ACME-Challenge-Anfragen nicht selbst, sondern leitet sie an den Backend-Webserver weiter. Dies ist n\u00fctzlich in Szenarien, in denen BunkerWeb als Reverse-Proxy vor einem anderen Server fungiert, der f\u00fcr die Verarbeitung von Let's Encrypt-Challenges konfiguriert ist.</p> <p>HTTP- vs. DNS-Challenges</p> <p>HTTP-Challenges sind einfacher einzurichten und funktionieren f\u00fcr die meisten Websites gut:</p> <pre><code>- Erfordert, dass Ihre Website \u00f6ffentlich auf Port 80 erreichbar ist\n- Wird automatisch von BunkerWeb konfiguriert\n- Kann nicht f\u00fcr Wildcard-Zertifikate verwendet werden\n\n**DNS-Challenges** bieten mehr Flexibilit\u00e4t und sind f\u00fcr Wildcard-Zertifikate erforderlich:\n\n- Funktioniert auch, wenn Ihre Website nicht \u00f6ffentlich erreichbar ist\n- Erfordert API-Anmeldeinformationen des DNS-Anbieters\n- Erforderlich f\u00fcr Wildcard-Zertifikate (z. B. *.example.com)\n- N\u00fctzlich, wenn Port 80 blockiert oder nicht verf\u00fcgbar ist\n</code></pre> <p>Wildcard-Zertifikate</p> <p>Wildcard-Zertifikate sind nur mit DNS-Challenges verf\u00fcgbar. Wenn Sie sie verwenden m\u00f6chten, m\u00fcssen Sie die Einstellung <code>USE_LETS_ENCRYPT_WILDCARD</code> auf <code>yes</code> setzen und Ihre DNS-Anbieter-Anmeldeinformationen korrekt konfigurieren.</p> <p>Ratenbegrenzungen</p> <p>Let's Encrypt hat Ratenbegrenzungen f\u00fcr die Ausstellung von Zertifikaten. Verwenden Sie beim Testen von Konfigurationen die Staging-Umgebung, indem Sie <code>USE_LETS_ENCRYPT_STAGING</code> auf <code>yes</code> setzen, um zu vermeiden, dass Sie die Produktions-Ratenbegrenzungen erreichen. Staging-Zertifikate sind von Browsern nicht vertrauensw\u00fcrdig, aber n\u00fctzlich zur Validierung Ihrer Einrichtung.</p>"},{"location":"de/features/#unterstutzte-dns-anbieter","title":"Unterst\u00fctzte DNS-Anbieter","text":"<p>Das Let's Encrypt-Plugin unterst\u00fctzt eine breite Palette von DNS-Anbietern f\u00fcr DNS-Challenges. Jeder Anbieter ben\u00f6tigt spezifische Anmeldeinformationen, die \u00fcber die Einstellung <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> bereitgestellt werden m\u00fcssen.</p> Anbieter Beschreibung Obligatorische Einstellungen Optionale Einstellungen Dokumentation <code>bunny</code> bunny.net <code>api_key</code> Dokumentation <code>cloudflare</code> Cloudflare entweder <code>api_token</code>oder <code>email</code> und <code>api_key</code> Dokumentation <code>desec</code> deSEC <code>token</code> Dokumentation <code>digitalocean</code> DigitalOcean <code>token</code> Dokumentation <code>domainoffensive</code> Domain-Offensive <code>api_token</code> Dokumentation <code>dnsimple</code> DNSimple <code>token</code> Dokumentation <code>dnsmadeeasy</code> DNS Made Easy <code>api_key</code><code>secret_key</code> Dokumentation <code>dynu</code> Dynu <code>auth_token</code> Dokumentation <code>gehirn</code> Gehirn DNS <code>api_token</code><code>api_secret</code> Dokumentation <code>google</code> Google Cloud <code>project_id</code><code>private_key_id</code><code>private_key</code><code>client_email</code><code>client_id</code><code>client_x509_cert_url</code> <code>type</code> (Standard: <code>service_account</code>)<code>auth_uri</code> (Standard: <code>https://accounts.google.com/o/oauth2/auth</code>)<code>token_uri</code> (Standard: <code>https://accounts.google.com/o/oauth2/token</code>)<code>auth_provider_x509_cert_url</code> (Standard: <code>https://www.googleapis.com/oauth2/v1/certs</code>) Dokumentation <code>infomaniak</code> Infomaniak <code>token</code> Dokumentation <code>ionos</code> IONOS <code>prefix</code><code>secret</code> <code>endpoint</code> (Standard: <code>https://api.hosting.ionos.com</code>) Dokumentation <code>linode</code> Linode <code>key</code> Dokumentation <code>luadns</code> LuaDNS <code>email</code><code>token</code> Dokumentation <code>njalla</code> Njalla <code>token</code> Dokumentation <code>nsone</code> NS1 <code>api_key</code> Dokumentation <code>ovh</code> OVH <code>application_key</code><code>application_secret</code><code>consumer_key</code> <code>endpoint</code> (Standard: <code>ovh-eu</code>) Dokumentation <code>rfc2136</code> RFC 2136 <code>server</code><code>name</code><code>secret</code> <code>port</code> (Standard: <code>53</code>)<code>algorithm</code> (Standard: <code>HMAC-SHA512</code>)<code>sign_query</code> (Standard: <code>false</code>) Dokumentation <code>route53</code> Amazon Route 53 <code>access_key_id</code><code>secret_access_key</code> Dokumentation <code>sakuracloud</code> Sakura Cloud <code>api_token</code><code>api_secret</code> Dokumentation <code>scaleway</code> Scaleway <code>application_token</code> Dokumentation"},{"location":"de/features/#beispielkonfigurationen_11","title":"Beispielkonfigurationen","text":"Grundlegende HTTP-ChallengeCloudflare DNS mit WildcardAWS Route53-KonfigurationTesten mit Staging-Umgebung und WiederholungenDigitalOcean mit benutzerdefinierter PropagationszeitGoogle Cloud DNS <p>Einfache Konfiguration mit HTTP-Challenges f\u00fcr eine einzelne Domain:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\n</code></pre> <p>Konfiguration f\u00fcr Wildcard-Zertifikate mit Cloudflare DNS:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"cloudflare\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"api_token IHR_API_TOKEN\"\nUSE_LETS_ENCRYPT_WILDCARD: \"yes\"\n</code></pre> <p>Konfiguration mit Amazon Route53 f\u00fcr DNS-Challenges:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"route53\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"aws_access_key_id IHR_ZUGRIFFSSCHLUESSEL\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"aws_secret_access_key IHR_GEHEIMSCHLUESSEL\"\n</code></pre> <p>Konfiguration zum Testen der Einrichtung mit der Staging-Umgebung und erweiterten Wiederholungseinstellungen:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\nUSE_LETS_ENCRYPT_STAGING: \"yes\"\nLETS_ENCRYPT_MAX_RETRIES: \"5\"\n</code></pre> <p>Konfiguration mit DigitalOcean DNS mit einer l\u00e4ngeren Propagationswartezeit:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"digitalocean\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"token IHR_API_TOKEN\"\nLETS_ENCRYPT_DNS_PROPAGATION: \"120\"\n</code></pre> <p>Konfiguration mit Google Cloud DNS mit Anmeldeinformationen f\u00fcr ein Dienstkonto:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"google\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"project_id ihre-projekt-id\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"private_key_id ihre-private-key-id\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_3: \"private_key ihr-private-key\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_4: \"client_email ihre-dienstkonto-email\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_5: \"client_id ihre-client-id\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_6: \"client_x509_cert_url ihre-zertifikats-url\"\n</code></pre>"},{"location":"de/features/#limit","title":"Limit","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Limit-Plugin in BunkerWeb bietet robuste Funktionen zur Durchsetzung von Begrenzungsrichtlinien auf Ihrer Website, um eine faire Nutzung zu gew\u00e4hrleisten und Ihre Ressourcen vor Missbrauch, Denial-of-Service-Angriffen und \u00fcberm\u00e4\u00dfigem Ressourcenverbrauch zu sch\u00fctzen. Diese Richtlinien umfassen:</p> <ul> <li>Anzahl der Verbindungen pro IP-Adresse (STREAM-Unterst\u00fctzung )</li> <li>Anzahl der Anfragen pro IP-Adresse und URL innerhalb eines bestimmten Zeitraums (STREAM-Unterst\u00fctzung )</li> </ul>"},{"location":"de/features/#wie-es-funktioniert","title":"Wie es funktioniert","text":"<ol> <li>Ratenbegrenzung: Verfolgt die Anzahl der Anfragen von jeder Client-IP-Adresse an bestimmte URLs. Wenn ein Client die konfigurierte Ratenbegrenzung \u00fcberschreitet, werden nachfolgende Anfragen vor\u00fcbergehend abgelehnt.</li> <li>Verbindungsbegrenzung: \u00dcberwacht und beschr\u00e4nkt die Anzahl der gleichzeitigen Verbindungen von jeder Client-IP-Adresse. Je nach verwendetem Protokoll (HTTP/1, HTTP/2, HTTP/3 oder Stream) k\u00f6nnen unterschiedliche Verbindungsgrenzen angewendet werden.</li> <li>In beiden F\u00e4llen erhalten Clients, die die definierten Grenzwerte \u00fcberschreiten, den HTTP-Statuscode \u201e429 - Too Many Requests\u201c, was hilft, eine Server\u00fcberlastung zu verhindern.</li> </ol>"},{"location":"de/features/#schritte-zur-verwendung","title":"Schritte zur Verwendung","text":"<ol> <li>Anforderungsratenbegrenzung aktivieren: Verwenden Sie <code>USE_LIMIT_REQ</code>, um die Anforderungsratenbegrenzung zu aktivieren und URL-Muster zusammen mit ihren entsprechenden Ratenbegrenzungen zu definieren.</li> <li>Verbindungsbegrenzung aktivieren: Verwenden Sie <code>USE_LIMIT_CONN</code>, um die Verbindungsbegrenzung zu aktivieren und die maximale Anzahl gleichzeitiger Verbindungen f\u00fcr verschiedene Protokolle festzulegen.</li> <li>Granulare Kontrolle anwenden: Erstellen Sie mehrere Ratenbegrenzungsregeln f\u00fcr verschiedene URLs, um unterschiedliche Schutzniveaus auf Ihrer gesamten Website bereitzustellen.</li> <li>Wirksamkeit \u00fcberwachen: Verwenden Sie die Web-Benutzeroberfl\u00e4che, um Statistiken \u00fcber begrenzte Anfragen und Verbindungen anzuzeigen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_12","title":"Konfigurationseinstellungen","text":"Anforderungsratenbegrenzung Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_LIMIT_REQ</code> <code>yes</code> multisite nein Anforderungsbegrenzung aktivieren: Auf <code>yes</code> setzen, um die Funktion zur Ratenbegrenzung von Anfragen zu aktivieren. <code>LIMIT_REQ_URL</code> <code>/</code> multisite ja URL-Muster: URL-Muster (PCRE-Regex), auf das die Ratenbegrenzung angewendet wird; verwenden Sie <code>/</code>, um es f\u00fcr alle Anfragen anzuwenden. <code>LIMIT_REQ_RATE</code> <code>2r/s</code> multisite ja Ratenbegrenzung: Maximale Anfragerate im Format <code>Nr/t</code>, wobei N die Anzahl der Anfragen und t die Zeiteinheit ist: s (Sekunde), m (Minute), h (Stunde) oder d (Tag). <p>Format der Ratenbegrenzung</p> <p>Das Format der Ratenbegrenzung wird als <code>Nr/t</code> angegeben, wobei:</p> <pre><code>- `N` die Anzahl der erlaubten Anfragen ist\n- `r` ein literales 'r' ist (f\u00fcr 'requests')\n- `/` ein literaler Schr\u00e4gstrich ist\n- `t` die Zeiteinheit ist: `s` (Sekunde), `m` (Minute), `h` (Stunde) oder `d` (Tag)\n\nZum Beispiel bedeutet `5r/m`, dass 5 Anfragen pro Minute von jeder IP-Adresse erlaubt sind.\n</code></pre> Verbindungsbegrenzung Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_LIMIT_CONN</code> <code>yes</code> multisite nein Verbindungsbegrenzung aktivieren: Auf <code>yes</code> setzen, um die Funktion zur Verbindungsbegrenzung zu aktivieren. <code>LIMIT_CONN_MAX_HTTP1</code> <code>10</code> multisite nein HTTP/1.X-Verbindungen: Maximale Anzahl gleichzeitiger HTTP/1.X-Verbindungen pro IP-Adresse. <code>LIMIT_CONN_MAX_HTTP2</code> <code>100</code> multisite nein HTTP/2-Streams: Maximale Anzahl gleichzeitiger HTTP/2-Streams pro IP-Adresse. <code>LIMIT_CONN_MAX_HTTP3</code> <code>100</code> multisite nein HTTP/3-Streams: Maximale Anzahl gleichzeitiger HTTP/3-Streams pro IP-Adresse. <code>LIMIT_CONN_MAX_STREAM</code> <code>10</code> multisite nein Stream-Verbindungen: Maximale Anzahl gleichzeitiger Stream-Verbindungen pro IP-Adresse. <p>Verbindungs- vs. Anforderungsbegrenzung</p> <ul> <li>Verbindungsbegrenzung beschr\u00e4nkt die Anzahl der gleichzeitigen Verbindungen, die eine einzelne IP-Adresse aufrechterhalten kann.</li> <li>Anforderungsratenbegrenzung beschr\u00e4nkt die Anzahl der Anfragen, die eine IP-Adresse innerhalb eines definierten Zeitraums stellen kann.</li> </ul> <p>Die Verwendung beider Methoden bietet einen umfassenden Schutz gegen verschiedene Arten von Missbrauch.</p> <p>Festlegen angemessener Grenzwerte</p> <p>Zu restriktive Grenzwerte k\u00f6nnen legitime Benutzer beeintr\u00e4chtigen, insbesondere bei HTTP/2 und HTTP/3, wo Browser oft mehrere Streams verwenden. Die Standardwerte sind f\u00fcr die meisten Anwendungsf\u00e4lle ausgewogen, aber erw\u00e4gen Sie, sie je nach den Bed\u00fcrfnissen Ihrer Anwendung und dem Benutzerverhalten anzupassen.</p>"},{"location":"de/features/#beispielkonfigurationen_12","title":"Beispielkonfigurationen","text":"GrundschutzSchutz spezifischer EndpunkteKonfiguration f\u00fcr eine Website mit hohem VerkehrsaufkommenKonfiguration f\u00fcr einen API-Server <p>Eine einfache Konfiguration mit Standardeinstellungen zum Schutz Ihrer gesamten Website:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"2r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Konfiguration mit unterschiedlichen Ratenbegrenzungen f\u00fcr verschiedene Endpunkte:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Standardregel f\u00fcr alle Anfragen\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"10r/s\"\n\n# Strengere Begrenzung f\u00fcr die Anmeldeseite\nLIMIT_REQ_URL_2: \"^/login\"\nLIMIT_REQ_RATE_2: \"1r/s\"\n\n# Strengere Begrenzung f\u00fcr die API\nLIMIT_REQ_URL_3: \"^/api/\"\nLIMIT_REQ_RATE_3: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Konfiguration, die f\u00fcr Websites mit hohem Verkehrsaufkommen mit gro\u00dfz\u00fcgigeren Grenzwerten optimiert ist:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Allgemeine Begrenzung\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"30r/s\"\n\n# Schutz des Admin-Bereichs\nLIMIT_REQ_URL_2: \"^/admin/\"\nLIMIT_REQ_RATE_2: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"50\"\nLIMIT_CONN_MAX_HTTP2: \"200\"\nLIMIT_CONN_MAX_HTTP3: \"200\"\nLIMIT_CONN_MAX_STREAM: \"30\"\n</code></pre> <p>Konfiguration, die f\u00fcr einen API-Server mit Ratenbegrenzungen in Anfragen pro Minute optimiert ist:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# \u00d6ffentliche API-Endpunkte\nLIMIT_REQ_URL: \"^/api/public/\"\nLIMIT_REQ_RATE: \"120r/m\"\n\n# Private API-Endpunkte\nLIMIT_REQ_URL_2: \"^/api/private/\"\nLIMIT_REQ_RATE_2: \"300r/m\"\n\n# Authentifizierungsendpunkt\nLIMIT_REQ_URL_3: \"^/api/auth\"\nLIMIT_REQ_RATE_3: \"10r/m\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"20\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"20\"\n</code></pre>"},{"location":"de/features/#load-balancer-pro","title":"Load Balancer  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Provides load balancing feature to group of upstreams with optional healthchecks.</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>LOADBALANCER_HEALTHCHECK_DICT_SIZE</code> <code>10m</code> global nein Shared dict size (datastore for all healthchecks). <code>LOADBALANCER_UPSTREAM_NAME</code> global ja Name of the upstream (used in REVERSE_PROXY_HOST). <code>LOADBALANCER_UPSTREAM_SERVERS</code> global ja List of servers/IPs in the server group. <code>LOADBALANCER_UPSTREAM_MODE</code> <code>round-robin</code> global ja Load balancing mode (round-robin or sticky). <code>LOADBALANCER_UPSTREAM_STICKY_METHOD</code> <code>ip</code> global ja Sticky session method (ip or cookie). <code>LOADBALANCER_UPSTREAM_RESOLVE</code> <code>no</code> global ja Dynamically resolve upstream hostnames. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIMEOUT</code> <code>60s</code> global ja Keepalive timeout for upstream connections. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIME</code> <code>1h</code> global ja Keepalive time for upstream connections. <code>LOADBALANCER_HEALTHCHECK_URL</code> <code>/status</code> global ja The healthcheck URL. <code>LOADBALANCER_HEALTHCHECK_INTERVAL</code> <code>2000</code> global ja Healthcheck interval in milliseconds. <code>LOADBALANCER_HEALTHCHECK_TIMEOUT</code> <code>1000</code> global ja Healthcheck timeout in milliseconds. <code>LOADBALANCER_HEALTHCHECK_FALL</code> <code>3</code> global ja Number of failed healthchecks before marking the server as down. <code>LOADBALANCER_HEALTHCHECK_RISE</code> <code>1</code> global ja Number of successful healthchecks before marking the server as up. <code>LOADBALANCER_HEALTHCHECK_VALID_STATUSES</code> <code>200</code> global ja HTTP status considered valid in healthchecks. <code>LOADBALANCER_HEALTHCHECK_CONCURRENCY</code> <code>10</code> global ja Maximum number of concurrent healthchecks. <code>LOADBALANCER_HEALTHCHECK_TYPE</code> <code>http</code> global ja Type of healthcheck (http or https). <code>LOADBALANCER_HEALTHCHECK_SSL_VERIFY</code> <code>yes</code> global ja Verify SSL certificate in healthchecks. <code>LOADBALANCER_HEALTHCHECK_HOST</code> global ja Host header for healthchecks (useful for HTTPS)."},{"location":"de/features/#metrics","title":"Metrics","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Metrics-Plugin bietet umfassende \u00dcberwachungs- und Datenerfassungsfunktionen f\u00fcr Ihre BunkerWeb-Instanz. Mit dieser Funktion k\u00f6nnen Sie verschiedene Leistungsindikatoren, Sicherheitsereignisse und Systemstatistiken verfolgen und erhalten so wertvolle Einblicke in das Verhalten und den Zustand Ihrer gesch\u00fctzten Websites und Dienste.</p> <p>So funktioniert es:</p> <ol> <li>BunkerWeb erfasst w\u00e4hrend der Verarbeitung von Anfragen und Antworten wichtige Metriken.</li> <li>Zu diesen Metriken geh\u00f6ren Z\u00e4hler f\u00fcr blockierte Anfragen, Leistungsmessungen und verschiedene sicherheitsrelevante Statistiken.</li> <li>Die Daten werden effizient im Speicher gespeichert, mit konfigurierbaren Grenzwerten, um eine \u00fcberm\u00e4\u00dfige Ressourcennutzung zu verhindern.</li> <li>F\u00fcr Multi-Instanz-Setups kann Redis zur Zentralisierung und Aggregation von Metrikdaten verwendet werden.</li> <li>Auf die erfassten Metriken kann \u00fcber die API zugegriffen oder in der Web-Benutzeroberfl\u00e4che visualisiert werden.</li> <li>Diese Informationen helfen Ihnen, Sicherheitsbedrohungen zu identifizieren, Probleme zu beheben und Ihre Konfiguration zu optimieren.</li> </ol>"},{"location":"de/features/#technische-umsetzung","title":"Technische Umsetzung","text":"<p>Das Metrics-Plugin funktioniert durch:</p> <ul> <li>Verwendung gemeinsamer W\u00f6rterb\u00fccher in NGINX, wobei <code>metrics_datastore</code> f\u00fcr HTTP und <code>metrics_datastore_stream</code> f\u00fcr TCP/UDP-Verkehr verwendet wird</li> <li>Nutzung eines LRU-Cache f\u00fcr eine effiziente In-Memory-Speicherung</li> <li>Periodische Synchronisierung von Daten zwischen Workern mithilfe von Timern</li> <li>Speicherung detaillierter Informationen \u00fcber blockierte Anfragen, einschlie\u00dflich der Client-IP-Adresse, des Landes, des Zeitstempels, der Anfragedetails und des Blockierungsgrunds</li> <li>Unterst\u00fctzung von Plugin-spezifischen Metriken \u00fcber eine gemeinsame Schnittstelle zur Metrikerfassung</li> <li>Bereitstellung von API-Endpunkten zur Abfrage erfasster Metriken</li> </ul>"},{"location":"de/features/#wie-man-es-benutzt_12","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Metrics-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die Metrikerfassung ist standardm\u00e4\u00dfig aktiviert. Sie k\u00f6nnen dies mit der Einstellung <code>USE_METRICS</code> steuern.</li> <li>Speicherzuweisung konfigurieren: Legen Sie die Speichermenge fest, die f\u00fcr die Metrikspeicherung zugewiesen werden soll, indem Sie die Einstellung <code>METRICS_MEMORY_SIZE</code> verwenden.</li> <li>Speichergrenzen festlegen: Definieren Sie, wie viele blockierte Anfragen pro Worker und in Redis mit den entsprechenden Einstellungen gespeichert werden sollen.</li> <li>Auf die Daten zugreifen: Sehen Sie sich die erfassten Metriken \u00fcber die Web-Benutzeroberfl\u00e4che oder API-Endpunkte an.</li> <li>Informationen analysieren: Verwenden Sie die gesammelten Daten, um Muster zu erkennen, Sicherheitsprobleme zu identifizieren und Ihre Konfiguration zu optimieren.</li> </ol>"},{"location":"de/features/#erfasste-metriken","title":"Erfasste Metriken","text":"<p>Das Metrics-Plugin erfasst die folgenden Informationen:</p> <ol> <li> <p>Blockierte Anfragen: F\u00fcr jede blockierte Anfrage werden die folgenden Daten gespeichert:</p> <ul> <li>Anfrage-ID und Zeitstempel</li> <li>Client-IP-Adresse und Land (sofern verf\u00fcgbar)</li> <li>HTTP-Methode und URL</li> <li>HTTP-Statuscode</li> <li>User-Agent</li> <li>Blockierungsgrund und Sicherheitsmodus</li> <li>Servername</li> <li>Zus\u00e4tzliche Daten im Zusammenhang mit dem Blockierungsgrund</li> </ul> </li> <li> <p>Plugin-Z\u00e4hler: Verschiedene Plugin-spezifische Z\u00e4hler, die Aktivit\u00e4ten und Ereignisse verfolgen.</p> </li> </ol>"},{"location":"de/features/#api-zugriff","title":"API-Zugriff","text":"<p>Auf Metrikdaten kann \u00fcber die internen API-Endpunkte von BunkerWeb zugegriffen werden:</p> <ul> <li>Endpunkt: <code>/metrics/{filter}</code></li> <li>Methode: GET</li> <li>Beschreibung: Ruft Metrikdaten basierend auf dem angegebenen Filter ab</li> <li>Antwortformat: JSON-Objekt, das die angeforderten Metriken enth\u00e4lt</li> </ul> <p>Zum Beispiel gibt <code>/metrics/requests</code> Informationen \u00fcber blockierte Anfragen zur\u00fcck.</p> <p>Konfiguration des API-Zugriffs</p> <p>Um \u00fcber die API auf Metriken zuzugreifen, m\u00fcssen Sie sicherstellen, dass:</p> <pre><code>1. Die API-Funktion mit `USE_API: \"yes\"` aktiviert ist (standardm\u00e4\u00dfig aktiviert)\n2. Ihre Client-IP in der Einstellung `API_WHITELIST_IP` enthalten ist (Standard ist `127.0.0.0/8`)\n3. Sie auf die API \u00fcber den konfigurierten Port zugreifen (Standard ist `5000` \u00fcber die Einstellung `API_HTTP_PORT`)\n4. Sie den korrekten `API_SERVER_NAME`-Wert im Host-Header verwenden (Standard ist `bwapi`)\n5. Wenn `API_TOKEN` konfiguriert ist, f\u00fcgen Sie `Authorization: Bearer &lt;token&gt;` in die Anfrage-Header ein.\n\nTypische Anfragen:\n\nOhne Token (wenn `API_TOKEN` nicht gesetzt ist):\n```bash\ncurl -H \"Host: bwapi\" \\\n     http://ihre-bunkerweb-instanz:5000/metrics/requests\n```\n\nMit Token (wenn `API_TOKEN` gesetzt ist):\n```bash\ncurl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://ihre-bunkerweb-instanz:5000/metrics/requests\n```\n\nWenn Sie den `API_SERVER_NAME` auf einen anderen Wert als den Standard `bwapi` angepasst haben, verwenden Sie diesen Wert stattdessen im Host-Header.\n\nF\u00fcr sichere Produktionsumgebungen beschr\u00e4nken Sie den API-Zugriff auf vertrauensw\u00fcrdige IPs und aktivieren Sie `API_TOKEN`.\n</code></pre>"},{"location":"de/features/#konfigurationseinstellungen_13","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_METRICS</code> <code>yes</code> multisite nein Metriken aktivieren: Auf <code>yes</code> setzen, um die Erfassung und den Abruf von Metriken zu aktivieren. <code>METRICS_MEMORY_SIZE</code> <code>16m</code> global nein Speichergr\u00f6\u00dfe: Gr\u00f6\u00dfe des internen Speichers f\u00fcr Metriken (z. B. <code>16m</code>, <code>32m</code>). <code>METRICS_MAX_BLOCKED_REQUESTS</code> <code>1000</code> global nein Max. blockierte Anfragen: Maximale Anzahl blockierter Anfragen, die pro Worker gespeichert werden sollen. <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> <code>100000</code> global nein Max. Redis-blockierte Anfragen: Maximale Anzahl blockierter Anfragen, die in Redis gespeichert werden sollen. <code>METRICS_SAVE_TO_REDIS</code> <code>yes</code> global nein Metriken in Redis speichern: Auf <code>yes</code> setzen, um Metriken (Z\u00e4hler und Tabellen) zur clusterweiten Aggregation in Redis zu speichern. <p>Dimensionierung der Speicherzuweisung</p> <p>Die Einstellung <code>METRICS_MEMORY_SIZE</code> sollte basierend auf Ihrem Verkehrsaufkommen und der Anzahl der Instanzen angepasst werden. Bei stark frequentierten Websites sollten Sie diesen Wert erh\u00f6hen, um sicherzustellen, dass alle Metriken ohne Datenverlust erfasst werden.</p> <p>Redis-Integration</p> <p>Wenn BunkerWeb f\u00fcr die Verwendung von Redis konfiguriert ist, synchronisiert das Metrics-Plugin blockierte Anfragedaten automatisch mit dem Redis-Server. Dies bietet eine zentralisierte Ansicht von Sicherheitsereignissen \u00fcber mehrere BunkerWeb-Instanzen hinweg.</p> <p>Leistungs\u00fcberlegungen</p> <p>Das Festlegen sehr hoher Werte f\u00fcr <code>METRICS_MAX_BLOCKED_REQUESTS</code> oder <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> kann den Speicherverbrauch erh\u00f6hen. \u00dcberwachen Sie Ihre Systemressourcen und passen Sie diese Werte entsprechend Ihren tats\u00e4chlichen Bed\u00fcrfnissen und verf\u00fcgbaren Ressourcen an.</p> <p>Worker-spezifischer Speicher</p> <p>Jeder NGINX-Worker verwaltet seine eigenen Metriken im Speicher. Beim Zugriff auf Metriken \u00fcber die API werden die Daten aller Worker automatisch aggregiert, um eine vollst\u00e4ndige Ansicht zu erhalten.</p>"},{"location":"de/features/#beispielkonfigurationen_13","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationUmgebung mit geringen RessourcenUmgebung mit hohem VerkehrsaufkommenMetriken deaktiviert <p>Standardkonfiguration, die f\u00fcr die meisten Bereitstellungen geeignet ist:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"16m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"1000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"100000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> <p>Konfiguration, die f\u00fcr Umgebungen mit begrenzten Ressourcen optimiert ist:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"8m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"500\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"10000\"\nMETRICS_SAVE_TO_REDIS: \"no\"\n</code></pre> <p>Konfiguration f\u00fcr Websites mit hohem Verkehrsaufkommen, die mehr Sicherheitsereignisse verfolgen m\u00fcssen:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"64m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"5000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"500000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> <p>Konfiguration mit deaktivierter Metrikerfassung:</p> <pre><code>USE_METRICS: \"no\"\n</code></pre>"},{"location":"de/features/#migration-pro","title":"Migration  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Migration of BunkerWeb configuration between instances made easy via the web UI</p>"},{"location":"de/features/#miscellaneous","title":"Miscellaneous","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Plugin \"Verschiedenes\" (Miscellaneous) bietet wesentliche Grundeinstellungen, die helfen, die Sicherheit und Funktionalit\u00e4t Ihrer Website aufrechtzuerhalten. Diese Kernkomponente bietet umfassende Kontrollen f\u00fcr:</p> <ul> <li>Serververhalten - Konfigurieren Sie, wie Ihr Server auf verschiedene Anfragen reagiert</li> <li>HTTP-Einstellungen - Verwalten Sie Methoden, Anforderungsgr\u00f6\u00dfen und Protokolloptionen</li> <li>Dateiverwaltung - Steuern Sie die Bereitstellung statischer Dateien und optimieren Sie deren Auslieferung</li> <li>Protokollunterst\u00fctzung - Aktivieren Sie moderne HTTP-Protokolle f\u00fcr eine bessere Leistung</li> <li>Systemkonfigurationen - Erweitern Sie die Funktionalit\u00e4t und verbessern Sie die Sicherheit</li> </ul> <p>Ob Sie HTTP-Methoden einschr\u00e4nken, Anforderungsgr\u00f6\u00dfen verwalten, das Datei-Caching optimieren oder steuern m\u00fcssen, wie Ihr Server auf verschiedene Anfragen reagiert, dieses Plugin gibt Ihnen die Werkzeuge, um das Verhalten Ihres Webdienstes feinabzustimmen und gleichzeitig Leistung und Sicherheit zu optimieren.</p>"},{"location":"de/features/#hauptmerkmale","title":"Hauptmerkmale","text":"Funktionskategorie Beschreibung Steuerung der HTTP-Methoden Definieren Sie, welche HTTP-Methoden f\u00fcr Ihre Anwendung zul\u00e4ssig sind Schutz des Standardservers Verhindern Sie unbefugten Zugriff durch falsche Hostnamen und erzwingen Sie SNI f\u00fcr sichere Verbindungen Verwaltung der Anforderungsgr\u00f6\u00dfe Legen Sie Grenzwerte f\u00fcr Client-Anforderungsk\u00f6rper und Datei-Uploads fest Bereitstellung statischer Dateien Konfigurieren und optimieren Sie die Auslieferung von statischen Inhalten aus benutzerdefinierten Stammordnern Datei-Caching Verbessern Sie die Leistung durch fortschrittliche Caching-Mechanismen f\u00fcr Dateideskriptoren Protokollunterst\u00fctzung Konfigurieren Sie moderne HTTP-Protokolloptionen (HTTP2/HTTP3) und Alt-Svc-Porteinstellungen Anonyme Berichterstattung Optionale Nutzungsstatistik-Berichterstattung zur Verbesserung von BunkerWeb Unterst\u00fctzung f\u00fcr externe Plugins Erweitern Sie die Funktionalit\u00e4t durch die Integration externer Plugins \u00fcber URLs Steuerung des HTTP-Status Konfigurieren Sie, wie Ihr Server bei der Ablehnung von Anfragen reagiert (einschlie\u00dflich Verbindungsabbruch)"},{"location":"de/features/#konfigurationsanleitung","title":"Konfigurationsanleitung","text":"Sicherheit des StandardserversHTTP-Status bei AblehnungHTTP-MethodenGr\u00f6\u00dfenbeschr\u00e4nkungen f\u00fcr AnfragenProtokollunterst\u00fctzungBereitstellung statischer DateienSystemeinstellungenDatei-Caching <p>Steuerung des Standardservers</p> <p>In HTTP gibt der <code>Host</code>-Header den Zielserver an, aber er kann fehlen oder unbekannt sein, oft aufgrund von Bots, die nach Schwachstellen suchen.</p> <p>Um solche Anfragen zu blockieren:</p> <ul> <li>Setzen Sie <code>DISABLE_DEFAULT_SERVER</code> auf <code>yes</code>, um solche Anfragen stillschweigend mit dem NGINX-Statuscode <code>444</code> abzulehnen.</li> <li>F\u00fcr eine strengere Sicherheit aktivieren Sie <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code>, um SSL/TLS-Verbindungen ohne g\u00fcltiges SNI abzulehnen.</li> </ul> <p>Sicherheitsvorteile</p> <ul> <li>Blockiert die Manipulation des Host-Headers und das Scannen von virtuellen Hosts</li> <li>Mindert die Risiken von HTTP-Request-Smuggling</li> <li>Entfernt den Standardserver als Angriffsvektor</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>DISABLE_DEFAULT_SERVER</code> <code>no</code> global nein Standardserver: Auf <code>yes</code> setzen, um den Standardserver zu deaktivieren, wenn kein Hostname mit der Anfrage \u00fcbereinstimmt. <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> <code>no</code> global nein Striktes SNI: Wenn auf <code>yes</code> gesetzt, ist SNI f\u00fcr HTTPS-Verbindungen erforderlich und Verbindungen ohne g\u00fcltiges SNI werden abgelehnt. <p>SNI-Erzwingung</p> <p>Die Aktivierung der strikten SNI-Validierung bietet eine st\u00e4rkere Sicherheit, kann jedoch Probleme verursachen, wenn BunkerWeb hinter einem Reverse-Proxy betrieben wird, der HTTPS-Anfragen ohne Beibehaltung der SNI-Informationen weiterleitet. Testen Sie gr\u00fcndlich, bevor Sie dies in Produktionsumgebungen aktivieren.</p> <p>Steuerung des HTTP-Status</p> <p>Der erste Schritt bei der Behandlung von verweigertem Client-Zugriff ist die Definition der geeigneten Aktion. Dies kann mit der Einstellung <code>DENY_HTTP_STATUS</code> konfiguriert werden. Wenn BunkerWeb eine Anfrage ablehnt, k\u00f6nnen Sie seine Antwort steuern. Standardm\u00e4\u00dfig gibt es einen <code>403 Forbidden</code>-Status zur\u00fcck und zeigt dem Client eine Webseite oder benutzerdefinierten Inhalt an.</p> <p>Alternativ schlie\u00dft das Setzen auf <code>444</code> die Verbindung sofort, ohne eine Antwort zu senden. Dieser nicht standardm\u00e4\u00dfige Statuscode, der spezifisch f\u00fcr NGINX ist, ist n\u00fctzlich, um unerw\u00fcnschte Anfragen stillschweigend zu verwerfen.</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>DENY_HTTP_STATUS</code> <code>403</code> global nein HTTP-Status bei Ablehnung: HTTP-Statuscode, der gesendet wird, wenn eine Anfrage abgelehnt wird (403 oder 444). Code 444 schlie\u00dft die Verbindung. <p>\u00dcberlegungen zum Statuscode 444</p> <p>Da Clients kein Feedback erhalten, kann die Fehlerbehebung schwieriger sein. Das Setzen von <code>444</code> wird nur empfohlen, wenn Sie Falsch-Positive gr\u00fcndlich behandelt haben, mit BunkerWeb erfahren sind und ein h\u00f6heres Sicherheitsniveau ben\u00f6tigen.</p> <p>Stream-Modus</p> <p>Im Stream-Modus wird diese Einstellung immer als <code>444</code> erzwungen, was bedeutet, dass die Verbindung geschlossen wird, unabh\u00e4ngig vom konfigurierten Wert.</p> <p>Steuerung der HTTP-Methoden</p> <p>Die Beschr\u00e4nkung der HTTP-Methoden auf nur diejenigen, die von Ihrer Anwendung ben\u00f6tigt werden, ist eine grundlegende Sicherheitsma\u00dfnahme, die dem Prinzip der geringsten Rechte folgt. Indem Sie explizit zul\u00e4ssige HTTP-Methoden definieren, k\u00f6nnen Sie das Risiko der Ausnutzung durch ungenutzte oder gef\u00e4hrliche Methoden minimieren.</p> <p>Diese Funktion wird mit der Einstellung <code>ALLOWED_METHODS</code> konfiguriert, wobei die Methoden aufgelistet und durch ein <code>|</code> getrennt sind (Standard: <code>GET|POST|HEAD</code>). Wenn ein Client versucht, eine nicht aufgelistete Methode zu verwenden, antwortet der Server mit einem 405 - Method Not Allowed-Status.</p> <p>F\u00fcr die meisten Websites ist der Standardwert <code>GET|POST|HEAD</code> ausreichend. Wenn Ihre Anwendung RESTful-APIs verwendet, m\u00fcssen Sie m\u00f6glicherweise Methoden wie <code>PUT</code> und <code>DELETE</code> hinzuf\u00fcgen.</p> <p>Sicherheitsvorteile</p> <ul> <li>Verhindert die Ausnutzung von ungenutzten oder unn\u00f6tigen HTTP-Methoden</li> <li>Reduziert die Angriffsfl\u00e4che durch Deaktivierung potenziell sch\u00e4dlicher Methoden</li> <li>Blockiert von Angreifern verwendete Techniken zur Aufz\u00e4hlung von HTTP-Methoden</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>ALLOWED_METHODS</code> <code>GET     | POST    | HEAD</code> multisite nein HTTP-Methoden: Liste der erlaubten HTTP-Methoden, getrennt durch Pipe-Zeichen (<code>|</code>). <p>CORS und Preflight-Anfragen</p> <p>Wenn Ihre Anwendung Cross-Origin Resource Sharing (CORS) unterst\u00fctzt, sollten Sie die <code>OPTIONS</code>-Methode in der <code>ALLOWED_METHODS</code>-Einstellung aufnehmen, um Preflight-Anfragen zu bearbeiten. Dies gew\u00e4hrleistet die ordnungsgem\u00e4\u00dfe Funktionalit\u00e4t f\u00fcr Browser, die Cross-Origin-Anfragen stellen.</p> <p>Sicherheits\u00fcberlegungen</p> <ul> <li>Vermeiden Sie die Aktivierung von <code>TRACE</code> oder <code>CONNECT</code>: Diese Methoden werden selten ben\u00f6tigt und k\u00f6nnen erhebliche Sicherheitsrisiken mit sich bringen, wie z. B. die Erm\u00f6glichung von Cross-Site-Tracing (XST) oder Tunneling-Angriffen.</li> <li>\u00dcberpr\u00fcfen Sie regelm\u00e4\u00dfig die erlaubten Methoden: \u00dcberpr\u00fcfen Sie die <code>ALLOWED_METHODS</code>-Einstellung regelm\u00e4\u00dfig, um sicherzustellen, dass sie den aktuellen Anforderungen Ihrer Anwendung entspricht.</li> <li>Testen Sie gr\u00fcndlich vor der Bereitstellung: \u00c4nderungen an den Einschr\u00e4nkungen von HTTP-Methoden k\u00f6nnen die Anwendungsfunktionalit\u00e4t beeintr\u00e4chtigen. Validieren Sie Ihre Konfiguration in einer Staging-Umgebung, bevor Sie sie in der Produktion anwenden.</li> </ul> <p>Gr\u00f6\u00dfenbeschr\u00e4nkungen f\u00fcr Anfragen</p> <p>Die maximale Gr\u00f6\u00dfe des Anforderungsk\u00f6rpers kann mit der Einstellung <code>MAX_CLIENT_SIZE</code> gesteuert werden (Standard: <code>10m</code>). Akzeptierte Werte folgen der hier beschriebenen Syntax.</p> <p>Sicherheitsvorteile</p> <ul> <li>Sch\u00fctzt vor Denial-of-Service-Angriffen durch \u00fcberm\u00e4\u00dfige Payload-Gr\u00f6\u00dfen</li> <li>Mildert Puffer\u00fcberlauf-Schwachstellen</li> <li>Verhindert Angriffe durch Datei-Uploads</li> <li>Reduziert das Risiko der Ersch\u00f6pfung von Serverressourcen</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>MAX_CLIENT_SIZE</code> <code>10m</code> multisite nein Maximale Anforderungsgr\u00f6\u00dfe: Die maximal zul\u00e4ssige Gr\u00f6\u00dfe f\u00fcr Client-Anforderungsk\u00f6rper (z. B. Datei-Uploads). <p>Best Practices f\u00fcr die Konfiguration der Anforderungsgr\u00f6\u00dfe</p> <p>Wenn Sie einen Anforderungsk\u00f6rper von unbegrenzter Gr\u00f6\u00dfe zulassen m\u00fcssen, k\u00f6nnen Sie den Wert <code>MAX_CLIENT_SIZE</code> auf <code>0</code> setzen. Dies wird jedoch aufgrund potenzieller Sicherheits- und Leistungsrisiken nicht empfohlen.</p> <p>Best Practices:</p> <ul> <li>Konfigurieren Sie <code>MAX_CLIENT_SIZE</code> immer auf den kleinstm\u00f6glichen Wert, der die legitimen Anforderungen Ihrer Anwendung erf\u00fcllt.</li> <li>\u00dcberpr\u00fcfen und passen Sie diese Einstellung regelm\u00e4\u00dfig an die sich \u00e4ndernden Bed\u00fcrfnisse Ihrer Anwendung an.</li> <li>Vermeiden Sie es, <code>0</code> zu setzen, es sei denn, es ist absolut notwendig, da dies Ihren Server Denial-of-Service-Angriffen und Ressourcenersch\u00f6pfung aussetzen kann.</li> </ul> <p>Durch sorgf\u00e4ltige Verwaltung dieser Einstellung k\u00f6nnen Sie optimale Sicherheit und Leistung f\u00fcr Ihre Anwendung gew\u00e4hrleisten.</p> <p>HTTP-Protokolleinstellungen</p> <p>Moderne HTTP-Protokolle wie HTTP/2 und HTTP/3 verbessern Leistung und Sicherheit. BunkerWeb erm\u00f6glicht eine einfache Konfiguration dieser Protokolle.</p> <p>Sicherheits- und Leistungsvorteile</p> <ul> <li>Sicherheitsvorteile: Moderne Protokolle wie HTTP/2 und HTTP/3 erzwingen standardm\u00e4\u00dfig TLS/HTTPS, reduzieren die Anf\u00e4lligkeit f\u00fcr bestimmte Angriffe und verbessern die Privatsph\u00e4re durch verschl\u00fcsselte Header (HTTP/3).</li> <li>Leistungsvorteile: Funktionen wie Multiplexing, Header-Komprimierung, Server-Push und bin\u00e4re Daten\u00fcbertragung verbessern Geschwindigkeit und Effizienz.</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>LISTEN_HTTP</code> <code>yes</code> multisite nein HTTP-Listen: Auf (unsichere) HTTP-Anfragen antworten, wenn auf <code>yes</code> gesetzt. <code>HTTP2</code> <code>yes</code> multisite nein HTTP2: Unterst\u00fctzt das HTTP2-Protokoll, wenn HTTPS aktiviert ist. <code>HTTP3</code> <code>yes</code> multisite nein HTTP3: Unterst\u00fctzt das HTTP3-Protokoll, wenn HTTPS aktiviert ist. <code>HTTP3_ALT_SVC_PORT</code> <code>443</code> multisite nein HTTP3 Alt-Svc Port: Port, der im Alt-Svc-Header f\u00fcr HTTP3 verwendet wird. <p>\u00dcber HTTP/3</p> <p>HTTP/3, die neueste Version des Hypertext Transfer Protocol, verwendet QUIC \u00fcber UDP anstelle von TCP und behebt Probleme wie das Head-of-Line-Blocking f\u00fcr schnellere, zuverl\u00e4ssigere Verbindungen.</p> <p>NGINX hat ab Version 1.25.0 experimentelle Unterst\u00fctzung f\u00fcr HTTP/3 und QUIC eingef\u00fchrt. Diese Funktion ist jedoch noch experimentell, und bei der Verwendung in der Produktion ist Vorsicht geboten. Weitere Einzelheiten finden Sie in der offiziellen Dokumentation von NGINX.</p> <p>Gr\u00fcndliche Tests werden empfohlen, bevor HTTP/3 in Produktionsumgebungen aktiviert wird.</p> <p>Konfiguration der Dateibereitstellung</p> <p>BunkerWeb kann statische Dateien direkt bereitstellen oder als Reverse-Proxy zu einem Anwendungsserver fungieren. Standardm\u00e4\u00dfig werden Dateien aus <code>/var/www/html/{server_name}</code> bereitgestellt.</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>SERVE_FILES</code> <code>yes</code> multisite nein Dateien bereitstellen: Wenn auf <code>yes</code> gesetzt, stellt BunkerWeb statische Dateien aus dem konfigurierten Stammordner bereit. <code>ROOT_FOLDER</code> <code>/var/www/html/{server_name}</code> multisite nein Stammordner: Das Verzeichnis, aus dem statische Dateien bereitgestellt werden sollen. Leer bedeutet, den Standardort zu verwenden. <p>Best Practices f\u00fcr die Bereitstellung statischer Dateien</p> <ul> <li>Direkte Bereitstellung: Aktivieren Sie die Dateibereitstellung (<code>SERVE_FILES=yes</code>), wenn BunkerWeb f\u00fcr die direkte Bereitstellung statischer Dateien verantwortlich ist.</li> <li>Reverse-Proxy: Wenn BunkerWeb als Reverse-Proxy fungiert, deaktivieren Sie die Dateibereitstellung (<code>SERVE_FILES=no</code>), um die Angriffsfl\u00e4che zu reduzieren und die Exposition unn\u00f6tiger Verzeichnisse zu vermeiden.</li> <li>Berechtigungen: Stellen Sie sicher, dass die Dateiberechtigungen und Pfadkonfigurationen korrekt sind, um unbefugten Zugriff zu verhindern.</li> <li>Sicherheit: Vermeiden Sie die Exposition sensibler Verzeichnisse oder Dateien durch Fehlkonfigurationen.</li> </ul> <p>Durch sorgf\u00e4ltige Verwaltung der Bereitstellung statischer Dateien k\u00f6nnen Sie die Leistung optimieren und gleichzeitig eine sichere Umgebung aufrechterhalten.</p> <p>Plugin- und Systemverwaltung</p> <p>Diese Einstellungen verwalten die Interaktion von BunkerWeb mit externen Systemen und tragen durch optionale anonyme Nutzungsstatistiken zur Verbesserung des Produkts bei.</p> <p>Anonyme Berichterstattung</p> <p>Die anonyme Berichterstattung gibt dem BunkerWeb-Team Einblicke, wie die Software verwendet wird. Dies hilft, Verbesserungsbereiche zu identifizieren und die Entwicklung von Funktionen zu priorisieren. Die Berichte sind rein statistisch und enthalten keine sensiblen oder pers\u00f6nlich identifizierbaren Informationen. Sie umfassen:</p> <ul> <li>Aktivierte Funktionen</li> <li>Allgemeine Konfigurationsmuster</li> </ul> <p>Sie k\u00f6nnen diese Funktion bei Bedarf deaktivieren, indem Sie <code>SEND_ANONYMOUS_REPORT</code> auf <code>no</code> setzen.</p> <p>Externe Plugins</p> <p>Externe Plugins erm\u00f6glichen es Ihnen, die Funktionalit\u00e4t von BunkerWeb durch die Integration von Drittanbieter-Modulen zu erweitern. Dies erm\u00f6glicht zus\u00e4tzliche Anpassungen und fortgeschrittene Anwendungsf\u00e4lle.</p> <p>Sicherheit externer Plugins</p> <p>Externe Plugins k\u00f6nnen Sicherheitsrisiken mit sich bringen, wenn sie nicht ordnungsgem\u00e4\u00df \u00fcberpr\u00fcft werden. Befolgen Sie diese Best Practices, um potenzielle Bedrohungen zu minimieren:</p> <ul> <li>Verwenden Sie nur Plugins aus vertrauensw\u00fcrdigen Quellen.</li> <li>\u00dcberpr\u00fcfen Sie die Integrit\u00e4t der Plugins mithilfe von Pr\u00fcfsummen, sofern verf\u00fcgbar.</li> <li>\u00dcberpr\u00fcfen und aktualisieren Sie Plugins regelm\u00e4\u00dfig, um Sicherheit und Kompatibilit\u00e4t zu gew\u00e4hrleisten.</li> </ul> <p>Weitere Einzelheiten finden Sie in der Plugin-Dokumentation.</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>SEND_ANONYMOUS_REPORT</code> <code>yes</code> global nein Anonyme Berichte: Senden Sie anonyme Nutzungsberichte an die BunkerWeb-Maintainer. <code>EXTERNAL_PLUGIN_URLS</code> global nein Externe Plugins: URLs f\u00fcr externe Plugins zum Herunterladen (durch Leerzeichen getrennt). <p>Optimierung des Datei-Cache</p> <p>Der Cache f\u00fcr offene Dateien verbessert die Leistung, indem er Dateideskriptoren und Metadaten im Speicher speichert und so die Notwendigkeit wiederholter Dateisystemoperationen reduziert.</p> <p>Vorteile des Datei-Caching</p> <ul> <li>Leistung: Reduziert Dateisystem-I/O, verringert die Latenz und senkt die CPU-Auslastung f\u00fcr Dateioperationen.</li> <li>Sicherheit: Mildert Timing-Angriffe durch Caching von Fehlerantworten und reduziert die Auswirkungen von DoS-Angriffen auf das Dateisystem.</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_OPEN_FILE_CACHE</code> <code>no</code> multisite nein Cache aktivieren: Aktivieren Sie das Caching von Dateideskriptoren und Metadaten, um die Leistung zu verbessern. <code>OPEN_FILE_CACHE</code> <code>max=1000 inactive=20s</code> multisite nein Cache-Konfiguration: Konfigurieren Sie den Cache f\u00fcr offene Dateien (z. B. maximale Eintr\u00e4ge und Inaktivit\u00e4ts-Timeout). <code>OPEN_FILE_CACHE_ERRORS</code> <code>yes</code> multisite nein Fehler zwischenspeichern: Speichert Fehler bei der Suche nach Dateideskriptoren sowie erfolgreiche Suchen zwischen. <code>OPEN_FILE_CACHE_MIN_USES</code> <code>2</code> multisite nein Mindestverwendungen: Mindestanzahl von Zugriffen w\u00e4hrend des inaktiven Zeitraums, damit eine Datei im Cache verbleibt. <code>OPEN_FILE_CACHE_VALID</code> <code>30s</code> multisite nein Cache-G\u00fcltigkeit: Zeit, nach der zwischengespeicherte Elemente erneut validiert werden. <p>Konfigurationsanleitung</p> <p>So aktivieren und konfigurieren Sie das Datei-Caching: 1. Setzen Sie <code>USE_OPEN_FILE_CACHE</code> auf <code>yes</code>, um die Funktion zu aktivieren. 2. Passen Sie die <code>OPEN_FILE_CACHE</code>-Parameter an, um die maximale Anzahl von Cache-Eintr\u00e4gen und deren Inaktivit\u00e4ts-Timeout festzulegen. 3. Verwenden Sie <code>OPEN_FILE_CACHE_ERRORS</code>, um sowohl erfolgreiche als auch fehlgeschlagene Suchen zwischenzuspeichern und so wiederholte Dateisystemoperationen zu reduzieren. 4. Legen Sie mit <code>OPEN_FILE_CACHE_MIN_USES</code> die Mindestanzahl von Zugriffen fest, die erforderlich ist, damit eine Datei im Cache verbleibt. 5. Definieren Sie die G\u00fcltigkeitsdauer des Caches mit <code>OPEN_FILE_CACHE_VALID</code>, um zu steuern, wie oft zwischengespeicherte Elemente erneut validiert werden.</p> <p>Bew\u00e4hrte Praktiken</p> <ul> <li>Aktivieren Sie das Datei-Caching f\u00fcr Websites mit vielen statischen Dateien, um die Leistung zu verbessern.</li> <li>\u00dcberpr\u00fcfen und optimieren Sie die Cache-Einstellungen regelm\u00e4\u00dfig, um Leistung und Ressourcenverbrauch auszugleichen.</li> <li>In dynamischen Umgebungen, in denen sich Dateien h\u00e4ufig \u00e4ndern, sollten Sie die G\u00fcltigkeitsdauer des Caches verk\u00fcrzen oder die Funktion deaktivieren, um die Aktualit\u00e4t der Inhalte zu gew\u00e4hrleisten.</li> </ul>"},{"location":"de/features/#beispielkonfigurationen_14","title":"Beispielkonfigurationen","text":"Sicherheit des StandardserversHTTP-Status bei AblehnungHTTP-MethodenGr\u00f6\u00dfenbeschr\u00e4nkungen f\u00fcr AnfragenProtokollunterst\u00fctzungBereitstellung statischer DateienDatei-Caching <p>Beispielkonfiguration zum Deaktivieren des Standardservers und Erzwingen von striktem SNI:</p> <pre><code>DISABLE_DEFAULT_SERVER: \"yes\"\nDISABLE_DEFAULT_SERVER_STRICT_SNI: \"yes\"\n</code></pre> <p>Beispielkonfiguration zum stillschweigenden Verwerfen unerw\u00fcnschter Anfragen:</p> <pre><code>DENY_HTTP_STATUS: \"444\"\n</code></pre> <p>Beispielkonfiguration zur Beschr\u00e4nkung der HTTP-Methoden auf die f\u00fcr eine RESTful-API erforderlichen:</p> <pre><code>ALLOWED_METHODS: \"GET|POST|PUT|DELETE\"\n</code></pre> <p>Beispielkonfiguration zur Begrenzung der maximalen Gr\u00f6\u00dfe des Anforderungsk\u00f6rpers:</p> <pre><code>MAX_CLIENT_SIZE: \"5m\"\n</code></pre> <p>Beispielkonfiguration zur Aktivierung von HTTP/2 und HTTP/3 mit einem benutzerdefinierten Alt-Svc-Port:</p> <pre><code>HTTP2: \"yes\"\nHTTP3: \"yes\"\nHTTP3_ALT_SVC_PORT: \"443\"\n</code></pre> <p>Beispielkonfiguration zur Bereitstellung statischer Dateien aus einem benutzerdefinierten Stammordner:</p> <pre><code>SERVE_FILES: \"yes\"\nROOT_FOLDER: \"/var/www/custom-folder\"\n</code></pre> <p>Beispielkonfiguration zur Aktivierung und Optimierung des Datei-Caching:</p> <pre><code>USE_OPEN_FILE_CACHE: \"yes\"\nOPEN_FILE_CACHE: \"max=2000 inactive=30s\"\nOPEN_FILE_CACHE_ERRORS: \"yes\"\nOPEN_FILE_CACHE_MIN_USES: \"3\"\nOPEN_FILE_CACHE_VALID: \"60s\"\n</code></pre>"},{"location":"de/features/#modsecurity","title":"ModSecurity","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das ModSecurity-Plugin integriert die leistungsstarke ModSecurity Web Application Firewall (WAF) in BunkerWeb. Diese Integration bietet robusten Schutz gegen eine Vielzahl von Webangriffen, indem sie das OWASP Core Rule Set (CRS) nutzt, um Bedrohungen wie SQL-Injection, Cross-Site-Scripting (XSS), Local File Inclusion und mehr zu erkennen und zu blockieren.</p> <p>So funktioniert es:</p> <ol> <li>Wenn eine Anfrage empfangen wird, bewertet ModSecurity sie anhand des aktiven Regelsatzes.</li> <li>Das OWASP Core Rule Set \u00fcberpr\u00fcft Header, Cookies, URL-Parameter und den Body-Inhalt.</li> <li>Jeder erkannte Versto\u00df tr\u00e4gt zu einem Gesamt-Anomalie-Score bei.</li> <li>Wenn dieser Score den konfigurierten Schwellenwert \u00fcberschreitet, wird die Anfrage blockiert.</li> <li>Detaillierte Protokolle werden erstellt, um zu diagnostizieren, welche Regeln ausgel\u00f6st wurden und warum.</li> </ol> <p>Wichtige Vorteile</p> <ol> <li>Branchenstandard-Schutz: Verwendet die weit verbreitete Open-Source-Firewall ModSecurity.</li> <li>OWASP Core Rule Set: Verwendet von der Community gepflegte Regeln, die die OWASP Top Ten und mehr abdecken.</li> <li>Konfigurierbare Sicherheitsstufen: Passen Sie die Paranoia-Stufen an, um die Sicherheit mit potenziellen Falsch-Positiven auszugleichen.</li> <li>Detaillierte Protokollierung: Bietet gr\u00fcndliche Audit-Protokolle zur Analyse von Angriffen.</li> <li>Plugin-Unterst\u00fctzung: Erweitern Sie den Schutz mit optionalen CRS-Plugins, die auf Ihre Anwendungen zugeschnitten sind.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_13","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um ModSecurity zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: ModSecurity ist standardm\u00e4\u00dfig aktiviert. Dies kann mit der Einstellung <code>USE_MODSECURITY</code> gesteuert werden.</li> <li>W\u00e4hlen Sie eine CRS-Version: W\u00e4hlen Sie eine Version des OWASP Core Rule Set (v3, v4 oder nightly).</li> <li>Plugins hinzuf\u00fcgen: Aktivieren Sie optional CRS-Plugins, um die Regelabdeckung zu verbessern.</li> <li>\u00dcberwachen und anpassen: Verwenden Sie Protokolle und die Web-Benutzeroberfl\u00e4che, um Falsch-Positive zu identifizieren und die Einstellungen anzupassen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_14","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_MODSECURITY</code> <code>yes</code> multisite nein ModSecurity aktivieren: Schalten Sie den Schutz der ModSecurity Web Application Firewall ein. <code>USE_MODSECURITY_CRS</code> <code>yes</code> multisite nein Core Rule Set verwenden: Aktivieren Sie das OWASP Core Rule Set f\u00fcr ModSecurity. <code>MODSECURITY_CRS_VERSION</code> <code>4</code> multisite nein CRS-Version: Die Version des zu verwendenden OWASP Core Rule Set. Optionen: <code>3</code>, <code>4</code> oder <code>nightly</code>. <code>MODSECURITY_SEC_RULE_ENGINE</code> <code>On</code> multisite nein Regel-Engine: Steuern Sie, ob Regeln erzwungen werden. Optionen: <code>On</code>, <code>DetectionOnly</code> oder <code>Off</code>. <code>MODSECURITY_SEC_AUDIT_ENGINE</code> <code>RelevantOnly</code> multisite nein Audit-Engine: Steuern Sie, wie die Audit-Protokollierung funktioniert. Optionen: <code>On</code>, <code>Off</code> oder <code>RelevantOnly</code>. <code>MODSECURITY_SEC_AUDIT_LOG_PARTS</code> <code>ABIJDEFHZ</code> multisite nein Audit-Protokoll-Teile: Welche Teile von Anfragen/Antworten in Audit-Protokolle aufgenommen werden sollen. <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code> <code>131072</code> multisite nein Anforderungsk\u00f6rper-Limit (keine Dateien): Maximale Gr\u00f6\u00dfe f\u00fcr Anforderungsk\u00f6rper ohne Datei-Uploads. Akzeptiert einfache Bytes oder menschenlesbare Suffixe (<code>k</code>, <code>m</code>, <code>g</code>). <code>USE_MODSECURITY_CRS_PLUGINS</code> <code>yes</code> multisite nein CRS-Plugins aktivieren: Aktivieren Sie zus\u00e4tzliche Plugin-Regels\u00e4tze f\u00fcr das Core Rule Set. <code>MODSECURITY_CRS_PLUGINS</code> multisite nein CRS-Plugin-Liste: Leerzeichengetrennte Liste von Plugins zum Herunterladen und Installieren (<code>plugin-name[/tag]</code> oder URL). <code>USE_MODSECURITY_GLOBAL_CRS</code> <code>no</code> global nein Globales CRS: Wenn aktiviert, werden CRS-Regeln global auf HTTP-Ebene anstatt pro Server angewendet. <p>ModSecurity und das OWASP Core Rule Set</p> <p>Wir empfehlen dringend, sowohl ModSecurity als auch das OWASP Core Rule Set (CRS) aktiviert zu lassen, um einen robusten Schutz gegen g\u00e4ngige Web-Schwachstellen zu bieten. Obwohl gelegentlich Falsch-Positive auftreten k\u00f6nnen, k\u00f6nnen diese mit etwas Aufwand durch Feinabstimmung von Regeln oder die Verwendung vordefinierter Ausschl\u00fcsse behoben werden.</p> <pre><code>Das CRS-Team pflegt aktiv eine Liste von Ausschl\u00fcssen f\u00fcr beliebte Anwendungen wie WordPress, Nextcloud, Drupal und Cpanel, was die Integration erleichtert, ohne die Funktionalit\u00e4t zu beeintr\u00e4chtigen. Die Sicherheitsvorteile \u00fcberwiegen bei weitem den minimalen Konfigurationsaufwand, der zur Behebung von Falsch-Positiven erforderlich ist.\n</code></pre>"},{"location":"de/features/#verfugbare-crs-versionen","title":"Verf\u00fcgbare CRS-Versionen","text":"<p>W\u00e4hlen Sie eine CRS-Version, die Ihren Sicherheitsanforderungen am besten entspricht:</p> <ul> <li><code>3</code>: Stabile v3.3.7.</li> <li><code>4</code>: Stabile v4.18.0 (Standard).</li> <li><code>nightly</code>: Nightly-Build mit den neuesten Regel-Updates.</li> </ul> <p>Nightly-Build</p> <p>Der Nightly-Build enth\u00e4lt die aktuellsten Regeln und bietet den neuesten Schutz gegen aufkommende Bedrohungen. Da er jedoch t\u00e4glich aktualisiert wird und experimentelle oder ungetestete \u00c4nderungen enthalten kann, wird empfohlen, den Nightly-Build zun\u00e4chst in einer Staging-Umgebung zu verwenden, bevor er in der Produktion eingesetzt wird.</p> <p>Paranoia-Stufen</p> <p>Das OWASP Core Rule Set verwendet \"Paranoia-Stufen\" (PL), um die Strenge der Regeln zu steuern:</p> <pre><code>- **PL1 (Standard):** Grundlegender Schutz mit minimalen Falsch-Positiven\n- **PL2:** Strengere Sicherheit mit strengerem Musterabgleich\n- **PL3:** Erh\u00f6hte Sicherheit mit strengerer Validierung\n- **PL4:** Maximale Sicherheit mit sehr strengen Regeln (kann viele Falsch-Positive verursachen)\n\nSie k\u00f6nnen die Paranoia-Stufe festlegen, indem Sie eine benutzerdefinierte Konfigurationsdatei in `/etc/bunkerweb/configs/modsec-crs/` hinzuf\u00fcgen.\n</code></pre>"},{"location":"de/features/#benutzerdefinierte-konfigurationen","title":"Benutzerdefinierte Konfigurationen","text":"<p>Die Feinabstimmung von ModSecurity und dem OWASP Core Rule Set (CRS) kann durch benutzerdefinierte Konfigurationen erreicht werden. Diese Konfigurationen erm\u00f6glichen es Ihnen, das Verhalten in bestimmten Phasen der Verarbeitung von Sicherheitsregeln anzupassen:</p> <ul> <li><code>modsec-crs</code>: Wird vor dem Laden des OWASP Core Rule Set angewendet.</li> <li><code>modsec</code>: Wird nach dem Laden des OWASP Core Rule Set angewendet. Dies wird auch verwendet, wenn das CRS \u00fcberhaupt nicht geladen wird.</li> <li><code>crs-plugins-before</code>: Wird vor dem Laden der CRS-Plugins angewendet.</li> <li><code>crs-plugins-after</code>: Wird nach dem Laden der CRS-Plugins angewendet.</li> </ul> <p>Diese Struktur bietet Flexibilit\u00e4t und erm\u00f6glicht es Ihnen, die Einstellungen von ModSecurity und CRS an die spezifischen Anforderungen Ihrer Anwendung anzupassen, w\u00e4hrend ein klarer Konfigurationsfluss beibehalten wird.</p>"},{"location":"de/features/#hinzufugen-von-crs-ausschlussen-mit-modsec-crs","title":"Hinzuf\u00fcgen von CRS-Ausschl\u00fcssen mit <code>modsec-crs</code>","text":"<p>Sie k\u00f6nnen eine benutzerdefinierte Konfiguration vom Typ <code>modsec-crs</code> verwenden, um Ausschl\u00fcsse f\u00fcr bestimmte Anwendungsf\u00e4lle hinzuzuf\u00fcgen, z. B. das Aktivieren vordefinierter Ausschl\u00fcsse f\u00fcr WordPress:</p> <pre><code>SecAction \\\n \"id:900130,\\\n  phase:1,\\\n  nolog,\\\n  pass,\\\n  t:none,\\\n  setvar:tx.crs_exclusions_wordpress=1\"\n</code></pre> <p>In diesem Beispiel:</p> <ul> <li>Die Aktion wird in Phase 1 (fr\u00fch im Anfrage-Lebenszyklus) ausgef\u00fchrt.</li> <li>Sie aktiviert WordPress-spezifische CRS-Ausschl\u00fcsse, indem sie die Variable <code>tx.crs_exclusions_wordpress</code> setzt.</li> </ul>"},{"location":"de/features/#aktualisieren-von-crs-regeln-mit-modsec","title":"Aktualisieren von CRS-Regeln mit <code>modsec</code>","text":"<p>Um die geladenen CRS-Regeln zu optimieren, k\u00f6nnen Sie eine benutzerdefinierte Konfiguration vom Typ <code>modsec</code> verwenden. Sie k\u00f6nnen beispielsweise bestimmte Regeln oder Tags f\u00fcr bestimmte Anfragepfade entfernen:</p> <pre><code>SecRule REQUEST_FILENAME \"/wp-admin/admin-ajax.php\" \"id:1,ctl:ruleRemoveByTag=attack-xss,ctl:ruleRemoveByTag=attack-rce\"\nSecRule REQUEST_FILENAME \"/wp-admin/options.php\" \"id:2,ctl:ruleRemoveByTag=attack-xss\"\nSecRule REQUEST_FILENAME \"^/wp-json/yoast\" \"id:3,ctl:ruleRemoveById=930120\"\n</code></pre> <p>In diesem Beispiel:</p> <ul> <li>Regel 1: Entfernt Regeln mit den Tags <code>attack-xss</code> und <code>attack-rce</code> f\u00fcr Anfragen an <code>/wp-admin/admin-ajax.php</code>.</li> <li>Regel 2: Entfernt Regeln mit dem Tag <code>attack-xss</code> f\u00fcr Anfragen an <code>/wp-admin/options.php</code>.</li> <li>Regel 3: Entfernt eine bestimmte Regel (ID <code>930120</code>) f\u00fcr Anfragen, die auf <code>/wp-json/yoast</code> passen.</li> </ul> <p>Reihenfolge der Ausf\u00fchrung</p> <p>Die Ausf\u00fchrungsreihenfolge f\u00fcr ModSecurity in BunkerWeb ist wie folgt, um eine klare und logische Abfolge der Regelanwendung zu gew\u00e4hrleisten:</p> <pre><code>1.  **OWASP CRS-Konfiguration**: Basiskonfiguration f\u00fcr das OWASP Core Rule Set.\n2.  **Konfiguration benutzerdefinierter Plugins (`crs-plugins-before`)**: Einstellungen, die f\u00fcr Plugins spezifisch sind und vor allen CRS-Regeln angewendet werden.\n3.  **Regeln benutzerdefinierter Plugins (vor CRS-Regeln) (`crs-plugins-before`)**: Benutzerdefinierte Regeln f\u00fcr Plugins, die vor den CRS-Regeln ausgef\u00fchrt werden.\n4.  **Konfiguration heruntergeladener Plugins**: Konfiguration f\u00fcr extern heruntergeladene Plugins.\n5.  **Regeln heruntergeladener Plugins (vor CRS-Regeln)**: Regeln f\u00fcr heruntergeladene Plugins, die vor den CRS-Regeln ausgef\u00fchrt werden.\n6.  **Benutzerdefinierte CRS-Regeln (`modsec-crs`)**: Benutzerdefinierte Regeln, die vor dem Laden der CRS-Regeln angewendet werden.\n7.  **OWASP CRS-Regeln**: Der Kernsatz von Sicherheitsregeln, der von OWASP bereitgestellt wird.\n8.  **Regeln benutzerdefinierter Plugins (nach CRS-Regeln) (`crs-plugins-after`)**: Benutzerdefinierte Plugin-Regeln, die nach den CRS-Regeln ausgef\u00fchrt werden.\n9.  **Regeln heruntergeladener Plugins (nach CRS-Regeln)**: Regeln f\u00fcr heruntergeladene Plugins, die nach den CRS-Regeln ausgef\u00fchrt werden.\n10. **Benutzerdefinierte Regeln (`modsec`)**: Benutzerdefinierte Regeln, die nach allen CRS- und Plugin-Regeln angewendet werden.\n\n**Wichtige Hinweise**:\n\n-   **Pre-CRS-Anpassungen** (`crs-plugins-before`, `modsec-crs`) erm\u00f6glichen es Ihnen, Ausnahmen oder vorbereitende Regeln zu definieren, bevor die Kern-CRS-Regeln geladen werden.\n-   **Post-CRS-Anpassungen** (`crs-plugins-after`, `modsec`) sind ideal, um Regeln zu \u00fcberschreiben oder zu erweitern, nachdem CRS- und Plugin-Regeln angewendet wurden.\n-   Diese Struktur bietet maximale Flexibilit\u00e4t und erm\u00f6glicht eine pr\u00e4zise Steuerung der Regelausf\u00fchrung und -anpassung bei gleichzeitiger Aufrechterhaltung einer starken Sicherheitsgrundlage.\n</code></pre>"},{"location":"de/features/#owasp-crs-plugins","title":"OWASP CRS-Plugins","text":"<p>Das OWASP Core Rule Set unterst\u00fctzt auch eine Reihe von Plugins, die entwickelt wurden, um seine Funktionalit\u00e4t zu erweitern und die Kompatibilit\u00e4t mit bestimmten Anwendungen oder Umgebungen zu verbessern. Diese Plugins k\u00f6nnen dabei helfen, das CRS f\u00fcr die Verwendung mit beliebten Plattformen wie WordPress, Nextcloud und Drupal oder sogar benutzerdefinierten Setups zu optimieren. Weitere Informationen und eine Liste der verf\u00fcgbaren Plugins finden Sie im OWASP CRS Plugin-Verzeichnis.</p> <p>Plugin-Download</p> <p>Die Einstellung <code>MODSECURITY_CRS_PLUGINS</code> erm\u00f6glicht es Ihnen, Plugins herunterzuladen und zu installieren, um die Funktionalit\u00e4t des OWASP Core Rule Set (CRS) zu erweitern. Diese Einstellung akzeptiert eine Liste von Plugin-Namen mit optionalen Tags oder URLs, was es einfach macht, zus\u00e4tzliche Sicherheitsfunktionen zu integrieren, die auf Ihre spezifischen Bed\u00fcrfnisse zugeschnitten sind.</p> <pre><code>Hier ist eine nicht ersch\u00f6pfende Liste der akzeptierten Werte f\u00fcr die Einstellung `MODSECURITY_CRS_PLUGINS`:\n\n*   `fake-bot` - L\u00e4dt die neueste Version des Plugins herunter.\n*   `wordpress-rule-exclusions/v1.0.0` - L\u00e4dt die Version 1.0.0 des Plugins herunter.\n*   `https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip` - L\u00e4dt das Plugin direkt von der URL herunter.\n</code></pre> <p>Falsch-Positive</p> <p>H\u00f6here Sicherheitseinstellungen k\u00f6nnen legitimen Verkehr blockieren. Beginnen Sie mit den Standardeinstellungen und \u00fcberwachen Sie die Protokolle, bevor Sie die Sicherheitsstufen erh\u00f6hen. Seien Sie bereit, Ausnahmeregeln f\u00fcr die spezifischen Anforderungen Ihrer Anwendung hinzuzuf\u00fcgen.</p>"},{"location":"de/features/#beispielkonfigurationen_15","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationNur-ErkennungsmodusErweiterte Konfiguration mit PluginsLegacy-KonfigurationGlobales ModSecurityNightly-Build mit benutzerdefinierten Plugins <p>Eine Standardkonfiguration mit aktiviertem ModSecurity und CRS v4:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Konfiguration zur \u00dcberwachung potenzieller Bedrohungen ohne Blockierung:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"DetectionOnly\"\nMODSECURITY_SEC_AUDIT_ENGINE: \"On\"\nMODSECURITY_SEC_AUDIT_LOG_PARTS: \"ABIJDEFHZ\"\n</code></pre> <p>Konfiguration mit CRS v4 und aktivierten Plugins f\u00fcr zus\u00e4tzlichen Schutz:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions fake-bot\"\nMODSECURITY_REQ_BODY_NO_FILES_LIMIT: \"262144\"\n</code></pre> <p>Konfiguration mit CRS v3 zur Kompatibilit\u00e4t mit \u00e4lteren Setups:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"3\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Konfiguration, die ModSecurity global auf alle HTTP-Verbindungen anwendet:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nUSE_MODSECURITY_GLOBAL_CRS: \"yes\"\n</code></pre> <p>Konfiguration mit dem Nightly-Build von CRS mit benutzerdefinierten Plugins:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"nightly\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions/v1.0.0 https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip\"\n</code></pre> <p>Menschenlesbare Gr\u00f6\u00dfenwerte</p> <p>F\u00fcr Gr\u00f6\u00dfeneinstellungen wie <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code> werden die Suffixe <code>k</code>, <code>m</code> und <code>g</code> (Gro\u00df- und Kleinschreibung wird nicht beachtet) unterst\u00fctzt und stehen f\u00fcr Kibibyte, Mebibyte und Gibibyte (Vielfache von 1024). Beispiele: <code>256k</code> = 262144, <code>1m</code> = 1048576, <code>2g</code> = 2147483648.</p>"},{"location":"de/features/#monitoring-pro","title":"Monitoring  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>BunkerWeb monitoring pro system. This plugin is a prerequisite for some other plugins.</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USE_MONITORING</code> <code>yes</code> global nein Enable monitoring of BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global nein Size of the dict to store monitoring metrics. <code>MONITORING_IGNORE_URLS</code> global nein List of URLs to ignore when monitoring separated with spaces (e.g. /health)"},{"location":"de/features/#php","title":"PHP","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das PHP-Plugin bietet eine nahtlose Integration mit PHP-FPM f\u00fcr BunkerWeb und erm\u00f6glicht die dynamische PHP-Verarbeitung f\u00fcr Ihre Websites. Diese Funktion unterst\u00fctzt sowohl lokale PHP-FPM-Instanzen, die auf derselben Maschine laufen, als auch entfernte PHP-FPM-Server, was Ihnen Flexibilit\u00e4t bei der Konfiguration Ihrer PHP-Umgebung gibt.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Client eine PHP-Datei von Ihrer Website anfordert, leitet BunkerWeb die Anfrage an die konfigurierte PHP-FPM-Instanz weiter.</li> <li>Bei lokalem PHP-FPM kommuniziert BunkerWeb mit dem PHP-Interpreter \u00fcber eine Unix-Socket-Datei.</li> <li>Bei entferntem PHP-FPM leitet BunkerWeb Anfragen an den angegebenen Host und Port \u00fcber das FastCGI-Protokoll weiter.</li> <li>PHP-FPM verarbeitet das Skript und gibt den generierten Inhalt an BunkerWeb zur\u00fcck, das ihn dann an den Client ausliefert.</li> <li>Die URL-Umschreibung wird automatisch konfiguriert, um g\u00e4ngige PHP-Frameworks und Anwendungen zu unterst\u00fctzen, die \"sch\u00f6ne URLs\" verwenden.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_14","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die PHP-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>W\u00e4hlen Sie Ihr PHP-FPM-Setup: Entscheiden Sie, ob Sie eine lokale oder eine entfernte PHP-FPM-Instanz verwenden m\u00f6chten.</li> <li>Konfigurieren Sie die Verbindung: Geben Sie f\u00fcr lokales PHP den Socket-Pfad an; f\u00fcr entferntes PHP geben Sie den Hostnamen und den Port an.</li> <li>Legen Sie das Dokumentenstammverzeichnis fest: Konfigurieren Sie den Stammordner, der Ihre PHP-Dateien enth\u00e4lt, mit der entsprechenden Pfadeinstellung.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration leitet BunkerWeb PHP-Anfragen automatisch an Ihre PHP-FPM-Instanz weiter.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_15","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>REMOTE_PHP</code> multisite nein Entfernter PHP-Host: Hostname der entfernten PHP-FPM-Instanz. Leer lassen, um lokales PHP zu verwenden. <code>REMOTE_PHP_PATH</code> multisite nein Entfernter Pfad: Stammordner mit Dateien in der entfernten PHP-FPM-Instanz. <code>REMOTE_PHP_PORT</code> <code>9000</code> multisite nein Entfernter Port: Port der entfernten PHP-FPM-Instanz. <code>LOCAL_PHP</code> multisite nein Lokaler PHP-Socket: Pfad zur PHP-FPM-Socket-Datei. Leer lassen, um eine entfernte PHP-FPM-Instanz zu verwenden. <code>LOCAL_PHP_PATH</code> multisite nein Lokaler Pfad: Stammordner mit Dateien in der lokalen PHP-FPM-Instanz. <p>Lokales vs. entferntes PHP-FPM</p> <p>W\u00e4hlen Sie das Setup, das am besten zu Ihrer Infrastruktur passt:</p> <pre><code>- **Lokales PHP-FPM** bietet aufgrund der Socket-basierten Kommunikation eine bessere Leistung und ist ideal, wenn PHP auf derselben Maschine wie BunkerWeb l\u00e4uft.\n- **Entferntes PHP-FPM** bietet mehr Flexibilit\u00e4t und Skalierbarkeit, indem die PHP-Verarbeitung auf separaten Servern erfolgen kann.\n</code></pre> <p>Pfadkonfiguration</p> <p>Der <code>REMOTE_PHP_PATH</code> oder <code>LOCAL_PHP_PATH</code> muss mit dem tats\u00e4chlichen Dateisystempfad \u00fcbereinstimmen, in dem Ihre PHP-Dateien gespeichert sind; andernfalls tritt ein \"Datei nicht gefunden\"-Fehler auf.</p> <p>URL-Umschreibung</p> <p>Das PHP-Plugin konfiguriert automatisch die URL-Umschreibung, um moderne PHP-Anwendungen zu unterst\u00fctzen. Anfragen f\u00fcr nicht existierende Dateien werden an <code>index.php</code> weitergeleitet, wobei die urspr\u00fcngliche Anfrage-URI als Abfrageparameter verf\u00fcgbar ist.</p>"},{"location":"de/features/#beispielkonfigurationen_16","title":"Beispielkonfigurationen","text":"Lokale PHP-FPM-KonfigurationEntfernte PHP-FPM-KonfigurationKonfiguration mit benutzerdefiniertem PortWordPress-Konfiguration <p>Konfiguration f\u00fcr die Verwendung einer lokalen PHP-FPM-Instanz:</p> <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Konfiguration f\u00fcr die Verwendung einer entfernten PHP-FPM-Instanz:</p> <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9000\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Konfiguration f\u00fcr die Verwendung von PHP-FPM auf einem nicht standardm\u00e4\u00dfigen Port:</p> <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9001\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>F\u00fcr WordPress optimierte Konfiguration:</p> <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html/wordpress\"\n</code></pre>"},{"location":"de/features/#pro","title":"Pro","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Pro-Plugin b\u00fcndelt erweiterte Funktionen und Verbesserungen f\u00fcr Unternehmensbereitstellungen von BunkerWeb. Es schaltet zus\u00e4tzliche Funktionen, Premium-Plugins und erweiterte Funktionalit\u00e4t frei, die die Kernplattform von BunkerWeb erg\u00e4nzen. Es bietet verbesserte Sicherheit, Leistung und Verwaltungsoptionen f\u00fcr unternehmenstaugliche Bereitstellungen.</p> <p>So funktioniert es:</p> <ol> <li>Mit einem g\u00fcltigen Pro-Lizenzschl\u00fcssel verbindet sich BunkerWeb mit dem Pro-API-Server, um Ihr Abonnement zu validieren.</li> <li>Nach der Authentifizierung l\u00e4dt das Plugin automatisch Pro-exklusive Plugins und Erweiterungen herunter und installiert sie.</li> <li>Ihr Pro-Status wird regelm\u00e4\u00dfig \u00fcberpr\u00fcft, um den fortgesetzten Zugriff auf Premium-Funktionen sicherzustellen.</li> <li>Premium-Plugins werden nahtlos in Ihre bestehende BunkerWeb-Konfiguration integriert.</li> <li>Alle Pro-Funktionen arbeiten harmonisch mit dem Open-Source-Kern zusammen und erweitern die Funktionalit\u00e4t, anstatt sie zu ersetzen.</li> </ol> <p>Wichtige Vorteile</p> <ol> <li>Premium-Erweiterungen: Zugriff auf exklusive Plugins und Funktionen, die in der Community-Edition nicht verf\u00fcgbar sind.</li> <li>Verbesserte Leistung: Optimierte Konfigurationen und fortschrittliche Caching-Mechanismen.</li> <li>Unternehmens-Support: Vorrangige Unterst\u00fctzung und dedizierte Support-Kan\u00e4le.</li> <li>Nahtlose Integration: Pro-Funktionen arbeiten ohne Konfigurationskonflikte neben den Community-Funktionen.</li> <li>Automatische Updates: Premium-Plugins werden automatisch heruntergeladen und auf dem neuesten Stand gehalten.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_15","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Pro-Funktionen zu konfigurieren und zu verwenden:</p> <ol> <li>Lizenzschl\u00fcssel erhalten: Kaufen Sie eine Pro-Lizenz im BunkerWeb Panel.</li> <li>Lizenzschl\u00fcssel konfigurieren: Verwenden Sie die Einstellung <code>PRO_LICENSE_KEY</code>, um Ihre Lizenz zu konfigurieren.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration mit einer g\u00fcltigen Lizenz werden Pro-Plugins automatisch heruntergeladen und aktiviert.</li> <li>\u00dcberwachen Sie Ihren Pro-Status: \u00dcberpr\u00fcfen Sie die Zustandsindikatoren in der Web-Benutzeroberfl\u00e4che, um Ihren Pro-Abonnementstatus zu best\u00e4tigen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_16","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>PRO_LICENSE_KEY</code> global nein Pro-Lizenzschl\u00fcssel: Ihr BunkerWeb Pro-Lizenzschl\u00fcssel zur Authentifizierung. <p>Lizenzverwaltung</p> <p>Ihre Pro-Lizenz ist an Ihre spezifische Bereitstellungsumgebung gebunden. Wenn Sie Ihre Lizenz \u00fcbertragen m\u00fcssen oder Fragen zu Ihrem Abonnement haben, wenden Sie sich bitte \u00fcber das BunkerWeb Panel an den Support.</p> <p>Pro-Funktionen</p> <p>Die spezifischen verf\u00fcgbaren Pro-Funktionen k\u00f6nnen sich im Laufe der Zeit weiterentwickeln, wenn neue Funktionen hinzugef\u00fcgt werden. Das Pro-Plugin \u00fcbernimmt automatisch die Installation und Konfiguration aller verf\u00fcgbaren Funktionen.</p> <p>Netzwerkanforderungen</p> <p>Das Pro-Plugin ben\u00f6tigt ausgehenden Internetzugang, um sich zur Lizenz\u00fcberpr\u00fcfung mit der BunkerWeb-API zu verbinden und Premium-Plugins herunterzuladen. Stellen Sie sicher, dass Ihre Firewall Verbindungen zu <code>api.bunkerweb.io</code> auf Port 443 (HTTPS) zul\u00e4sst.</p>"},{"location":"de/features/#haufig-gestellte-fragen","title":"H\u00e4ufig gestellte Fragen","text":"<p>F: Was passiert, wenn meine Pro-Lizenz abl\u00e4uft?</p> <p>A: Wenn Ihre Pro-Lizenz abl\u00e4uft, wird der Zugriff auf Premium-Funktionen und -Plugins deaktiviert. Ihre BunkerWeb-Installation wird jedoch weiterhin mit allen Funktionen der Community-Edition betrieben. Um wieder Zugriff auf die Pro-Funktionen zu erhalten, erneuern Sie einfach Ihre Lizenz.</p> <p>F: Werden die Pro-Funktionen meine bestehende Konfiguration st\u00f6ren?</p> <p>A: Nein, die Pro-Funktionen sind so konzipiert, dass sie sich nahtlos in Ihr aktuelles BunkerWeb-Setup integrieren. Sie erweitern die Funktionalit\u00e4t, ohne Ihre bestehende Konfiguration zu ver\u00e4ndern oder zu st\u00f6ren, und gew\u00e4hrleisten so ein reibungsloses und zuverl\u00e4ssiges Erlebnis.</p> <p>F: Kann ich die Pro-Funktionen vor dem Kauf ausprobieren?</p> <p>A: Auf jeden Fall! BunkerWeb bietet zwei Pro-Pl\u00e4ne, die Ihren Bed\u00fcrfnissen entsprechen:</p> <ul> <li>BunkerWeb PRO Standard: Voller Zugriff auf die Pro-Funktionen ohne technischen Support.</li> <li>BunkerWeb PRO Enterprise: Voller Zugriff auf die Pro-Funktionen mit dediziertem technischen Support.</li> </ul> <p>Sie k\u00f6nnen die Pro-Funktionen mit einer kostenlosen 1-monatigen Testversion erkunden, indem Sie den Promo-Code <code>freetrial</code> verwenden. Besuchen Sie das BunkerWeb Panel, um Ihre Testversion zu aktivieren und mehr \u00fcber flexible Preisoptionen basierend auf der Anzahl der von BunkerWeb PRO gesch\u00fctzten Dienste zu erfahren.</p>"},{"location":"de/features/#prometheus-exporter-pro","title":"Prometheus exporter  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Prometheus exporter for BunkerWeb internal metrics.</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global nein Enable the Prometheus export. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global nein Listening IP of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global nein Listening port of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global nein HTTP URL of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global nein List of IP/networks allowed to contact the Prometheus exporter endpoint."},{"location":"de/features/#real-ip","title":"Real IP","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Real IP Plugin stellt sicher, dass BunkerWeb die IP-Adresse des Clients auch hinter Proxys korrekt identifiziert. Dies ist unerl\u00e4sslich f\u00fcr die Anwendung von Sicherheitsregeln, Ratenbegrenzung and zuverl\u00e4ssige Protokolle; andernfalls w\u00fcrden alle Anfragen von der IP des Proxys zu kommen scheinen.</p> <p>So funktioniert's:</p> <ol> <li>Nach der Aktivierung pr\u00fcft BunkerWeb die Header (z.B. <code>X-Forwarded-For</code>), die die urspr\u00fcngliche IP enthalten.</li> <li>Es wird \u00fcberpr\u00fcft, ob die Quell-IP in <code>REAL_IP_FROM</code> (Liste vertrauensw\u00fcrdiger Proxys) enthalten ist, um nur legitime Proxys zu akzeptieren.</li> <li>Die Client-IP wird aus dem Header <code>REAL_IP_HEADER</code> extrahiert and f\u00fcr die Sicherheitsbewertung and Protokollierung verwendet.</li> <li>Bei IP-Ketten kann eine rekursive Suche \u00fcber <code>REAL_IP_RECURSIVE</code> die urspr\u00fcngliche IP ermitteln.</li> <li>Die Unterst\u00fctzung f\u00fcr das PROXY-Protokoll kann aktiviert werden, um die Client-IP direkt von kompatiblen Proxys (z.B. HAProxy) zu empfangen.</li> <li>Listen mit vertrauensw\u00fcrdigen Proxy-IPs k\u00f6nnen automatisch \u00fcber URLs heruntergeladen werden.</li> </ol>"},{"location":"de/features/#verwendung_3","title":"Verwendung","text":"<ol> <li>Aktivieren: <code>USE_REAL_IP: yes</code>.</li> <li>Vertrauensw\u00fcrdige Proxys: Geben Sie IP/Bereiche in <code>REAL_IP_FROM</code> ein.</li> <li>Header: Geben Sie an, welcher Header die echte IP \u00fcber <code>REAL_IP_HEADER</code> enth\u00e4lt.</li> <li>Rekursiv: Aktivieren Sie <code>REAL_IP_RECURSIVE</code> bei Bedarf.</li> <li>URL-Quellen: Verwenden Sie <code>REAL_IP_FROM_URLS</code>, um Listen herunterzuladen.</li> <li>PROXY-Protokoll: Aktivieren Sie <code>USE_PROXY_PROTOCOL</code>, wenn das Upstream-System es unterst\u00fctzt.</li> </ol> <p>Warnung PROXY-Protokoll</p> <p>Das Aktivieren von <code>USE_PROXY_PROTOCOL</code> ohne ein korrekt konfiguriertes Upstream-System, das es aussendet, f\u00fchrt dazu, dass Ihre Anwendung nicht funktioniert. Stellen Sie sicher, dass Sie es vor der Aktivierung konfiguriert haben.</p>"},{"location":"de/features/#parameter_5","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>USE_REAL_IP</code> <code>no</code> multisite nein Aktiviert die Abfrage der echten IP aus Headern oder dem PROXY-Protokoll. <code>REAL_IP_FROM</code> <code>192.168.0.0/16 172.16.0.0/12 10.0.0.0/8</code> multisite nein Vertrauensw\u00fcrdige Proxys: Liste von IP/Netzwerken, durch Leerzeichen getrennt. <code>REAL_IP_HEADER</code> <code>X-Forwarded-For</code> multisite nein Header, der die echte IP enth\u00e4lt, oder der spezielle Wert <code>proxy_protocol</code>. <code>REAL_IP_RECURSIVE</code> <code>yes</code> multisite nein Rekursive Suche in einem Header, der mehrere IPs enth\u00e4lt. <code>REAL_IP_FROM_URLS</code> multisite nein URLs, die IPs/Netzwerke von vertrauensw\u00fcrdigen Proxys bereitstellen (unterst\u00fctzt <code>file://</code>). <code>USE_PROXY_PROTOCOL</code> <code>no</code> global nein Aktiviert die PROXY-Protokoll-Unterst\u00fctzung f\u00fcr die direkte Proxy\u2192BunkerWeb-Kommunikation. <p>Cloud-Anbieter</p> <p>F\u00fcgen Sie die IPs Ihrer Load Balancer (AWS/GCP/Azure\u2026) zu <code>REAL_IP_FROM</code> hinzu, um eine korrekte Identifizierung zu gew\u00e4hrleisten.</p> <p>Sicherheitsaspekte</p> <p>F\u00fcgen Sie nur vertrauensw\u00fcrdige Quellen hinzu, da sonst die Gefahr der IP-Spoofing \u00fcber manipulierte Header besteht.</p> <p>Mehrere Adressen</p> <p>Mit <code>REAL_IP_RECURSIVE</code> wird, wenn der Header mehrere IPs enth\u00e4lt, die erste IP, die nicht als vertrauensw\u00fcrdiger Proxy aufgef\u00fchrt ist, als Client-IP verwendet.</p>"},{"location":"de/features/#beispiele_5","title":"Beispiele","text":"Basis (hinter Reverse Proxy) <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.1.0/24 10.0.0.5\"\nREAL_IP_HEADER: \"X-Forwarded-For\"\n</code></pre>"},{"location":"de/features/#redirect","title":"Redirect","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Redirect-Plugin bietet einfache und effiziente HTTP-Umleitungsfunktionen f\u00fcr Ihre von BunkerWeb gesch\u00fctzten Websites. Mit dieser Funktion k\u00f6nnen Sie Besucher problemlos von einer URL zu einer anderen umleiten und dabei sowohl Umleitungen f\u00fcr die gesamte Domain als auch f\u00fcr bestimmte Pfade mit Beibehaltung des Pfades unterst\u00fctzen.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Besucher auf Ihre Website zugreift, \u00fcberpr\u00fcft BunkerWeb, ob eine Umleitung konfiguriert ist.</li> <li>Wenn aktiviert, leitet BunkerWeb den Besucher an die angegebene Ziel-URL weiter.</li> <li>Sie k\u00f6nnen konfigurieren, ob der urspr\u00fcngliche Anfragepfad beibehalten (automatisch an die Ziel-URL angeh\u00e4ngt) oder direkt zur exakten Ziel-URL umgeleitet werden soll.</li> <li>Der f\u00fcr die Umleitung verwendete HTTP-Statuscode kann zwischen permanenten (301) und tempor\u00e4ren (302) Umleitungen angepasst werden.</li> <li>Diese Funktionalit\u00e4t ist ideal f\u00fcr Domain-Migrationen, die Einrichtung kanonischer Domains oder die Umleitung veralteter URLs.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_16","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Umleitungsfunktion zu konfigurieren und zu verwenden:</p> <ol> <li>Quellpfad festlegen: Konfigurieren Sie den Pfad, von dem umgeleitet werden soll, mit der Einstellung <code>REDIRECT_FROM</code> (z. B. <code>/</code>, <code>/old-page</code>).</li> <li>Ziel-URL festlegen: Konfigurieren Sie die Ziel-URL, zu der Besucher umgeleitet werden sollen, mit der Einstellung <code>REDIRECT_TO</code>.</li> <li>Umleitungstyp w\u00e4hlen: Entscheiden Sie mit der Einstellung <code>REDIRECT_TO_REQUEST_URI</code>, ob der urspr\u00fcngliche Anfragepfad beibehalten werden soll.</li> <li>Statuscode ausw\u00e4hlen: Legen Sie den entsprechenden HTTP-Statuscode mit der Einstellung <code>REDIRECT_TO_STATUS_CODE</code> fest, um eine permanente oder tempor\u00e4re Umleitung anzuzeigen.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration werden alle Anfragen an die Website automatisch basierend auf Ihren Einstellungen umgeleitet.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_17","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>REDIRECT_FROM</code> <code>/</code> multisite ja Pfad, von dem umgeleitet wird: Der Pfad, der umgeleitet wird. <code>REDIRECT_TO</code> multisite ja Ziel-URL: Die Ziel-URL, zu der Besucher umgeleitet werden. Leer lassen, um die Umleitung zu deaktivieren. <code>REDIRECT_TO_REQUEST_URI</code> <code>no</code> multisite ja Pfad beibehalten: Wenn auf <code>yes</code> gesetzt, wird die urspr\u00fcngliche Anfrage-URI an die Ziel-URL angeh\u00e4ngt. <code>REDIRECT_TO_STATUS_CODE</code> <code>301</code> multisite ja HTTP-Statuscode: Der f\u00fcr die Umleitung zu verwendende HTTP-Statuscode. Optionen: <code>301</code> (permanent) oder <code>302</code> (tempor\u00e4r). <p>Wahl des richtigen Statuscodes</p> <ul> <li>Verwenden Sie <code>301</code> (Moved Permanently), wenn die Umleitung dauerhaft ist, z. B. bei Domain-Migrationen oder zur Einrichtung kanonischer URLs. Dies hilft Suchmaschinen, ihre Indizes zu aktualisieren.</li> <li>Verwenden Sie <code>302</code> (Found/Temporary Redirect), wenn die Umleitung vor\u00fcbergehend ist oder wenn Sie die urspr\u00fcngliche URL in Zukunft m\u00f6glicherweise wiederverwenden m\u00f6chten.</li> </ul> <p>Beibehaltung des Pfades</p> <p>Wenn <code>REDIRECT_TO_REQUEST_URI</code> auf <code>yes</code> gesetzt ist, beh\u00e4lt BunkerWeb den urspr\u00fcnglichen Anfragepfad bei. Wenn ein Benutzer beispielsweise <code>https://old-domain.com/blog/post-1</code> besucht und Sie eine Umleitung zu <code>https://new-domain.com</code> eingerichtet haben, wird er zu <code>https://new-domain.com/blog/post-1</code> umgeleitet.</p>"},{"location":"de/features/#beispielkonfigurationen_17","title":"Beispielkonfigurationen","text":"Umleitung mehrerer PfadeEinfache Domain-UmleitungPfadbeibehaltende UmleitungTempor\u00e4re UmleitungSubdomain-Konsolidierung <p>Eine Konfiguration, die mehrere Pfade an verschiedene Ziele umleitet:</p> <pre><code># Leitet /blog zu einer neuen Blog-Domain um\nREDIRECT_FROM: \"/blog/\"\nREDIRECT_TO: \"https://blog.example.com/\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n\n# Leitet /shop zu einer anderen Domain um\nREDIRECT_FROM_2: \"/shop/\"\nREDIRECT_TO_2: \"https://shop.example.com/\"\nREDIRECT_TO_REQUEST_URI_2: \"no\"\nREDIRECT_TO_STATUS_CODE_2: \"301\"\n\n# Leitet den Rest der Website um\nREDIRECT_FROM_3: \"/\"\nREDIRECT_TO_3: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI_3: \"no\"\nREDIRECT_TO_STATUS_CODE_3: \"301\"\n</code></pre> <p>Eine Konfiguration, die alle Besucher auf eine neue Domain umleitet:</p> <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> <p>Eine Konfiguration, die Besucher auf eine neue Domain umleitet und dabei den angeforderten Pfad beibeh\u00e4lt:</p> <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> <p>Eine Konfiguration f\u00fcr eine tempor\u00e4re Umleitung zu einer Wartungsseite:</p> <pre><code>REDIRECT_TO: \"https://maintenance.example.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"302\"\n</code></pre> <p>Eine Konfiguration zur Umleitung einer Subdomain auf einen bestimmten Pfad der Hauptdomain:</p> <pre><code>REDIRECT_TO: \"https://example.com/support\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre>"},{"location":"de/features/#redis","title":"Redis","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Der Redis-Plugin integriert Redis oder Valkey in BunkerWeb zur Zwischenspeicherung and f\u00fcr schnellen Datenzugriff. Dies ist unerl\u00e4sslich in Hochverf\u00fcgbarkeitsumgebungen, um Sitzungen, Metriken and andere Informationen zwischen mehreren Knoten zu teilen.</p> <p>Funktionsweise:</p> <ol> <li>Nach der Aktivierung verbindet sich BunkerWeb mit dem konfigurierten Redis-/Valkey-Server.</li> <li>Kritische Daten (Sitzungen, Metriken, Sicherheit) werden dort gespeichert.</li> <li>Mehrere Instanzen teilen diese Daten f\u00fcr ein reibungsloses Clustering.</li> <li>Unterst\u00fctzt Standalone-Bereitstellungen, passwortbasierte Authentifizierung, SSL/TLS and Redis Sentinel.</li> <li>Automatische Wiederverbindung and konfigurierbare Timeouts sorgen f\u00fcr Robustheit.</li> </ol>"},{"location":"de/features/#verwendung_4","title":"Verwendung","text":"<ol> <li>Aktivieren: <code>USE_REDIS: yes</code>.</li> <li>Verbindung: Host/IP and Port.</li> <li>Sicherheit: Anmeldeinformationen, falls erforderlich.</li> <li>Erweitert: Datenbank, SSL and Timeouts.</li> <li>Hochverf\u00fcgbarkeit: Konfigurieren Sie Sentinel, falls verwendet.</li> </ol>"},{"location":"de/features/#parameter_6","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>USE_REDIS</code> <code>no</code> global nein Aktiviert die Redis-/Valkey-Integration (Cluster-Modus). <code>REDIS_HOST</code> global nein Host/IP des Redis-/Valkey-Servers. <code>REDIS_PORT</code> <code>6379</code> global nein Redis-/Valkey-Port. <code>REDIS_DATABASE</code> <code>0</code> global nein Datenbanknummer (0\u201315). <code>REDIS_SSL</code> <code>no</code> global nein Aktiviert SSL/TLS. <code>REDIS_SSL_VERIFY</code> <code>yes</code> global nein \u00dcberpr\u00fcft das SSL-Zertifikat des Servers. <code>REDIS_TIMEOUT</code> <code>5</code> global nein Timeout (Sekunden). <code>REDIS_USERNAME</code> global nein Benutzername (Redis \u2265 6.0). <code>REDIS_PASSWORD</code> global nein Passwort. <code>REDIS_SENTINEL_HOSTS</code> global nein Sentinel-Hosts (durch Leerzeichen getrennt, <code>host:port</code>). <code>REDIS_SENTINEL_USERNAME</code> global nein Sentinel-Benutzer. <code>REDIS_SENTINEL_PASSWORD</code> global nein Sentinel-Passwort. <code>REDIS_SENTINEL_MASTER</code> <code>mymaster</code> global nein Name des Sentinel-Masters. <code>REDIS_KEEPALIVE_IDLE</code> <code>300</code> global nein TCP-Keepalive-Intervall (Sekunden) f\u00fcr inaktive Verbindungen. <code>REDIS_KEEPALIVE_POOL</code> <code>3</code> global nein Maximale Anzahl der im Pool gehaltenen Verbindungen. <p>Hochverf\u00fcgbarkeit</p> <p>Konfigurieren Sie Redis Sentinel f\u00fcr ein automatisches Failover in der Produktion.</p> <p>Sicherheit</p> <ul> <li>Verwenden Sie starke Passw\u00f6rter f\u00fcr Redis and Sentinel.</li> <li>Erw\u00e4gen Sie die Verwendung von SSL/TLS.</li> <li>Setzen Sie Redis nicht dem Internet aus.</li> <li>Beschr\u00e4nken Sie den Zugriff auf den Redis-Port (Firewall, Segmentierung).</li> </ul>"},{"location":"de/features/#beispiele_6","title":"Beispiele","text":"Basiskonfiguration <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"localhost\"\nREDIS_PORT: \"6379\"\n</code></pre> Sichere Konfiguration <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_SSL: \"yes\"\nREDIS_SSL_VERIFY: \"yes\"\n</code></pre> Redis Sentinel <pre><code>USE_REDIS: \"yes\"\nREDIS_SENTINEL_HOSTS: \"sentinel1:26379 sentinel2:26379 sentinel3:26379\"\nREDIS_SENTINEL_MASTER: \"mymaster\"\nREDIS_SENTINEL_PASSWORD: \"sentinel-password\"\nREDIS_PASSWORD: \"redis-password\"\n</code></pre> Erweitertes Tuning <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_DATABASE: \"3\"\nREDIS_TIMEOUT: \"3\"\nREDIS_KEEPALIVE_IDLE: \"60\"\nREDIS_KEEPALIVE_POOL: \"5\"\n</code></pre>"},{"location":"de/features/#reporting-pro","title":"Reporting  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Regular reporting of important data from BunkerWeb (global, attacks, bans, requests, reasons, AS...). Monitoring pro plugin needed to work.</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USE_REPORTING_SMTP</code> <code>no</code> global nein Enable sending the report via email. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global nein Enable sending the report via webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global nein The frequency at which reports are sent. <code>REPORTING_WEBHOOK_URLS</code> global nein List of webhook URLs to receive the report in Markdown (separated by spaces). <code>REPORTING_SMTP_EMAILS</code> global nein List of email addresses to receive the report in HTML format (separated by spaces). <code>REPORTING_SMTP_HOST</code> global nein The host server used for SMTP sending. <code>REPORTING_SMTP_PORT</code> <code>465</code> global nein The port used for SMTP. Please note that there are different standards depending on the type of connection (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global nein The email address used as the sender. Note that 2FA must be disabled for this email address. <code>REPORTING_SMTP_FROM_USER</code> global nein The user authentication value for sending via the from email address. <code>REPORTING_SMTP_FROM_PASSWORD</code> global nein The password authentication value for sending via the from email address. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global nein Determine whether or not to use a secure connection for SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global nein The subject line of the email."},{"location":"de/features/#reverse-proxy","title":"Reverse proxy","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Reverse-Proxy-Plugin bietet nahtlose Proxy-Funktionen f\u00fcr BunkerWeb, mit denen Sie Anfragen an Backend-Server und -Dienste weiterleiten k\u00f6nnen. Mit dieser Funktion kann BunkerWeb als sicheres Frontend f\u00fcr Ihre Anwendungen fungieren und gleichzeitig zus\u00e4tzliche Vorteile wie SSL-Terminierung und Sicherheitsfilterung bieten.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Client eine Anfrage an BunkerWeb sendet, leitet das Reverse-Proxy-Plugin die Anfrage an Ihren konfigurierten Backend-Server weiter.</li> <li>BunkerWeb f\u00fcgt Sicherheitsheader hinzu, wendet WAF-Regeln an und f\u00fchrt andere Sicherheitspr\u00fcfungen durch, bevor die Anfragen an Ihre Anwendung weitergeleitet werden.</li> <li>Der Backend-Server verarbeitet die Anfrage und gibt eine Antwort an BunkerWeb zur\u00fcck.</li> <li>BunkerWeb wendet zus\u00e4tzliche Sicherheitsma\u00dfnahmen auf die Antwort an, bevor sie an den Client zur\u00fcckgesendet wird.</li> <li>Das Plugin unterst\u00fctzt sowohl HTTP- als auch TCP/UDP-Stream-Proxying und erm\u00f6glicht so eine breite Palette von Anwendungen, einschlie\u00dflich WebSockets und anderen Nicht-HTTP-Protokollen.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_17","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Reverse-Proxy-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Setzen Sie die Einstellung <code>USE_REVERSE_PROXY</code> auf <code>yes</code>, um die Reverse-Proxy-Funktionalit\u00e4t zu aktivieren.</li> <li>Konfigurieren Sie Ihre Backend-Server: Geben Sie die Upstream-Server mit der Einstellung <code>REVERSE_PROXY_HOST</code> an.</li> <li>Proxy-Einstellungen anpassen: Optimieren Sie das Verhalten mit optionalen Einstellungen f\u00fcr Zeit\u00fcberschreitungen, Puffergr\u00f6\u00dfen und andere Parameter.</li> <li>Protokollspezifische Optionen konfigurieren: Passen Sie f\u00fcr WebSockets oder spezielle HTTP-Anforderungen die entsprechenden Einstellungen an.</li> <li>Caching einrichten (optional): Aktivieren und konfigurieren Sie das Proxy-Caching, um die Leistung f\u00fcr h\u00e4ufig aufgerufene Inhalte zu verbessern.</li> </ol>"},{"location":"de/features/#konfigurationsanleitung_1","title":"Konfigurationsanleitung","text":"Grundlegende KonfigurationVerbindungseinstellungenSSL/TLS-KonfigurationProtokollunterst\u00fctzungHeader-VerwaltungAuthentifizierungErweiterte KonfigurationCaching-Konfiguration <p>Kerneinstellungen</p> <p>Die wesentlichen Konfigurationseinstellungen aktivieren und steuern die Grundfunktionalit\u00e4t der Reverse-Proxy-Funktion.</p> <p>Vorteile des Reverse-Proxy</p> <ul> <li>Sicherheitsverbesserung: Der gesamte Datenverkehr durchl\u00e4uft die Sicherheitsschichten von BunkerWeb, bevor er Ihre Anwendungen erreicht</li> <li>SSL-Terminierung: Verwalten Sie SSL/TLS-Zertifikate zentral, w\u00e4hrend Backend-Dienste unverschl\u00fcsselte Verbindungen verwenden k\u00f6nnen</li> <li>Protokollbehandlung: Unterst\u00fctzung f\u00fcr HTTP, HTTPS, WebSockets und andere Protokolle</li> <li>Fehlerabfang: Passen Sie Fehlerseiten f\u00fcr ein einheitliches Benutzererlebnis an</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_REVERSE_PROXY</code> <code>no</code> multisite nein Reverse-Proxy aktivieren: Auf <code>yes</code> setzen, um die Reverse-Proxy-Funktionalit\u00e4t zu aktivieren. <code>REVERSE_PROXY_HOST</code> multisite ja Backend-Host: Vollst\u00e4ndige URL der weitergeleiteten Ressource (proxy_pass). <code>REVERSE_PROXY_URL</code> <code>/</code> multisite ja Standort-URL: Pfad, der zum Backend-Server weitergeleitet wird. <code>REVERSE_PROXY_BUFFERING</code> <code>yes</code> multisite ja Antwort-Pufferung: Aktiviert oder deaktiviert die Pufferung von Antworten von der weitergeleiteten Ressource. <code>REVERSE_PROXY_KEEPALIVE</code> <code>no</code> multisite ja Keep-Alive: Aktiviert oder deaktiviert Keep-Alive-Verbindungen mit der weitergeleiteten Ressource. <code>REVERSE_PROXY_CUSTOM_HOST</code> multisite nein Benutzerdefinierter Host: \u00dcberschreibt den an den Upstream-Server gesendeten Host-Header. <code>REVERSE_PROXY_INTERCEPT_ERRORS</code> <code>yes</code> multisite nein Fehler abfangen: Ob Fehlerantworten vom Backend abgefangen und neu geschrieben werden sollen. <p>Bew\u00e4hrte Praktiken</p> <ul> <li>Geben Sie in <code>REVERSE_PROXY_HOST</code> immer die vollst\u00e4ndige URL an, einschlie\u00dflich des Protokolls (http:// oder https://)</li> <li>Verwenden Sie <code>REVERSE_PROXY_INTERCEPT_ERRORS</code>, um konsistente Fehlerseiten f\u00fcr alle Ihre Dienste bereitzustellen</li> <li>Verwenden Sie bei der Konfiguration mehrerer Backends das nummerierte Suffixformat (z. B. <code>REVERSE_PROXY_HOST_2</code>, <code>REVERSE_PROXY_URL_2</code>)</li> </ul> <p>Konfiguration von Verbindungen und Zeit\u00fcberschreitungen</p> <p>Diese Einstellungen steuern das Verbindungsverhalten, die Pufferung und die Zeit\u00fcberschreitungswerte f\u00fcr die weitergeleiteten Verbindungen.</p> <p>Vorteile</p> <ul> <li>Optimierte Leistung: Passen Sie Puffergr\u00f6\u00dfen und Verbindungseinstellungen an die Bed\u00fcrfnisse Ihrer Anwendung an</li> <li>Ressourcenmanagement: Kontrollieren Sie die Speichernutzung durch geeignete Pufferkonfigurationen</li> <li>Zuverl\u00e4ssigkeit: Konfigurieren Sie geeignete Zeit\u00fcberschreitungen, um langsame Verbindungen oder Backend-Probleme zu bew\u00e4ltigen</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>REVERSE_PROXY_CONNECT_TIMEOUT</code> <code>60s</code> multisite ja Verbindungs-Timeout: Maximale Zeit zum Herstellen einer Verbindung zum Backend-Server. <code>REVERSE_PROXY_READ_TIMEOUT</code> <code>60s</code> multisite ja Lese-Timeout: Maximale Zeit zwischen der \u00dcbertragung von zwei aufeinanderfolgenden Paketen vom Backend-Server. <code>REVERSE_PROXY_SEND_TIMEOUT</code> <code>60s</code> multisite ja Sende-Timeout: Maximale Zeit zwischen der \u00dcbertragung von zwei aufeinanderfolgenden Paketen zum Backend-Server. <code>PROXY_BUFFERS</code> multisite nein Puffer: Anzahl und Gr\u00f6\u00dfe der Puffer zum Lesen der Antwort vom Backend-Server. <code>PROXY_BUFFER_SIZE</code> multisite nein Puffergr\u00f6\u00dfe: Gr\u00f6\u00dfe des Puffers zum Lesen des ersten Teils der Antwort vom Backend-Server. <code>PROXY_BUSY_BUFFERS_SIZE</code> multisite nein Gr\u00f6\u00dfe der belegten Puffer: Gr\u00f6\u00dfe der Puffer, die mit dem Senden einer Antwort an den Client besch\u00e4ftigt sein k\u00f6nnen. <p>\u00dcberlegungen zu Zeit\u00fcberschreitungen</p> <ul> <li>Zu kurze Zeit\u00fcberschreitungen k\u00f6nnen legitime, aber langsame Verbindungen unterbrechen</li> <li>Zu lange Zeit\u00fcberschreitungen k\u00f6nnen Verbindungen unn\u00f6tig offen lassen und m\u00f6glicherweise Ressourcen ersch\u00f6pfen</li> <li>Bei WebSocket-Anwendungen sollten Sie die Lese- und Sende-Timeouts deutlich erh\u00f6hen (300s oder mehr empfohlen)</li> </ul> <p>SSL/TLS-Einstellungen f\u00fcr Backend-Verbindungen</p> <p>Diese Einstellungen steuern, wie BunkerWeb sichere Verbindungen zu Backend-Servern herstellt.</p> <p>Vorteile</p> <ul> <li>Ende-zu-Ende-Verschl\u00fcsselung: Behalten Sie verschl\u00fcsselte Verbindungen vom Client zum Backend bei</li> <li>Zertifikatsvalidierung: Kontrollieren Sie, wie Backend-Serverzertifikate validiert werden</li> <li>SNI-Unterst\u00fctzung: Geben Sie die Server Name Indication f\u00fcr Backends an, die mehrere Websites hosten</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>REVERSE_PROXY_SSL_SNI</code> <code>no</code> multisite nein SSL SNI: Aktiviert oder deaktiviert das Senden von SNI (Server Name Indication) an den Upstream. <code>REVERSE_PROXY_SSL_SNI_NAME</code> multisite nein SSL SNI-Name: Legt den SNI-Hostnamen fest, der an den Upstream gesendet wird, wenn SSL SNI aktiviert ist. <p>SNI erkl\u00e4rt</p> <p>Server Name Indication (SNI) ist eine TLS-Erweiterung, die es einem Client erm\u00f6glicht, den Hostnamen anzugeben, mit dem er w\u00e4hrend des Handshake-Prozesses eine Verbindung herstellen m\u00f6chte. Dies erm\u00f6glicht es Servern, mehrere Zertifikate auf derselben IP-Adresse und demselben Port zu pr\u00e4sentieren, sodass mehrere sichere (HTTPS-)Websites von einer einzigen IP-Adresse aus bedient werden k\u00f6nnen, ohne dass alle diese Websites dasselbe Zertifikat verwenden m\u00fcssen.</p> <p>Protokollspezifische Konfiguration</p> <p>Konfigurieren Sie die Behandlung spezieller Protokolle, insbesondere f\u00fcr WebSockets und andere Nicht-HTTP-Protokolle.</p> <p>Vorteile</p> <ul> <li>Protokollflexibilit\u00e4t: Die Unterst\u00fctzung f\u00fcr WebSockets erm\u00f6glicht Echtzeitanwendungen</li> <li>Moderne Webanwendungen: Aktivieren Sie interaktive Funktionen, die eine bidirektionale Kommunikation erfordern</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>REVERSE_PROXY_WS</code> <code>no</code> multisite ja WebSocket-Unterst\u00fctzung: Aktiviert das WebSocket-Protokoll f\u00fcr die Ressource. <p>WebSocket-Konfiguration</p> <ul> <li>Bei der Aktivierung von WebSockets mit <code>REVERSE_PROXY_WS: \"yes\"</code> sollten Sie die Zeit\u00fcberschreitungswerte erh\u00f6hen</li> <li>WebSocket-Verbindungen bleiben l\u00e4nger offen als typische HTTP-Verbindungen</li> <li>F\u00fcr WebSocket-Anwendungen wird folgende Konfiguration empfohlen:   <pre><code>REVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\n</code></pre></li> </ul> <p>HTTP-Header-Konfiguration</p> <p>Kontrollieren Sie, welche Header an Backend-Server und Clients gesendet werden, und erm\u00f6glichen Sie das Hinzuf\u00fcgen, \u00c4ndern oder Beibehalten von HTTP-Headern.</p> <p>Vorteile</p> <ul> <li>Informationskontrolle: Verwalten Sie genau, welche Informationen zwischen Clients und Backends ausgetauscht werden</li> <li>Sicherheitsverbesserung: F\u00fcgen Sie sicherheitsrelevante Header hinzu oder entfernen Sie Header, die sensible Informationen preisgeben k\u00f6nnten</li> <li>Integrationsunterst\u00fctzung: Stellen Sie die f\u00fcr die Authentifizierung und den ordnungsgem\u00e4\u00dfen Backend-Betrieb erforderlichen Header bereit</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>REVERSE_PROXY_HEADERS</code> multisite ja Benutzerdefinierte Header: HTTP-Header, die durch Semikolons getrennt an das Backend gesendet werden. <code>REVERSE_PROXY_HIDE_HEADERS</code> <code>Upgrade</code> multisite ja Header ausblenden: HTTP-Header, die vor Clients verborgen werden sollen, wenn sie vom Backend empfangen werden. <code>REVERSE_PROXY_HEADERS_CLIENT</code> multisite ja Client-Header: HTTP-Header, die durch Semikolons getrennt an den Client gesendet werden. <code>REVERSE_PROXY_UNDERSCORES_IN_HEADERS</code> <code>no</code> multisite nein Unterstriche in Headern: Aktiviert oder deaktiviert die <code>underscores_in_headers</code>-Direktive. <p>Sicherheits\u00fcberlegungen</p> <p>Seien Sie bei der Verwendung der Reverse-Proxy-Funktion vorsichtig, welche Header Sie an Ihre Backend-Anwendungen weiterleiten. Bestimmte Header k\u00f6nnen sensible Informationen \u00fcber Ihre Infrastruktur preisgeben oder Sicherheitskontrollen umgehen.</p> <p>Beispiele f\u00fcr Header-Formate</p> <p>Benutzerdefinierte Header an Backend-Server: <pre><code>REVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n</code></pre></p> <p>Benutzerdefinierte Header an Clients: <pre><code>REVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre></p> <p>Konfiguration der externen Authentifizierung</p> <p>Integrieren Sie externe Authentifizierungssysteme, um die Autorisierungslogik f\u00fcr Ihre Anwendungen zu zentralisieren.</p> <p>Vorteile</p> <ul> <li>Zentralisierte Authentifizierung: Implementieren Sie einen einzigen Authentifizierungspunkt f\u00fcr mehrere Anwendungen</li> <li>Konsistente Sicherheit: Wenden Sie einheitliche Authentifizierungsrichtlinien f\u00fcr verschiedene Dienste an</li> <li>Verbesserte Kontrolle: Leiten Sie Authentifizierungsdetails \u00fcber Header oder Variablen an Backend-Anwendungen weiter</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>REVERSE_PROXY_AUTH_REQUEST</code> multisite ja Authentifizierungsanforderung: Aktiviert die Authentifizierung \u00fcber einen externen Anbieter. <code>REVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL</code> multisite ja Anmelde-URL: Leitet Clients bei fehlgeschlagener Authentifizierung zur Anmelde-URL weiter. <code>REVERSE_PROXY_AUTH_REQUEST_SET</code> multisite ja Authentifizierungsanforderungssatz: Variablen, die vom Authentifizierungsanbieter festgelegt werden sollen. <p>Authentifizierungsintegration</p> <ul> <li>Die Authentifizierungsanforderungsfunktion erm\u00f6glicht die Implementierung zentralisierter Authentifizierungsmikrodienste</li> <li>Ihr Authentifizierungsdienst sollte bei erfolgreicher Authentifizierung einen 200-Statuscode oder bei einem Fehler 401/403 zur\u00fcckgeben</li> <li>Verwenden Sie die auth_request_set-Direktive, um Informationen vom Authentifizierungsdienst zu extrahieren und weiterzuleiten</li> </ul> <p>Zus\u00e4tzliche Konfigurationsoptionen</p> <p>Diese Einstellungen bieten eine weitere Anpassung des Reverse-Proxy-Verhaltens f\u00fcr spezielle Szenarien.</p> <p>Vorteile</p> <ul> <li>Anpassung: F\u00fcgen Sie zus\u00e4tzliche Konfigurationsausschnitte f\u00fcr komplexe Anforderungen hinzu</li> <li>Leistungsoptimierung: Optimieren Sie die Anforderungsbehandlung f\u00fcr bestimmte Anwendungsf\u00e4lle</li> <li>Flexibilit\u00e4t: Passen Sie sich mit speziellen Konfigurationen an einzigartige Anwendungsanforderungen an</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>REVERSE_PROXY_INCLUDES</code> multisite ja Zus\u00e4tzliche Konfigurationen: F\u00fcgen Sie zus\u00e4tzliche Konfigurationen in den Standortblock ein. <code>REVERSE_PROXY_PASS_REQUEST_BODY</code> <code>yes</code> multisite ja Anforderungsk\u00f6rper weiterleiten: Aktiviert oder deaktiviert das Weiterleiten des Anforderungsk\u00f6rpers. <p>Sicherheits\u00fcberlegungen</p> <p>Seien Sie vorsichtig, wenn Sie benutzerdefinierte Konfigurationsausschnitte einf\u00fcgen, da diese die Sicherheitseinstellungen von BunkerWeb \u00fcberschreiben oder bei unsachgem\u00e4\u00dfer Konfiguration Schwachstellen einf\u00fchren k\u00f6nnen.</p> <p>Einstellungen f\u00fcr das Caching von Antworten</p> <p>Verbessern Sie die Leistung durch das Caching von Antworten von Backend-Servern, wodurch die Last reduziert und die Antwortzeiten verbessert werden.</p> <p>Vorteile</p> <ul> <li>Leistung: Reduzieren Sie die Last auf Backend-Servern, indem Sie zwischengespeicherte Inhalte bereitstellen</li> <li>Reduzierte Latenz: Schnellere Antwortzeiten f\u00fcr h\u00e4ufig angeforderte Inhalte</li> <li>Bandbreiteneinsparungen: Minimieren Sie den internen Netzwerkverkehr durch das Caching von Antworten</li> <li>Anpassung: Konfigurieren Sie genau, was, wann und wie Inhalte zwischengespeichert werden</li> </ul> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_PROXY_CACHE</code> <code>no</code> multisite nein Caching aktivieren: Auf <code>yes</code> setzen, um das Caching von Backend-Antworten zu aktivieren. <code>PROXY_CACHE_PATH_LEVELS</code> <code>1:2</code> global nein Cache-Pfad-Ebenen: Wie die Hierarchie des Cache-Verzeichnisses strukturiert werden soll. <code>PROXY_CACHE_PATH_ZONE_SIZE</code> <code>10m</code> global nein Cache-Zonengr\u00f6\u00dfe: Gr\u00f6\u00dfe des gemeinsam genutzten Speicherbereichs, der f\u00fcr Cache-Metadaten verwendet wird. <code>PROXY_CACHE_PATH_PARAMS</code> <code>max_size=100m</code> global nein Cache-Pfad-Parameter: Zus\u00e4tzliche Parameter f\u00fcr den Cache-Pfad. <code>PROXY_CACHE_METHODS</code> <code>GET HEAD</code> multisite nein Cache-Methoden: HTTP-Methoden, die zwischengespeichert werden k\u00f6nnen. <code>PROXY_CACHE_MIN_USES</code> <code>2</code> multisite nein Mindestverwendungen f\u00fcr Cache: Mindestanzahl von Anfragen, bevor eine Antwort zwischengespeichert wird. <code>PROXY_CACHE_KEY</code> <code>$scheme$host$request_uri</code> multisite nein Cache-Schl\u00fcssel: Der Schl\u00fcssel, der zur eindeutigen Identifizierung einer zwischengespeicherten Antwort verwendet wird. <code>PROXY_CACHE_VALID</code> <code>200=24h 301=1h 302=24h</code> multisite nein Cache-G\u00fcltigkeit: Wie lange bestimmte Antwortcodes zwischengespeichert werden sollen. <code>PROXY_NO_CACHE</code> <code>$http_pragma $http_authorization</code> multisite nein Kein Cache: Bedingungen, unter denen Antworten nicht zwischengespeichert werden, auch wenn sie normalerweise zwischengespeichert werden k\u00f6nnten. <code>PROXY_CACHE_BYPASS</code> <code>0</code> multisite nein Cache-Umgehung: Bedingungen, unter denen der Cache umgangen werden soll. <p>Bew\u00e4hrte Praktiken f\u00fcr das Caching</p> <ul> <li>Speichern Sie nur Inhalte zwischen, die sich nicht h\u00e4ufig \u00e4ndern oder nicht personalisiert sind</li> <li>Verwenden Sie je nach Inhaltstyp geeignete Cache-Dauern (statische Assets k\u00f6nnen l\u00e4nger zwischengespeichert werden)</li> <li>Konfigurieren Sie <code>PROXY_NO_CACHE</code>, um das Zwischenspeichern sensibler oder personalisierter Inhalte zu vermeiden</li> <li>\u00dcberwachen Sie die Cache-Trefferquoten und passen Sie die Einstellungen entsprechend an</li> </ul> <p>Docker Compose-Benutzer - NGINX-Variablen</p> <p>Wenn Sie Docker Compose mit NGINX-Variablen in Ihren Konfigurationen verwenden, m\u00fcssen Sie das Dollarzeichen (<code>$</code>) durch doppelte Dollarzeichen (<code>$$</code>) maskieren. Dies gilt f\u00fcr alle Einstellungen, die NGINX-Variablen wie <code>$remote_addr</code>, <code>$proxy_add_x_forwarded_for</code> usw. enthalten.</p> <pre><code>Ohne diese Maskierung versucht Docker Compose, diese Variablen durch Umgebungsvariablen zu ersetzen, die normalerweise nicht existieren, was zu leeren Werten in Ihrer NGINX-Konfiguration f\u00fchrt.\n</code></pre>"},{"location":"de/features/#beispielkonfigurationen_18","title":"Beispielkonfigurationen","text":"Grundlegender HTTP-ProxyWebSocket-AnwendungMehrere StandorteCaching-KonfigurationErweiterte Header-VerwaltungAuthentifizierungsintegration <p>Eine einfache Konfiguration zum Weiterleiten von HTTP-Anfragen an einen Backend-Anwendungsserver:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"60s\"\nREVERSE_PROXY_READ_TIMEOUT: \"60s\"\n</code></pre> <p>Konfiguration, die f\u00fcr eine WebSocket-Anwendung mit l\u00e4ngeren Zeit\u00fcberschreitungen optimiert ist:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://websocket-app:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\n</code></pre> <p>Konfiguration zum Weiterleiten verschiedener Pfade an verschiedene Backend-Dienste:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\n\n# API-Backend\nREVERSE_PROXY_HOST: \"http://api-server:8080\"\nREVERSE_PROXY_URL: \"/api/\"\n\n# Admin-Backend\nREVERSE_PROXY_HOST_2: \"http://admin-server:8080\"\nREVERSE_PROXY_URL_2: \"/admin/\"\n\n# Frontend-App\nREVERSE_PROXY_HOST_3: \"http://frontend:3000\"\nREVERSE_PROXY_URL_3: \"/\"\n</code></pre> <p>Konfiguration mit aktiviertem Proxy-Caching f\u00fcr eine bessere Leistung:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nUSE_PROXY_CACHE: \"yes\"\nPROXY_CACHE_VALID: \"200=24h 301=1h 302=24h\"\nPROXY_CACHE_METHODS: \"GET HEAD\"\nPROXY_NO_CACHE: \"$http_authorization\"\n</code></pre> <p>Konfiguration mit benutzerdefinierter Header-Manipulation:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Benutzerdefinierte Header an das Backend\nREVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n\n# Benutzerdefinierte Header an den Client\nREVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre> <p>Konfiguration mit externer Authentifizierung:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Authentifizierungskonfiguration\nREVERSE_PROXY_AUTH_REQUEST: \"/auth\"\nREVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL: \"https://login.example.com\"\nREVERSE_PROXY_AUTH_REQUEST_SET: \"$auth_user $upstream_http_x_user;$auth_role $upstream_http_x_role\"\n\n# Backend des Authentifizierungsdienstes\nREVERSE_PROXY_HOST_2: \"http://auth-service:8080\"\nREVERSE_PROXY_URL_2: \"/auth\"\n</code></pre>"},{"location":"de/features/#reverse-scan","title":"Reverse scan","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Reverse Scan-Plugin sch\u00fctzt robust vor Proxy-Umgehungsversuchen, indem es die Ports der Clients scannt, um festzustellen, ob sie Proxyserver oder andere Netzwerkdienste betreiben. Diese Funktion hilft dabei, potenzielle Bedrohungen von Clients zu identifizieren und zu blockieren, die m\u00f6glicherweise versuchen, ihre wahre Identit\u00e4t oder Herkunft zu verbergen, und verbessert so die Sicherheitslage Ihrer Website.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Client eine Verbindung zu Ihrem Server herstellt, versucht BunkerWeb, bestimmte Ports auf der IP-Adresse des Clients zu scannen.</li> <li>Das Plugin pr\u00fcft, ob g\u00e4ngige Proxy-Ports (wie 80, 443, 8080 usw.) auf der Client-Seite ge\u00f6ffnet sind.</li> <li>Wenn offene Ports erkannt werden, was darauf hindeutet, dass der Client m\u00f6glicherweise einen Proxyserver betreibt, wird die Verbindung verweigert.</li> <li>Dies f\u00fcgt eine zus\u00e4tzliche Sicherheitsebene gegen automatisierte Tools, Bots und b\u00f6swillige Benutzer hinzu, die versuchen, ihre Identit\u00e4t zu verschleiern.</li> </ol> <p>Wichtige Vorteile</p> <ol> <li>Erh\u00f6hte Sicherheit: Identifiziert Clients, die potenziell Proxyserver betreiben, die f\u00fcr b\u00f6sartige Zwecke verwendet werden k\u00f6nnten.</li> <li>Proxy-Erkennung: Hilft bei der Erkennung und Blockierung von Clients, die versuchen, ihre wahre Identit\u00e4t zu verbergen.</li> <li>Konfigurierbare Einstellungen: Passen Sie an, welche Ports basierend auf Ihren spezifischen Sicherheitsanforderungen gescannt werden sollen.</li> <li>Leistungsoptimiert: Intelligentes Scannen mit konfigurierbaren Zeit\u00fcberschreitungen, um die Auswirkungen auf legitime Benutzer zu minimieren.</li> <li>Nahtlose Integration: Arbeitet transparent mit Ihren bestehenden Sicherheitsebenen zusammen.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_18","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Reverse-Scan-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Setzen Sie die Einstellung <code>USE_REVERSE_SCAN</code> auf <code>yes</code>, um das Scannen von Client-Ports zu aktivieren.</li> <li>Zu scannende Ports konfigurieren: Passen Sie die Einstellung <code>REVERSE_SCAN_PORTS</code> an, um anzugeben, welche Client-Ports \u00fcberpr\u00fcft werden sollen.</li> <li>Scan-Timeout festlegen: Passen Sie den <code>REVERSE_SCAN_TIMEOUT</code> an, um ein Gleichgewicht zwischen gr\u00fcndlichem Scannen und Leistung zu finden.</li> <li>Scan-Aktivit\u00e4t \u00fcberwachen: \u00dcberpr\u00fcfen Sie die Protokolle und die Web-Benutzeroberfl\u00e4che, um die Scan-Ergebnisse und potenzielle Sicherheitsvorf\u00e4lle zu \u00fcberpr\u00fcfen.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_18","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_REVERSE_SCAN</code> <code>no</code> multisite nein Reverse-Scan aktivieren: Auf <code>yes</code> setzen, um das Scannen von Client-Ports zu aktivieren. <code>REVERSE_SCAN_PORTS</code> <code>22 80 443 3128 8000 8080</code> multisite nein Zu scannende Ports: Leerzeichengetrennte Liste der zu \u00fcberpr\u00fcfenden Ports auf der Client-Seite. <code>REVERSE_SCAN_TIMEOUT</code> <code>500</code> multisite nein Scan-Timeout: Maximale Zeit in Millisekunden, die f\u00fcr das Scannen eines Ports zul\u00e4ssig ist. <p>Leistungs\u00fcberlegungen</p> <p>Das Scannen mehrerer Ports kann die Latenz bei Client-Verbindungen erh\u00f6hen. Verwenden Sie einen angemessenen Zeit\u00fcberschreitungswert und begrenzen Sie die Anzahl der gescannten Ports, um eine gute Leistung aufrechtzuerhalten.</p> <p>G\u00e4ngige Proxy-Ports</p> <p>Die Standardkonfiguration umfasst g\u00e4ngige Ports, die von Proxyservern (80, 443, 8080, 3128) und SSH (22) verwendet werden. Sie k\u00f6nnen diese Liste basierend auf Ihrem Bedrohungsmodell anpassen.</p>"},{"location":"de/features/#beispielkonfigurationen_19","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationUmfassendes ScannenLeistungsoptimierte KonfigurationHochsicherheitskonfiguration <p>Eine einfache Konfiguration zum Aktivieren des Client-Port-Scannens:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"500\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> <p>Eine gr\u00fcndlichere Konfiguration, die zus\u00e4tzliche Ports \u00fcberpr\u00fcft:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1000\"\nREVERSE_SCAN_PORTS: \"22 80 443 3128 8080 8000 8888 1080 3333 8081\"\n</code></pre> <p>Konfiguration, die auf eine bessere Leistung abgestimmt ist, indem weniger Ports mit einer geringeren Zeit\u00fcberschreitung \u00fcberpr\u00fcft werden:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"250\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> <p>Konfiguration mit Fokus auf maximale Sicherheit mit erweitertem Scannen:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1500\"\nREVERSE_SCAN_PORTS: \"22 25 80 443 1080 3128 3333 4444 5555 6588 6666 7777 8000 8080 8081 8800 8888 9999\"\n</code></pre>"},{"location":"de/features/#robotstxt","title":"Robots.txt","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Robots.txt-Plugin verwaltet die Datei robots.txt f\u00fcr Ihre Website. Diese Datei teilt Web-Crawlern und Robotern mit, auf welche Teile Ihrer Website sie zugreifen d\u00fcrfen und auf welche nicht.</p> <p>So funktioniert es:</p> <p>Wenn aktiviert, generiert BunkerWeb dynamisch die <code>/robots.txt</code>-Datei im Stammverzeichnis Ihrer Website. Die Regeln in dieser Datei werden in der folgenden Reihenfolge aus mehreren Quellen zusammengefasst:</p> <ol> <li>DarkVisitors-API: Wenn <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> angegeben ist, werden Regeln von der DarkVisitors-API abgerufen, was eine dynamische Blockierung b\u00f6sartiger Bots und KI-Crawler basierend auf konfigurierten Agententypen und nicht zugelassenen Benutzeragenten erm\u00f6glicht.</li> <li>Community-Listen: Regeln aus vordefinierten, von der Community gepflegten <code>robots.txt</code>-Listen (angegeben durch <code>ROBOTSTXT_COMMUNITY_LISTS</code>) werden einbezogen.</li> <li>Benutzerdefinierte URLs: Regeln werden von vom Benutzer bereitgestellten URLs abgerufen (angegeben durch <code>ROBOTSTXT_URLS</code>).</li> <li>Manuelle Regeln: Regeln, die direkt \u00fcber <code>ROBOTSTXT_RULE</code>-Umgebungsvariablen definiert werden, werden hinzugef\u00fcgt.</li> </ol> <p>Alle Regeln aus diesen Quellen werden kombiniert. Nach der Aggregation werden <code>ROBOTSTXT_IGNORE_RULE</code> angewendet, um unerw\u00fcnschte Regeln mit PCRE-Regex-Mustern herauszufiltern. Wenn nach diesem gesamten Prozess keine Regeln mehr \u00fcbrig sind, wird automatisch eine Standardregel <code>User-agent: *</code> und <code>Disallow: /</code> angewendet, um einen grundlegenden Schutz zu gew\u00e4hrleisten. Optionale Sitemap-URLs (angegeben durch <code>ROBOTSTXT_SITEMAP</code>) werden ebenfalls in die endg\u00fcltige <code>robots.txt</code>-Ausgabe aufgenommen.</p>"},{"location":"de/features/#dynamische-bot-umgehung-mit-der-darkvisitors-api","title":"Dynamische Bot-Umgehung mit der DarkVisitors-API","text":"<p>DarkVisitors ist ein Dienst, der eine dynamische <code>robots.txt</code>-Datei bereitstellt, um bekannte b\u00f6sartige Bots und KI-Crawler zu blockieren. Durch die Integration mit DarkVisitors kann BunkerWeb automatisch eine aktuelle <code>robots.txt</code> abrufen und bereitstellen, die Ihre Website vor unerw\u00fcnschtem automatisiertem Datenverkehr sch\u00fctzt.</p> <p>Um dies zu aktivieren, m\u00fcssen Sie sich bei darkvisitors.com anmelden und ein Bearer-Token erhalten.</p>"},{"location":"de/features/#wie-man-es-benutzt_19","title":"Wie man es benutzt","text":"<ol> <li>Aktivieren Sie die Funktion: Setzen Sie die Einstellung <code>USE_ROBOTSTXT</code> auf <code>yes</code>.</li> <li>Regeln konfigurieren: W\u00e4hlen Sie eine oder mehrere Methoden, um Ihre <code>robots.txt</code>-Regeln zu definieren:<ul> <li>DarkVisitors-API: Geben Sie <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> und optional <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> und <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code> an.</li> <li>Community-Listen: Geben Sie <code>ROBOTSTXT_COMMUNITY_LISTS</code> an (durch Leerzeichen getrennte IDs).</li> <li>Benutzerdefinierte URLs: Geben Sie <code>ROBOTSTXT_URLS</code> an (durch Leerzeichen getrennte URLs).</li> <li>Manuelle Regeln: Verwenden Sie <code>ROBOTSTXT_RULE</code> f\u00fcr einzelne Regeln (mehrere Regeln k\u00f6nnen mit <code>ROBOTSTXT_RULE_N</code> angegeben werden).</li> </ul> </li> <li>Regeln filtern (optional): Verwenden Sie <code>ROBOTSTXT_IGNORE_RULE_N</code>, um bestimmte Regeln nach Regex-Muster auszuschlie\u00dfen.</li> <li>Sitemaps hinzuf\u00fcgen (optional): Verwenden Sie <code>ROBOTSTXT_SITEMAP_N</code> f\u00fcr Sitemap-URLs.</li> <li>Die generierte robots.txt-Datei abrufen: Sobald BunkerWeb mit den obigen Einstellungen l\u00e4uft, k\u00f6nnen Sie auf die dynamisch generierte <code>robots.txt</code>-Datei zugreifen, indem Sie eine HTTP-GET-Anfrage an <code>http(s)://your-domain.com/robots.txt</code> senden.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_19","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_ROBOTSTXT</code> <code>no</code> multisite Nein Aktiviert oder deaktiviert die <code>robots.txt</code>-Funktion. <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> multisite Nein Bearer-Token f\u00fcr die DarkVisitors-API. <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> multisite Nein Kommagetrennte Liste von Agententypen (z. B. <code>AI Data Scraper</code>), die von DarkVisitors einbezogen werden sollen. <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code> <code>/</code> multisite Nein Ein String, der angibt, welche URLs nicht erlaubt sind. Dieser Wert wird als Disallow-Feld gesendet, wenn die DarkVisitors-API kontaktiert wird. <code>ROBOTSTXT_COMMUNITY_LISTS</code> multisite Nein Leerzeichengetrennte Liste von von der Community gepflegten Regelsatz-IDs, die einbezogen werden sollen. <code>ROBOTSTXT_URLS</code> multisite Nein Leerzeichengetrennte Liste von URLs, von denen zus\u00e4tzliche <code>robots.txt</code>-Regeln abgerufen werden sollen. Unterst\u00fctzt <code>file://</code> und Basic-Auth. <code>ROBOTSTXT_RULE</code> multisite Ja Eine einzelne Regel f\u00fcr <code>robots.txt</code>. <code>ROBOTSTXT_HEADER</code> multisite Ja Kopfzeile f\u00fcr die <code>robots.txt</code>-Datei (vor den Regeln). Kann Base64-kodiert sein. <code>ROBOTSTXT_FOOTER</code> multisite Ja Fu\u00dfzeile f\u00fcr die <code>robots.txt</code>-Datei (nach den Regeln). Kann Base64-kodiert sein. <code>ROBOTSTXT_IGNORE_RULE</code> multisite Ja Ein einzelnes PCRE-Regex-Muster zum Ignorieren von Regeln. <code>ROBOTSTXT_SITEMAP</code> multisite Ja Eine einzelne Sitemap-URL."},{"location":"de/features/#beispielkonfigurationen_20","title":"Beispielkonfigurationen","text":"<p>Grundlegende manuelle Regeln</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Verwendung dynamischer Quellen (DarkVisitors &amp; Community-Liste)</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"ihr-darkvisitors-token-hier\"\nROBOTSTXT_DARKVISITORS_AGENT_TYPES: \"AI Data Scraper\"\nROBOTSTXT_COMMUNITY_LISTS: \"robots-disallowed\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\n</code></pre> <p>Kombinierte Konfiguration</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"ihr-darkvisitors-token-hier\"\nROBOTSTXT_COMMUNITY_LISTS: \"ai-robots-txt\"\nROBOTSTXT_URLS: \"https://example.com/my-custom-rules.txt\"\nROBOTSTXT_RULE: \"User-agent: MyOwnBot\"\nROBOTSTXT_RULE_1: \"Disallow: /admin\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Mit Kopf- und Fu\u00dfzeile</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_HEADER: \"# Dies ist eine benutzerdefinierte Kopfzeile\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_FOOTER: \"# Dies ist eine benutzerdefinierte Fu\u00dfzeile\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"```\n\n---\n\nWeitere Informationen finden Sie in der [robots.txt-Dokumentation](https://www.robotstxt.org/robotstxt.html).\n</code></pre>"},{"location":"de/features/#ssl","title":"SSL","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das SSL-Plugin bietet eine robuste SSL/TLS-Verschl\u00fcsselung f\u00fcr Ihre durch BunkerWeb gesch\u00fctzten Websites. Es erm\u00f6glicht sichere HTTPS-Verbindungen durch die Konfiguration von Protokollen, kryptografischen Suiten und zugeh\u00f6rigen Parametern.</p> <p>So funktioniert's:</p> <ol> <li>Bei einer HTTPS-Verbindung verwaltet BunkerWeb die SSL/TLS-Aushandlung gem\u00e4\u00df Ihren Einstellungen.</li> <li>Das Plugin erzwingt moderne Protokolle und starke Suiten und deaktiviert anf\u00e4llige Optionen.</li> <li>Optimierte Sitzungsparameter verbessern die Leistung, ohne die Sicherheit zu beeintr\u00e4chtigen.</li> <li>Die Pr\u00e4sentation der Zertifikate folgt Best Practices f\u00fcr Kompatibilit\u00e4t und Sicherheit.</li> </ol>"},{"location":"de/features/#verwendung_5","title":"Verwendung","text":"<ol> <li>Protokolle: W\u00e4hlen Sie die Versionen \u00fcber <code>SSL_PROTOCOLS</code>.</li> <li>Suiten: W\u00e4hlen Sie ein Niveau \u00fcber <code>SSL_CIPHERS_LEVEL</code> oder benutzerdefinierte Suiten \u00fcber <code>SSL_CIPHERS_CUSTOM</code>.</li> <li>Weiterleitungen: Konfigurieren Sie die HTTP\u2192HTTPS-Weiterleitung mit <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> und/oder <code>REDIRECT_HTTP_TO_HTTPS</code>.</li> </ol>"},{"location":"de/features/#parameter_7","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>REDIRECT_HTTP_TO_HTTPS</code> <code>no</code> Multisite nein Leitet alle HTTP-Anfragen zu HTTPS um. <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> <code>yes</code> Multisite nein Automatische Weiterleitung, wenn HTTPS erkannt wird. <code>SSL_PROTOCOLS</code> <code>TLSv1.2 TLSv1.3</code> Multisite nein Unterst\u00fctzte SSL/TLS-Protokolle (durch Leerzeichen getrennt). <code>SSL_CIPHERS_LEVEL</code> <code>modern</code> Multisite nein Sicherheitsniveau der Suiten (<code>modern</code>, <code>intermediate</code>, <code>old</code>). <code>SSL_CIPHERS_CUSTOM</code> Multisite nein Benutzerdefinierte Suiten (durch <code>:</code> getrennte Liste), die das Niveau ersetzen. <p>SSL Labs Test</p> <p>Testen Sie Ihre Konfiguration \u00fcber Qualys SSL Labs. Eine gut eingestellte BunkerWeb-Konfiguration erreicht in der Regel A+.</p> <p>Veraltete Protokolle</p> <p>SSLv3, TLSv1.0 und TLSv1.1 sind standardm\u00e4\u00dfig deaktiviert (bekannte Schwachstellen). Aktivieren Sie diese nur bei Bedarf f\u00fcr \u00e4ltere Clients.</p>"},{"location":"de/features/#beispiele_7","title":"Beispiele","text":"Moderne Sicherheit (Standard) <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> Maximale Sicherheit <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre> Legacy-Kompatibilit\u00e4t <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"old\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> Benutzerdefinierte Suiten <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_CUSTOM: \"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre>"},{"location":"de/features/#securitytxt","title":"Security.txt","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Security.txt-Plugin implementiert den Security.txt-Standard (RFC 9116) f\u00fcr Ihre Website. Diese Funktion erleichtert Sicherheitsforschern den Zugriff auf Ihre Sicherheitsrichtlinien und bietet eine standardisierte M\u00f6glichkeit, Sicherheitsl\u00fccken zu melden, die sie in Ihren Systemen entdecken.</p> <p>So funktioniert es:</p> <ol> <li>Nach der Aktivierung erstellt BunkerWeb eine <code>/.well-known/security.txt</code>-Datei im Stammverzeichnis Ihrer Website.</li> <li>Diese Datei enth\u00e4lt Informationen zu Ihren Sicherheitsrichtlinien, Kontakten und anderen relevanten Details.</li> <li>Sicherheitsforscher und automatisierte Tools k\u00f6nnen diese Datei leicht am Standardort finden.</li> <li>Der Inhalt wird \u00fcber einfache Einstellungen konfiguriert, mit denen Sie Kontaktinformationen, Verschl\u00fcsselungsschl\u00fcssel, Richtlinien und Danksagungen angeben k\u00f6nnen.</li> <li>BunkerWeb formatiert die Datei automatisch gem\u00e4\u00df RFC 9116.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_20","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Security.txt-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Setzen Sie die Einstellung <code>USE_SECURITYTXT</code> auf <code>yes</code>, um die security.txt-Datei zu aktivieren.</li> <li>Kontaktinformationen konfigurieren: Geben Sie mindestens eine Kontaktmethode mit der Einstellung <code>SECURITYTXT_CONTACT</code> an.</li> <li>Zus\u00e4tzliche Informationen festlegen: Konfigurieren Sie optionale Felder wie Ablaufdatum, Verschl\u00fcsselung, Danksagungen und Richtlinien-URLs.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration erstellt und stellt BunkerWeb die security.txt-Datei automatisch am Standardort bereit.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_20","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_SECURITYTXT</code> <code>no</code> multisite nein Security.txt aktivieren: Auf <code>yes</code> setzen, um die security.txt-Datei zu aktivieren. <code>SECURITYTXT_URI</code> <code>/.well-known/security.txt</code> multisite nein Security.txt-URI: Gibt die URI an, unter der die security.txt-Datei zug\u00e4nglich sein wird. <code>SECURITYTXT_CONTACT</code> multisite ja Kontaktinformationen: Wie Sicherheitsforscher Sie kontaktieren k\u00f6nnen (z. B. <code>mailto:security@example.com</code>). <code>SECURITYTXT_EXPIRES</code> multisite nein Ablaufdatum: Wann diese security.txt-Datei als abgelaufen betrachtet werden soll (ISO 8601-Format). <code>SECURITYTXT_ENCRYPTION</code> multisite ja Verschl\u00fcsselung: URL, die auf Verschl\u00fcsselungsschl\u00fcssel f\u00fcr die sichere Kommunikation verweist. <code>SECURITYTXT_ACKNOWLEDGEMENTS</code> multisite ja Danksagungen: URL, unter der Sicherheitsforscher f\u00fcr ihre Berichte anerkannt werden. <code>SECURITYTXT_POLICY</code> multisite ja Sicherheitsrichtlinie: URL, die auf die Sicherheitsrichtlinie verweist, die beschreibt, wie Schwachstellen gemeldet werden. <code>SECURITYTXT_HIRING</code> multisite ja Sicherheitsjobs: URL, die auf sicherheitsrelevante Stellenangebote verweist. <code>SECURITYTXT_CANONICAL</code> multisite ja Kanonische URL: Die kanonische(n) URI(s) f\u00fcr diese security.txt-Datei. <code>SECURITYTXT_PREFERRED_LANG</code> <code>en</code> multisite nein Bevorzugte Sprache: Die in der Kommunikation verwendete(n) Sprache(n). Angegeben als ISO 639-1-Sprachcode. <code>SECURITYTXT_CSAF</code> multisite ja CSAF: Link zur provider-metadata.json Ihres Common Security Advisory Framework-Anbieters. <p>Ablaufdatum erforderlich</p> <p>Gem\u00e4\u00df RFC 9116 ist das Feld <code>Expires</code> erforderlich. Wenn Sie keinen Wert f\u00fcr <code>SECURITYTXT_EXPIRES</code> angeben, setzt BunkerWeb das Ablaufdatum automatisch auf ein Jahr ab dem aktuellen Datum.</p> <p>Kontaktinformationen sind unerl\u00e4sslich</p> <p>Das Feld <code>Contact</code> ist der wichtigste Teil der security.txt-Datei. Sie sollten mindestens eine M\u00f6glichkeit f\u00fcr Sicherheitsforscher angeben, Sie zu kontaktieren. Dies kann eine E-Mail-Adresse, ein Webformular, eine Telefonnummer oder eine andere Methode sein, die f\u00fcr Ihre Organisation funktioniert.</p> <p>URLs m\u00fcssen HTTPS verwenden</p> <p>Gem\u00e4\u00df RFC 9116 M\u00dcSSEN alle URLs in der security.txt-Datei (au\u00dfer <code>mailto:</code>- und <code>tel:</code>-Links) HTTPS verwenden. Nicht-HTTPS-URLs werden von BunkerWeb automatisch in HTTPS konvertiert, um die Einhaltung des Standards zu gew\u00e4hrleisten.</p>"},{"location":"de/features/#beispielkonfigurationen_21","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationUmfassende KonfigurationKonfiguration mit mehreren Kontakten <p>Eine minimale Konfiguration mit nur Kontaktinformationen:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\n</code></pre> <p>Eine vollst\u00e4ndigere Konfiguration mit allen Feldern:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"https://example.com/security-contact-form\"\nSECURITYTXT_EXPIRES: \"2023-12-31T23:59:59+00:00\"\nSECURITYTXT_ENCRYPTION: \"https://example.com/pgp-key.txt\"\nSECURITYTXT_ACKNOWLEDGEMENTS: \"https://example.com/hall-of-fame\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_HIRING: \"https://example.com/jobs/security\"\nSECURITYTXT_CANONICAL: \"https://example.com/.well-known/security.txt\"\nSECURITYTXT_PREFERRED_LANG: \"en\"\nSECURITYTXT_CSAF: \"https://example.com/provider-metadata.json\"\n</code></pre> <p>Konfiguration mit mehreren Kontaktmethoden:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"tel:+1-201-555-0123\"\nSECURITYTXT_CONTACT_3: \"https://example.com/security-form\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_EXPIRES: \"2024-06-30T23:59:59+00:00\"\n</code></pre>"},{"location":"de/features/#self-signed-certificate","title":"Self-signed certificate","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Plugin \"Selbstsigniertes Zertifikat\" generiert und verwaltet automatisch SSL/TLS-Zertifikate direkt in BunkerWeb, um HTTPS ohne externe Zertifizierungsstelle zu aktivieren. Ideal f\u00fcr die Entwicklung, interne Netzwerke oder schnelle HTTPS-Bereitstellungen.</p> <p>So funktioniert's:</p> <ol> <li>Nach der Aktivierung generiert BunkerWeb ein selbstsigniertes Zertifikat f\u00fcr Ihre konfigurierten Domains.</li> <li>Das Zertifikat enth\u00e4lt alle definierten Servernamen, um eine korrekte Validierung zu gew\u00e4hrleisten.</li> <li>Die Zertifikate werden sicher gespeichert und verschl\u00fcsseln den gesamten HTTPS-Verkehr.</li> <li>Die Verl\u00e4ngerung erfolgt automatisch vor dem Ablaufdatum.</li> </ol> <p>Browser-Warnungen</p> <p>Browser zeigen Sicherheitswarnungen an, da ein selbstsigniertes Zertifikat nicht von einer vertrauensw\u00fcrdigen CA ausgestellt wurde. Verwenden Sie in der Produktion vorzugsweise Let's Encrypt.</p>"},{"location":"de/features/#verwendung_6","title":"Verwendung","text":"<ol> <li>Aktivieren: <code>GENERATE_SELF_SIGNED_SSL: yes</code>.</li> <li>Algorithmus: W\u00e4hlen Sie \u00fcber <code>SELF_SIGNED_SSL_ALGORITHM</code>.</li> <li>G\u00fcltigkeit: Dauer in Tagen \u00fcber <code>SELF_SIGNED_SSL_EXPIRY</code>.</li> <li>Betreff: Betrefffeld \u00fcber <code>SELF_SIGNED_SSL_SUBJ</code>.</li> </ol> <p>Stream-Modus</p> <p>Im Stream-Modus konfigurieren Sie <code>LISTEN_STREAM_PORT_SSL</code>, um den SSL/TLS-Listening-Port zu definieren.</p>"},{"location":"de/features/#parameter_8","title":"Parameter","text":"Parameter Standard Kontext Mehrfach Beschreibung <code>GENERATE_SELF_SIGNED_SSL</code> <code>no</code> Multisite nein Aktiviert die automatische Generierung selbstsignierter Zertifikate. <code>SELF_SIGNED_SSL_ALGORITHM</code> <code>ec-prime256v1</code> Multisite nein Algorithmus: <code>ec-prime256v1</code>, <code>ec-secp384r1</code>, <code>rsa-2048</code>, <code>rsa-4096</code>. <code>SELF_SIGNED_SSL_EXPIRY</code> <code>365</code> Multisite nein G\u00fcltigkeit (Tage). <code>SELF_SIGNED_SSL_SUBJ</code> <code>/CN=www.example.com/</code> Multisite nein Betreff des Zertifikats (identifiziert die Domain)."},{"location":"de/features/#beispiele_8","title":"Beispiele","text":"Standard <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=mysite.local/\"\n</code></pre> Kurzzeit-Zertifikate <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"90\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=dev.example.com/\"\n</code></pre> Test in RSA <pre><code>SERVER_NAME: \"test.example.com\"\nGENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"rsa-4096\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=test.example.com/\"\n</code></pre>"},{"location":"de/features/#sessions","title":"Sessions","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Sessions-Plugin bietet eine robuste HTTP-Sitzungsverwaltung f\u00fcr BunkerWeb und erm\u00f6glicht eine sichere und zuverl\u00e4ssige Verfolgung von Benutzersitzungen \u00fcber Anfragen hinweg. Diese Kernfunktion ist unerl\u00e4sslich f\u00fcr die Aufrechterhaltung des Benutzerstatus, die Persistenz der Authentifizierung und die Unterst\u00fctzung anderer Funktionen, die eine Kontinuit\u00e4t der Identit\u00e4t erfordern, wie z. B. der Anti-Bot-Schutz und Benutzerauthentifizierungssysteme.</p> <p>So funktioniert es:</p> <ol> <li>Wenn ein Benutzer zum ersten Mal mit Ihrer Website interagiert, erstellt BunkerWeb eine eindeutige Sitzungs-ID.</li> <li>Diese ID wird sicher in einem Cookie im Browser des Benutzers gespeichert.</li> <li>Bei nachfolgenden Anfragen ruft BunkerWeb die Sitzungs-ID aus dem Cookie ab und verwendet sie, um auf die Sitzungsdaten des Benutzers zuzugreifen.</li> <li>Sitzungsdaten k\u00f6nnen lokal oder in Redis f\u00fcr verteilte Umgebungen mit mehreren BunkerWeb-Instanzen gespeichert werden.</li> <li>Sitzungen werden automatisch mit konfigurierbaren Zeit\u00fcberschreitungen verwaltet, um die Sicherheit bei gleichzeitiger Benutzerfreundlichkeit zu gew\u00e4hrleisten.</li> <li>Die kryptografische Sicherheit von Sitzungen wird durch einen geheimen Schl\u00fcssel gew\u00e4hrleistet, der zum Signieren von Sitzungs-Cookies verwendet wird.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_21","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Sessions-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Sitzungssicherheit konfigurieren: Legen Sie einen starken, eindeutigen <code>SESSIONS_SECRET</code> fest, um sicherzustellen, dass Sitzungs-Cookies nicht gef\u00e4lscht werden k\u00f6nnen. (Der Standardwert ist \"random\", wodurch BunkerWeb einen zuf\u00e4lligen geheimen Schl\u00fcssel generiert.)</li> <li>Sitzungsnamen w\u00e4hlen: Passen Sie optional den <code>SESSIONS_NAME</code> an, um zu definieren, wie Ihr Sitzungs-Cookie im Browser hei\u00dfen soll. (Der Standardwert ist \"random\", wodurch BunkerWeb einen zuf\u00e4lligen Namen generiert.)</li> <li>Sitzungs-Timeouts festlegen: Konfigurieren Sie mit den Timeout-Einstellungen (<code>SESSIONS_IDLING_TIMEOUT</code>, <code>SESSIONS_ROLLING_TIMEOUT</code>, <code>SESSIONS_ABSOLUTE_TIMEOUT</code>), wie lange Sitzungen g\u00fcltig bleiben.</li> <li>Redis-Integration konfigurieren: Setzen Sie f\u00fcr verteilte Umgebungen <code>USE_REDIS</code> auf \"yes\" und konfigurieren Sie Ihre Redis-Verbindung, um Sitzungsdaten \u00fcber mehrere BunkerWeb-Knoten hinweg zu teilen.</li> <li>Lassen Sie BunkerWeb den Rest erledigen: Nach der Konfiguration erfolgt die Sitzungsverwaltung f\u00fcr Ihre Website automatisch.</li> </ol>"},{"location":"de/features/#konfigurationseinstellungen_21","title":"Konfigurationseinstellungen","text":"Einstellung Standard Kontext Mehrfach Beschreibung <code>SESSIONS_SECRET</code> <code>random</code> global nein Sitzungsgeheimnis: Kryptografischer Schl\u00fcssel zum Signieren von Sitzungs-Cookies. Sollte eine starke, zuf\u00e4llige Zeichenfolge sein, die f\u00fcr Ihre Website eindeutig ist. <code>SESSIONS_NAME</code> <code>random</code> global nein Cookie-Name: Der Name des Cookies, in dem die Sitzungs-ID gespeichert wird. <code>SESSIONS_IDLING_TIMEOUT</code> <code>1800</code> global nein Leerlauf-Timeout: Maximale Zeit (in Sekunden) der Inaktivit\u00e4t, bevor die Sitzung ung\u00fcltig wird. <code>SESSIONS_ROLLING_TIMEOUT</code> <code>3600</code> global nein Rollierendes Timeout: Maximale Zeit (in Sekunden), bevor eine Sitzung erneuert werden muss. <code>SESSIONS_ABSOLUTE_TIMEOUT</code> <code>86400</code> global nein Absolutes Timeout: Maximale Zeit (in Sekunden), bevor eine Sitzung unabh\u00e4ngig von der Aktivit\u00e4t zerst\u00f6rt wird. <code>SESSIONS_CHECK_IP</code> <code>yes</code> global nein IP pr\u00fcfen: Wenn auf <code>yes</code> gesetzt, wird die Sitzung zerst\u00f6rt, wenn sich die IP-Adresse des Clients \u00e4ndert. <code>SESSIONS_CHECK_USER_AGENT</code> <code>yes</code> global nein User-Agent pr\u00fcfen: Wenn auf <code>yes</code> gesetzt, wird die Sitzung zerst\u00f6rt, wenn sich der User-Agent des Clients \u00e4ndert. <p>Sicherheitshinweise</p> <p>Die Einstellung <code>SESSIONS_SECRET</code> ist f\u00fcr die Sicherheit von entscheidender Bedeutung. In Produktionsumgebungen:</p> <pre><code>1. Verwenden Sie einen starken, zuf\u00e4lligen Wert (mindestens 32 Zeichen)\n2. Halten Sie diesen Wert vertraulich\n3. Verwenden Sie denselben Wert f\u00fcr alle BunkerWeb-Instanzen in einem Cluster\n4. Erw\u00e4gen Sie die Verwendung von Umgebungsvariablen oder Geheimnisverwaltung, um die Speicherung im Klartext zu vermeiden\n</code></pre> <p>Cluster-Umgebungen</p> <p>Wenn Sie mehrere BunkerWeb-Instanzen hinter einem Load Balancer betreiben:</p> <pre><code>1. Setzen Sie `USE_REDIS` auf `yes` und konfigurieren Sie Ihre Redis-Verbindung\n2. Stellen Sie sicher, dass alle Instanzen genau denselben `SESSIONS_SECRET` und `SESSIONS_NAME` verwenden\n3. Dies stellt sicher, dass Benutzer ihre Sitzung beibehalten, unabh\u00e4ngig davon, welche BunkerWeb-Instanz ihre Anfragen bearbeitet\n</code></pre>"},{"location":"de/features/#beispielkonfigurationen_22","title":"Beispielkonfigurationen","text":"Grundlegende KonfigurationErh\u00f6hte SicherheitCluster-Umgebung mit RedisLanglebige Sitzungen <p>Eine einfache Konfiguration f\u00fcr eine einzelne BunkerWeb-Instanz:</p> <pre><code>SESSIONS_SECRET: \"ihr-starker-zuf\u00e4lliger-geheimschl\u00fcssel-hier\"\nSESSIONS_NAME: \"meineappsitzung\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\n</code></pre> <p>Konfiguration mit erh\u00f6hten Sicherheitseinstellungen:</p> <pre><code>SESSIONS_SECRET: \"ihr-sehr-starker-zuf\u00e4lliger-geheimschl\u00fcssel-hier\"\nSESSIONS_NAME: \"sicheresitzung\"\nSESSIONS_IDLING_TIMEOUT: \"900\"  # 15 Minuten\nSESSIONS_ROLLING_TIMEOUT: \"1800\"  # 30 Minuten\nSESSIONS_ABSOLUTE_TIMEOUT: \"43200\"  # 12 Stunden\nSESSIONS_CHECK_IP: \"yes\"\nSESSIONS_CHECK_USER_AGENT: \"yes\"\n</code></pre> <p>Konfiguration f\u00fcr mehrere BunkerWeb-Instanzen, die Sitzungsdaten gemeinsam nutzen:</p> <pre><code>SESSIONS_SECRET: \"ihr-starker-zuf\u00e4lliger-geheimschl\u00fcssel-hier\"\nSESSIONS_NAME: \"clustersitzung\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\nUSE_REDIS: \"yes\"\n# Stellen Sie sicher, dass die Redis-Verbindung korrekt konfiguriert ist\n</code></pre> <p>Konfiguration f\u00fcr Anwendungen, die eine erweiterte Sitzungspersistenz erfordern:</p> <pre><code>SESSIONS_SECRET: \"ihr-starker-zuf\u00e4lliger-geheimschl\u00fcssel-hier\"\nSESSIONS_NAME: \"persistentesitzung\"\nSESSIONS_IDLING_TIMEOUT: \"86400\"  # 1 Tag\nSESSIONS_ROLLING_TIMEOUT: \"172800\"  # 2 Tage\nSESSIONS_ABSOLUTE_TIMEOUT: \"604800\"  # 7 Tage\n</code></pre>"},{"location":"de/features/#ui","title":"UI","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Integrate easily the BunkerWeb UI.</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USE_UI</code> <code>no</code> multisite nein Use UI <code>UI_HOST</code> global nein Address of the web UI used for initial setup"},{"location":"de/features/#user-manager-pro","title":"User Manager  (PRO)","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Add the possibility to manage users on the web interface</p> Einstellung Standardwert Kontext Mehrfach Beschreibung <code>USERS_REQUIRE_2FA</code> <code>no</code> global nein Require two-factor authentication for all users"},{"location":"de/features/#whitelist","title":"Whitelist","text":"<p>STREAM-Unterst\u00fctzung </p> <p>Das Whitelist-Plugin erm\u00f6glicht es Ihnen, eine Liste vertrauensw\u00fcrdiger IP-Adressen zu definieren, die andere Sicherheitsfilter umgehen. Um stattdessen unerw\u00fcnschte Clients zu blockieren, lesen Sie das Blacklist-Plugin.</p> <p>Das Whitelist-Plugin bietet einen umfassenden Ansatz, um den Zugriff auf Ihre Website basierend auf verschiedenen Client-Attributen explizit zu erlauben. Diese Funktion bietet einen Sicherheitsmechanismus: Besuchern, die bestimmte Kriterien erf\u00fcllen, wird sofortiger Zugriff gew\u00e4hrt, w\u00e4hrend alle anderen regul\u00e4re Sicherheitspr\u00fcfungen durchlaufen m\u00fcssen.</p> <p>So funktioniert es:</p> <ol> <li>Sie definieren Kriterien f\u00fcr Besucher, die auf die \"Whitelist\" gesetzt werden sollen (IP-Adressen, Netzwerke, rDNS, ASN, User-Agent oder URI-Muster).</li> <li>Wenn ein Besucher versucht, auf Ihre Website zuzugreifen, pr\u00fcft BunkerWeb, ob er einem dieser Whitelist-Kriterien entspricht.</li> <li>Wenn ein Besucher einer Whitelist-Regel entspricht (und keiner Ignorier-Regel), wird ihm der Zugriff auf Ihre Website gew\u00e4hrt und er umgeht alle anderen Sicherheitspr\u00fcfungen.</li> <li>Wenn ein Besucher keinem Whitelist-Kriterium entspricht, durchl\u00e4uft er wie gewohnt alle normalen Sicherheitspr\u00fcfungen.</li> <li>Whitelists k\u00f6nnen in regelm\u00e4\u00dfigen Abst\u00e4nden automatisch aus externen Quellen aktualisiert werden.</li> </ol>"},{"location":"de/features/#wie-man-es-benutzt_22","title":"Wie man es benutzt","text":"<p>F\u00fchren Sie die folgenden Schritte aus, um die Whitelist-Funktion zu konfigurieren und zu verwenden:</p> <ol> <li>Aktivieren Sie die Funktion: Die Whitelist-Funktion ist standardm\u00e4\u00dfig deaktiviert. Setzen Sie die Einstellung <code>USE_WHITELIST</code> auf <code>yes</code>, um sie zu aktivieren.</li> <li>Erlaubnisregeln konfigurieren: Definieren Sie, welche IPs, Netzwerke, rDNS-Muster, ASNs, User-Agents oder URIs auf die Whitelist gesetzt werden sollen.</li> <li>Ignorierregeln einrichten: Geben Sie alle Ausnahmen an, die die Whitelist-Pr\u00fcfungen umgehen sollen.</li> <li>Externe Quellen hinzuf\u00fcgen: Konfigurieren Sie URLs zum automatischen Herunterladen und Aktualisieren von Whitelist-Daten.</li> <li>Zugriff \u00fcberwachen: \u00dcberpr\u00fcfen Sie die Web-Benutzeroberfl\u00e4che, um zu sehen, welchen Besuchern der Zugriff gew\u00e4hrt oder verweigert wird.</li> </ol> <p>Stream-Modus</p> <p>Im Stream-Modus werden nur IP-, rDNS- und ASN-Pr\u00fcfungen durchgef\u00fchrt.</p>"},{"location":"de/features/#konfigurationseinstellungen_22","title":"Konfigurationseinstellungen","text":"<p>Allgemein</p> Einstellung Standard Kontext Mehrfach Beschreibung <code>USE_WHITELIST</code> <code>no</code> multisite nein Whitelist aktivieren: Auf <code>yes</code> setzen, um die Whitelist-Funktion zu aktivieren. IP-Adresse <p>Was dies bewirkt: Setzt Besucher basierend auf ihrer IP-Adresse oder ihrem Netzwerk auf die Whitelist. Diese Besucher umgehen alle Sicherheitspr\u00fcfungen.</p> <pre><code>| Einstellung                | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                                              |\n| -------------------------- | -------- | --------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_IP`             |          | multisite | nein     | **IP-Whitelist:** Liste von IP-Adressen oder Netzwerken (CIDR-Notation), die erlaubt werden sollen, getrennt durch Leerzeichen.                           |\n| `WHITELIST_IGNORE_IP`      |          | multisite | nein     | **IP-Ignorierliste:** Liste von IP-Adressen oder Netzwerken, die IP-Whitelist-Pr\u00fcfungen umgehen sollen.                                                   |\n| `WHITELIST_IP_URLS`        |          | multisite | nein     | **IP-Whitelist-URLs:** Liste von URLs, die IP-Adressen oder Netzwerke enthalten, die auf die Whitelist gesetzt werden sollen, getrennt durch Leerzeichen. |\n| `WHITELIST_IGNORE_IP_URLS` |          | multisite | nein     | **IP-Ignorierlisten-URLs:** Liste von URLs, die IP-Adressen oder Netzwerke enthalten, die ignoriert werden sollen.                                        |\n</code></pre> Reverse DNS <p>Was dies bewirkt: Setzt Besucher basierend auf ihrem Domainnamen (in umgekehrter Reihenfolge) auf die Whitelist. Dies ist n\u00fctzlich, um Besuchern von bestimmten Organisationen oder Netzwerken den Zugriff nach ihrer Domain zu erm\u00f6glichen.</p> <pre><code>| Einstellung                  | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                                         |\n| ---------------------------- | -------- | --------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_RDNS`             |          | multisite | nein     | **rDNS-Whitelist:** Liste von Reverse-DNS-Suffixen, die erlaubt werden sollen, getrennt durch Leerzeichen.                                           |\n| `WHITELIST_RDNS_GLOBAL`      | `yes`    | multisite | nein     | **Nur globales rDNS:** F\u00fchrt rDNS-Whitelist-Pr\u00fcfungen nur f\u00fcr globale IP-Adressen durch, wenn auf `yes` gesetzt.                                     |\n| `WHITELIST_IGNORE_RDNS`      |          | multisite | nein     | **rDNS-Ignorierliste:** Liste von Reverse-DNS-Suffixen, die rDNS-Whitelist-Pr\u00fcfungen umgehen sollen.                                                 |\n| `WHITELIST_RDNS_URLS`        |          | multisite | nein     | **rDNS-Whitelist-URLs:** Liste von URLs, die Reverse-DNS-Suffixe enthalten, die auf die Whitelist gesetzt werden sollen, getrennt durch Leerzeichen. |\n| `WHITELIST_IGNORE_RDNS_URLS` |          | multisite | nein     | **rDNS-Ignorierlisten-URLs:** Liste von URLs, die Reverse-DNS-Suffixe enthalten, die ignoriert werden sollen.                                        |\n</code></pre> ASN <p>Was dies bewirkt: Setzt Besucher von bestimmten Netzwerkanbietern mithilfe von Autonomen Systemnummern auf die Whitelist. ASNs identifizieren, zu welchem Anbieter oder welcher Organisation eine IP geh\u00f6rt.</p> <pre><code>| Einstellung                 | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                         |\n| --------------------------- | -------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------ |\n| `WHITELIST_ASN`             |          | multisite | nein     | **ASN-Whitelist:** Liste von Autonomen Systemnummern, die erlaubt werden sollen, getrennt durch Leerzeichen.                         |\n| `WHITELIST_IGNORE_ASN`      |          | multisite | nein     | **ASN-Ignorierliste:** Liste von ASNs, die ASN-Whitelist-Pr\u00fcfungen umgehen sollen.                                                   |\n| `WHITELIST_ASN_URLS`        |          | multisite | nein     | **ASN-Whitelist-URLs:** Liste von URLs, die ASNs enthalten, die auf die Whitelist gesetzt werden sollen, getrennt durch Leerzeichen. |\n| `WHITELIST_IGNORE_ASN_URLS` |          | multisite | nein     | **ASN-Ignorierlisten-URLs:** Liste von URLs, die ASNs enthalten, die ignoriert werden sollen.                                        |\n</code></pre> User-Agent <p>Was dies bewirkt: Setzt Besucher basierend darauf auf die Whitelist, welchen Browser oder welches Tool sie angeben zu verwenden. Dies ist effektiv, um den Zugriff auf bestimmte bekannte Tools oder Dienste zu erm\u00f6glichen.</p> <pre><code>| Einstellung                        | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                 |\n| ---------------------------------- | -------- | --------- | -------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_USER_AGENT`             |          | multisite | nein     | **User-Agent-Whitelist:** Liste von User-Agent-Mustern (PCRE-Regex), die erlaubt werden sollen, getrennt durch Leerzeichen.  |\n| `WHITELIST_IGNORE_USER_AGENT`      |          | multisite | nein     | **User-Agent-Ignorierliste:** Liste von User-Agent-Mustern, die User-Agent-Whitelist-Pr\u00fcfungen umgehen sollen.               |\n| `WHITELIST_USER_AGENT_URLS`        |          | multisite | nein     | **User-Agent-Whitelist-URLs:** Liste von URLs, die User-Agent-Muster enthalten, die auf die Whitelist gesetzt werden sollen. |\n| `WHITELIST_IGNORE_USER_AGENT_URLS` |          | multisite | nein     | **User-Agent-Ignorierlisten-URLs:** Liste von URLs, die User-Agent-Muster enthalten, die ignoriert werden sollen.            |\n</code></pre> URI <p>Was dies bewirkt: Setzt Anfragen an bestimmte URLs auf Ihrer Website auf die Whitelist. Dies ist hilfreich, um den Zugriff auf bestimmte Endpunkte unabh\u00e4ngig von anderen Faktoren zu erm\u00f6glichen.</p> <pre><code>| Einstellung                 | Standard | Kontext   | Mehrfach | Beschreibung                                                                                                                               |\n| --------------------------- | -------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `WHITELIST_URI`             |          | multisite | nein     | **URI-Whitelist:** Liste von URI-Mustern (PCRE-Regex), die erlaubt werden sollen, getrennt durch Leerzeichen.                              |\n| `WHITELIST_IGNORE_URI`      |          | multisite | nein     | **URI-Ignorierliste:** Liste von URI-Mustern, die URI-Whitelist-Pr\u00fcfungen umgehen sollen.                                                  |\n| `WHITELIST_URI_URLS`        |          | multisite | nein     | **URI-Whitelist-URLs:** Liste von URLs, die URI-Muster enthalten, die auf die Whitelist gesetzt werden sollen, getrennt durch Leerzeichen. |\n| `WHITELIST_IGNORE_URI_URLS` |          | multisite | nein     | **URI-Ignorierlisten-URLs:** Liste von URLs, die URI-Muster enthalten, die ignoriert werden sollen.                                        |\n</code></pre> <p>Unterst\u00fctzung von URL-Formaten</p> <p>Alle <code>*_URLS</code>-Einstellungen unterst\u00fctzen HTTP/HTTPS-URLs sowie lokale Dateipfade mit dem Pr\u00e4fix <code>file:///</code>. Die Basisauthentifizierung wird im Format <code>http://user:pass@url</code> unterst\u00fctzt.</p> <p>Regelm\u00e4\u00dfige Aktualisierungen</p> <p>Whitelists von URLs werden st\u00fcndlich automatisch heruntergeladen und aktualisiert, um sicherzustellen, dass Ihr Schutz mit den neuesten vertrauensw\u00fcrdigen Quellen auf dem neuesten Stand bleibt.</p> <p>Sicherheitsumgehung</p> <p>Auf der Whitelist stehende Besucher umgehen vollst\u00e4ndig alle anderen Sicherheitspr\u00fcfungen in BunkerWeb, einschlie\u00dflich WAF-Regeln, Ratenbegrenzung, Erkennung b\u00f6sartiger Bots und aller anderen Sicherheitsmechanismen. Verwenden Sie die Whitelist nur f\u00fcr vertrauensw\u00fcrdige Quellen, bei denen Sie absolut sicher sind.</p>"},{"location":"de/features/#beispielkonfigurationen_23","title":"Beispielkonfigurationen","text":"Grundlegender OrganisationszugriffErweiterte KonfigurationVerwendung lokaler DateienAPI-ZugriffsmusterBekannte Crawler <p>Eine einfache Konfiguration, die die IP-Adressen des Unternehmensb\u00fcros auf die Whitelist setzt:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_IP: \"192.168.1.0/24 10.0.0.0/8 203.0.113.42\"\n</code></pre> <p>Eine umfassendere Konfiguration mit mehreren Whitelist-Kriterien:</p> <pre><code>USE_WHITELIST: \"yes\"\n\n# Unternehmens- und vertrauensw\u00fcrdige Partner-Assets\nWHITELIST_IP: \"192.168.1.0/24 203.0.113.0/24\"\nWHITELIST_RDNS: \".company.com .partner-company.org\"\nWHITELIST_ASN: \"12345 67890\"  # ASNs von Unternehmen und Partnern\nWHITELIST_USER_AGENT: \"(?:\\b)CompanyBot(?:\\b) (?:\\b)PartnerCrawler(?:\\b)\"\n\n# Externe vertrauensw\u00fcrdige Quellen\nWHITELIST_IP_URLS: \"https://example.com/trusted-networks.txt\"\nWHITELIST_USER_AGENT_URLS: \"https://example.com/trusted-crawlers.txt\"\n</code></pre> <p>Konfiguration mit lokalen Dateien f\u00fcr Whitelists:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_IP_URLS: \"file:///path/to/ip-whitelist.txt\"\nWHITELIST_RDNS_URLS: \"file:///path/to/rdns-whitelist.txt\"\nWHITELIST_ASN_URLS: \"file:///path/to/asn-whitelist.txt\"\nWHITELIST_USER_AGENT_URLS: \"file:///path/to/user-agent-whitelist.txt\"\nWHITELIST_URI_URLS: \"file:///path/to/uri-whitelist.txt\"\n</code></pre> <p>Eine Konfiguration, die sich darauf konzentriert, den Zugriff nur auf bestimmte API-Endpunkte zu erm\u00f6glichen:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_URI: \"^/api/v1/public/ ^/api/v1/status\"\nWHITELIST_IP: \"192.168.1.0/24\"  # Internes Netzwerk f\u00fcr alle Endpunkte\n</code></pre> <p>Eine Konfiguration, die g\u00e4ngige Suchmaschinen- und Social-Media-Crawler auf die Whitelist setzt:</p> <pre><code>USE_WHITELIST: \"yes\"\n\n# Verifizierung mit Reverse DNS f\u00fcr zus\u00e4tzliche Sicherheit\nWHITELIST_RDNS: \".googlebot.com .search.msn.com .crawl.yahoo.net .yandex.com .baidu.com .facebook.com\"\nWHITELIST_RDNS_GLOBAL: \"yes\"  # Nur globale IPs pr\u00fcfen\n</code></pre> <p>Diese Konfiguration erm\u00f6glicht es legitimen Crawlern, Ihre Website zu indizieren, ohne Ratenbegrenzungen oder anderen Sicherheitsma\u00dfnahmen unterworfen zu sein, die sie blockieren k\u00f6nnten. Die rDNS-Pr\u00fcfungen helfen zu \u00fcberpr\u00fcfen, ob die Crawler tats\u00e4chlich von den von ihnen angegebenen Unternehmen stammen.</p>"},{"location":"de/integrations/","title":"Integrationen","text":""},{"location":"de/integrations/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>BunkerWeb Cloud ist der einfachste Weg, um mit BunkerWeb zu beginnen. Es bietet Ihnen einen vollst\u00e4ndig verwalteten BunkerWeb-Dienst ohne Aufwand. Betrachten Sie es als BunkerWeb-as-a-Service!</p> <p>Probieren Sie unser BunkerWeb Cloud-Angebot aus und erhalten Sie Zugang zu:</p> <ul> <li>Eine vollst\u00e4ndig verwaltete BunkerWeb-Instanz, die in unserer Cloud gehostet wird</li> <li>Alle BunkerWeb-Funktionen, einschlie\u00dflich der PRO-Funktionen</li> <li>Eine \u00dcberwachungsplattform mit Dashboards und Warnungen</li> <li>Technischer Support zur Unterst\u00fctzung bei der Konfiguration</li> </ul> <p>Wenn Sie am BunkerWeb Cloud-Angebot interessiert sind, z\u00f6gern Sie nicht, uns zu kontaktieren, damit wir Ihre Bed\u00fcrfnisse besprechen k\u00f6nnen.</p>"},{"location":"de/integrations/#all-in-one-aio-image","title":"All-In-One (AIO) Image","text":"BunkerWeb All-In-One Architektur (AIO)"},{"location":"de/integrations/#bereitstellung","title":"Bereitstellung","text":"<p>Um den All-in-One-Container bereitzustellen, m\u00fcssen Sie nur den folgenden Befehl ausf\u00fchren:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Standardm\u00e4\u00dfig stellt der Container Folgendes bereit:</p> <ul> <li>8080/tcp f\u00fcr HTTP</li> <li>8443/tcp f\u00fcr HTTPS</li> <li>8443/udp f\u00fcr QUIC</li> <li>7000/tcp f\u00fcr den Zugriff auf die Web-UI ohne BunkerWeb davor (nicht f\u00fcr die Produktion empfohlen)</li> <li>8888/tcp f\u00fcr die API, wenn <code>SERVICE_API=yes</code> (interne Verwendung; vorzugsweise \u00fcber BunkerWeb als Reverse-Proxy bereitstellen, anstatt direkt zu ver\u00f6ffentlichen)</li> </ul> <p>Das All-In-One-Image enth\u00e4lt mehrere integrierte Dienste, die \u00fcber Umgebungsvariablen gesteuert werden k\u00f6nnen:</p> <ul> <li><code>SERVICE_UI=yes</code> (Standard) - Aktiviert den Web-UI-Dienst</li> <li><code>SERVICE_SCHEDULER=yes</code> (Standard) - Aktiviert den Scheduler-Dienst</li> <li><code>SERVICE_API=no</code> (Standard) - Aktiviert den API-Dienst (FastAPI-Steuerungsebene)</li> <li><code>AUTOCONF_MODE=no</code> (Standard) - Aktiviert den Autoconf-Dienst</li> <li><code>USE_REDIS=yes</code> (Standard) - Aktiviert die integrierte Redis-Instanz</li> <li><code>USE_CROWDSEC=no</code> (Standard) - Die CrowdSec-Integration ist standardm\u00e4\u00dfig deaktiviert</li> </ul>"},{"location":"de/integrations/#api-integration","title":"API-Integration","text":"<p>Das All-In-One-Image enth\u00e4lt die BunkerWeb-API. Sie ist standardm\u00e4\u00dfig deaktiviert und kann durch Setzen von <code>SERVICE_API=yes</code> aktiviert werden.</p> <p>Sicherheit</p> <p>Die API ist eine privilegierte Steuerungsebene. Setzen Sie sie nicht direkt dem Internet aus. Halten Sie sie in einem internen Netzwerk, beschr\u00e4nken Sie die Quell-IPs mit <code>API_WHITELIST_IPS</code>, erfordern Sie eine Authentifizierung (<code>API_TOKEN</code> oder API-Benutzer + Biscuit) und greifen Sie vorzugsweise \u00fcber BunkerWeb als Reverse-Proxy auf einem nicht erratbaren Pfad darauf zu.</p> <p>Schnelle Aktivierung (eigenst\u00e4ndig) \u2014 ver\u00f6ffentlicht den API-Port; nur zu Testzwecken:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -e API_TOKEN=\"changeme\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  -p 8888:8888/tcp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Empfohlen (hinter BunkerWeb) \u2014 ver\u00f6ffentlichen Sie <code>8888</code> nicht; verwenden Sie stattdessen einen Reverse-Proxy:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"\n    environment:\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_REVERSE_PROXY: \"yes\"\n      REVERSE_PROXY_URL: \"/api-&lt;unguessable&gt;\"\n      REVERSE_PROXY_HOST: \"http://bunkerweb-aio:8888\"\n\n  bunkerweb-aio:\n    image: bunkerity/bunkerweb-all-in-one:testing\n    environment:\n      SERVICE_API: \"yes\"\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      # Optional einen Admin-\u00dcberschreibungstoken setzen\n      # API_TOKEN: \"changeme\"\n    networks:\n      - bw-universe\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n</code></pre> <p>Details zu Authentifizierung, Berechtigungen (ACL), Ratenbegrenzung, TLS und Konfigurationsoptionen finden Sie in der API-Dokumentation.</p>"},{"location":"de/integrations/#zugriff-auf-den-einrichtungsassistenten","title":"Zugriff auf den Einrichtungsassistenten","text":"<p>Standardm\u00e4\u00dfig wird der Einrichtungsassistent automatisch gestartet, wenn Sie den AIO-Container zum ersten Mal ausf\u00fchren. Um darauf zuzugreifen, f\u00fchren Sie die folgenden Schritte aus:</p> <ol> <li>Starten Sie den AIO-Container wie oben beschrieben und stellen Sie sicher, dass <code>SERVICE_UI=yes</code> (Standard) ist.</li> <li>Greifen Sie auf die UI \u00fcber Ihren Haupt-BunkerWeb-Endpunkt zu, z. B. <code>https://ihre-domain</code>.</li> </ol> <p>Folgen Sie den n\u00e4chsten Schritten im Schnellstart-Leitfaden, um die Web-UI einzurichten.</p>"},{"location":"de/integrations/#redis-integration","title":"Redis-Integration","text":"<p>Das BunkerWeb All-In-One-Image enth\u00e4lt standardm\u00e4\u00dfig Redis f\u00fcr die Persistenz von Sperren und Berichten. Um Redis zu verwalten:</p> <ul> <li>Um Redis zu deaktivieren, setzen Sie <code>USE_REDIS=no</code> oder verweisen Sie <code>REDIS_HOST</code> auf einen externen Host.</li> <li>Redis-Protokolle werden mit dem Pr\u00e4fix <code>[REDIS]</code> in den Docker-Protokollen und in <code>/var/log/bunkerweb/redis.log</code> angezeigt.</li> </ul>"},{"location":"de/integrations/#crowdsec-integration","title":"CrowdSec-Integration","text":"<p>Das BunkerWeb All-In-One-Docker-Image wird mit vollst\u00e4ndig integriertem CrowdSec geliefert \u2013 keine zus\u00e4tzlichen Container oder manuelle Einrichtung erforderlich. Befolgen Sie die nachstehenden Schritte, um CrowdSec in Ihrer Bereitstellung zu aktivieren, zu konfigurieren und zu erweitern.</p> <p>Standardm\u00e4\u00dfig ist CrowdSec deaktiviert. Um es zu aktivieren, f\u00fcgen Sie einfach die Umgebungsvariable <code>USE_CROWDSEC</code> hinzu:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing```\n\n* Wenn `USE_CROWDSEC=yes`, wird das Einstiegsskript:\n\n    1. Den lokalen CrowdSec-Agenten **registrieren** und **starten** (\u00fcber `cscli`).\n    2. Standard-Sammlungen und -Parser **installieren oder aktualisieren**.\n    3. Den Bouncer `crowdsec-bunkerweb-bouncer/v1.6` **konfigurieren**.\n\n---\n\n#### Standard-Sammlungen &amp; Parser\n\nBeim ersten Start (oder nach einem Upgrade) werden diese Assets automatisch installiert und auf dem neuesten Stand gehalten:\n\n| Typ          | Name                                    | Zweck                                                                                                                                                                                                                                              |\n| ------------ | --------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Sammlung** | `crowdsecurity/nginx`                   | Verteidigt Nginx-Server gegen eine breite Palette von HTTP-basierten Angriffen, von Brute-Force- bis zu Injektionsversuchen.                                                                                                                       |\n| **Sammlung** | `crowdsecurity/appsec-virtual-patching` | Liefert einen dynamisch aktualisierten WAF-artigen Regelsatz, der auf bekannte CVEs abzielt und t\u00e4glich automatisch gepatcht wird, um Webanwendungen vor neu entdeckten Schwachstellen zu sch\u00fctzen.                                                |\n| **Sammlung** | `crowdsecurity/appsec-generic-rules`    | Erg\u00e4nzt `crowdsecurity/appsec-virtual-patching` mit Heuristiken f\u00fcr generische Angriffsmuster auf Anwendungsebene \u2013 wie Enumeration, Pfad-Traversal und automatisierte Sonden \u2013 und f\u00fcllt L\u00fccken, wo CVE-spezifische Regeln noch nicht existieren. |\n| **Parser**   | `crowdsecurity/geoip-enrich`            | Bereichert Ereignisse mit GeoIP-Kontext                                                                                                                                                                                                            |\n\n&lt;details&gt;\n&lt;summary&gt;&lt;strong&gt;Wie es intern funktioniert&lt;/strong&gt;&lt;/summary&gt;\n\nDas Einstiegsskript ruft auf:\n\n```bash\ncscli install collection crowdsecurity/nginx\ncscli install collection crowdsecurity/appsec-virtual-patching\ncscli install collection crowdsecurity/appsec-generic-rules\ncscli install parser     crowdsecurity/geoip-enrich\n</code></pre>"},{"location":"de/integrations/#hinzufugen-zusatzlicher-sammlungen","title":"Hinzuf\u00fcgen zus\u00e4tzlicher Sammlungen","text":"<p>Ben\u00f6tigen Sie mehr Abdeckung? Definieren Sie <code>CROWDSEC_EXTRA_COLLECTIONS</code> mit einer durch Leerzeichen getrennten Liste von Hub-Sammlungen:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_EXTRA_COLLECTIONS=\"crowdsecurity/apache2 crowdsecurity/mysql\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Wie es intern funktioniert</p> <p>Das Skript durchl\u00e4uft jeden Namen und installiert oder aktualisiert ihn nach Bedarf \u2013 keine manuellen Schritte erforderlich.</p>"},{"location":"de/integrations/#deaktivieren-bestimmter-parser","title":"Deaktivieren bestimmter Parser","text":"<p>Wenn Sie die Standardeinrichtung beibehalten, aber einen oder mehrere Parser explizit deaktivieren m\u00f6chten, geben Sie eine durch Leerzeichen getrennte Liste \u00fcber <code>CROWDSEC_DISABLED_PARSERS</code> an:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_DISABLED_PARSERS=\"crowdsecurity/geoip-enrich foo/bar-parser\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Hinweise: - Die Liste wird angewendet, nachdem die erforderlichen Elemente installiert/aktualisiert wurden; nur die von Ihnen aufgelisteten Parser werden entfernt. - Verwenden Sie Hub-Slugs, wie sie von <code>cscli parsers list</code> angezeigt werden (z. B. <code>crowdsecurity/geoip-enrich</code>).</p>"},{"location":"de/integrations/#appsec-umschalter","title":"AppSec-Umschalter","text":"<p>CrowdSec AppSec-Funktionen \u2013 angetrieben durch die Sammlungen <code>appsec-virtual-patching</code> und <code>appsec-generic-rules</code> \u2013 sind standardm\u00e4\u00dfig aktiviert.</p> <p>Um alle AppSec-Funktionen (WAF/virtuelles Patchen) zu deaktivieren, setzen Sie:</p> <pre><code>-e CROWDSEC_APPSEC_URL=\"\"\n</code></pre> <p>Dies schaltet den AppSec-Endpunkt effektiv aus, sodass keine Regeln angewendet werden.</p>"},{"location":"de/integrations/#externe-crowdsec-api","title":"Externe CrowdSec-API","text":"<p>Wenn Sie eine entfernte CrowdSec-Instanz betreiben, verweisen Sie den Container auf Ihre API:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_API=\"https://crowdsec.example.com:8000\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <ul> <li>Die lokale Registrierung wird \u00fcbersprungen, wenn <code>CROWDSEC_API</code> nicht <code>127.0.0.1</code> oder <code>localhost</code> ist.</li> <li>AppSec ist standardm\u00e4\u00dfig deaktiviert, wenn eine externe API verwendet wird. Um es zu aktivieren, setzen Sie <code>CROWDSEC_APPSEC_URL</code> auf Ihren gew\u00fcnschten Endpunkt.</li> <li>Die Bouncer-Registrierung erfolgt weiterhin gegen die entfernte API.</li> <li>Um einen vorhandenen Bouncer-Schl\u00fcssel wiederzuverwenden, geben Sie <code>CROWDSEC_API_KEY</code> mit Ihrem vorab generierten Token an.</li> </ul> <p>Weitere Optionen</p> <p>Eine vollst\u00e4ndige \u00dcbersicht \u00fcber alle CrowdSec-Optionen (benutzerdefinierte Szenarien, Protokolle, Fehlerbehebung und mehr) finden Sie in der BunkerWeb CrowdSec-Plugin-Dokumentation oder besuchen Sie die offizielle CrowdSec-Website.</p>"},{"location":"de/integrations/#docker","title":"Docker","text":"Docker-Integration <p>Die Verwendung von BunkerWeb als Docker-Container bietet einen bequemen und unkomplizierten Ansatz zum Testen und Nutzen der L\u00f6sung, insbesondere wenn Sie bereits mit der Docker-Technologie vertraut sind.</p> <p>Um Ihre Docker-Bereitstellung zu erleichtern, stellen wir auf Docker Hub vorgefertigte Images zur Verf\u00fcgung, die mehrere Architekturen unterst\u00fctzen. Diese vorgefertigten Images sind f\u00fcr die Verwendung auf den folgenden Architekturen optimiert und vorbereitet:</p> <ul> <li>x64 (64-Bit)</li> <li>x86</li> <li>armv8 (ARM 64-Bit)</li> <li>armv7 (ARM 32-Bit)</li> </ul> <p>Durch den Zugriff auf diese vorgefertigten Images von Docker Hub k\u00f6nnen Sie BunkerWeb schnell in Ihrer Docker-Umgebung ziehen und ausf\u00fchren, wodurch umfangreiche Konfigurations- oder Einrichtungsprozesse entfallen. Dieser optimierte Ansatz erm\u00f6glicht es Ihnen, sich auf die Nutzung der Funktionen von BunkerWeb zu konzentrieren, ohne unn\u00f6tige Komplexit\u00e4t.</p> <pre><code>docker pull bunkerity/bunkerweb:testing\n</code></pre> <p>Docker-Images sind auch auf GitHub-Paketen verf\u00fcgbar und k\u00f6nnen \u00fcber die Repository-Adresse <code>ghcr.io</code> heruntergeladen werden:</p> <pre><code>docker pull ghcr.io/bunkerity/bunkerweb:testing\n</code></pre> <p>Schl\u00fcsselkonzepte f\u00fcr die Docker-Integration sind:</p> <ul> <li>Umgebungsvariablen: Konfigurieren Sie BunkerWeb einfach \u00fcber Umgebungsvariablen. Mit diesen Variablen k\u00f6nnen Sie verschiedene Aspekte des Verhaltens von BunkerWeb anpassen, z. B. Netzwerkeinstellungen, Sicherheitsoptionen und andere Parameter.</li> <li>Scheduler-Container: Verwalten Sie die Konfiguration und f\u00fchren Sie Jobs mit einem dedizierten Container namens Scheduler aus.</li> <li>Netzwerke: Docker-Netzwerke spielen eine wichtige Rolle bei der Integration von BunkerWeb. Diese Netzwerke dienen zwei Hauptzwecken: dem Bereitstellen von Ports f\u00fcr Clients und dem Verbinden mit Upstream-Webdiensten. Durch das Bereitstellen von Ports kann BunkerWeb eingehende Anfragen von Clients annehmen und ihnen den Zugriff auf die gesch\u00fctzten Webdienste erm\u00f6glichen. Dar\u00fcber hinaus kann BunkerWeb durch die Verbindung mit Upstream-Webdiensten den Datenverkehr effizient weiterleiten und verwalten und so eine verbesserte Sicherheit und Leistung bieten.</li> </ul> <p>Datenbank-Backend</p> <p>Bitte beachten Sie, dass unsere Anweisungen davon ausgehen, dass Sie SQLite als Standard-Datenbank-Backend verwenden, wie durch die Einstellung <code>DATABASE_URI</code> konfiguriert. Es werden jedoch auch andere Datenbank-Backends unterst\u00fctzt. Weitere Informationen finden Sie in den docker-compose-Dateien im Ordner misc/integrations des Repositorys.</p>"},{"location":"de/integrations/#umgebungsvariablen","title":"Umgebungsvariablen","text":"<p>Einstellungen werden dem Scheduler \u00fcber Docker-Umgebungsvariablen \u00fcbergeben:</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      - MY_SETTING=value\n      - ANOTHER_SETTING=another value\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n...\n</code></pre> <p>Vollst\u00e4ndige Liste</p> <p>Die vollst\u00e4ndige Liste der Umgebungsvariablen finden Sie im Einstellungsbereich der Dokumentation.</p>"},{"location":"de/integrations/#verwendung-von-docker-secrets","title":"Verwendung von Docker-Secrets","text":"<p>Anstatt sensible Einstellungen \u00fcber Umgebungsvariablen zu \u00fcbergeben, k\u00f6nnen Sie sie als Docker-Secrets speichern. Erstellen Sie f\u00fcr jede Einstellung, die Sie sichern m\u00f6chten, ein Docker-Secret mit dem Namen, der dem Einstellungsschl\u00fcssel entspricht (in Gro\u00dfbuchstaben). Die Einstiegsskripte von BunkerWeb laden Secrets automatisch aus <code>/run/secrets</code> und exportieren sie als Umgebungsvariablen.</p> <p>Beispiel: <pre><code># Ein Docker-Secret f\u00fcr ADMIN_PASSWORD erstellen\necho \"S3cr3tP@ssw0rd\" | docker secret create ADMIN_PASSWORD -\n</code></pre></p> <p>Mounten Sie die Secrets bei der Bereitstellung: <pre><code>services:\n  bw-ui:\n    secrets:\n      - ADMIN_PASSWORD\n...\nsecrets:\n  ADMIN_PASSWORD:\n    external: true\n</code></pre></p> <p>Dadurch wird sichergestellt, dass sensible Einstellungen aus der Umgebung und den Protokollen herausgehalten werden.</p>"},{"location":"de/integrations/#scheduler","title":"Scheduler","text":"<p>Der Scheduler l\u00e4uft in seinem eigenen Container, der auch auf Docker Hub verf\u00fcgbar ist:</p> <pre><code>docker pull bunkerity/bunkerweb-scheduler:testing\n</code></pre> <p>BunkerWeb-Einstellungen</p> <p>Seit Version <code>1.6.0</code> ist der Scheduler-Container der Ort, an dem Sie die Einstellungen f\u00fcr BunkerWeb definieren. Der Scheduler pusht die Konfiguration dann an den BunkerWeb-Container.</p> <p>\u26a0 Wichtig: Alle API-bezogenen Einstellungen (wie <code>API_HTTP_PORT</code>, <code>API_LISTEN_IP</code>, <code>API_SERVER_NAME</code>, <code>API_WHITELIST_IP</code> und <code>API_TOKEN</code>, wenn Sie es verwenden) m\u00fcssen auch im BunkerWeb-Container definiert werden. Die Einstellungen m\u00fcssen in beiden Containern gespiegelt werden; andernfalls akzeptiert der BunkerWeb-Container keine API-Anfragen vom Scheduler.</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr beide Container zu vermeiden\n  API_HTTP_PORT: \"5000\" # Standardwert\n  API_LISTEN_IP: \"0.0.0.0\" # Standardwert\n  API_SERVER_NAME: \"bwapi\" # Standardwert\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\" # Setzen Sie dies entsprechend Ihren Netzwerkeinstellungen\n  # Optionaler Token; wenn gesetzt, sendet der Scheduler Authorization: Bearer &lt;token&gt;\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    environment:\n      # Dies setzt die API-Einstellungen f\u00fcr den BunkerWeb-Container\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      # Dies setzt die API-Einstellungen f\u00fcr den Scheduler-Container\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\n</code></pre> <p>Ein Volume wird ben\u00f6tigt, um die vom Scheduler verwendete SQLite-Datenbank und Backups zu speichern:</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - bw-storage:/data\n...\nvolumes:\n  bw-storage:\n</code></pre> <p>Verwendung eines lokalen Ordners f\u00fcr persistente Daten</p> <p>Der Scheduler l\u00e4uft als unprivilegierter Benutzer mit UID 101 und GID 101 im Container. Dies erh\u00f6ht die Sicherheit: Im Falle einer ausgenutzten Schwachstelle hat der Angreifer keine vollen Root-Rechte (UID/GID 0).</p> <p>Wenn Sie jedoch einen lokalen Ordner f\u00fcr persistente Daten verwenden, m\u00fcssen Sie die richtigen Berechtigungen festlegen, damit der unprivilegierte Benutzer Daten darin schreiben kann. Zum Beispiel:</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternativ, wenn der Ordner bereits existiert:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Wenn Sie Docker im rootless-Modus oder Podman verwenden, werden UIDs und GIDs im Container auf andere auf dem Host abgebildet. Sie m\u00fcssen zuerst Ihre anf\u00e4ngliche subuid und subgid \u00fcberpr\u00fcfen:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Wenn Sie beispielsweise einen Wert von 100000 haben, ist die abgebildete UID/GID 100100 (100000 + 100):</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Oder wenn der Ordner bereits existiert:</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nsudo chmod -R 770 bw-data\n</code></pre>"},{"location":"de/integrations/#netzwerke","title":"Netzwerke","text":"<p>Standardm\u00e4\u00dfig lauscht der BunkerWeb-Container (innerhalb des Containers) auf 8080/tcp f\u00fcr HTTP, 8443/tcp f\u00fcr HTTPS und 8443/udp f\u00fcr QUIC.</p> <p>Privilegierte Ports im rootless-Modus oder bei Verwendung von Podman</p> <p>Wenn Sie Docker im rootless-Modus verwenden und privilegierte Ports (&lt; 1024) wie 80 und 443 an BunkerWeb weiterleiten m\u00f6chten, beachten Sie bitte die Voraussetzungen hier.</p> <p>Wenn Sie Podman verwenden, k\u00f6nnen Sie die Mindestanzahl f\u00fcr unprivilegierte Ports senken: <pre><code>sudo sysctl net.ipv4.ip_unprivileged_port_start=1\n</code></pre></p> <p>Der typische BunkerWeb-Stack bei Verwendung der Docker-Integration enth\u00e4lt die folgenden Container:</p> <ul> <li>BunkerWeb</li> <li>Scheduler</li> <li>Ihre Dienste</li> </ul> <p>Aus Gr\u00fcnden der Tiefenverteidigung empfehlen wir dringend, mindestens drei verschiedene Docker-Netzwerke zu erstellen:</p> <ul> <li><code>bw-services</code>: f\u00fcr BunkerWeb und Ihre Webdienste</li> <li><code>bw-universe</code>: f\u00fcr BunkerWeb und den Scheduler</li> <li><code>bw-db</code>: f\u00fcr die Datenbank (wenn Sie eine verwenden)</li> </ul> <p>Um die Kommunikation zwischen dem Scheduler und der BunkerWeb-API zu sichern, autorisieren Sie API-Aufrufe. Verwenden Sie die Einstellung <code>API_WHITELIST_IP</code>, um zul\u00e4ssige IP-Adressen und Subnetze anzugeben. F\u00fcr einen st\u00e4rkeren Schutz setzen Sie <code>API_TOKEN</code> in beiden Containern; der Scheduler wird automatisch <code>Authorization: Bearer &lt;token&gt;</code> einschlie\u00dfen.</p> <p>Es wird dringend empfohlen, ein statisches Subnetz f\u00fcr das <code>bw-universe</code>-Netzwerk zu verwenden, um die Sicherheit zu erh\u00f6hen. Durch die Umsetzung dieser Ma\u00dfnahmen k\u00f6nnen Sie sicherstellen, dass nur autorisierte Quellen auf die BunkerWeb-API zugreifen k\u00f6nnen, was das Risiko von unbefugtem Zugriff oder b\u00f6swilligen Aktivit\u00e4ten verringert:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr beide Container zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  API_TOKEN: \"\" # Optionaler API-Token\n  # Optionaler API-Token f\u00fcr authentifizierten API-Zugriff\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-services\n      - bw-universe\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Diese Einstellung ist obligatorisch, um die BunkerWeb-Instanz anzugeben\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Statisches Subnetz, damit nur autorisierte Quellen auf die BunkerWeb-API zugreifen k\u00f6nnen\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"de/integrations/#vollstandige-compose-datei","title":"Vollst\u00e4ndige Compose-Datei","text":"<pre><code>x-bw-api-env: &amp;bw-api-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr beide Container zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    depends_on:\n      - bunkerweb\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Diese Einstellung ist obligatorisch, um die BunkerWeb-Instanz anzugeben\n      SERVER_NAME: \"www.example.com\"\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Statisches Subnetz, damit nur autorisierte Quellen auf die BunkerWeb-API zugreifen k\u00f6nnen\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"de/integrations/#aus-dem-quellcode-erstellen","title":"Aus dem Quellcode erstellen","text":"<p>Alternativ, wenn Sie einen praxisorientierteren Ansatz bevorzugen, haben Sie die M\u00f6glichkeit, das Docker-Image direkt aus dem Quellcode zu erstellen. Das Erstellen des Images aus dem Quellcode gibt Ihnen mehr Kontrolle und Anpassungsm\u00f6glichkeiten \u00fcber den Bereitstellungsprozess. Bitte beachten Sie jedoch, dass diese Methode je nach Ihrer Hardwarekonfiguration einige Zeit in Anspruch nehmen kann (Sie k\u00f6nnen bei Bedarf einen Kaffee \u2615 trinken).</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t bw -f src/bw/Dockerfile . &amp;&amp; \\\ndocker build -t bw-scheduler -f src/scheduler/Dockerfile . &amp;&amp; \\\ndocker build -t bw-autoconf -f src/autoconf/Dockerfile . &amp;&amp; \\\ndocker build -t bw-ui -f src/ui/Dockerfile .\n</code></pre>"},{"location":"de/integrations/#linux","title":"Linux","text":"Linux-Integration <p>Unterst\u00fctzte Linux-Distributionen f\u00fcr BunkerWeb (amd64/x86_64 und arm64/aarch64 Architekturen) sind:</p> <ul> <li>Debian 12 \"Bookworm\"</li> <li>Debian 13 \"Trixie\"</li> <li>Ubuntu 22.04 \"Jammy\"</li> <li>Ubuntu 24.04 \"Noble\"</li> <li>Fedora 41 und 42</li> <li>Red Hat Enterprise Linux (RHEL) 8, 9 und 10</li> </ul>"},{"location":"de/integrations/#einfaches-installationsskript","title":"Einfaches Installationsskript","text":"<p>F\u00fcr eine vereinfachte Installation bietet BunkerWeb ein einfaches Installationsskript, das den gesamten Einrichtungsprozess automatisch abwickelt, einschlie\u00dflich NGINX-Installation, Repository-Konfiguration und Service-Setup.</p>"},{"location":"de/integrations/#schnellstart","title":"Schnellstart","text":"<p>Um zu beginnen, laden Sie das Installationsskript und seine Pr\u00fcfsumme herunter und \u00fcberpr\u00fcfen Sie dann die Integrit\u00e4t des Skripts, bevor Sie es ausf\u00fchren.</p> <pre><code># Skript und Pr\u00fcfsumme herunterladen\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Pr\u00fcfsumme \u00fcberpr\u00fcfen\nsha256sum -c install-bunkerweb.sh.sha256\n\n# Wenn die \u00dcberpr\u00fcfung erfolgreich ist, Skript ausf\u00fchren\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Sicherheitshinweis</p> <p>\u00dcberpr\u00fcfen Sie immer die Integrit\u00e4t des Installationsskripts, bevor Sie es ausf\u00fchren.</p> <p>Laden Sie die Pr\u00fcfsummendatei herunter und verwenden Sie ein Werkzeug wie <code>sha256sum</code>, um zu best\u00e4tigen, dass das Skript nicht ver\u00e4ndert oder manipuliert wurde.</p> <p>Wenn die \u00dcberpr\u00fcfung der Pr\u00fcfsumme fehlschl\u00e4gt, f\u00fchren Sie das Skript nicht aus \u2013 es k\u00f6nnte unsicher sein.</p>"},{"location":"de/integrations/#wie-es-funktioniert","title":"Wie es funktioniert","text":"<p>Das einfache Installationsskript ist ein leistungsstarkes Werkzeug, das entwickelt wurde, um die Einrichtung von BunkerWeb auf einem frischen Linux-System zu optimieren. Es automatisiert die folgenden wichtigen Schritte:</p> <ol> <li>Systemanalyse: Erkennt Ihr Betriebssystem und \u00fcberpr\u00fcft es anhand der Liste der unterst\u00fctzten Distributionen.</li> <li>Anpassung der Installation: Im interaktiven Modus werden Sie aufgefordert, einen Installationstyp (All-In-One, Manager, Worker usw.) auszuw\u00e4hlen und zu entscheiden, ob der webbasierte Einrichtungsassistent aktiviert werden soll.</li> <li>Optionale Integrationen: Bietet an, die CrowdSec Security Engine automatisch zu installieren und zu konfigurieren.</li> <li>Abh\u00e4ngigkeitsmanagement: Installiert die korrekte Version von NGINX, die von BunkerWeb ben\u00f6tigt wird, aus offiziellen Quellen und sperrt die Version, um unbeabsichtigte Upgrades zu verhindern.</li> <li>BunkerWeb-Installation: F\u00fcgt das BunkerWeb-Paket-Repository hinzu, installiert die erforderlichen Pakete und sperrt die Version.</li> <li>Dienstkonfiguration: Richtet die <code>systemd</code>-Dienste entsprechend dem von Ihnen gew\u00e4hlten Installationstyp ein und aktiviert sie.</li> <li>Anleitung nach der Installation: Bietet klare n\u00e4chste Schritte, um Ihnen den Einstieg in Ihre neue BunkerWeb-Instanz zu erleichtern.</li> </ol>"},{"location":"de/integrations/#interaktive-installation","title":"Interaktive Installation","text":"<p>Wenn das Skript ohne Optionen ausgef\u00fchrt wird, wechselt es in einen interaktiven Modus, der Sie durch den Einrichtungsprozess f\u00fchrt. Sie werden gebeten, die folgenden Entscheidungen zu treffen:</p> <ol> <li>Installationstyp: W\u00e4hlen Sie die Komponenten aus, die Sie installieren m\u00f6chten.<ul> <li>Full Stack (Standard): Eine All-in-One-Installation mit BunkerWeb, dem Scheduler und der Web-UI.</li> <li>Manager: Installiert den Scheduler und die Web-UI, um einen oder mehrere entfernte BunkerWeb-Worker zu verwalten.</li> <li>Worker: Installiert nur die BunkerWeb-Instanz, die von einem entfernten Manager verwaltet werden kann.</li> <li>Nur Scheduler: Installiert nur die Scheduler-Komponente.</li> <li>Nur Web-UI: Installiert nur die Web-UI-Komponente.</li> </ul> </li> <li>Einrichtungsassistent: W\u00e4hlen Sie, ob der webbasierte Konfigurationsassistent aktiviert werden soll. Dies wird f\u00fcr Erstanwender dringend empfohlen.</li> <li>CrowdSec-Integration: Entscheiden Sie sich f\u00fcr die Installation der CrowdSec-Sicherheits-Engine f\u00fcr erweiterten Echtzeit-Bedrohungsschutz.</li> <li>CrowdSec AppSec: Wenn Sie sich f\u00fcr die Installation von CrowdSec entscheiden, k\u00f6nnen Sie auch die Application Security (AppSec)-Komponente aktivieren, die WAF-Funktionen hinzuf\u00fcgt.</li> <li>API-Dienst: W\u00e4hlen Sie, ob der optionale BunkerWeb-API-Dienst aktiviert werden soll. Er ist bei Linux-Installationen standardm\u00e4\u00dfig deaktiviert.</li> </ol> <p>Manager- und Scheduler-Installationen</p> <p>Wenn Sie den Installationstyp Manager oder Nur Scheduler w\u00e4hlen, werden Sie auch aufgefordert, die IP-Adressen oder Hostnamen Ihrer BunkerWeb-Worker-Instanzen anzugeben.</p>"},{"location":"de/integrations/#befehlszeilenoptionen","title":"Befehlszeilenoptionen","text":"<p>F\u00fcr nicht-interaktive oder automatisierte Setups kann das Skript mit Befehlszeilen-Flags gesteuert werden:</p> <p>Allgemeine Optionen:</p> Option Beschreibung <code>-v, --version VERSION</code> Gibt die zu installierende BunkerWeb-Version an (z. B. <code>testing</code>). <code>-w, --enable-wizard</code> Aktiviert den Einrichtungsassistenten. <code>-n, --no-wizard</code> Deaktiviert den Einrichtungsassistenten. <code>-y, --yes</code> F\u00fchrt im nicht-interaktiven Modus mit Standardantworten f\u00fcr alle Eingabeaufforderungen aus. <code>-f, --force</code> Erzwingt die Installation, auch auf einer nicht unterst\u00fctzten Betriebssystemversion. <code>-q, --quiet</code> Stille Installation (unterdr\u00fcckt die Ausgabe). <code>--api</code>, <code>--enable-api</code> Aktiviert den API (FastAPI) systemd-Dienst (standardm\u00e4\u00dfig deaktiviert). <code>--no-api</code> Deaktiviert den API-Dienst explizit. <code>-h, --help</code> Zeigt die Hilfenachricht mit allen verf\u00fcgbaren Optionen an. <code>--dry-run</code> Zeigt an, was installiert w\u00fcrde, ohne es zu tun. <p>Installationstypen:</p> Option Beschreibung <code>--full</code> Vollst\u00e4ndige Stack-Installation (BunkerWeb, Scheduler, UI). Dies ist der Standard. <code>--manager</code> Installiert den Scheduler und die UI zur Verwaltung von Remote-Workern. <code>--worker</code> Installiert nur die BunkerWeb-Instanz. <code>--scheduler-only</code> Installiert nur die Scheduler-Komponente. <code>--ui-only</code> Installiert nur die Web-UI-Komponente. <p>Sicherheitsintegrationen:</p> Option Beschreibung <code>--crowdsec</code> Installiert und konfiguriert die CrowdSec-Sicherheits-Engine. <code>--no-crowdsec</code> \u00dcberspringt die CrowdSec-Installation. <code>--crowdsec-appsec</code> Installiert CrowdSec mit der AppSec-Komponente (einschlie\u00dflich WAF-Funktionen). <p>Erweiterte Optionen:</p> Option Beschreibung <code>--instances \"IP1 IP2\"</code> Durch Leerzeichen getrennte Liste von BunkerWeb-Instanzen (erforderlich f\u00fcr Manager-/Scheduler-Modi). <p>Beispielverwendung:</p> <pre><code># Im interaktiven Modus ausf\u00fchren (f\u00fcr die meisten Benutzer empfohlen)\nsudo ./install-bunkerweb.sh\n\n# Nicht-interaktive Installation mit Standardeinstellungen (vollst\u00e4ndiger Stack, Assistent aktiviert)\nsudo ./install-bunkerweb.sh --yes\n\n# Einen Worker-Knoten ohne Einrichtungsassistent installieren\nsudo ./install-bunkerweb.sh --worker --no-wizard\n\n# Eine bestimmte Version installieren\nsudo ./install-bunkerweb.sh --version testing\n\n# Manager-Setup mit entfernten Worker-Instanzen (Instanzen erforderlich)\nsudo ./install-bunkerweb.sh --manager --instances \"192.168.1.10 192.168.1.11\"\n\n# Vollst\u00e4ndige Installation mit CrowdSec und AppSec\nsudo ./install-bunkerweb.sh --crowdsec-appsec\n\n# Stille nicht-interaktive Installation\nsudo ./install-bunkerweb.sh --quiet --yes\n\n# Installationsvorschau ohne Ausf\u00fchrung\nsudo ./install-bunkerweb.sh --dry-run\n\n# API w\u00e4hrend der einfachen Installation aktivieren (nicht-interaktiv)\nsudo ./install-bunkerweb.sh --yes --api\n\n# Fehler: CrowdSec kann nicht mit Worker-Installationen verwendet werden\n# sudo ./install-bunkerweb.sh --worker --crowdsec  # Dies schl\u00e4gt fehl\n\n# Fehler: Instanzen f\u00fcr Manager im nicht-interaktiven Modus erforderlich\n# sudo ./install-bunkerweb.sh --manager --yes  # Dies schl\u00e4gt ohne --instances fehl\n</code></pre> <p>Wichtige Hinweise zur Optionskompatibilit\u00e4t</p> <p>CrowdSec-Einschr\u00e4nkungen: - CrowdSec-Optionen (<code>--crowdsec</code>, <code>--crowdsec-appsec</code>) sind nur mit den Installationstypen <code>--full</code> (Standard) und <code>--manager</code> kompatibel - Sie k\u00f6nnen nicht mit den Installationen <code>--worker</code>, <code>--scheduler-only</code> oder <code>--ui-only</code> verwendet werden</p> <p>Anforderungen f\u00fcr Instanzen: - Die Option <code>--instances</code> ist nur mit den Installationstypen <code>--manager</code> und <code>--scheduler-only</code> g\u00fcltig - Bei Verwendung von <code>--manager</code> oder <code>--scheduler-only</code> mit <code>--yes</code> (nicht-interaktiver Modus) ist die Option <code>--instances</code> obligatorisch - Format: <code>--instances \"192.168.1.10 192.168.1.11 192.168.1.12\"</code></p> <p>Interaktiv vs. Nicht-interaktiv: - Der interaktive Modus (Standard) fordert zur Eingabe fehlender erforderlicher Werte auf - Der nicht-interaktive Modus (<code>--yes</code>) erfordert, dass alle erforderlichen Optionen \u00fcber die Befehlszeile bereitgestellt werden</p>"},{"location":"de/integrations/#crowdsec-integration-mit-dem-skript","title":"CrowdSec-Integration mit dem Skript","text":"<p>Wenn Sie sich f\u00fcr die Installation von CrowdSec w\u00e4hrend der interaktiven Einrichtung entscheiden, automatisiert das Skript die Integration mit BunkerWeb vollst\u00e4ndig:</p> <ul> <li>Es f\u00fcgt das offizielle CrowdSec-Repository hinzu und installiert den Agenten.</li> <li>Es erstellt eine neue Erfassungsdatei, damit CrowdSec die Protokolle von BunkerWeb (<code>access.log</code>, <code>error.log</code> und <code>modsec_audit.log</code>) parsen kann.</li> <li>Es installiert wesentliche Sammlungen (<code>crowdsecurity/nginx</code>) und Parser (<code>crowdsecurity/geoip-enrich</code>).</li> <li>Es registriert einen Bouncer f\u00fcr BunkerWeb und konfiguriert den API-Schl\u00fcssel automatisch in <code>/etc/bunkerweb/variables.env</code>.</li> <li>Wenn Sie auch die AppSec-Komponente ausw\u00e4hlen, installiert es die Sammlungen <code>appsec-virtual-patching</code> und <code>appsec-generic-rules</code> und konfiguriert den AppSec-Endpunkt f\u00fcr BunkerWeb.</li> </ul> <p>Dies bietet eine nahtlose, sofort einsatzbereite Integration f\u00fcr einen leistungsstarken Einbruchschutz.</p>"},{"location":"de/integrations/#rhel-uberlegungen","title":"RHEL-\u00dcberlegungen","text":"<p>Unterst\u00fctzung externer Datenbanken auf RHEL-basierten Systemen</p> <p>Wenn Sie eine externe Datenbank verwenden m\u00f6chten (empfohlen f\u00fcr die Produktion), m\u00fcssen Sie das entsprechende Datenbank-Client-Paket installieren:</p> <pre><code># F\u00fcr MariaDB\nsudo dnf install mariadb\n\n# F\u00fcr MySQL\nsudo dnf install mysql\n\n# F\u00fcr PostgreSQL\nsudo dnf install postgresql\n</code></pre> <p>Dies ist erforderlich, damit der BunkerWeb-Scheduler eine Verbindung zu Ihrer externen Datenbank herstellen kann.</p>"},{"location":"de/integrations/#nach-der-installation","title":"Nach der Installation","text":"<p>Abh\u00e4ngig von Ihren Entscheidungen w\u00e4hrend der Installation:</p> <p>Mit aktiviertem Einrichtungsassistenten:</p> <ol> <li>Greifen Sie auf den Einrichtungsassistenten unter <code>https://ihre-server-ip/setup</code> zu</li> <li>Befolgen Sie die gef\u00fchrte Konfiguration, um Ihren ersten gesch\u00fctzten Dienst einzurichten</li> <li>Konfigurieren Sie SSL/TLS-Zertifikate und andere Sicherheitseinstellungen</li> </ol> <p>Ohne Einrichtungsassistent:</p> <ol> <li>Bearbeiten Sie <code>/etc/bunkerweb/variables.env</code>, um BunkerWeb manuell zu konfigurieren</li> <li>F\u00fcgen Sie Ihre Servereinstellungen und gesch\u00fctzten Dienste hinzu</li> <li>Starten Sie den Scheduler neu: <code>sudo systemctl restart bunkerweb-scheduler</code></li> </ol>"},{"location":"de/integrations/#installation-uber-den-paketmanager","title":"Installation \u00fcber den Paketmanager","text":"<p>Bitte stellen Sie sicher, dass Sie NGINX 1.28.0 installiert haben, bevor Sie BunkerWeb installieren. F\u00fcr alle Distributionen au\u00dfer Fedora ist es zwingend erforderlich, vorgefertigte Pakete aus dem offiziellen NGINX-Repository zu verwenden. Das Kompilieren von NGINX aus dem Quellcode oder die Verwendung von Paketen aus verschiedenen Repositories funktioniert nicht mit den offiziellen vorgefertigten Paketen von BunkerWeb. Sie haben jedoch die M\u00f6glichkeit, BunkerWeb aus dem Quellcode zu erstellen.</p> Debian Bookworm/TrixieUbuntuFedoraRedHat <p>Der erste Schritt ist das Hinzuf\u00fcgen des offiziellen NGINX-Repositorys:</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/debian `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>Sie sollten jetzt NGINX 1.28.0 installieren k\u00f6nnen:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Testing/dev-Version</p> <p>Wenn Sie die <code>testing</code>- oder <code>dev</code>-Version verwenden, m\u00fcssen Sie die Direktive <code>force-bad-version</code> zu Ihrer <code>/etc/dpkg/dpkg.cfg</code>-Datei hinzuf\u00fcgen, bevor Sie BunkerWeb installieren.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>Einrichtungsassistenten deaktivieren</p> <p>Wenn Sie den Einrichtungsassistenten der Web-UI bei der Installation von BunkerWeb nicht verwenden m\u00f6chten, exportieren Sie die folgende Variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Und installieren Sie schlie\u00dflich BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Um ein Upgrade der NGINX- und/oder BunkerWeb-Pakete bei der Ausf\u00fchrung von <code>apt upgrade</code> zu verhindern, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>Der erste Schritt ist das Hinzuf\u00fcgen des offiziellen NGINX-Repositorys:</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release ubuntu-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/ubuntu `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>Sie sollten jetzt NGINX 1.28.0 installieren k\u00f6nnen:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Testing/dev-Version</p> <p>Wenn Sie die <code>testing</code>- oder <code>dev</code>-Version verwenden, m\u00fcssen Sie die Direktive <code>force-bad-version</code> zu Ihrer <code>/etc/dpkg/dpkg.cfg</code>-Datei hinzuf\u00fcgen, bevor Sie BunkerWeb installieren.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>Einrichtungsassistenten deaktivieren</p> <p>Wenn Sie den Einrichtungsassistenten der Web-UI bei der Installation von BunkerWeb nicht verwenden m\u00f6chten, exportieren Sie die folgende Variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Und installieren Sie schlie\u00dflich BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Um ein Upgrade der NGINX- und/oder BunkerWeb-Pakete bei der Ausf\u00fchrung von <code>apt upgrade</code> zu verhindern, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>Fedora Update Testing</p> <p>Wenn Sie die NGINX-Version nicht im stabilen Repository finden k\u00f6nnen, k\u00f6nnen Sie das <code>updates-testing</code>-Repository aktivieren:</p> <pre><code>sudo dnf config-manager setopt updates-testing.enabled=1\n</code></pre> <p>Fedora stellt bereits NGINX 1.28.0 zur Verf\u00fcgung, das wir unterst\u00fctzen</p> <pre><code>sudo dnf install -y --allowerasing nginx-1.28.0\n</code></pre> <p>Einrichtungsassistenten deaktivieren</p> <p>Wenn Sie den Einrichtungsassistenten der Web-UI bei der Installation von BunkerWeb nicht verwenden m\u00f6chten, exportieren Sie die folgende Variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Und installieren Sie schlie\u00dflich BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf makecache &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Um ein Upgrade der NGINX- und/oder BunkerWeb-Pakete bei der Ausf\u00fchrung von <code>dnf upgrade</code> zu verhindern, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre> <p>Der erste Schritt ist das Hinzuf\u00fcgen des offiziellen NGINX-Repositorys. Erstellen Sie die folgende Datei unter <code>/etc/yum.repos.d/nginx.repo</code>:</p> <pre><code>[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n</code></pre> <p>Sie sollten jetzt NGINX 1.28.0 installieren k\u00f6nnen:</p> <pre><code>sudo dnf install --allowerasing nginx-1.28.0\n</code></pre> <p>Einrichtungsassistenten deaktivieren</p> <p>Wenn Sie den Einrichtungsassistenten der Web-UI bei der Installation von BunkerWeb nicht verwenden m\u00f6chten, exportieren Sie die folgende Variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Und installieren Sie schlie\u00dflich BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf check-update &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Um ein Upgrade der NGINX- und/oder BunkerWeb-Pakete bei der Ausf\u00fchrung von <code>dnf upgrade</code> zu verhindern, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre>"},{"location":"de/integrations/#konfiguration-und-dienst","title":"Konfiguration und Dienst","text":"<p>Die manuelle Konfiguration von BunkerWeb erfolgt durch Bearbeiten der Datei <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>MEINE_EINSTELLUNG_1=wert1\nMEINE_EINSTELLUNG_2=wert2\n...```\n\nBei der Installation wird BunkerWeb mit drei Diensten `bunkerweb`, `bunkerweb-scheduler` und `bunkerweb-ui` geliefert, die Sie mit `systemctl` verwalten k\u00f6nnen.\n\nWenn Sie die BunkerWeb-Konfiguration manuell \u00fcber `/etc/bunkerweb/variables.env` bearbeiten, reicht ein Neustart des `bunkerweb-scheduler`-Dienstes aus, um die Konfiguration ohne Ausfallzeit zu generieren und neu zu laden. In bestimmten F\u00e4llen (z. B. bei \u00c4nderung der lauschenden Ports) m\u00fcssen Sie jedoch m\u00f6glicherweise den `bunkerweb`-Dienst neu starten.\n\n### Hochverf\u00fcgbarkeit\n\nDer Scheduler kann von der BunkerWeb-Instanz getrennt werden, um eine hohe Verf\u00fcgbarkeit zu gew\u00e4hrleisten. In diesem Fall wird der Scheduler auf einem separaten Server installiert und kann mehrere BunkerWeb-Instanzen verwalten.\n\n#### Manager\n\nUm nur den Scheduler auf einem Server zu installieren, k\u00f6nnen Sie die folgenden Variablen exportieren, bevor Sie die BunkerWeb-Installation ausf\u00fchren:\n\n```shell\nexport MANAGER_MODE=yes\nexport UI_WIZARD=no\n</code></pre> <p>Alternativ k\u00f6nnen Sie auch die folgenden Variablen exportieren, um nur den Scheduler zu aktivieren:</p> <pre><code>export SERVICE_SCHEDULER=yes\nexport SERVICE_BUNKERWEB=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"de/integrations/#worker","title":"Worker","text":"<p>Um nur BunkerWeb auf einem anderen Server zu installieren, k\u00f6nnen Sie die folgenden Variablen exportieren, bevor Sie die BunkerWeb-Installation ausf\u00fchren:</p> <pre><code>export WORKER_MODE=yes\n</code></pre> <p>Alternativ k\u00f6nnen Sie auch die folgenden Variablen exportieren, um nur BunkerWeb zu aktivieren:</p> <pre><code>export SERVICE_BUNKERWEB=yes\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"de/integrations/#web-ui","title":"Web-UI","text":"<p>Die Web-UI kann auf einem separaten Server installiert werden, um eine dedizierte Schnittstelle zur Verwaltung von BunkerWeb-Instanzen bereitzustellen. Um nur die Web-UI zu installieren, k\u00f6nnen Sie die folgenden Variablen exportieren, bevor Sie die BunkerWeb-Installation ausf\u00fchren:</p> <pre><code>export SERVICE_BUNKERWEB=no\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=yes\n</code></pre>"},{"location":"de/integrations/#docker-autoconf","title":"Docker Autoconf","text":"Docker Autoconf-Integration <p>Docker-Integration</p> <p>Die Docker Autoconf-Integration ist eine \"Weiterentwicklung\" der Docker-Integration. Bitte lesen Sie bei Bedarf zuerst den Docker-Integrationsabschnitt.</p> <p>Ein alternativer Ansatz ist verf\u00fcgbar, um die Unannehmlichkeit zu beheben, den Container bei jedem Update neu erstellen zu m\u00fcssen. Durch die Verwendung eines anderen Images namens autoconf k\u00f6nnen Sie die Echtzeit-Rekonfiguration von BunkerWeb automatisieren, ohne dass eine Neuerstellung des Containers erforderlich ist.</p> <p>Um diese Funktionalit\u00e4t zu nutzen, k\u00f6nnen Sie anstelle von Umgebungsvariablen f\u00fcr den BunkerWeb-Container Labels zu Ihren Webanwendungs-Containern hinzuf\u00fcgen. Das autoconf-Image lauscht dann auf Docker-Ereignisse und \u00fcbernimmt nahtlos die Konfigurationsupdates f\u00fcr BunkerWeb.</p> <p>Dieser \"automagische\" Prozess vereinfacht die Verwaltung von BunkerWeb-Konfigurationen. Durch das Hinzuf\u00fcgen von Labels zu Ihren Webanwendungs-Containern k\u00f6nnen Sie die Rekonfigurationsaufgaben an autoconf delegieren, ohne den manuellen Eingriff der Neuerstellung des Containers. Dies optimiert den Aktualisierungsprozess und erh\u00f6ht den Komfort.</p> <p>Durch die \u00dcbernahme dieses Ansatzes k\u00f6nnen Sie eine Echtzeit-Rekonfiguration von BunkerWeb ohne den Aufwand der Neuerstellung von Containern genie\u00dfen, was es effizienter und benutzerfreundlicher macht.</p> <p>Multisite-Modus</p> <p>Die Docker Autoconf-Integration impliziert die Verwendung des Multisite-Modus. Weitere Informationen finden Sie im Multisite-Abschnitt der Dokumentation.</p> <p>Datenbank-Backend</p> <p>Bitte beachten Sie, dass unsere Anweisungen davon ausgehen, dass Sie MariaDB als Standard-Datenbank-Backend verwenden, wie durch die Einstellung <code>DATABASE_URI</code> konfiguriert. Wir verstehen jedoch, dass Sie m\u00f6glicherweise alternative Backends f\u00fcr Ihre Docker-Integration bevorzugen. In diesem Fall k\u00f6nnen Sie sicher sein, dass auch andere Datenbank-Backends m\u00f6glich sind. Weitere Informationen finden Sie in den docker-compose-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Um automatisierte Konfigurationsupdates zu erm\u00f6glichen, f\u00fcgen Sie einen zus\u00e4tzlichen Container namens <code>bw-autoconf</code> zum Stack hinzu. Dieser Container hostet den Autoconf-Dienst, der dynamische Konfigurations\u00e4nderungen f\u00fcr BunkerWeb verwaltet.</p> <p>Um diese Funktionalit\u00e4t zu unterst\u00fctzen, verwenden Sie ein dediziertes \"echtes\" Datenbank-Backend (z. B. MariaDB, MySQL oder PostgreSQL) zur synchronisierten Konfigurationsspeicherung. Durch die Integration von <code>bw-autoconf</code> und einem geeigneten Datenbank-Backend schaffen Sie die Infrastruktur f\u00fcr eine nahtlose automatisierte Konfigurationsverwaltung in BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr beide Container zu vermeiden\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Obligatorisches Label f\u00fcr den Autoconf-Dienst, um die BunkerWeb-Instanz zu identifizieren\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # Wir m\u00fcssen die BunkerWeb-Instanz hier nicht angeben, da sie automatisch vom Autoconf-Dienst erkannt werden\n      SERVER_NAME: \"\" # Der Servername wird mit Dienst-Labels gef\u00fcllt\n      MULTISITE: \"yes\" # Obligatorische Einstellung f\u00fcr Autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # Der Docker-Socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>Datenbank im <code>bw-db</code>-Netzwerk</p> <p>Der Datenbankcontainer ist absichtlich nicht im <code>bw-universe</code>-Netzwerk enthalten. Er wird von den Containern <code>bw-autoconf</code> und <code>bw-scheduler</code> und nicht direkt von BunkerWeb verwendet. Daher ist der Datenbankcontainer Teil des <code>bw-db</code>-Netzwerks, was die Sicherheit erh\u00f6ht, indem der externe Zugriff auf die Datenbank erschwert wird. Diese bewusste Designentscheidung hilft, die Datenbank zu sch\u00fctzen und die allgemeine Sicherheitsperspektive des Systems zu st\u00e4rken.</p> <p>Verwendung von Docker im rootless-Modus</p> <p>Wenn Sie Docker im rootless-Modus verwenden, m\u00fcssen Sie den Mount des Docker-Sockets durch den folgenden Wert ersetzen: <code>$XDG_RUNTIME_DIR/docker.sock:/var/run/docker.sock:ro</code>.</p>"},{"location":"de/integrations/#autoconf-dienste","title":"Autoconf-Dienste","text":"<p>Sobald der Stack eingerichtet ist, k\u00f6nnen Sie den Webanwendungs-Container erstellen und die Einstellungen als Labels mit dem Pr\u00e4fix \"bunkerweb\" hinzuf\u00fcgen, um BunkerWeb automatisch einzurichten:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"de/integrations/#namespaces","title":"Namespaces","text":"<p>Ab Version <code>1.6.0</code> unterst\u00fctzen die Autoconf-Stacks von BunkerWeb Namespaces. Mit dieser Funktion k\u00f6nnen Sie mehrere \"Cluster\" von BunkerWeb-Instanzen und -Diensten auf demselben Docker-Host verwalten. Um Namespaces zu nutzen, setzen Sie einfach das <code>NAMESPACE</code>-Label auf Ihre Dienste. Hier ist ein Beispiel:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Setzen Sie den Namespace f\u00fcr den Dienst\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Namespace-Verhalten</p> <p>Standardm\u00e4\u00dfig lauschen alle Autoconf-Stacks auf alle Namespaces. Wenn Sie einen Stack auf bestimmte Namespaces beschr\u00e4nken m\u00f6chten, k\u00f6nnen Sie die Umgebungsvariable <code>NAMESPACES</code> im <code>bw-autoconf</code>-Dienst setzen:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Setzen Sie den Namespace f\u00fcr die BunkerWeb-Instanz, damit der Autoconf-Dienst sie erkennen kann\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      ...\n      NAMESPACES: \"my-namespace my-other-namespace\" # Lauschen Sie nur auf diese Namespaces\n...\n</code></pre> <p>Beachten Sie, dass die Umgebungsvariable <code>NAMESPACES</code> eine durch Leerzeichen getrennte Liste von Namespaces ist.</p> <p>Namespace-Spezifikationen</p> <p>Es kann nur eine Datenbank und ein Scheduler pro Namespace geben. Wenn Sie versuchen, mehrere Datenbanken oder Scheduler im selben Namespace zu erstellen, kommt es zu Konfigurationskonflikten.</p> <p>Der Scheduler ben\u00f6tigt das <code>NAMESPACE</code>-Label nicht, um ordnungsgem\u00e4\u00df zu funktionieren. Er ben\u00f6tigt nur die korrekt konfigurierte Einstellung <code>DATABASE_URI</code>, damit er auf dieselbe Datenbank wie der Autoconf-Dienst zugreifen kann.</p>"},{"location":"de/integrations/#kubernetes","title":"Kubernetes","text":"Kubernetes-Integration <p>Um die Konfiguration von BunkerWeb-Instanzen in einer Kubernetes-Umgebung zu automatisieren, dient der Autoconf-Dienst als Ingress-Controller. Er konfiguriert die BunkerWeb-Instanzen basierend auf Ingress-Ressourcen und \u00fcberwacht auch andere Kubernetes-Objekte wie ConfigMap f\u00fcr benutzerdefinierte Konfigurationen.</p> <p>F\u00fcr eine optimale Einrichtung wird empfohlen, BunkerWeb als DaemonSet zu definieren, was sicherstellt, dass auf allen Knoten ein Pod erstellt wird, w\u00e4hrend Autoconf und Scheduler als einzeln repliziertes Deployment definiert werden.</p> <p>Angesichts des Vorhandenseins mehrerer BunkerWeb-Instanzen ist es erforderlich, einen gemeinsamen Datenspeicher zu implementieren, der als Redis- oder Valkey-Dienst realisiert wird. Dieser Dienst wird von den Instanzen genutzt, um Daten zwischen ihnen zu cachen und zu teilen. Weitere Informationen zu den Redis/Valkey-Einstellungen finden Sie hier.</p> <p>Datenbank-Backend</p> <p>Bitte beachten Sie, dass unsere Anweisungen davon ausgehen, dass Sie MariaDB als Standard-Datenbank-Backend verwenden, wie durch die Einstellung <code>DATABASE_URI</code> konfiguriert. Wir verstehen jedoch, dass Sie m\u00f6glicherweise alternative Backends f\u00fcr Ihre Docker-Integration bevorzugen. In diesem Fall k\u00f6nnen Sie sicher sein, dass auch andere Datenbank-Backends m\u00f6glich sind. Weitere Informationen finden Sie in den docker-compose-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Die Einrichtung von geclusterten Datenbank-Backends liegt au\u00dferhalb des Geltungsbereichs dieser Dokumentation.</p> <p>Bitte stellen Sie sicher, dass die Autoconf-Dienste Zugriff auf die Kubernetes-API haben. Es wird empfohlen, hierf\u00fcr die RBAC-Autorisierung zu verwenden.</p> <p>Benutzerdefinierte CA f\u00fcr die Kubernetes-API</p> <p>Wenn Sie eine benutzerdefinierte CA f\u00fcr Ihre Kubernetes-API verwenden, k\u00f6nnen Sie eine Bundle-Datei mit Ihren Zwischen- und Stammzertifikaten auf dem Ingress-Controller mounten und den Umgebungswert <code>KUBERNETES_SSL_CA_CERT</code> auf den Pfad des Bundles im Container setzen. Alternativ k\u00f6nnen Sie, auch wenn es nicht empfohlen wird, die Zertifikats\u00fcberpr\u00fcfung deaktivieren, indem Sie die Umgebungsvariable <code>KUBERNETES_SSL_VERIFY</code> des Ingress-Controllers auf <code>no</code> setzen (Standard ist <code>yes</code>).</p> <p>Dar\u00fcber hinaus ist es entscheidend, die Umgebungsvariable <code>KUBERNETES_MODE</code> auf <code>yes</code> zu setzen, wenn die Kubernetes-Integration verwendet wird. Diese Variable ist f\u00fcr die ordnungsgem\u00e4\u00dfe Funktionalit\u00e4t obligatorisch.</p>"},{"location":"de/integrations/#installationsmethoden","title":"Installationsmethoden","text":""},{"location":"de/integrations/#verwendung-des-helm-charts-empfohlen","title":"Verwendung des Helm-Charts (empfohlen)","text":"<p>Die empfohlene Methode zur Installation von Kubernetes ist die Verwendung des Helm-Charts, das unter <code>https://repo.bunkerweb.io/charts</code> verf\u00fcgbar ist:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>Sie k\u00f6nnen dann das BunkerWeb-Helm-Chart aus diesem Repository verwenden:</p> <pre><code>helm install -f myvalues.yaml mybunkerweb bunkerweb/bunkerweb\n</code></pre> <p>Die vollst\u00e4ndige Liste der Werte ist in der Datei charts/bunkerweb/values.yaml des bunkerity/bunkerweb-helm-Repositorys aufgef\u00fchrt.</p>"},{"location":"de/integrations/#vollstandige-yaml-dateien","title":"Vollst\u00e4ndige YAML-Dateien","text":"<p>Anstatt das Helm-Chart zu verwenden, k\u00f6nnen Sie auch die YAML-Vorlagen im Ordner misc/integrations des GitHub-Repositorys verwenden. Bitte beachten Sie, dass wir dringend empfehlen, stattdessen das Helm-Chart zu verwenden.</p>"},{"location":"de/integrations/#ingress-ressourcen","title":"Ingress-Ressourcen","text":"<p>Sobald der BunkerWeb-Kubernetes-Stack erfolgreich eingerichtet und betriebsbereit ist (weitere Informationen finden Sie in den Autoconf-Protokollen), k\u00f6nnen Sie mit der Bereitstellung von Webanwendungen im Cluster fortfahren und Ihre Ingress-Ressource deklarieren.</p> <p>Es ist wichtig zu beachten, dass die BunkerWeb-Einstellungen als Annotationen f\u00fcr die Ingress-Ressource angegeben werden m\u00fcssen. F\u00fcr den Domain-Teil verwenden Sie bitte den speziellen Wert <code>bunkerweb.io</code>. Durch das Einf\u00fcgen der entsprechenden Annotationen k\u00f6nnen Sie BunkerWeb entsprechend f\u00fcr die Ingress-Ressource konfigurieren.</p> <p>TLS-Unterst\u00fctzung</p> <p>Der BunkerWeb-Ingress-Controller unterst\u00fctzt vollst\u00e4ndig benutzerdefinierte HTTPS-Zertifikate unter Verwendung der TLS-Spezifikation, wie im Beispiel gezeigt. Die Konfiguration von L\u00f6sungen wie <code>cert-manager</code> zur automatischen Generierung von TLS-Secrets liegt au\u00dferhalb des Geltungsbereichs dieser Dokumentation.</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    # Wird auf alle Hosts in diesem Ingress angewendet\n    bunkerweb.io/MY_SETTING: \"value\"\n    # Wird nur auf den Host www.example.com angewendet\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  # TLS ist optional, Sie k\u00f6nnen beispielsweise auch das integrierte Let's Encrypt verwenden\n  # tls:\n  #   - hosts:\n  #       - www.example.com\n  #     secretName: secret-example-tls\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n...\n</code></pre>"},{"location":"de/integrations/#namespaces_1","title":"Namespaces","text":"<p>Ab Version <code>1.6.0</code> unterst\u00fctzen die Autoconf-Stacks von BunkerWeb Namespaces. Mit dieser Funktion k\u00f6nnen Sie mehrere Cluster von BunkerWeb-Instanzen und -Diensten auf demselben Kubernetes-Cluster verwalten. Um Namespaces zu nutzen, setzen Sie einfach das Metadatenfeld <code>namespace</code> auf Ihre BunkerWeb-Instanzen und -Dienste. Hier ist ein Beispiel:</p> <pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: bunkerweb\n  namespace: my-namespace # Setzen Sie den Namespace f\u00fcr die BunkerWeb-Instanz\n...\n</code></pre> <p>Namespace-Verhalten</p> <p>Standardm\u00e4\u00dfig lauschen alle Autoconf-Stacks auf alle Namespaces. Wenn Sie einen Stack auf bestimmte Namespaces beschr\u00e4nken m\u00f6chten, k\u00f6nnen Sie die Umgebungsvariable <code>NAMESPACES</code> im <code>bunkerweb-controller</code>-Deployment setzen:</p> <pre><code>...\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-controller\n  namespace: my-namespace # Setzen Sie den Namespace f\u00fcr den Controller\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-controller\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-controller\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-controller\n          image: bunkerity/bunkerweb-autoconf:testing\n          imagePullPolicy: Always\n          env:\n            - name: NAMESPACES\n              value: \"my-namespace my-other-namespace\" # Lauschen Sie nur auf diese Namespaces\n            ...\n...\n</code></pre> <p>Beachten Sie, dass die Umgebungsvariable <code>NAMESPACES</code> eine durch Leerzeichen getrennte Liste von Namespaces ist.</p> <p>Namespace-Spezifikationen</p> <p>Es kann nur eine Datenbank und ein Scheduler pro Namespace geben. Wenn Sie versuchen, mehrere Datenbanken oder Scheduler im selben Namespace zu erstellen, kommt es zu Konfigurationskonflikten.</p> <p>Der Scheduler ben\u00f6tigt die <code>NAMESPACE</code>-Annotation nicht, um ordnungsgem\u00e4\u00df zu funktionieren. Er ben\u00f6tigt nur die korrekt konfigurierte Einstellung <code>DATABASE_URI</code>, damit er auf dieselbe Datenbank wie der Autoconf-Dienst zugreifen kann.</p>"},{"location":"de/integrations/#ingress-klasse","title":"Ingress-Klasse","text":"<p>Bei der Installation mit den offiziellen Methoden in der Dokumentation wird BunkerWeb mit der folgenden <code>IngressClass</code>-Definition geliefert:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: bunkerweb\nspec:\n  controller: bunkerweb.io/ingress-controller\n</code></pre> <p>Um die vom Ingress-Controller \u00fcberwachten <code>Ingress</code>-Ressourcen einzuschr\u00e4nken, k\u00f6nnen Sie die Umgebungsvariable <code>KUBERNETES_INGRESS_CLASS</code> auf den Wert <code>bunkerweb</code> setzen. Dann k\u00f6nnen Sie die Direktive <code>ingressClassName</code> in Ihren <code>Ingress</code>-Definitionen nutzen:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    bunkerweb.io/MY_SETTING: \"value\"\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  ingressClassName: bunkerweb\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n</code></pre>"},{"location":"de/integrations/#benutzerdefinierter-domainname","title":"Benutzerdefinierter Domainname","text":"<p>Wenn Sie f\u00fcr Ihren Kubernetes-Cluster einen benutzerdefinierten Domainnamen anstelle des standardm\u00e4\u00dfigen <code>kubernetes.local</code> verwenden, k\u00f6nnen Sie den Wert \u00fcber die Umgebungsvariable <code>KUBERNETES_DOMAIN_NAME</code> auf dem Scheduler-Container festlegen.</p>"},{"location":"de/integrations/#verwendung-mit-einem-vorhandenen-ingress-controller","title":"Verwendung mit einem vorhandenen Ingress-Controller","text":"<p>Beibehaltung des vorhandenen Ingress-Controllers und von BunkerWeb</p> <p>Dies ist ein Anwendungsfall, bei dem Sie einen vorhandenen Ingress-Controller wie den Nginx-Controller beibehalten m\u00f6chten. Der typische Datenfluss wird sein: Load Balancer =&gt; Ingress Controller =&gt; BunkerWeb =&gt; Anwendung.</p>"},{"location":"de/integrations/#nginx-ingress-controller-installation","title":"Nginx-Ingress-Controller-Installation","text":"<p>Installieren Sie das Nginx-Ingress-Helm-Repo:</p> <pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n</code></pre> <p>Installieren Sie den Nginx-Ingress-Controller mit Standardwerten (funktioniert m\u00f6glicherweise nicht auf Ihrem eigenen Cluster sofort, bitte \u00fcberpr\u00fcfen Sie die Dokumentation):</p> <pre><code>helm install --namespace nginx --create-namespace nginx ingress-nginx/ingress-nginx\n</code></pre> <p>Extrahieren Sie die IP-Adresse des LB:</p> <pre><code>kubectl get svc nginx-ingress-nginx-controller -n nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Richten Sie DNS-Eintr\u00e4ge auf die IP-Adresse des LB ein (z. B. <code>bunkerweb</code>-Subdomain f\u00fcr die BW-UI und <code>myapp</code> f\u00fcr die Anwendung):</p> <pre><code>$ nslookup bunkerweb.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   bunkerweb.example.com\nAddress: 1.2.3.4\n$ nslookup myapp.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   myapp.example.com\nAddress: 1.2.3.4\n</code></pre> <p>BunkerWeb-Installation</p> <p>Installieren Sie das BunkerWeb-Helm-Repo:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\nhelm repo update\n</code></pre> <p>Erstellen Sie die Datei <code>values.yaml</code>:</p> <pre><code># Hier richten wir die Werte ein, die f\u00fcr die Einrichtung von BunkerWeb hinter einem vorhandenen Ingress-Controller erforderlich sind\n# Datenfluss mit BW: LB =&gt; vorhandener Ingress Controller =&gt; BunkerWeb =&gt; Dienst\n# Datenfluss ohne BW: LB =&gt; vorhandener Ingress Controller =&gt; Dienst\n\n# Globale Einstellungen\nsettings:\n  misc:\n    # Ersetzen Sie dies durch Ihren DNS-Resolver\n    # um ihn zu erhalten: kubectl exec in einem zuf\u00e4lligen Pod, dann cat /etc/resolv.conf\n    # wenn Sie eine IP als Nameserver haben, f\u00fchren Sie eine umgekehrte DNS-Suche durch: nslookup &lt;IP&gt;\n    # meistens ist es coredns.kube-system.svc.cluster.local oder kube-dns.kube-system.svc.cluster.local\n    dnsResolvers: \"kube-dns.kube-system.svc.cluster.local\"\n  kubernetes:\n    # Wir ber\u00fccksichtigen nur Ingress-Ressourcen mit ingressClass bunkerweb, um Konflikte mit dem vorhandenen Ingress-Controller zu vermeiden\n    ingressClass: \"bunkerweb\"\n    # Optional: Sie k\u00f6nnen Namespace(s) ausw\u00e4hlen, in denen BunkerWeb auf Ingress/ConfigMap-\u00c4nderungen lauschen wird\n    # Standard (leerer Wert) sind alle Namespaces\n    namespaces: \"\"\n\n# \u00dcberschreiben Sie den Diensttyp bunkerweb-external auf ClusterIP\n# Da wir ihn nicht nach au\u00dfen verf\u00fcgbar machen m\u00fcssen\n# Wir werden den vorhandenen Ingress-Controller verwenden, um den Datenverkehr an BunkerWeb weiterzuleiten\nservice:\n  type: ClusterIP\n\n# BunkerWeb-Einstellungen\nbunkerweb:\n  tag: testing\n\n# Scheduler-Einstellungen\nscheduler:\n  tag: testing\n  extraEnvs:\n    # Aktivieren Sie das Real-IP-Modul, um die echte IP der Clients zu erhalten\n    - name: USE_REAL_IP\n      value: \"yes\"\n\n# Controller-Einstellungen\ncontroller:\n  tag: testing\n\n# UI-Einstellungen\nui:\n  tag: testing\n</code></pre> <p>Installieren Sie BunkerWeb mit benutzerdefinierten Werten:</p> <pre><code>helm install --namespace bunkerweb --create-namespace -f values.yaml bunkerweb bunkerweb/bunkerweb\n</code></pre> <p>\u00dcberpr\u00fcfen Sie die Protokolle und warten Sie, bis alles bereit ist.</p> <p>Web-UI-Installation</p> <p>Richten Sie den folgenden Ingress ein (vorausgesetzt, der Nginx-Controller ist installiert):</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ui-bunkerweb\n  # Ersetzen Sie dies bei Bedarf durch Ihren Namespace von BW\n  namespace: bunkerweb\n  annotations:\n    # HTTPS ist f\u00fcr die Web-UI obligatorisch, auch wenn der Datenverkehr intern ist\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # Wir m\u00fcssen SNI setzen, damit BW den richtigen vhost bedienen kann\n    # Ersetzen Sie dies durch Ihre Domain\n    nginx.ingress.kubernetes.io/proxy-ssl-name: \"bunkerweb.example.com\"\n    nginx.ingress.kubernetes.io/proxy-ssl-server-name: \"on\"\nspec:\n  # Wird nur vom Nginx-Controller und nicht von BW bedient\n  ingressClassName: nginx\n  # Entkommentieren und bearbeiten, wenn Sie Ihr eigenes Zertifikat verwenden m\u00f6chten\n  # tls:\n  # - hosts:\n  #   - bunkerweb.example.com\n  #   secretName: tls-secret\n  rules:\n  # Ersetzen Sie dies durch Ihre Domain\n  - host: bunkerweb.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Erstellt vom Helm-Chart\n            name: bunkerweb-external\n            port:\n              # Die Verwendung des HTTPS-Ports ist f\u00fcr die UI obligatorisch\n              number: 443\n</code></pre> <p>Und Sie k\u00f6nnen nun zum Einrichtungsassistenten gehen, indem Sie zu <code>https://bunkerweb.example.com/setup</code> navigieren.</p> <p>Schutz einer bestehenden Anwendung</p> <p>Zuerst m\u00fcssen Sie zu Global Config gehen, das SSL-Plugin ausw\u00e4hlen und dann die automatische Weiterleitung von HTTP zu HTTPS deaktivieren. Bitte beachten Sie, dass Sie dies nur einmal tun m\u00fcssen.</p> <p>Nehmen wir an, Sie haben eine Anwendung im Namespace <code>myapp</code>, die \u00fcber den Dienst <code>myapp-service</code> auf Port <code>5000</code> zug\u00e4nglich ist.</p> <p>Sie m\u00fcssen einen neuen Dienst in der Web-UI hinzuf\u00fcgen und die erforderlichen Informationen ausf\u00fcllen:</p> <ul> <li>Servername: die \u00f6ffentlich zug\u00e4ngliche Domain Ihrer Anwendung (z. B. <code>myapp.example.com</code>)</li> <li>SSL/TLS: Ihr Ingress-Controller k\u00fcmmert sich um diesen Teil, also aktivieren Sie es nicht auf BunkerWeb, da der Datenverkehr innerhalb des Clusters intern ist</li> <li>Reverse-Proxy-Host: die vollst\u00e4ndige URL Ihrer Anwendung innerhalb des Clusters (z. B. <code>http://myapp-service.myapp.svc.cluster.local:5000</code>)</li> </ul> <p>Sobald der neue Dienst hinzugef\u00fcgt wurde, k\u00f6nnen Sie nun eine Ingress-Ressource f\u00fcr diesen Dienst deklarieren und ihn an den BunkerWeb-Dienst auf dem HTTP-Port weiterleiten:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: myapp\n  # Ersetzen Sie dies bei Bedarf durch Ihren Namespace von BW\n  namespace: bunkerweb\nspec:\n  # Wird nur vom Nginx-Controller und nicht von BW bedient\n  ingressClassName: nginx\n  # Entkommentieren und bearbeiten, wenn Sie Ihr eigenes Zertifikat verwenden m\u00f6chten\n  # tls:\n  # - hosts:\n  #   - myapp.example.com\n  #   secretName: tls-secret\n  rules:\n  # Ersetzen Sie dies durch Ihre Domain\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Erstellt vom Helm-Chart\n            name: bunkerweb-external\n            port:\n              number: 80\n</code></pre> <p>Sie k\u00f6nnen <code>http(s)://myapp.example.com</code> besuchen, das jetzt mit BunkerWeb gesch\u00fctzt ist \ud83d\udee1\ufe0f</p>"},{"location":"de/integrations/#swarm","title":"Swarm","text":"Docker Swarm-Integration <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>PRO-Unterst\u00fctzung</p> <p>Wenn Sie Swarm-Unterst\u00fctzung ben\u00f6tigen, kontaktieren Sie uns bitte unter contact@bunkerity.com oder \u00fcber das Kontaktformular.</p> <p>Docker Autoconf</p> <p>Die Swarm-Integration \u00e4hnelt der Docker Autoconf-Integration (jedoch mit Diensten anstelle von Containern). Bitte lesen Sie bei Bedarf zuerst den Docker Autoconf-Integrationsabschnitt.</p> <p>Um die automatische Konfiguration von BunkerWeb-Instanzen zu erm\u00f6glichen, ben\u00f6tigt der autoconf-Dienst Zugriff auf die Docker-API. Dieser Dienst lauscht auf Docker Swarm-Ereignisse wie die Erstellung oder L\u00f6schung von Diensten und konfiguriert die BunkerWeb-Instanzen nahtlos in Echtzeit ohne Ausfallzeiten. Er \u00fcberwacht auch andere Swarm-Objekte wie Konfigurationen f\u00fcr benutzerdefinierte Konfigurationen.</p> <p>\u00c4hnlich wie bei der Docker Autoconf-Integration wird die Konfiguration f\u00fcr Webdienste \u00fcber Labels definiert, die mit dem Pr\u00e4fix bunkerweb beginnen.</p> <p>F\u00fcr eine optimale Einrichtung wird empfohlen, den BunkerWeb-Dienst als globalen Dienst auf allen Knoten zu planen, w\u00e4hrend die autoconf-, Scheduler- und Docker-API-Proxy-Dienste als einzeln replizierte Dienste geplant werden sollten. Bitte beachten Sie, dass der Docker-API-Proxy-Dienst auf einem Manager-Knoten geplant werden muss, es sei denn, Sie konfigurieren ihn f\u00fcr die Verwendung einer Remote-API (was in der Dokumentation nicht behandelt wird).</p> <p>Da mehrere Instanzen von BunkerWeb ausgef\u00fchrt werden, muss ein gemeinsamer Datenspeicher implementiert als Redis- oder Valkey-Dienst erstellt werden. Diese Instanzen nutzen den Redis/Valkey-Dienst, um Daten zu cachen und zu teilen. Weitere Details zu den Redis/Valkey-Einstellungen finden Sie hier.</p> <p>Was das Datenbank-Volume betrifft, so gibt die Dokumentation keinen spezifischen Ansatz vor. Die Wahl eines freigegebenen Ordners oder eines bestimmten Treibers f\u00fcr das Datenbank-Volume h\u00e4ngt von Ihrem einzigartigen Anwendungsfall ab und bleibt dem Leser als \u00dcbung \u00fcberlassen.</p> <p>Datenbank-Backend</p> <p>Bitte beachten Sie, dass unsere Anweisungen davon ausgehen, dass Sie MariaDB als Standard-Datenbank-Backend verwenden, wie durch die Einstellung <code>DATABASE_URI</code> konfiguriert. Wir verstehen jedoch, dass Sie m\u00f6glicherweise alternative Backends f\u00fcr Ihre Docker-Integration bevorzugen. In diesem Fall k\u00f6nnen Sie sicher sein, dass auch andere Datenbank-Backends m\u00f6glich sind. Weitere Informationen finden Sie in den docker-compose-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Die Einrichtung von geclusterten Datenbank-Backends liegt au\u00dferhalb des Geltungsbereichs dieser Dokumentation.</p> <p>Hier ist die Stack-Vorlage, die Sie mit <code>docker stack deploy</code> bereitstellen k\u00f6nnen:</p> <pre><code>x-bw-env: &amp;bw-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr beide Dienste zu vermeiden\n  SWARM_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\" # Obligatorisches Label f\u00fcr den Autoconf-Dienst, um die BunkerWeb-Instanz zu identifizieren\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # Wir m\u00fcssen die BunkerWeb-Instanz hier nicht angeben, da sie automatisch vom Autoconf-Dienst erkannt werden\n      SERVER_NAME: \"\" # Der Servername wird mit Dienst-Labels gef\u00fcllt\n      MULTISITE: \"yes\" # Obligatorische Einstellung f\u00fcr Autoconf\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # Wird verwendet, um den Cache und andere Daten wie Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      SWARM_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # Der Docker-Socket\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-redis:\n    image: redis:7-alpine\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre> <p>Obligatorische Swarm-Einstellung</p> <p>Bitte beachten Sie, dass die Umgebungsvariable <code>SWARM_MODE: \"yes\"</code> bei Verwendung der Swarm-Integration obligatorisch ist.</p>"},{"location":"de/integrations/#swarm-dienste","title":"Swarm-Dienste","text":"<p>Sobald der BunkerWeb-Swarm-Stack eingerichtet ist und l\u00e4uft (weitere Informationen finden Sie in den Autoconf- und Scheduler-Protokollen), k\u00f6nnen Sie Webanwendungen im Cluster bereitstellen und Labels verwenden, um BunkerWeb dynamisch zu konfigurieren:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"de/integrations/#namespaces_2","title":"Namespaces","text":"<p>Ab Version <code>1.6.0</code> unterst\u00fctzen die Autoconf-Stacks von BunkerWeb Namespaces. Mit dieser Funktion k\u00f6nnen Sie mehrere \"Cluster\" von BunkerWeb-Instanzen und -Diensten auf demselben Docker-Host verwalten. Um Namespaces zu nutzen, setzen Sie einfach das <code>NAMESPACE</code>-Label auf Ihre Dienste. Hier ist ein Beispiel:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Setzen Sie den Namespace f\u00fcr den Dienst\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Namespace-Verhalten</p> <p>Standardm\u00e4\u00dfig lauschen alle Autoconf-Stacks auf alle Namespaces. Wenn Sie einen Stack auf bestimmte Namespaces beschr\u00e4nken m\u00f6chten, k\u00f6nnen Sie die Umgebungsvariable <code>NAMESPACES</code> im <code>bw-autoconf</code>-Dienst setzen:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Setzen Sie den Namespace f\u00fcr die BunkerWeb-Instanz\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      NAMESPACES: \"my-namespace my-other-namespace\" # Lauschen Sie nur auf diese Namespaces\n      ...\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n...\n</code></pre> <p>Beachten Sie, dass die Umgebungsvariable <code>NAMESPACES</code> eine durch Leerzeichen getrennte Liste von Namespaces ist.</p> <p>Namespace-Spezifikationen</p> <p>Es kann nur eine Datenbank und ein Scheduler pro Namespace geben. Wenn Sie versuchen, mehrere Datenbanken oder Scheduler im selben Namespace zu erstellen, kommt es zu Konfigurationskonflikten.</p> <p>Der Scheduler ben\u00f6tigt das <code>NAMESPACE</code>-Label nicht, um ordnungsgem\u00e4\u00df zu funktionieren. Er ben\u00f6tigt nur die korrekt konfigurierte Einstellung <code>DATABASE_URI</code>, damit er auf dieselbe Datenbank wie der Autoconf-Dienst zugreifen kann.</p>"},{"location":"de/integrations/#microsoft-azure","title":"Microsoft Azure","text":"Azure-Integration <p>Empfohlene VM-Gr\u00f6\u00dfe</p> <p>Bitte beachten Sie bei der Wahl der VM-SKU. Sie m\u00fcssen eine SKU ausw\u00e4hlen, die mit Gen2-VMs kompatibel ist, und wir empfehlen, mit der B2s- oder Ds2-Serie f\u00fcr eine optimale Nutzung zu beginnen.</p> <p>Sie k\u00f6nnen BunkerWeb auf verschiedene Weisen einfach in Ihrem Azure-Abonnement bereitstellen:</p> <ul> <li>Azure CLI in der Cloud Shell</li> <li>Azure ARM-Vorlage</li> <li>Azure-Portal \u00fcber den Marketplace</li> </ul> Cloud ShellARM-VorlageMarketplace <p>Erstellen Sie eine Ressourcengruppe. Ersetzen Sie den Wert <code>RG_NAME</code></p> <pre><code>az group create --name \"RG_NAME\" --location \"LOCATION\"\n</code></pre> <p>Erstellen Sie eine VM mit der SKU <code>Standard_B2s</code> am Standort der Ressourcengruppe. Ersetzen Sie die Werte <code>RG_NAME</code>, <code>VM_NAME</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --vnet-name \"VNET_NAME\" --size Standard_B2s --subnet \"SUBNET_NAME\"\n</code></pre> <p>Vollst\u00e4ndiger Befehl. Ersetzen Sie die Werte <code>RG_NAME</code>, <code>VM_NAME</code>, <code>LOCATION</code>, <code>HOSTNAME</code>, <code>USERNAME</code>, <code>PUBLIC_IP</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code>, <code>NSG_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --location \"LOCATION\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --computer-name \"HOSTNAME\" --admin-username \"USERNAME\" --public-ip-address \"PUBLIC_IP\" --public-ip-address-allocation Static --size Standard_B2s --public-ip-sku Standard --os-disk-delete-option Delete --nic-delete-option Delete --vnet-name \"VNET_NAME\" --subnet \"SUBNET_NAME\" --nsg \"NSG_NAME\"\n</code></pre> <p>Berechtigungsanforderung</p> <p>Um eine ARM-Vorlage bereitzustellen, ben\u00f6tigen Sie Schreibzugriff auf die Ressourcen, die Sie bereitstellen, und Zugriff auf alle Operationen auf dem Ressourcentyp Microsoft.Resources/deployments. Um eine virtuelle Maschine bereitzustellen, ben\u00f6tigen Sie die Berechtigungen Microsoft.Compute/virtualMachines/write und Microsoft.Resources/deployments/*. Die What-if-Operation hat dieselben Berechtigungsanforderungen.</p> <p>Stellen Sie die ARM-Vorlage bereit:</p> <p></p> <p>Melden Sie sich im Azure-Portal an.</p> <p>Holen Sie sich BunkerWeb \u00fcber das Men\u00fc Ressource erstellen.</p> <p>Sie k\u00f6nnen auch \u00fcber den Marketplace gehen.</p> <p>Sie k\u00f6nnen auf den Einrichtungsassistenten zugreifen, indem Sie die URI <code>https://ihre-ip-adresse/setup</code> Ihrer virtuellen Maschine aufrufen.</p>"},{"location":"de/plugins/","title":"Plugins","text":"<p>BunkerWeb verf\u00fcgt \u00fcber ein Pluginsystem, das es erm\u00f6glicht, neue Funktionen einfach hinzuzuf\u00fcgen. Sobald ein Plugin installiert ist, k\u00f6nnen Sie es \u00fcber zus\u00e4tzliche, vom Plugin definierte Einstellungen verwalten.</p>"},{"location":"de/plugins/#offizielle-plugins","title":"Offizielle Plugins","text":"<p>Hier ist die Liste der \"offiziellen\" Plugins, die wir pflegen (weitere Informationen finden Sie im Repository bunkerweb-plugins):</p> Name Version Beschreibung Link ClamAV 1.9 Scannt hochgeladene Dateien automatisch mit der ClamAV-Antiviren-Engine und lehnt die Anfrage ab, wenn eine Datei als b\u00f6sartig erkannt wird. bunkerweb-plugins/clamav Coraza 1.9 \u00dcberpr\u00fcft Anfragen mit der Coraza WAF (Alternative zu ModSecurity). bunkerweb-plugins/coraza Discord 1.9 Sendet Sicherheitsbenachrichtigungen \u00fcber einen Webhook an einen Discord-Kanal. bunkerweb-plugins/discord Slack 1.9 Sendet Sicherheitsbenachrichtigungen \u00fcber einen Webhook an einen Slack-Kanal. bunkerweb-plugins/slack VirusTotal 1.9 Scannt hochgeladene Dateien automatisch mit der VirusTotal-API und lehnt die Anfrage ab, wenn eine Datei als b\u00f6sartig erkannt wird. bunkerweb-plugins/virustotal WebHook 1.9 Sendet Sicherheitsbenachrichtigungen \u00fcber einen Webhook an einen benutzerdefinierten HTTP-Endpunkt. bunkerweb-plugins/webhook"},{"location":"de/plugins/#wie-man-ein-plugin-verwendet","title":"Wie man ein Plugin verwendet","text":""},{"location":"de/plugins/#automatisch","title":"Automatisch","text":"<p>Wenn Sie externe Plugins schnell installieren m\u00f6chten, k\u00f6nnen Sie die Einstellung <code>EXTERNAL_PLUGIN_URLS</code> verwenden. Sie akzeptiert eine durch Leerzeichen getrennte Liste von URLs, die jeweils auf ein komprimiertes (zip-Format) Archiv mit einem oder mehreren Plugins verweisen.</p> <p>Sie k\u00f6nnen den folgenden Wert verwenden, wenn Sie die offiziellen Plugins automatisch installieren m\u00f6chten: <code>EXTERNAL_PLUGIN_URLS=https://github.com/bunkerity/bunkerweb-plugins/archive/refs/tags/v1.9.zip</code></p>"},{"location":"de/plugins/#manuell","title":"Manuell","text":"<p>Der erste Schritt besteht darin, das Plugin zu installieren, indem Sie seine Dateien in den entsprechenden Datenordner <code>plugins</code> legen. Das Verfahren h\u00e4ngt von Ihrer Integration ab:</p> DockerDocker autoconfSwarmKubernetesLinux <p>Bei Verwendung der Docker-Integration m\u00fcssen Plugins in das Volume gemountet werden, das auf <code>/data/plugins</code> im Scheduler-Container verweist.</p> <p>Als Erstes m\u00fcssen Sie den Plugins-Ordner erstellen:</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Dann k\u00f6nnen Sie die Plugins Ihrer Wahl in diesen Ordner legen:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> Verwendung eines lokalen Ordners f\u00fcr persistente Daten <p>Der Scheduler l\u00e4uft als unprivilegierter Benutzer mit UID 101 und GID 101 im Container. Der Grund daf\u00fcr ist die Sicherheit: Im Falle einer ausgenutzten Schwachstelle hat der Angreifer keine vollen Root-Rechte (UID/GID 0). Aber es gibt einen Nachteil: Wenn Sie einen lokalen Ordner f\u00fcr die persistenten Daten verwenden, m\u00fcssen Sie die richtigen Berechtigungen festlegen, damit der unprivilegierte Benutzer Daten darin schreiben kann. Etwas wie das Folgende sollte ausreichen:</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternativ, wenn der Ordner bereits existiert:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Wenn Sie Docker im rootless-Modus oder podman verwenden, werden UIDs und GIDs im Container auf andere auf dem Host abgebildet. Sie m\u00fcssen zuerst Ihre anf\u00e4ngliche subuid und subgid \u00fcberpr\u00fcfen:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Wenn Sie beispielsweise einen Wert von 100000 haben, ist die abgebildete UID/GID 100100 (100000 + 100):</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Oder wenn der Ordner bereits existiert:</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Dann k\u00f6nnen Sie das Volume beim Starten Ihres Docker-Stacks mounten:</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>Bei Verwendung der Docker-Autoconf-Integration m\u00fcssen Plugins in das Volume gemountet werden, das auf <code>/data/plugins</code> im Scheduler-Container verweist.</p> <p>Als Erstes m\u00fcssen Sie den Plugins-Ordner erstellen:</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Dann k\u00f6nnen Sie die Plugins Ihrer Wahl in diesen Ordner legen:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> <p>Da der Scheduler als unprivilegierter Benutzer mit UID und GID 101 l\u00e4uft, m\u00fcssen Sie die Berechtigungen bearbeiten:</p> <pre><code>chown -R 101:101 ./bw-data\n</code></pre> <p>Dann k\u00f6nnen Sie das Volume beim Starten Ihres Docker-Stacks mounten:</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Bei Verwendung der Swarm-Integration m\u00fcssen Plugins in das Volume gemountet werden, das auf <code>/data/plugins</code> im Scheduler-Container verweist.</p> <p>Swarm-Volume</p> <p>Die Konfiguration eines Swarm-Volumes, das bestehen bleibt, wenn der Scheduler-Dienst auf verschiedenen Knoten ausgef\u00fchrt wird, wird in dieser Dokumentation nicht behandelt. Wir gehen davon aus, dass Sie einen freigegebenen Ordner auf <code>/shared</code> auf allen Knoten gemountet haben.</p> <p>Als Erstes m\u00fcssen Sie den Plugins-Ordner erstellen:</p> <pre><code>mkdir -p /shared/bw-plugins\n</code></pre> <p>Dann k\u00f6nnen Sie die Plugins Ihrer Wahl in diesen Ordner legen:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /shared/bw-plugins\n</code></pre> <p>Da der Scheduler als unprivilegierter Benutzer mit UID und GID 101 l\u00e4uft, m\u00fcssen Sie die Berechtigungen bearbeiten:</p> <pre><code>chown -R 101:101 /shared/bw-plugins\n</code></pre> <p>Dann k\u00f6nnen Sie das Volume beim Starten Ihres Swarm-Stacks mounten:</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - /shared/bw-plugins:/data/plugins\n...\n</code></pre> <p>Bei Verwendung der Kubernetes-Integration m\u00fcssen Plugins in das Volume gemountet werden, das auf <code>/data/plugins</code> im Scheduler-Container verweist.</p> <p>Als Erstes m\u00fcssen Sie einen PersistentVolumeClaim deklarieren, der unsere Plugin-Daten enthalten wird:</p> <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-bunkerweb-plugins\nspec:\n  accessModes:\n    - ReadWriteOnce\nresources:\n  requests:\n    storage: 5Gi\n</code></pre> <p>Sie k\u00f6nnen nun den Volume-Mount und einen Init-Container hinzuf\u00fcgen, um das Volume automatisch bereitzustellen:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-scheduler\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-scheduler\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-scheduler\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-scheduler\n          image: bunkerity/bunkerweb-scheduler:testing\n          imagePullPolicy: Always\n          env:\n            - name: KUBERNETES_MODE\n              value: \"yes\"\n            - name: \"DATABASE_URI\"\n              value: \"mariadb+pymysql://bunkerweb:changeme@svc-bunkerweb-db:3306/db\"\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      initContainers:\n        - name: bunkerweb-scheduler-init\n          image: alpine/git\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"git clone https://github.com/bunkerity/bunkerweb-plugins /data/plugins &amp;&amp; chown -R 101:101 /data/plugins\"]\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      volumes:\n        - name: vol-plugins\n          persistentVolumeClaim:\n            claimName: pvc-bunkerweb-plugins\n</code></pre> <p>Bei Verwendung der Linux-Integration m\u00fcssen Plugins in den Ordner <code>/etc/bunkerweb/plugins</code> geschrieben werden:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /etc/bunkerweb/plugins &amp;&amp; \\\nchown -R nginx:nginx /etc/bunkerweb/plugins\n</code></pre>"},{"location":"de/plugins/#ein-plugin-schreiben","title":"Ein Plugin schreiben","text":""},{"location":"de/plugins/#struktur","title":"Struktur","text":"<p>Bestehende Plugins</p> <p>Wenn die Dokumentation nicht ausreicht, k\u00f6nnen Sie sich den bestehenden Quellcode der offiziellen Plugins und der Kern-Plugins ansehen (bereits in BunkerWeb enthalten, aber technisch gesehen sind es Plugins).</p> <p>Wie eine Plugin-Struktur aussieht: <pre><code>plugin /\n    confs / conf_type / conf_name.conf\n    ui / actions.py\n         hooks.py\n         template.html\n         blueprints / &lt;blueprint_file(s)&gt;\n              templates / &lt;blueprint_template(s)&gt;\n    jobs / my-job.py\n    templates / my-template.json\n          my-template / configs / conf_type / conf_name.conf\n    plugin.lua\n    plugin.json\n</code></pre></p> <ul> <li> <p>conf_name.conf : F\u00fcgen Sie benutzerdefinierte NGINX-Konfigurationen (als Jinja2-Vorlagen) hinzu.</p> </li> <li> <p>actions.py : Skript, das auf dem Flask-Server ausgef\u00fchrt wird. Dieses Skript wird in einem Flask-Kontext ausgef\u00fchrt und gibt Ihnen Zugriff auf Bibliotheken und Dienstprogramme wie <code>jinja2</code> und <code>requests</code>.</p> </li> <li> <p>hooks.py : Benutzerdefinierte Python-Datei, die Flask-Hooks enth\u00e4lt und beim Laden des Plugins ausgef\u00fchrt wird.</p> </li> <li> <p>template.html : Benutzerdefinierte Plugin-Seite, die \u00fcber die Benutzeroberfl\u00e4che aufgerufen wird.</p> </li> <li> <p>blueprints-Ordner (innerhalb von ui):   Dieser Ordner wird verwendet, um bestehende Flask-Blueprints zu \u00fcberschreiben oder neue zu erstellen. Darin k\u00f6nnen Sie Blueprint-Dateien und einen optionalen templates-Unterordner f\u00fcr Blueprint-spezifische Vorlagen einschlie\u00dfen.</p> </li> <li> <p>jobs py-Datei : Benutzerdefinierte Python-Dateien, die als Jobs vom Scheduler ausgef\u00fchrt werden.</p> </li> <li> <p>my-template.json : F\u00fcgen Sie benutzerdefinierte Vorlagen hinzu, um die Standardwerte von Einstellungen zu \u00fcberschreiben und benutzerdefinierte Konfigurationen einfach anzuwenden.</p> </li> <li> <p>plugin.lua : Code, der auf NGINX mit dem NGINX LUA-Modul ausgef\u00fchrt wird.</p> </li> <li> <p>plugin.json : Metadaten, Einstellungen und Jobdefinitionen f\u00fcr Ihr Plugin.</p> </li> </ul>"},{"location":"de/plugins/#erste-schritte","title":"Erste Schritte","text":"<p>Der erste Schritt ist die Erstellung eines Ordners, der das Plugin enthalten wird:</p> <pre><code>mkdir myplugin &amp;&amp; \\\ncd myplugin\n</code></pre>"},{"location":"de/plugins/#metadaten","title":"Metadaten","text":"<p>Eine Datei namens plugin.json, die im Stammverzeichnis des Plugin-Ordners geschrieben wird, muss Metadaten \u00fcber das Plugin enthalten. Hier ist ein Beispiel:</p> <pre><code>{\n  \"id\": \"myplugin\",\n  \"name\": \"My Plugin\",\n  \"description\": \"Just an example plugin.\",\n  \"version\": \"1.0\",\n  \"stream\": \"partial\",\n  \"settings\": {\n    \"DUMMY_SETTING\": {\n      \"context\": \"multisite\",\n      \"default\": \"1234\",\n      \"help\": \"Here is the help of the setting.\",\n      \"id\": \"dummy-id\",\n      \"label\": \"Dummy setting\",\n      \"regex\": \"^.*$\",\n      \"type\": \"text\"\n    }\n  },\n  \"jobs\": [\n    {\n      \"name\": \"my-job\",\n      \"file\": \"my-job.py\",\n      \"every\": \"hour\"\n    }\n  ]\n}\n</code></pre> <p>Hier sind die Details der Felder:</p> Feld Obligatorisch Typ Beschreibung <code>id</code> ja string Interne ID f\u00fcr das Plugin: muss unter anderen Plugins (einschlie\u00dflich \"Kern\"-Plugins) eindeutig sein und darf nur Kleinbuchstaben enthalten. <code>name</code> ja string Name Ihres Plugins. <code>description</code> ja string Beschreibung Ihres Plugins. <code>version</code> ja string Version Ihres Plugins. <code>stream</code> ja string Informationen zur Stream-Unterst\u00fctzung: <code>no</code>, <code>yes</code> oder <code>partial</code>. <code>settings</code> ja dict Liste der Einstellungen Ihres Plugins. <code>jobs</code> nein list Liste der Jobs Ihres Plugins. <p>Jede Einstellung hat die folgenden Felder (der Schl\u00fcssel ist die ID der in einer Konfiguration verwendeten Einstellungen):</p> Feld Obligatorisch Typ Beschreibung <code>context</code> ja string Kontext der Einstellung: <code>multisite</code> oder <code>global</code>. <code>default</code> ja string Der Standardwert der Einstellung. <code>help</code> ja string Hilfetext zum Plugin (wird in der Web-UI angezeigt). <code>id</code> ja string Interne ID, die von der Web-UI f\u00fcr HTML-Elemente verwendet wird. <code>label</code> ja string Label, das von der Web-UI angezeigt wird. <code>regex</code> ja string Der Regex, der zur Validierung des vom Benutzer angegebenen Werts verwendet wird. <code>type</code> ja string Der Typ des Feldes: <code>text</code>, <code>check</code>, <code>select</code> oder <code>password</code>. <code>multiple</code> nein string Eindeutige ID zur Gruppierung mehrerer Einstellungen mit Zahlen als Suffix. <code>select</code> nein list Liste der m\u00f6glichen Zeichenfolgenwerte, wenn <code>type</code> <code>select</code> ist. <p>Jeder Job hat die folgenden Felder:</p> Feld Obligatorisch Typ Beschreibung <code>name</code> ja string Name des Jobs. <code>file</code> ja string Name der Datei im Jobs-Ordner. <code>every</code> ja string H\u00e4ufigkeit der Job-Planung: <code>minute</code>, <code>hour</code>, <code>day</code>, <code>week</code> oder <code>once</code> (keine H\u00e4ufigkeit, nur einmal vor der (Neu-)Generierung der Konfiguration)."},{"location":"de/plugins/#konfigurationen","title":"Konfigurationen","text":"<p>Sie k\u00f6nnen benutzerdefinierte NGINX-Konfigurationen hinzuf\u00fcgen, indem Sie einen Ordner namens confs mit Inhalt \u00e4hnlich den benutzerdefinierten Konfigurationen hinzuf\u00fcgen. Jeder Unterordner in confs enth\u00e4lt jinja2-Vorlagen, die generiert und im entsprechenden Kontext (<code>http</code>, <code>server-http</code>, <code>default-server-http</code>, <code>stream</code>, <code>server-stream</code>, <code>modsec</code>, <code>modsec-crs</code>, <code>crs-plugins-before</code> und <code>crs-plugins-after</code>) geladen werden.</p> <p>Hier ist ein Beispiel f\u00fcr eine Konfigurationsvorlagendatei im Ordner confs/server-http namens example.conf:</p> <pre><code>location /setting {\n  default_type 'text/plain';\n    content_by_lua_block {\n        ngx.say('{{ DUMMY_SETTING }}')\n    }\n}\n</code></pre> <p><code>{{ DUMMY_SETTING }}</code> wird durch den Wert von <code>DUMMY_SETTING</code> ersetzt, der vom Benutzer des Plugins ausgew\u00e4hlt wurde.</p>"},{"location":"de/plugins/#vorlagen","title":"Vorlagen","text":"<p>Weitere Informationen finden Sie in der Vorlagendokumentation.</p>"},{"location":"de/plugins/#hauptskript","title":"Hauptskript","text":"<p>Im Hintergrund verwendet BunkerWeb das NGINX LUA-Modul, um Code innerhalb von NGINX auszuf\u00fchren. Plugins, die Code ausf\u00fchren m\u00fcssen, m\u00fcssen eine Lua-Datei im Stammverzeichnis des Plugin-Ordners bereitstellen, die den <code>id</code>-Wert von plugin.json als Namen verwendet. Hier ist ein Beispiel namens myplugin.lua:</p> <pre><code>local class     = require \"middleclass\"\nlocal plugin    = require \"bunkerweb.plugin\"\nlocal utils     = require \"bunkerweb.utils\"\n\n\nlocal myplugin = class(\"myplugin\", plugin)\n\n\nfunction myplugin:initialize(ctx)\n    plugin.initialize(self, \"myplugin\", ctx)\n    self.dummy = \"dummy\"\nend\n\nfunction myplugin:init()\n    self.logger:log(ngx.NOTICE, \"init called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:set()\n    self.logger:log(ngx.NOTICE, \"set called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:access()\n    self.logger:log(ngx.NOTICE, \"access called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log()\n    self.logger:log(ngx.NOTICE, \"log called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_default()\n    self.logger:log(ngx.NOTICE, \"log_default called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:preread()\n    self.logger:log(ngx.NOTICE, \"preread called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_stream()\n    self.logger:log(ngx.NOTICE, \"log_stream called\")\n    return self:ret(true, \"success\")\nend\n\nreturn myplugin\n</code></pre> <p>Die deklarierten Funktionen werden automatisch in bestimmten Kontexten aufgerufen. Hier sind die Details zu jeder Funktion:</p> Funktion Kontext Beschreibung R\u00fcckgabewert <code>init</code> init_by_lua Wird aufgerufen, wenn NGINX gerade gestartet wurde oder einen Neuladebefehl erhalten hat. Der typische Anwendungsfall besteht darin, Daten vorzubereiten, die von Ihrem Plugin verwendet werden. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li></ul> <code>set</code> set_by_lua Wird vor jeder vom Server empfangenen Anfrage aufgerufen. Der typische Anwendungsfall ist die Berechnung vor der Zugriffsphase. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li></ul> <code>access</code> access_by_lua Wird bei jeder vom Server empfangenen Anfrage aufgerufen. Der typische Anwendungsfall besteht darin, hier die Sicherheits\u00fcberpr\u00fcfungen durchzuf\u00fchren und die Anfrage bei Bedarf abzulehnen. <code>ret</code>, <code>msg</code>,<code>status</code>,<code>redirect</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li><li><code>status</code> (number): unterbricht den aktuellen Prozess und gibt den HTTP-Status zur\u00fcck</li><li><code>redirect</code> (URL): wenn gesetzt, wird auf die angegebene URL umgeleitet</li></ul> <code>log</code> log_by_lua Wird aufgerufen, wenn eine Anfrage abgeschlossen ist (und bevor sie in die Zugriffsprotokolle geschrieben wird). Der typische Anwendungsfall besteht darin, beispielsweise Statistiken zu erstellen oder Z\u00e4hler zu berechnen. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li></ul> <code>log_default</code> log_by_lua Dasselbe wie <code>log</code>, wird aber nur auf dem Standardserver aufgerufen. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li></ul> <code>preread</code> preread_by_lua \u00c4hnlich der <code>access</code>-Funktion, aber f\u00fcr den Stream-Modus. <code>ret</code>, <code>msg</code>,<code>status</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li><li><code>status</code> (number): unterbricht den aktuellen Prozess und gibt den Status zur\u00fcck</li></ul> <code>log_stream</code> log_by_lua \u00c4hnlich der <code>log</code>-Funktion, aber f\u00fcr den Stream-Modus. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (boolean): true, wenn kein Fehler, sonst false</li><li><code>msg</code> (string): Erfolgs- oder Fehlermeldung</li></ul>"},{"location":"de/plugins/#bibliotheken","title":"Bibliotheken","text":"<p>Alle Direktiven aus dem NGINX LUA-Modul und dem NGINX Stream LUA-Modul sind verf\u00fcgbar. Dar\u00fcber hinaus k\u00f6nnen Sie die in BunkerWeb enthaltenen LUA-Bibliotheken verwenden: siehe dieses Skript f\u00fcr die vollst\u00e4ndige Liste.</p> <p>Wenn Sie zus\u00e4tzliche Bibliotheken ben\u00f6tigen, k\u00f6nnen Sie diese in den Stammordner des Plugins legen und darauf zugreifen, indem Sie ihnen Ihre Plugin-ID voranstellen. Hier ist ein Beispiel f\u00fcr eine Datei namens mylibrary.lua:</p> <pre><code>local _M = {}\n\n_M.dummy = function ()\n    return \"dummy\"\nend\n\nreturn _M\n</code></pre> <p>Und hier ist, wie Sie sie aus der Datei myplugin.lua verwenden k\u00f6nnen:</p> <pre><code>local mylibrary = require \"myplugin.mylibrary\"\n\n...\n\nmylibrary.dummy()\n\n...\n</code></pre>"},{"location":"de/plugins/#helfer","title":"Helfer","text":"<p>Einige Helfermodule bieten allgemeine n\u00fctzliche Helfer:</p> <ul> <li><code>self.variables</code>: erm\u00f6glicht den Zugriff auf und die Speicherung von Plugin-Attributen</li> <li><code>self.logger</code>: druckt Protokolle</li> <li><code>bunkerweb.utils</code>: verschiedene n\u00fctzliche Funktionen</li> <li><code>bunkerweb.datastore</code>: greift auf die globalen gemeinsamen Daten auf einer Instanz zu (Schl\u00fcssel-Wert-Speicher)</li> <li><code>bunkerweb.clusterstore</code>: greift auf einen Redis-Datenspeicher zu, der zwischen BunkerWeb-Instanzen geteilt wird (Schl\u00fcssel-Wert-Speicher)</li> </ul> <p>Um auf die Funktionen zuzugreifen, m\u00fcssen Sie zuerst die Module erfordern:</p> <pre><code>local utils       = require \"bunkerweb.utils\"\nlocal datastore   = require \"bunkerweb.datastore\"\nlocal clustestore = require \"bunkerweb.clustertore\"\n</code></pre> <p>Einen Einstellungswert abrufen:</p> <pre><code>local myvar = self.variables[\"DUMMY_SETTING\"]\nif not myvar then\n    self.logger:log(ngx.ERR, \"kann Einstellung DUMMY_SETTING nicht abrufen\")\nelse\n    self.logger:log(ngx.NOTICE, \"DUMMY_SETTING = \" .. value)\nend\n</code></pre> <p>Etwas im lokalen Cache speichern:</p> <pre><code>local ok, err = self.datastore:set(\"plugin_myplugin_something\", \"somevalue\")\nif not ok then\n    self.logger:log(ngx.ERR, \"kann plugin_myplugin_something nicht im Datenspeicher speichern: \" .. err)\nelse\n    self.logger:log(ngx.NOTICE, \"plugin_myplugin_something erfolgreich im Datenspeicher gespeichert\")\nend\n</code></pre> <p>\u00dcberpr\u00fcfen, ob eine IP-Adresse global ist:</p> <pre><code>local ret, err = utils.ip_is_global(ngx.ctx.bw.remote_addr)\nif ret == nil then\n    self.logger:log(ngx.ERR, \"Fehler beim \u00dcberpr\u00fcfen, ob die IP \" .. ngx.ctx.bw.remote_addr .. \" global ist oder nicht: \" .. err)\nelseif not ret then\n    self.logger:log(ngx.NOTICE, \"IP \" .. ngx.ctx.bw.remote_addr .. \" ist nicht global\")\nelse\n    self.logger:log(ngx.NOTICE, \"IP \" .. ngx.ctx.bw.remote_addr .. \" ist global\")\nend\n</code></pre> <p>Weitere Beispiele</p> <p>Wenn Sie die vollst\u00e4ndige Liste der verf\u00fcgbaren Funktionen sehen m\u00f6chten, k\u00f6nnen Sie sich die Dateien im lua-Verzeichnis des Repositorys ansehen.</p>"},{"location":"de/plugins/#jobs","title":"Jobs","text":"<p>BunkerWeb verwendet einen internen Job-Scheduler f\u00fcr periodische Aufgaben wie die Erneuerung von Zertifikaten mit Certbot, das Herunterladen von Blacklists, das Herunterladen von MMDB-Dateien usw. Sie k\u00f6nnen Aufgaben Ihrer Wahl hinzuf\u00fcgen, indem Sie sie in einen Unterordner namens jobs legen und sie in der Metadatendatei plugin.json auflisten. Vergessen Sie nicht, die Ausf\u00fchrungsberechtigungen f\u00fcr alle hinzuzuf\u00fcgen, um Probleme zu vermeiden, wenn ein Benutzer Ihr Plugin klont und installiert.</p>"},{"location":"de/plugins/#plugin-seite","title":"Plugin-Seite","text":"<p>Alles, was mit der Web-UI zu tun hat, befindet sich im Unterordner ui, wie wir im vorherigen Strukturabschnitt gesehen haben.</p>"},{"location":"de/plugins/#voraussetzungen","title":"Voraussetzungen","text":"<p>Wenn Sie eine Plugin-Seite erstellen m\u00f6chten, ben\u00f6tigen Sie zwei Dateien:</p> <ul> <li> <p>template.html, das mit einem GET /plugins/&lt;plugin_id&gt; erreichbar ist.</p> </li> <li> <p>actions.py, wo Sie Skripte und Logik mit einem POST /plugins/&lt;plugin_id&gt; hinzuf\u00fcgen k\u00f6nnen. Beachten Sie, dass diese Datei eine Funktion mit demselben Namen wie das Plugin ben\u00f6tigt, um zu funktionieren. Diese Datei wird auch dann ben\u00f6tigt, wenn die Funktion leer ist.</p> </li> </ul>"},{"location":"de/plugins/#grundlegendes-beispiel","title":"Grundlegendes Beispiel","text":"<p>Jinja 2-Vorlage</p> <p>Die Datei template.html ist eine Jinja2-Vorlage. Weitere Informationen finden Sie in der Jinja2-Dokumentation.</p> <p>Wir k\u00f6nnen die Datei actions.py beiseite legen und nur die Vorlage in einer GET-Situation verwenden. Die Vorlage kann auf den App-Kontext und Bibliotheken zugreifen, sodass Sie Jinja-, Request- oder Flask-Dienstprogramme verwenden k\u00f6nnen.</p> <p>Sie k\u00f6nnen beispielsweise die Anforderungsargumente in Ihrer Vorlage wie folgt abrufen:</p> <pre><code>&lt;p&gt;Anforderungsargumente: {{ request.args.get() }}.&lt;/p&gt;\n</code></pre>"},{"location":"de/plugins/#actionspy","title":"Actions.py","text":"<p>CSRF-Token</p> <p>Bitte beachten Sie, dass jede Formular\u00fcbermittlung durch ein CSRF-Token gesch\u00fctzt ist. Sie m\u00fcssen das folgende Snippet in Ihre Formulare einf\u00fcgen: <pre><code>&lt;input type=\"hidden\" name=\"csrf_token\" value=\"{{ csrf_token() }}\" /&gt;\n</code></pre></p> <p>Sie k\u00f6nnen Ihre Plugin-Seite mit zus\u00e4tzlichen Skripten mit der Datei actions.py erweitern, wenn Sie einen POST /plugins/&lt;plugin_id&gt; senden.</p> <p>Sie haben standardm\u00e4\u00dfig zwei Funktionen in actions.py:</p> <p>pre_render-Funktion</p> <p>Dies erm\u00f6glicht es Ihnen, Daten abzurufen, wenn Sie die Vorlage GETen, und die Daten mit der in Jinja verf\u00fcgbaren <code>pre_render</code>-Variable zu verwenden, um Inhalte dynamischer anzuzeigen.</p> <pre><code>def pre_render(**kwargs)\n  return &lt;pre_render_data&gt;\n</code></pre> <p>BunkerWeb sendet Ihnen diese Art von Antwort:</p> <pre><code>return jsonify({\"status\": \"ok|ko\", \"code\" : XXX, \"data\": &lt;pre_render_data&gt;}), 200\n</code></pre> <p>&lt;plugin_id&gt;-Funktion</p> <p>Dies erm\u00f6glicht es Ihnen, Daten abzurufen, wenn Sie einen POST vom Vorlagenendpunkt ausf\u00fchren, der in AJAX verwendet werden muss.</p> <pre><code>def myplugin(**kwargs)\n  return &lt;plugin_id_data&gt;\n</code></pre> <p>BunkerWeb sendet Ihnen diese Art von Antwort:</p> <pre><code>return jsonify({\"message\": \"ok\", \"data\": &lt;plugin_id_data&gt;}), 200\n</code></pre> <p>Was Sie von action.py aus zugreifen k\u00f6nnen</p> <p>Hier sind die Argumente, die an die Funktionen von <code>action.py</code> \u00fcbergeben und darauf zugegriffen werden:</p> <pre><code>function(app=app, args=request.args.to_dict() or request.json or None)\n</code></pre> <p>Verf\u00fcgbare Python-Bibliotheken</p> <p>Die Web-UI von BunkerWeb enth\u00e4lt eine Reihe vorinstallierter Python-Bibliotheken, die Sie in der <code>actions.py</code>-Datei Ihres Plugins oder anderen UI-bezogenen Skripten verwenden k\u00f6nnen. Diese sind sofort verf\u00fcgbar und erfordern keine zus\u00e4tzlichen Installationen.</p> <p>Hier ist die vollst\u00e4ndige Liste der enthaltenen Bibliotheken:</p> <ul> <li>bcrypt - Passwort-Hashing-Bibliothek</li> <li>biscuit-python - Biscuit-Authentifizierungstoken</li> <li>certbot - ACME-Client f\u00fcr Let's Encrypt</li> <li>Flask - Web-Framework</li> <li>Flask-Login - Benutzersitzungsverwaltung</li> <li>Flask-Session[cachelib] - Serverseitige Sitzungsspeicherung</li> <li>Flask-WTF - Formularbehandlung und CSRF-Schutz</li> <li>gunicorn[gthread] - WSGI-HTTP-Server</li> <li>pillow - Bildverarbeitung</li> <li>psutil - System- und Prozess-Dienstprogramme</li> <li>python_dateutil - Datums- und Uhrzeit-Dienstprogramme</li> <li>qrcode - QR-Code-Generierung</li> <li>regex - Erweiterte regul\u00e4re Ausdr\u00fccke</li> <li>urllib3 - HTTP-Client</li> <li>user_agents - User-Agent-Parsing</li> </ul> <p>Verwendung von Bibliotheken in Ihrem Plugin</p> <p>Um diese Bibliotheken in Ihrer <code>actions.py</code>-Datei zu importieren und zu verwenden, verwenden Sie einfach die standardm\u00e4\u00dfige Python-<code>import</code>-Anweisung. Zum Beispiel:</p> <pre><code>from flask import request\nimport bcrypt\n</code></pre> Externe Bibliotheken <p>Wenn Sie Bibliotheken ben\u00f6tigen, die nicht oben aufgef\u00fchrt sind, installieren Sie sie im <code>ui</code>-Ordner Ihres Plugins und importieren Sie sie mit der klassischen <code>import</code>-Anweisung. Stellen Sie die Kompatibilit\u00e4t mit der vorhandenen Umgebung sicher, um Konflikte zu vermeiden.</p> <p>Einige Beispiele</p> <ul> <li>Abrufen von \u00fcbermittelten Formulardaten</li> </ul> <pre><code>from flask import request\n\ndef myplugin(**kwargs) :\n    my_form_value = request.form[\"my_form_input\"]\n  return my_form_value\n</code></pre> <ul> <li>Zugriff auf die App-Konfiguration</li> </ul> <p>action.py <pre><code>from flask import request\n\ndef pre_render(**kwargs) :\n    config = kwargs['app'].config[\"CONFIG\"].get_config(methods=False)\n  return config\n</code></pre></p> <p>Vorlage <pre><code>&lt;!-- Metadaten + Konfiguration --&gt;\n&lt;div&gt;{{ pre_render }}&lt;/div&gt;\n</code></pre></p>"},{"location":"de/plugins/#hookspy","title":"Hooks.py","text":"<p>Diese Dokumentation beschreibt die Lebenszyklus-Hooks, die zur Verwaltung verschiedener Phasen einer Anfrage innerhalb der Anwendung verwendet werden. Jeder Hook ist mit einer bestimmten Phase verbunden.</p> before_requestafter_requestteardown_requestcontext_processor <p>Diese Hooks werden vor der Verarbeitung einer eingehenden Anfrage ausgef\u00fchrt. Sie werden normalerweise f\u00fcr Vorverarbeitungsaufgaben wie Authentifizierung, Validierung oder Protokollierung verwendet.</p> <p>Wenn der Hook ein Antwortobjekt zur\u00fcckgibt, \u00fcberspringt Flask die Anforderungsbehandlung und gibt die Antwort direkt zur\u00fcck. Dies kann n\u00fctzlich sein, um die Anforderungsverarbeitungspipeline kurzzuschlie\u00dfen.</p> <p>Beispiel:</p> <pre><code>from flask import request, Response\n\ndef before_request():\n    print(\"Before-request: Validating request...\", flush=True)\n    # Hier Authentifizierung, Validierung oder Protokollierung durchf\u00fchren\n    if not is_valid_request(request): # Wir befinden uns im App-Kontext\n        return Response(\"Invalid request!\", status=400)\n\ndef is_valid_request(request):\n    # Dummy-Validierungslogik\n    return \"user\" in request\n</code></pre> <p>Diese Hooks werden nach der Verarbeitung der Anfrage ausgef\u00fchrt. Sie sind ideal f\u00fcr Nachverarbeitungsaufgaben wie Bereinigung, zus\u00e4tzliche Protokollierung oder das \u00c4ndern der Antwort, bevor sie zur\u00fcckgesendet wird.</p> <p>Sie erhalten das Antwortobjekt als Argument und k\u00f6nnen es \u00e4ndern, bevor sie es zur\u00fcckgeben. Der erste <code>after_request</code>-Hook, der eine Antwort zur\u00fcckgibt, wird als endg\u00fcltige Antwort verwendet.</p> <p>Beispiel:</p> <pre><code>from flask import request\n\ndef after_request(response):\n    print(\"After-request: Logging response...\", flush=True)\n    # Hier Protokollierung, Bereinigung oder Antwort\u00e4nderungen durchf\u00fchren\n    log_response(response)\n    return response\n\ndef log_response(response):\n    # Dummy-Protokollierungslogik\n    print(\"Response logged:\", response, flush=True)\n</code></pre> <p>Diese Hooks werden aufgerufen, wenn der Anforderungskontext abgebaut wird. Diese Hooks werden verwendet, um Ressourcen freizugeben oder Fehler zu behandeln, die w\u00e4hrend des Lebenszyklus der Anfrage aufgetreten sind.</p> <p>Beispiel:</p> <pre><code>def teardown_request(error=None):\n    print(\"Teardown-request: Cleaning up resources...\", flush=True)\n    # Hier Bereinigung, Ressourcenfreigabe oder Fehlerbehandlung durchf\u00fchren\n    if error:\n        handle_error(error)\n    cleanup_resources()\n\ndef handle_error(error):\n    # Dummy-Fehlerbehandlungslogik\n    print(\"Error encountered:\", error, flush=True)\n\ndef cleanup_resources():\n    # Dummy-Ressourcenbereinigungslogik\n    print(\"Resources have been cleaned up.\", flush=True)\n</code></pre> <p>Diese Hooks werden verwendet, um zus\u00e4tzlichen Kontext in Vorlagen oder Ansichten einzuf\u00fcgen. Sie bereichern den Laufzeitkontext, indem sie allgemeine Daten (wie Benutzerinformationen oder Konfigurationseinstellungen) an die Vorlagen \u00fcbergeben.</p> <p>Wenn ein Kontextprozessor ein W\u00f6rterbuch zur\u00fcckgibt, werden die Schl\u00fcssel und Werte dem Kontext f\u00fcr alle Vorlagen hinzugef\u00fcgt. Dies erm\u00f6glicht es Ihnen, Daten \u00fcber mehrere Ansichten oder Vorlagen hinweg zu teilen.</p> <p>Beispiel:</p> <pre><code>def context_processor() -&gt; dict:\n    print(\"Context-processor: Injecting context data...\", flush=True)\n    # Ein W\u00f6rterbuch mit Kontextdaten f\u00fcr Vorlagen/Ansichten zur\u00fcckgeben\n    return {\n        \"current_user\": \"John Doe\",\n        \"app_version\": \"1.0.0\",\n        \"feature_flags\": {\"new_ui\": True}\n    }\n</code></pre> <p>Dieses Lebenszyklus-Hook-Design bietet einen modularen und systematischen Ansatz zur Verwaltung verschiedener Aspekte des Lebenszyklus einer Anfrage:</p> <ul> <li>Modularit\u00e4t: Jeder Hook ist f\u00fcr eine bestimmte Phase verantwortlich, wodurch sichergestellt wird, dass die Belange getrennt sind.</li> <li>Wartbarkeit: Entwickler k\u00f6nnen Hook-Implementierungen einfach hinzuf\u00fcgen, \u00e4ndern oder entfernen, ohne andere Teile des Lebenszyklus der Anfrage zu beeintr\u00e4chtigen.</li> <li>Erweiterbarkeit: Das Framework ist flexibel und erm\u00f6glicht zus\u00e4tzliche Hooks oder Erweiterungen, wenn sich die Anwendungsanforderungen \u00e4ndern.</li> </ul> <p>Durch die klare Definition der Verantwortlichkeiten jedes Hooks und der zugeh\u00f6rigen Protokollierungspr\u00e4fixe stellt das System sicher, dass jede Phase der Anforderungsverarbeitung transparent und verwaltbar ist.</p>"},{"location":"de/plugins/#blueprints","title":"Blueprints","text":"<p>In Flask dienen Blueprints als modularer Weg, um verwandte Komponenten \u2013 wie Ansichten, Vorlagen und statische Dateien \u2013 innerhalb Ihrer Anwendung zu organisieren. Sie erm\u00f6glichen es Ihnen, Funktionen logisch zu gruppieren und k\u00f6nnen verwendet werden, um neue Abschnitte Ihrer App zu erstellen oder bestehende zu \u00fcberschreiben.</p>"},{"location":"de/plugins/#erstellen-eines-blueprints","title":"Erstellen eines Blueprints","text":"<p>Um einen Blueprint zu definieren, erstellen Sie eine Instanz der <code>Blueprint</code>-Klasse und geben dabei dessen Namen und Importpfad an. Anschlie\u00dfend definieren Sie Routen und Ansichten, die mit diesem Blueprint verbunden sind.</p> <p>Beispiel: Definieren eines neuen Blueprints</p> <pre><code>from os.path import dirname\nfrom flask import Blueprint, render_template\n\n# Den Blueprint definieren\nmy_blueprint = Blueprint('my_blueprint', __name__, template_folder=dirname(__file__) + '/templates') # Der template_folder wird gesetzt, um Konflikte mit dem urspr\u00fcnglichen Blueprint zu vermeiden\n\n# Eine Route innerhalb des Blueprints definieren\n@my_blueprint.route('/my_blueprint')\ndef my_blueprint_page():\n    return render_template('my_blueprint.html')\n</code></pre> <p>In diesem Beispiel wird ein Blueprint namens <code>my_blueprint</code> erstellt und eine Route <code>/my_blueprint</code> darin definiert.</p>"},{"location":"de/plugins/#uberschreiben-eines-bestehenden-blueprints","title":"\u00dcberschreiben eines bestehenden Blueprints","text":"<p>Blueprints k\u00f6nnen auch bestehende \u00fcberschreiben, um Funktionalit\u00e4t zu \u00e4ndern oder zu erweitern. Stellen Sie dazu sicher, dass der neue Blueprint denselben Namen hat wie der, den Sie \u00fcberschreiben, und registrieren Sie ihn nach dem Original.</p> <p>Beispiel: \u00dcberschreiben eines bestehenden Blueprints</p> <pre><code>from os.path import dirname\nfrom flask import Flask, Blueprint\n\n# Urspr\u00fcnglicher Blueprint\ninstances = Blueprint('instances', __name__, template_folder=dirname(__file__) + '/templates') # Der template_folder wird gesetzt, um Konflikte mit dem urspr\u00fcnglichen Blueprint zu vermeiden\n\n@instances.route('/instances')\ndef override_instances():\n    return \"Meine neue Instanzen-Seite\"\n</code></pre> <p>In diesem Szenario wird beim Aufrufen der URL <code>/instances</code> \"Meine neue Instanzen-Seite\" angezeigt, da der zuletzt registrierte <code>instances</code>-Blueprint den urspr\u00fcnglichen <code>instances</code>-Blueprint \u00fcberschreibt.</p> <p>Zum \u00dcberschreiben</p> <p>Seien Sie vorsichtig beim \u00dcberschreiben bestehender Blueprints, da dies das Verhalten der Anwendung beeintr\u00e4chtigen kann. Stellen Sie sicher, dass die \u00c4nderungen den Anforderungen der Anwendung entsprechen und keine unerwarteten Nebenwirkungen verursachen.</p> <p>Alle bestehenden Routen werden aus dem urspr\u00fcnglichen Blueprint entfernt, sodass Sie sie bei Bedarf neu implementieren m\u00fcssen.</p>"},{"location":"de/plugins/#namenskonventionen","title":"Namenskonventionen","text":"<p>Wichtig</p> <p>Stellen Sie sicher, dass der Name des Blueprints mit dem Namen der Blueprint-Variable \u00fcbereinstimmt, andernfalls wird er nicht als g\u00fcltiger Blueprint betrachtet und nicht registriert.</p> <p>F\u00fcr Konsistenz und Klarheit ist es ratsam, die folgenden Namenskonventionen zu befolgen:</p> <ul> <li> <p>Blueprint-Namen: Verwenden Sie kurze, nur aus Kleinbuchstaben bestehende Namen. Unterstriche k\u00f6nnen zur Lesbarkeit verwendet werden, z. B. <code>user_auth</code>.</p> </li> <li> <p>Dateinamen: Passen Sie den Dateinamen an den Blueprint-Namen an und stellen Sie sicher, dass er nur aus Kleinbuchstaben mit Unterstrichen besteht, z. B. <code>user_auth.py</code>.</p> </li> </ul> <p>Diese Praxis steht im Einklang mit den Namenskonventionen f\u00fcr Python-Module und hilft, eine klare Projektstruktur beizubehalten.</p> <p>Beispiel: Blueprint- und Dateibenennung</p> <pre><code>plugin /\n    ui / blueprints / user_auth.py\n                      templates / user_auth.html\n</code></pre> <p>In dieser Struktur enth\u00e4lt <code>user_auth.py</code> den <code>user_auth</code>-Blueprint und <code>user_auth.html</code> ist die zugeh\u00f6rige Vorlage, die den empfohlenen Namenskonventionen entspricht.</p>"},{"location":"de/professional-services/","title":"Professionelle Dienstleistungen","text":""},{"location":"de/professional-services/#warum-sollte-ich-professionelle-dienstleistungen-in-anspruch-nehmen","title":"Warum sollte ich professionelle Dienstleistungen in Anspruch nehmen?","text":"<p>Da BunkerWeb eine freie (im Sinne von Freiheit) Software ist, haben Sie das Recht, sie frei zu nutzen, solange Sie die AGPLv3-Lizenz respektieren.</p> <p>Sie k\u00f6nnen BunkerWeb auch jederzeit auf die PRO-Version upgraden. Dadurch erhalten Sie ein verbessertes Erlebnis, das Sie bei der Sicherheit Ihrer Webdienste unterst\u00fctzt. Unser Ziel ist es, Ihnen zu helfen, sich auf Ihre Gesch\u00e4ftsbed\u00fcrfnisse zu konzentrieren. Die PRO-Version wird regelm\u00e4\u00dfig aktualisiert und wir bem\u00fchen uns, Feedback von Unternehmen zu sammeln, um die ben\u00f6tigten Funktionen zu integrieren.</p> <p>Aber Zeit f\u00fcr eine bestimmte Technologie aufzuwenden, ist je nach Ihren Gesch\u00e4ftspriorit\u00e4ten m\u00f6glicherweise nicht einfach. Ganz zu schweigen davon, dass Cybersicherheit ein komplexes Gebiet ist, in dem es nicht empfehlenswert ist, Richter und Geschworener in einer Person zu sein.</p> <p>Professionelle Dienstleistungen zus\u00e4tzlich zur Open-Source- oder PRO-Version in Anspruch zu nehmen, ist die ideale L\u00f6sung, um Ihre Gesch\u00e4ftsanforderungen abzudecken. Sie k\u00f6nnen sich auf Ihre obersten Priorit\u00e4ten konzentrieren und sich auf einen vertrauensw\u00fcrdigen Partner verlassen, wenn es um Websicherheit geht.</p> <p>Bitte beachten Sie, dass professionelle Dienstleistungen direkt von Bunkerity, dem Unternehmen, das das BunkerWeb-Projekt betreut, \u00fcber unsere Online-Plattform BunkerWeb Panel angeboten werden.</p>"},{"location":"de/professional-services/#welche-professionellen-dienstleistungen-bieten-sie-an","title":"Welche professionellen Dienstleistungen bieten Sie an?","text":"<p>Wir bieten technischen Support und Beratung rund um die BunkerWeb-L\u00f6sung. Mit diesem Service unterst\u00fctzen wir Sie bei technischen Problemen (Installation, Konfiguration, Fehlalarme, ...). Wir k\u00f6nnen auch individuelle SLAs nach Ihren Bed\u00fcrfnissen anbieten.</p> <p>Je nach Ihren Bed\u00fcrfnissen haben Sie die Wahl zwischen \"einmaligen\" und Abonnement-Angeboten.</p>"},{"location":"de/professional-services/#wie-erhalte-ich-weitere-informationen","title":"Wie erhalte ich weitere Informationen?","text":"<p>Weitere Informationen finden Sie im BunkerWeb Panel, unserer dedizierten Plattform f\u00fcr professionelle Dienstleistungen.</p> <p>Z\u00f6gern Sie nicht, uns zu kontaktieren, wenn Sie Fragen haben. Wir freuen uns, auf Ihre Bed\u00fcrfnisse einzugehen.</p>"},{"location":"de/quickstart-guide/","title":"Schnellstart-Anleitung","text":"<p>Voraussetzungen</p> <p>Wir gehen davon aus, dass Sie bereits mit den Grundkonzepten vertraut sind und die Integrationsanweisungen f\u00fcr Ihre Umgebung befolgt haben.</p> <p>Diese Schnellstart-Anleitung setzt voraus, dass BunkerWeb aus dem Internet erreichbar ist und dass Sie mindestens zwei Domains konfiguriert haben: eine f\u00fcr die Web-UI und eine f\u00fcr Ihren Webdienst.</p> <p>Systemanforderungen</p> <p>Die empfohlenen Mindestspezifikationen f\u00fcr BunkerWeb sind eine Maschine mit 2 (v)CPUs und 8 GB RAM. Bitte beachten Sie, dass dies f\u00fcr Testumgebungen oder Setups mit sehr wenigen Diensten ausreichend sein sollte.</p> <p>F\u00fcr Produktionsumgebungen mit vielen zu sch\u00fctzenden Diensten empfehlen wir mindestens 4 (v)CPUs und 16 GB RAM. Die Ressourcen sollten an Ihren Anwendungsfall, den Netzwerkverkehr und potenzielle DDoS-Angriffe, denen Sie ausgesetzt sein k\u00f6nnten, angepasst werden.</p> <p>Es wird dringend empfohlen, das globale Laden von CRS-Regeln zu aktivieren (indem der Parameter <code>USE_MODSECURITY_GLOBAL_CRS</code> auf <code>yes</code> gesetzt wird), wenn Sie in Umgebungen mit begrenztem RAM oder in der Produktion mit vielen Diensten arbeiten. Weitere Details finden Sie im Abschnitt Erweiterte Nutzungen der Dokumentation.</p> <p>Diese Schnellstart-Anleitung hilft Ihnen, BunkerWeb schnell zu installieren und einen Webdienst \u00fcber die Web-Benutzeroberfl\u00e4che zu sichern.</p> <p>Der Schutz bestehender Webanwendungen, die bereits \u00fcber das HTTP(S)-Protokoll erreichbar sind, ist das Hauptziel von BunkerWeb: Es fungiert als klassischer Reverse-Proxy mit zus\u00e4tzlichen Sicherheitsfunktionen.</p> <p>Im Beispielordner des Repositorys finden Sie Beispiele aus der Praxis.</p>"},{"location":"de/quickstart-guide/#grundlegende-einrichtung","title":"Grundlegende Einrichtung","text":"All-in-oneLinuxDockerDocker AutoconfKubernetesSwarm <p>Um den All-in-One-Container bereitzustellen, f\u00fchren Sie den folgenden Befehl aus:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Standardm\u00e4\u00dfig stellt der Container Folgendes bereit:</p> <ul> <li>8080/tcp f\u00fcr HTTP</li> <li>8443/tcp f\u00fcr HTTPS</li> <li>8443/udp f\u00fcr QUIC</li> <li>7000/tcp f\u00fcr den Zugriff auf die Web-UI ohne BunkerWeb davor (nicht f\u00fcr die Produktion empfohlen)</li> </ul> <p>Das All-In-One-Image enth\u00e4lt mehrere integrierte Dienste, die \u00fcber Umgebungsvariablen gesteuert werden k\u00f6nnen. Weitere Details finden Sie im Abschnitt All-In-One (AIO) Image der Integrationsseite.</p> <p>Verwenden Sie das Easy Install-Skript, um BunkerWeb auf unterst\u00fctzten Linux-Distributionen einzurichten. Es installiert und konfiguriert NGINX automatisch, f\u00fcgt das BunkerWeb-Repository hinzu und richtet die erforderlichen Dienste ein.</p> <pre><code># Laden Sie das Skript und seine Pr\u00fcfsumme herunter\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# \u00dcberpr\u00fcfen Sie die Pr\u00fcfsumme\nsha256sum -c install-bunkerweb.sh.sha256\n\n# Wenn die \u00dcberpr\u00fcfung erfolgreich ist, f\u00fchren Sie das Skript aus\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Sicherheitshinweis</p> <p>\u00dcberpr\u00fcfen Sie immer die Integrit\u00e4t des Skripts mit der bereitgestellten Pr\u00fcfsumme, bevor Sie es ausf\u00fchren.</p> <p>Weitere Installationsmethoden (Paketmanager, Installationstypen, nicht-interaktive Flags, CrowdSec-Integration usw.) finden Sie unter Linux-Integration.</p> <p>Hier ist die vollst\u00e4ndige Docker-Compose-Datei, die Sie verwenden k\u00f6nnen; bitte beachten Sie, dass wir sp\u00e4ter den Webdienst mit dem <code>bw-services</code>-Netzwerk verbinden werden:</p> <pre><code>x-bw-env: &amp;bw-env\n  # Wir verwenden einen Anker, um die Wiederholung derselben Einstellungen f\u00fcr beide Dienste zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Stellen Sie sicher, dass Sie den richtigen IP-Bereich festlegen, damit der Scheduler die Konfiguration an die Instanz senden kann\n  # Optional: Legen Sie einen API-Token fest und spiegeln Sie ihn in beiden Containern\n  API_TOKEN: \"\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    # Dies ist der Name, der zur Identifizierung der Instanz im Scheduler verwendet wird\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # F\u00fcr QUIC / HTTP3-Unterst\u00fctzung\n    environment:\n      &lt;&lt;: *bw-env # Wir verwenden den Anker, um die Wiederholung derselben Einstellungen f\u00fcr alle Dienste zu vermeiden\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Stellen Sie sicher, dass Sie den richtigen Instanznamen festlegen\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # \u00c4ndern Sie dies bei Bedarf\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Redis-Dienst f\u00fcr die Persistenz von Berichten/Sperren/Statistiken\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Stellen Sie sicher, dass Sie den richtigen IP-Bereich festlegen, damit der Scheduler die Konfiguration an die Instanz senden kann\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Hier ist die vollst\u00e4ndige Docker-Compose-Datei, die Sie verwenden k\u00f6nnen; bitte beachten Sie, dass wir sp\u00e4ter den Webdienst mit dem <code>bw-services</code>-Netzwerk verbinden werden:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # F\u00fcr QUIC / HTTP3-Unterst\u00fctzung\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Wir setzen das Instanz-Label, damit die Autoconf die Instanz erkennen kann\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # \u00c4ndern Sie dies bei Bedarf\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Redis-Dienst f\u00fcr die Persistenz von Berichten/Sperren/Statistiken\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>Die empfohlene Methode zur Installation von Kubernetes ist die Verwendung des Helm-Charts, das unter <code>https://repo.bunkerweb.io/charts</code> verf\u00fcgbar ist:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>Sie k\u00f6nnen dann das <code>bunkerweb</code>-Helm-Chart aus diesem Repository verwenden:</p> <pre><code>helm install mybw bunkerweb/bunkerweb --namespace bunkerweb --create-namespace\n</code></pre> <p>Nach der Installation k\u00f6nnen Sie die IP-Adresse des <code>LoadBalancer</code> abrufen, um Ihre Domains einzurichten:</p> <pre><code>kubectl -n bunkerweb get svc mybw-external -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Hier ist die vollst\u00e4ndige Docker-Compose-Stack-Datei, die Sie verwenden k\u00f6nnen; bitte beachten Sie, dass wir sp\u00e4ter den Webdienst mit dem <code>bw-services</code>-Netzwerk verbinden werden:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # F\u00fcr QUIC / HTTP3-Unterst\u00fctzung\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n      UI_HOST: \"http://bw-ui:7000\" # \u00c4ndern Sie dies bei Bedarf\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"de/quickstart-guide/#den-einrichtungsassistenten-abschlieen","title":"Den Einrichtungsassistenten abschlie\u00dfen","text":"<p>Zugriff auf den Einrichtungsassistenten</p> <p>Sie k\u00f6nnen auf den Einrichtungsassistenten zugreifen, indem Sie die URI <code>https://ihre-fqdn-oder-ip-adresse/setup</code> Ihres Servers aufrufen.</p>"},{"location":"de/quickstart-guide/#ein-administratorkonto-erstellen","title":"Ein Administratorkonto erstellen","text":"<p>Sie sollten eine Einrichtungsseite wie diese sehen:</p> <p> </p> Setup Wizard Landing Page <p>Sobald Sie auf der Einrichtungsseite sind, k\u00f6nnen Sie den Administrator-Benutzernamen, die E-Mail-Adresse und das Passwort eingeben und auf die Schaltfl\u00e4che \"Weiter\" klicken.</p>"},{"location":"de/quickstart-guide/#den-reverse-proxy-https-und-andere-erweiterte-einstellungen-konfigurieren","title":"Den Reverse-Proxy, HTTPS und andere erweiterte Einstellungen konfigurieren","text":"Grundlegende EinrichtungErweiterte Einrichtung <p>Im n\u00e4chsten Schritt werden Sie aufgefordert, den Servernamen (Domain/FQDN) einzugeben, den die Web-UI verwenden wird.</p> <p>Sie k\u00f6nnen auch Let's Encrypt aktivieren.</p> <p> Setup Wizard Schritt 2 </p> <p>Im n\u00e4chsten Schritt werden Sie aufgefordert, den Servernamen (Domain/FQDN) einzugeben, den die Web-UI verwenden wird.</p> <p>Sie k\u00f6nnen auch Let's Encrypt aktivieren.</p> <p>Wenn Sie den Abschnitt <code>Erweiterte Einstellungen</code> erweitern, k\u00f6nnen Sie auch die folgenden Optionen konfigurieren:</p> <ul> <li>Reverse-Proxy: Passen Sie die Reverse-Proxy-Einstellungen f\u00fcr Ihre Administratoroberfl\u00e4che an (z. B. wenn Sie einen Pfad verwenden m\u00f6chten).</li> <li>Echte IP: Konfigurieren Sie die Einstellungen f\u00fcr die echte IP, um die IP-Adresse des Clients korrekt zu identifizieren (z. B. wenn Sie sich hinter einem Load Balancer oder einem CDN befinden).</li> <li>Benutzerdefiniertes Zertifikat: Laden Sie ein benutzerdefiniertes TLS-Zertifikat hoch, wenn Sie Let's Encrypt nicht verwenden m\u00f6chten.</li> </ul> <p> Setup Wizard Schritt 2 (erweitert) </p>"},{"location":"de/quickstart-guide/#pro-aktivierung","title":"PRO-Aktivierung","text":"<p>Wenn Sie eine PRO-Lizenz haben, k\u00f6nnen Sie sie aktivieren, indem Sie Ihren Lizenzschl\u00fcssel im Abschnitt <code>Upgrade auf PRO</code> eingeben. Dadurch werden die PRO-Funktionen von BunkerWeb aktiviert.</p> <p> </p> Setup Wizard PRO-Schritt"},{"location":"de/quickstart-guide/#ubersicht-uber-ihre-einstellungen","title":"\u00dcbersicht \u00fcber Ihre Einstellungen","text":"<p>Der letzte Schritt gibt Ihnen einen \u00dcberblick \u00fcber die von Ihnen eingegebenen Einstellungen. Sie k\u00f6nnen auf die Schaltfl\u00e4che \"Einrichten\" klicken, um die Einrichtung abzuschlie\u00dfen.</p> <p> </p> Setup Wizard letzter Schritt"},{"location":"de/quickstart-guide/#zugriff-auf-die-weboberflache","title":"Zugriff auf die Weboberfl\u00e4che","text":"<p>Sie k\u00f6nnen nun auf die Weboberfl\u00e4che zugreifen, indem Sie die im vorherigen Schritt konfigurierte Domain und die URI aufrufen, falls Sie sie ge\u00e4ndert haben (Standard ist <code>https://ihre-domain/</code>).</p> <p> </p> Weboberfl\u00e4che Anmeldeseite <p>Sie k\u00f6nnen sich nun mit dem w\u00e4hrend des Einrichtungsassistenten erstellten Administratorkonto anmelden.</p> <p> </p> Weboberfl\u00e4che Startseite"},{"location":"de/quickstart-guide/#erstellen-eines-neuen-dienstes","title":"Erstellen eines neuen Dienstes","text":"Web-UIAll-in-oneLinux variables.env-DateiDockerDocker Autoconf-LabelsKubernetes-AnnotationenSwarm-Labels <p>Sie k\u00f6nnen einen neuen Dienst erstellen, indem Sie zum Abschnitt <code>Dienste</code> der Weboberfl\u00e4che navigieren und auf die Schaltfl\u00e4che <code>\u2795 Neuen Dienst erstellen</code> klicken.</p> <p>Es gibt mehrere M\u00f6glichkeiten, einen Dienst \u00fcber die Weboberfl\u00e4che zu erstellen:</p> <ul> <li>Der Einfache Modus f\u00fchrt Sie durch den Prozess der Erstellung eines neuen Dienstes.</li> <li>Der Erweiterte Modus erm\u00f6glicht es Ihnen, den Dienst mit mehr Optionen zu konfigurieren.</li> <li>Der Rohmodus erm\u00f6glicht es Ihnen, die Konfiguration direkt einzugeben, als ob Sie die Datei <code>variables.env</code> bearbeiten w\u00fcrden.</li> </ul> <p>Entwurfsdienst</p> <p>Sie k\u00f6nnen einen Entwurfsdienst erstellen, um Ihren Fortschritt zu speichern und sp\u00e4ter darauf zur\u00fcckzukommen. Klicken Sie einfach auf die Schaltfl\u00e4che <code>\ud83c\udf10 Online</code>, um den Dienst in den Entwurfsmodus zu schalten.</p> Einfacher ModusErweiterter ModusRohmodus <p>In diesem Modus k\u00f6nnen Sie aus den verf\u00fcgbaren Vorlagen w\u00e4hlen und die erforderlichen Felder ausf\u00fcllen.</p> <p> Weboberfl\u00e4che Dienst erstellen einfach </p> <ul> <li>Sobald Sie die Vorlage ausgew\u00e4hlt haben, k\u00f6nnen Sie die erforderlichen Felder ausf\u00fcllen und den Anweisungen folgen, um den Dienst zu erstellen.</li> <li>Wenn Sie mit der Konfiguration des Dienstes fertig sind, k\u00f6nnen Sie auf die Schaltfl\u00e4che <code>\ud83d\udcbe Speichern</code> klicken, um die Konfiguration zu speichern.</li> </ul> <p>In diesem Modus k\u00f6nnen Sie den Dienst mit mehr Optionen konfigurieren und dabei alle verf\u00fcgbaren Einstellungen aus allen verschiedenen Plugins sehen.</p> <p> Weboberfl\u00e4che Dienst erstellen erweitert </p> <ul> <li>Um zwischen den verschiedenen Plugins zu navigieren, k\u00f6nnen Sie das Navigationsmen\u00fc auf der linken Seite der Seite verwenden.</li> <li>Jede Einstellung enth\u00e4lt eine kleine Information, die Ihnen hilft zu verstehen, was sie bewirkt.</li> <li>Wenn Sie mit der Konfiguration des Dienstes fertig sind, k\u00f6nnen Sie auf die Schaltfl\u00e4che <code>\ud83d\udcbe Speichern</code> klicken, um die Konfiguration zu speichern.</li> </ul> <p>In diesem Modus k\u00f6nnen Sie die Konfiguration direkt eingeben, als ob Sie die Datei <code>variables.env</code> bearbeiten w\u00fcrden.</p> <p> Weboberfl\u00e4che Dienst erstellen ROH </p> <ul> <li>Wenn Sie mit der Konfiguration des Dienstes fertig sind, k\u00f6nnen Sie auf die Schaltfl\u00e4che <code>\ud83d\udcbe Speichern</code> klicken, um die Konfiguration zu speichern.</li> </ul> <p>\ud83d\ude80 Sobald Sie die Konfiguration gespeichert haben, sollten Sie Ihren neuen Dienst in der Liste der Dienste sehen.</p> <p> Weboberfl\u00e4che Diensteseite </p> <p>Wenn Sie den Dienst bearbeiten m\u00f6chten, k\u00f6nnen Sie auf den Dienstnamen oder die Schaltfl\u00e4che <code>\ud83d\udcdd Bearbeiten</code> klicken.</p> <p>Bei Verwendung des All-in-One-Images werden neue Dienste durch Hinzuf\u00fcgen von Umgebungsvariablen zum <code>docker run</code>-Befehl f\u00fcr den <code>bunkerweb-aio</code>-Container konfiguriert. Wenn der Container bereits l\u00e4uft, m\u00fcssen Sie ihn stoppen und entfernen und dann mit den aktualisierten Umgebungsvariablen erneut ausf\u00fchren.</p> <p>Angenommen, Sie m\u00f6chten eine Anwendung <code>myapp</code> sch\u00fctzen (die in einem anderen Container l\u00e4uft und von BunkerWeb als <code>http://myapp:8080</code> erreichbar ist) und sie unter <code>www.example.com</code> verf\u00fcgbar machen. Sie w\u00fcrden die folgenden Umgebungsvariablen in Ihrem <code>docker run</code>-Befehl hinzuf\u00fcgen oder \u00e4ndern:</p> <pre><code># Zuerst den vorhandenen Container stoppen und entfernen, falls er l\u00e4uft:\n# docker stop bunkerweb-aio\n# docker rm bunkerweb-aio\n\n# Dann den bunkerweb-aio-Container mit zus\u00e4tzlichen/aktualisierten Umgebungsvariablen erneut ausf\u00fchren:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  # --- F\u00fcgen Sie diese Umgebungsvariablen f\u00fcr Ihren neuen Dienst hinzu/\u00e4ndern Sie sie ---\n  -e MULTISITE=yes \\\n  -e SERVER_NAME=\"www.example.com\" \\\n  -e \"www.example.com_USE_REVERSE_PROXY=yes\" \\\n  -e \"www.example.com_REVERSE_PROXY_HOST=http://myapp:8080\" \\\n  -e \"www.example.com_REVERSE_PROXY_URL=/\" \\\n  # --- F\u00fcgen Sie alle anderen vorhandenen Umgebungsvariablen f\u00fcr UI, Redis, CrowdSec usw. hinzu ---\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ihr Anwendungscontainer (<code>myapp</code>) und der <code>bunkerweb-aio</code>-Container m\u00fcssen sich im selben Docker-Netzwerk befinden, damit BunkerWeb ihn \u00fcber den Hostnamen <code>myapp</code> erreichen kann.</p> <p>Beispiel f\u00fcr die Netzwerkeinrichtung: <pre><code># 1. Erstellen Sie ein benutzerdefiniertes Docker-Netzwerk (falls noch nicht geschehen):\ndocker network create my-app-network\n\n# 2. F\u00fchren Sie Ihren Anwendungscontainer in diesem Netzwerk aus:\ndocker run -d --name myapp --network my-app-network your-app-image\n\n# 3. F\u00fcgen Sie --network my-app-network zum docker run-Befehl von bunkerweb-aio hinzu:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  --network my-app-network \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n#   ... (alle anderen relevanten Umgebungsvariablen wie im Hauptbeispiel oben gezeigt) ...\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre></p> <p>Stellen Sie sicher, dass Sie <code>myapp</code> durch den tats\u00e4chlichen Namen oder die IP Ihres Anwendungscontainers und <code>http://myapp:8080</code> durch dessen korrekte Adresse und Port ersetzen.</p> <p>Wir gehen davon aus, dass Sie die Grundlegende Einrichtung befolgt haben und dass die Linux-Integration auf Ihrer Maschine l\u00e4uft.</p> <p>Sie k\u00f6nnen einen neuen Dienst erstellen, indem Sie die Datei <code>variables.env</code> im Verzeichnis <code>/etc/bunkerweb/</code> bearbeiten.</p> <pre><code>nano /etc/bunkerweb/variables.env\n</code></pre> <p>Sie k\u00f6nnen dann die folgende Konfiguration hinzuf\u00fcgen:</p> <pre><code>SERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/\nwww.example.com_REVERSE_PROXY_HOST=http://myapp:8080\n</code></pre> <p>Sie k\u00f6nnen dann den <code>bunkerweb-scheduler</code>-Dienst neu laden, um die \u00c4nderungen zu \u00fcbernehmen.</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Wir gehen davon aus, dass Sie die Grundlegende Einrichtung befolgt haben und dass die Docker-Integration auf Ihrer Maschine l\u00e4uft.</p> <p>Sie m\u00fcssen ein Netzwerk namens <code>bw-services</code> haben, damit Sie Ihre bestehende Anwendung verbinden und BunkerWeb konfigurieren k\u00f6nnen:</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Danach k\u00f6nnen Sie den Dienst manuell in der im vorherigen Schritt erstellten Docker-Compose-Datei hinzuf\u00fcgen:</p> <pre><code>...\n\nservices:\n  ...\n  bw-scheduler:\n    ...\n    environment:\n      ...\n      SERVER_NAME: \"www.example.com\" # Bei Verwendung der Docker-Integration k\u00f6nnen Sie die Konfiguration direkt im Scheduler festlegen. Stellen Sie sicher, dass Sie den richtigen Domainnamen festlegen\n      MULTISITE: \"yes\" # Aktivieren Sie den Multisite-Modus, damit Sie mehrere Dienste hinzuf\u00fcgen k\u00f6nnen\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://myapp:8080\"\n      ...\n</code></pre> <p>Sie k\u00f6nnen dann den <code>bw-scheduler</code>-Dienst neu starten, um die \u00c4nderungen zu \u00fcbernehmen.</p> <pre><code>docker compose down bw-scheduler &amp;&amp; docker compose up -d bw-scheduler\n</code></pre> <p>Wir gehen davon aus, dass Sie die Grundlegende Einrichtung befolgt haben und dass die Docker-Autoconf-Integration auf Ihrer Maschine l\u00e4uft.</p> <p>Sie m\u00fcssen ein Netzwerk namens <code>bw-services</code> haben, damit Sie Ihre bestehende Anwendung verbinden und BunkerWeb mit Labels konfigurieren k\u00f6nnen:</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Dadurch wird automatisch ein neuer Dienst mit den bereitgestellten Labels als Konfiguration erstellt.</p> <p>Wir gehen davon aus, dass Sie die Grundlegende Einrichtung befolgt haben und dass der Kubernetes-Stack auf Ihrem Cluster l\u00e4uft.</p> <p>Nehmen wir an, Sie haben ein typisches Deployment mit einem Service, um auf die Webanwendung aus dem Cluster zuzugreifen:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app\n  labels:\n    app: app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app\n  template:\n    metadata:\n      labels:\n        app: app\n    spec:\n      containers:\n      - name: app\n        image: nginxdemos/nginx-hello\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app\nspec:\n  selector:\n    app: app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre> <p>Hier ist die entsprechende Ingress-Definition, um die Webanwendung bereitzustellen und zu sch\u00fctzen:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  annotations:\n    bunkerweb.io/DUMMY_SETTING: \"value\"\nspec:\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n              name: svc-app\n              port:\n                number: 80\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Wir gehen davon aus, dass Sie die Grundlegende Einrichtung befolgt haben und dass der Swarm-Stack auf Ihrem Cluster l\u00e4uft und mit einem Netzwerk namens <code>bw-services</code> verbunden ist, sodass Sie Ihre bestehende Anwendung verbinden und BunkerWeb mit Labels konfigurieren k\u00f6nnen:</p> <pre><code>services:\n  myapp:\n    image: nginxdemos/nginx-hello\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"de/quickstart-guide/#weiterfuhrende-informationen","title":"Weiterf\u00fchrende Informationen","text":"<p>Herzlichen Gl\u00fcckwunsch! Sie haben gerade BunkerWeb installiert und Ihren ersten Webdienst gesichert. Bitte beachten Sie, dass BunkerWeb viel mehr bietet, sowohl in Bezug auf die Sicherheit als auch in Bezug auf die Integration mit anderen Systemen und L\u00f6sungen. Hier ist eine Liste von Ressourcen und Aktionen, die Ihnen helfen k\u00f6nnen, Ihr Wissen \u00fcber die L\u00f6sung weiter zu vertiefen:</p> <ul> <li>Treten Sie der Bunker-Community bei: Discord, LinkedIn, GitHub, X (ehemals Twitter)</li> <li>Schauen Sie sich den offiziellen Blog an</li> <li>Erkunden Sie fortgeschrittene Anwendungsf\u00e4lle in der Dokumentation</li> <li>Nehmen Sie Kontakt mit uns auf, um die Bed\u00fcrfnisse Ihrer Organisation zu besprechen</li> </ul>"},{"location":"de/troubleshooting/","title":"Fehlerbehebung","text":"<p>BunkerWeb Panel</p> <p>Wenn Sie Ihr Problem nicht l\u00f6sen k\u00f6nnen, k\u00f6nnen Sie uns direkt \u00fcber unser Panel kontaktieren. Dies zentralisiert alle Anfragen zur BunkerWeb-L\u00f6sung.</p>"},{"location":"de/troubleshooting/#protokolle","title":"Protokolle","text":"<p>Bei der Fehlerbehebung sind Protokolle Ihre besten Freunde. Wir geben unser Bestes, um benutzerfreundliche Protokolle bereitzustellen, damit Sie verstehen, was passiert.</p> <p>Bitte beachten Sie, dass Sie <code>LOG_LEVEL</code> auf <code>info</code> (Standard: <code>notice</code>) setzen k\u00f6nnen, um die Ausf\u00fchrlichkeit von BunkerWeb zu erh\u00f6hen.</p> <p>Hier erfahren Sie, wie Sie je nach Integration auf die Protokolle zugreifen k\u00f6nnen:</p> DockerDocker AutoconfAll-in-oneSwarmKubernetesLinux <p>Container auflisten</p> <p>Um die laufenden Container aufzulisten, k\u00f6nnen Sie den folgenden Befehl verwenden: <pre><code>docker ps\n</code></pre></p> <p>Sie k\u00f6nnen den Befehl <code>docker logs</code> verwenden (ersetzen Sie <code>bunkerweb</code> durch den Namen Ihres Containers): <pre><code>docker logs bunkerweb\n</code></pre></p> <p>Hier ist das Docker-Compose-\u00c4quivalent (ersetzen Sie <code>bunkerweb</code> durch den Namen der in der <code>docker-compose.yml</code>-Datei deklarierten Dienste): <pre><code>docker-compose logs bunkerweb\n</code></pre></p> <p>Container auflisten</p> <p>Um die laufenden Container aufzulisten, k\u00f6nnen Sie den folgenden Befehl verwenden: <pre><code>docker ps\n</code></pre></p> <p>Sie k\u00f6nnen den Befehl <code>docker logs</code> verwenden (ersetzen Sie <code>bunkerweb</code> und <code>bw-autoconf</code> durch die Namen Ihrer Container): <pre><code>docker logs bunkerweb\ndocker logs bw-autoconf\n</code></pre></p> <p>Hier ist das Docker-Compose-\u00c4quivalent (ersetzen Sie <code>bunkerweb</code> und <code>bw-autoconf</code> durch die Namen der in der <code>docker-compose.yml</code>-Datei deklarierten Dienste): <pre><code>docker-compose logs bunkerweb\ndocker-compose logs bw-autoconf\n</code></pre></p> <p>Container-Name</p> <p>Der Standard-Container-Name f\u00fcr das All-in-one-Image ist <code>bunkerweb-aio</code>. Wenn Sie einen anderen Namen verwendet haben, passen Sie den Befehl bitte entsprechend an.</p> <p>Sie k\u00f6nnen den Befehl <code>docker logs</code> verwenden: <pre><code>docker logs bunkerweb-aio\n</code></pre></p> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Dienste auflisten</p> <p>Um die Dienste aufzulisten, k\u00f6nnen Sie den folgenden Befehl verwenden: <pre><code>docker service ls\n</code></pre></p> <p>Sie k\u00f6nnen den Befehl <code>docker service logs</code> verwenden (ersetzen Sie <code>bunkerweb</code> und <code>bw-autoconf</code> durch die Namen Ihrer Dienste): <pre><code>docker service logs bunkerweb\ndocker service logs bw-autoconf\n</code></pre></p> <p>Pods auflisten</p> <p>Um die Pods aufzulisten, k\u00f6nnen Sie den folgenden Befehl verwenden: <pre><code>kubectl get pods\n</code></pre></p> <p>Sie k\u00f6nnen den Befehl <code>kubectl logs</code> verwenden (ersetzen Sie <code>bunkerweb</code> und <code>bunkerweb-controler</code> durch die Namen Ihrer Pods): <pre><code>kubectl logs bunkerweb\nkubectl logs bunkerweb-controler\n</code></pre></p> <p>Bei Fehlern im Zusammenhang mit BunkerWeb-Diensten (z. B. wenn sie nicht starten) k\u00f6nnen Sie <code>journalctl</code> verwenden: <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre></p> <p>Allgemeine Protokolle befinden sich im Verzeichnis <code>/var/log/bunkerweb</code>: <pre><code>cat /var/log/bunkerweb/error.log\ncat /var/log/bunkerweb/access.log\n</code></pre></p>"},{"location":"de/troubleshooting/#berechtigungen","title":"Berechtigungen","text":"<p>Vergessen Sie nicht, dass BunkerWeb aus offensichtlichen Sicherheitsgr\u00fcnden als unprivilegierter Benutzer ausgef\u00fchrt wird. \u00dcberpr\u00fcfen Sie die Berechtigungen von Dateien und Ordnern, die von BunkerWeb verwendet werden, insbesondere wenn Sie benutzerdefinierte Konfigurationen verwenden (weitere Informationen hier). Sie m\u00fcssen mindestens RW-Rechte f\u00fcr Dateien und RWX f\u00fcr Ordner festlegen.</p>"},{"location":"de/troubleshooting/#ip-entsperrung","title":"IP-Entsperrung","text":"<p>Sie k\u00f6nnen eine IP manuell entsperren, was bei Tests n\u00fctzlich ist, damit Sie die interne API von BunkerWeb kontaktieren k\u00f6nnen (ersetzen Sie <code>1.2.3.4</code> durch die zu entsperrende IP-Adresse):</p> Docker / Docker AutoconfAll-in-oneSwarmKubernetesLinux <p>Sie k\u00f6nnen den Befehl <code>docker exec</code> verwenden (ersetzen Sie <code>bw-scheduler</code> durch den Namen Ihres Containers): <pre><code>docker exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Hier ist das Docker-Compose-\u00c4quivalent (ersetzen Sie <code>bw-scheduler</code> durch den Namen der in der <code>docker-compose.yml</code>-Datei deklarierten Dienste): <pre><code>docker-compose exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Container-Name</p> <p>Der Standard-Container-Name f\u00fcr das All-in-one-Image ist <code>bunkerweb-aio</code>. Wenn Sie einen anderen Namen verwendet haben, passen Sie den Befehl bitte entsprechend an.</p> <p>Sie k\u00f6nnen den Befehl <code>docker exec</code> verwenden: <pre><code>docker exec bunkerweb-aio bwcli unban 1.2.3.4\n</code></pre></p> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Sie k\u00f6nnen den Befehl <code>docker exec</code> verwenden (ersetzen Sie <code>bw-scheduler</code> durch den Namen Ihres Dienstes): <pre><code>docker exec $(docker ps -q -f name=bw-scheduler) bwcli unban 1.2.3.4\n</code></pre></p> <p>Sie k\u00f6nnen den Befehl <code>kubectl exec</code> verwenden (ersetzen Sie <code>bunkerweb-scheduler</code> durch den Namen Ihres Pods): <pre><code>kubectl exec bunkerweb-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Sie k\u00f6nnen den Befehl <code>bwcli</code> (als Root) verwenden: <pre><code>sudo bwcli unban 1.2.3.4\n</code></pre></p>"},{"location":"de/troubleshooting/#falschmeldungen","title":"Falschmeldungen","text":""},{"location":"de/troubleshooting/#nur-erkennen-modus","title":"Nur-Erkennen-Modus","text":"<p>Zu Debugging-/Testzwecken k\u00f6nnen Sie BunkerWeb in den Nur-Erkennen-Modus versetzen, sodass Anfragen nicht blockiert werden und es sich wie ein klassischer Reverse-Proxy verh\u00e4lt.</p>"},{"location":"de/troubleshooting/#modsecurity","title":"ModSecurity","text":"<p>Die Standardkonfiguration von ModSecurity in BunkerWeb l\u00e4dt das Core Rule Set im Anomalie-Bewertungsmodus mit einer Paranoia-Stufe (PL) von 1:</p> <ul> <li>Jede \u00fcbereinstimmende Regel erh\u00f6ht eine Anomalie-Punktzahl (so k\u00f6nnen viele Regeln auf eine einzelne Anfrage zutreffen)</li> <li>PL1 enth\u00e4lt Regeln mit geringerer Wahrscheinlichkeit von Falschmeldungen (aber weniger Sicherheit als PL4)</li> <li>der Standardschwellenwert f\u00fcr die Anomalie-Punktzahl betr\u00e4gt 5 f\u00fcr Anfragen und 4 f\u00fcr Antworten</li> </ul> <p>Nehmen wir die folgenden Protokolle als Beispiel f\u00fcr eine ModSecurity-Erkennung mit der Standardkonfiguration (zur besseren Lesbarkeit formatiert):</p> <pre><code>2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `lfi-os-files.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf\"]\n    [line \"78\"]\n    [id \"930120\"]\n    [rev \"\"]\n    [msg \"OS File Access Attempt\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-lfi\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/255/153/126\"]\n    [tag \"PCI/6.5.4\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `unix-shell.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf\"]\n    [line \"480\"]\n    [id \"932160\"]\n    [rev \"\"]\n    [msg \"Remote Command Execution: Unix Shell Code Found\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-shell\"]\n    [tag \"platform-unix\"]\n    [tag \"attack-rce\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/152/248/88\"]\n    [tag \"PCI/6.5.2\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:urlDecodeUni,t:cmdLine,t:normalizePath,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [error] 85#85: *11 [client 172.17.0.1] ModSecurity: Access denied with code 403 (phase 2). Matched \"Operator `Ge' with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `10' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-949-BLOCKING-EVALUATION.conf\"]\n    [line \"80\"]\n    [id \"949110\"]\n    [rev \"\"]\n    [msg \"Inbound Anomaly Score Exceeded (Total Score: 10)\"]\n    [data \"\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-generic\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n</code></pre> <p>Wie wir sehen k\u00f6nnen, gibt es 3 verschiedene Protokolle:</p> <ol> <li>Regel 930120 stimmte \u00fcberein</li> <li>Regel 932160 stimmte \u00fcberein</li> <li>Zugriff verweigert (Regel 949110)</li> </ol> <p>Eine wichtige Sache zu verstehen ist, dass Regel 949110 keine \"echte\" Regel ist: Es ist diejenige, die die Anfrage verweigert, weil der Anomalie-Schwellenwert erreicht ist (in diesem Beispiel 10). Sie sollten die Regel 949110 niemals entfernen!</p> <p>Wenn es sich um eine Falschmeldung handelt, sollten Sie sich auf die Regeln 930120 und 932160 konzentrieren. Das Tuning von ModSecurity und/oder CRS liegt au\u00dferhalb des Rahmens dieser Dokumentation, aber vergessen Sie nicht, dass Sie benutzerdefinierte Konfigurationen vor und nach dem Laden des CRS anwenden k\u00f6nnen (weitere Informationen hier).</p>"},{"location":"de/troubleshooting/#schlechtes-verhalten","title":"Schlechtes Verhalten","text":"<p>Ein h\u00e4ufiger Fall von Falschmeldungen ist, wenn der Client aufgrund der Funktion \"schlechtes Verhalten\" gesperrt wird, was bedeutet, dass innerhalb eines Zeitraums zu viele verd\u00e4chtige HTTP-Statuscodes generiert wurden (weitere Informationen hier). Sie sollten damit beginnen, die Einstellungen zu \u00fcberpr\u00fcfen und sie dann entsprechend Ihrer Webanwendung(en) zu bearbeiten, z. B. einen verd\u00e4chtigen HTTP-Code entfernen, die Z\u00e4hlzeit verringern, den Schwellenwert erh\u00f6hen usw.</p>"},{"location":"de/troubleshooting/#whitelisting","title":"Whitelisting","text":"<p>Wenn Sie Bots (oder Administratoren) haben, die auf Ihre Website zugreifen m\u00fcssen, ist die empfohlene Vorgehensweise, um Falschmeldungen zu vermeiden, sie mit der Whitelisting-Funktion auf die Whitelist zu setzen. Wir empfehlen nicht, die Einstellungen <code>WHITELIST_URI*</code> oder <code>WHITELIST_USER_AGENT*</code> zu verwenden, es sei denn, sie sind auf geheime und unvorhersehbare Werte gesetzt. G\u00e4ngige Anwendungsf\u00e4lle sind:</p> <ul> <li>Healthcheck / Status-Bot</li> <li>Callback wie IPN oder Webhook</li> <li>Social-Media-Crawler</li> </ul>"},{"location":"de/troubleshooting/#haufige-fehler","title":"H\u00e4ufige Fehler","text":""},{"location":"de/troubleshooting/#upstream-hat-zu-groen-header-gesendet","title":"Upstream hat zu gro\u00dfen Header gesendet","text":"<p>Wenn Sie den Fehler <code>upstream sent too big header while reading response header from upstream</code> in den Protokollen sehen, m\u00fcssen Sie die verschiedenen Proxy-Puffergr\u00f6\u00dfen mit den folgenden Einstellungen anpassen:</p> <ul> <li><code>PROXY_BUFFERS</code></li> <li><code>PROXY_BUFFER_SIZE</code></li> <li><code>PROXY_BUSY_BUFFERS_SIZE</code></li> </ul>"},{"location":"de/troubleshooting/#konnte-server_names_hash-nicht-erstellen","title":"Konnte server_names_hash nicht erstellen","text":"<p>Wenn Sie den Fehler <code>could not build server_names_hash, you should increase server_names_hash_bucket_size</code> in den Protokollen sehen, m\u00fcssen Sie die Einstellung <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> anpassen.</p>"},{"location":"de/troubleshooting/#zeitzone","title":"Zeitzone","text":"<p>Bei Verwendung von containerbasierten Integrationen kann die Zeitzone des Containers von der des Host-Rechners abweichen. Um dies zu beheben, k\u00f6nnen Sie die Umgebungsvariable <code>TZ</code> auf die Zeitzone Ihrer Wahl in Ihren Containern setzen (z. B. <code>TZ=Europe/Paris</code>). Eine Liste der Zeitzonen-Identifikatoren finden Sie hier.</p>"},{"location":"de/troubleshooting/#web-ui","title":"Web-UI","text":"<p>Falls Sie Ihre UI-Anmeldeinformationen vergessen haben oder Probleme mit 2FA haben, k\u00f6nnen Sie sich mit der Datenbank verbinden, um wieder Zugriff zu erhalten.</p>"},{"location":"de/troubleshooting/#auf-die-datenbank-zugreifen","title":"Auf die Datenbank zugreifen","text":"SQLiteMariaDB / MySQLPostgreSQL LinuxDockerAll-in-one <p>Installieren Sie SQLite (Debian/Ubuntu):</p> <pre><code>sudo apt install sqlite3\n</code></pre> <p>Installieren Sie SQLite (Fedora/RedHat):</p> <pre><code>sudo dnf install sqlite\n</code></pre> <p>Holen Sie sich eine Shell in Ihren Scheduler-Container:</p> <p>Docker-Argumente</p> <ul> <li>die Option <code>-u 0</code> ist, um den Befehl als Root auszuf\u00fchren (obligatorisch)</li> <li>die Optionen <code>-it</code> sind, um den Befehl interaktiv auszuf\u00fchren (obligatorisch)</li> <li><code>&lt;bunkerweb_scheduler_container&gt;</code>: der Name oder die ID Ihres Scheduler-Containers</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_scheduler_container&gt; bash\n</code></pre> <p>Installieren Sie SQLite:</p> <pre><code>apk add sqlite\n</code></pre> <p>Holen Sie sich eine Shell in Ihren All-in-one-Container:</p> <p>Docker-Argumente</p> <ul> <li>die Option <code>-u 0</code> ist, um den Befehl als Root auszuf\u00fchren (obligatorisch).</li> <li>die Optionen <code>-it</code> sind, um den Befehl interaktiv auszuf\u00fchren (obligatorisch).</li> <li><code>bunkerweb-aio</code> ist der Standard-Container-Name; passen Sie ihn an, wenn Sie einen benutzerdefinierten Namen verwendet haben.</li> </ul> <pre><code>docker exec -u 0 -it bunkerweb-aio bash\n</code></pre> <p>Greifen Sie auf Ihre Datenbank zu:</p> <p>Datenbankpfad</p> <p>Wir gehen davon aus, dass Sie den Standard-Datenbankpfad verwenden. Wenn Sie einen benutzerdefinierten Pfad verwenden, m\u00fcssen Sie den Befehl anpassen. F\u00fcr All-in-one gehen wir davon aus, dass die Datenbank <code>db.sqlite3</code> im persistenten <code>/data</code>-Volume (<code>/data/db.sqlite3</code>) liegt.</p> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <p>Sie sollten etwas \u00c4hnliches wie das Folgende sehen:</p> <pre><code>SQLite version &lt;VER&gt; &lt;DATE&gt;\nEnter \".help\" for usage hints.\nsqlite&gt;\n</code></pre> <p>Nur MariaDB / MySQL</p> <p>Die folgenden Schritte sind nur f\u00fcr MariaDB / MySQL-Datenbanken g\u00fcltig. Wenn Sie eine andere Datenbank verwenden, lesen Sie bitte die Dokumentation Ihrer Datenbank.</p> <p>Anmeldeinformationen und Datenbankname</p> <p>Sie m\u00fcssen dieselben Anmeldeinformationen und denselben Datenbanknamen verwenden, die in der Einstellung <code>DATABASE_URI</code> verwendet werden.</p> LinuxDockerAll-in-one <p>Greifen Sie auf Ihre lokale Datenbank zu:</p> <pre><code>mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Geben Sie dann das Passwort des Datenbankbenutzers ein, und Sie sollten auf Ihre Datenbank zugreifen k\u00f6nnen.</p> <p>Greifen Sie auf Ihren Datenbankcontainer zu:</p> <p>Docker-Argumente</p> <ul> <li>die Option <code>-u 0</code> ist, um den Befehl als Root auszuf\u00fchren (obligatorisch)</li> <li>die Optionen <code>-it</code> sind, um den Befehl interaktiv auszuf\u00fchren (obligatorisch)</li> <li><code>&lt;bunkerweb_db_container&gt;</code>: der Name oder die ID Ihres Datenbankcontainers</li> <li><code>&lt;user&gt;</code>: der Datenbankbenutzer</li> <li><code>&lt;database&gt;</code>: der Datenbankname</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Geben Sie dann das Passwort des Datenbankbenutzers ein, und Sie sollten auf Ihre Datenbank zugreifen k\u00f6nnen.</p> <p>Das All-in-One-Image enth\u00e4lt keinen MariaDB/MySQL-Server. Wenn Sie das AIO so konfiguriert haben, dass es eine externe MariaDB/MySQL-Datenbank verwendet (indem Sie die Umgebungsvariable <code>DATABASE_URI</code> setzen), sollten Sie sich direkt mit dieser Datenbank mit Standard-MySQL-Client-Tools verbinden.</p> <p>Die Verbindungsmethode w\u00e4re \u00e4hnlich wie im Tab \"Linux\" (wenn Sie sich vom Host verbinden, auf dem AIO l\u00e4uft, oder von einem anderen Rechner) oder indem Sie einen MySQL-Client in einem separaten Docker-Container ausf\u00fchren, der auf den Host und die Anmeldeinformationen Ihrer externen Datenbank abzielt.</p> <p>Nur PostgreSQL</p> <p>Die folgenden Schritte sind nur f\u00fcr PostgreSQL-Datenbanken g\u00fcltig. Wenn Sie eine andere Datenbank verwenden, lesen Sie bitte die Dokumentation Ihrer Datenbank.</p> <p>Anmeldeinformationen, Host und Datenbankname</p> <p>Sie m\u00fcssen dieselben Anmeldeinformationen (Benutzer/Passwort), denselben Host und denselben Datenbanknamen verwenden, die in der Einstellung <code>DATABASE_URI</code> verwendet werden.</p> LinuxDockerAll-in-one <p>Greifen Sie auf Ihre lokale Datenbank zu:</p> <pre><code>psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Wenn sich Ihre Datenbank auf einem anderen Host befindet, geben Sie den Hostnamen/die IP und den Port an:</p> <pre><code>psql -h &lt;host&gt; -p 5432 -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Geben Sie dann das Passwort des Datenbankbenutzers ein, und Sie sollten auf Ihre Datenbank zugreifen k\u00f6nnen.</p> <p>Greifen Sie auf Ihren Datenbankcontainer zu:</p> <p>Docker-Argumente</p> <ul> <li>die Option <code>-u 0</code> ist, um den Befehl als Root auszuf\u00fchren (obligatorisch)</li> <li>die Optionen <code>-it</code> sind, um den Befehl interaktiv auszuf\u00fchren (obligatorisch)</li> <li><code>&lt;bunkerweb_db_container&gt;</code>: der Name oder die ID Ihres Datenbankcontainers</li> <li><code>&lt;user&gt;</code>: der Datenbankbenutzer</li> <li><code>&lt;database&gt;</code>: der Datenbankname</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Wenn die Datenbank an anderer Stelle gehostet wird, f\u00fcgen Sie die Optionen <code>-h &lt;host&gt;</code> und <code>-p 5432</code> entsprechend hinzu.</p> <p>Das All-in-One-Image enth\u00e4lt keinen PostgreSQL-Server. Wenn Sie das AIO so konfiguriert haben, dass es eine externe PostgreSQL-Datenbank verwendet (indem Sie die Umgebungsvariable <code>DATABASE_URI</code> setzen), sollten Sie sich direkt mit dieser Datenbank mit Standard-PostgreSQL-Client-Tools verbinden.</p> <p>Die Verbindungsmethode w\u00e4re \u00e4hnlich wie im Tab \"Linux\" (wenn Sie sich vom Host verbinden, auf dem AIO l\u00e4uft, oder von einem anderen Rechner) oder indem Sie einen PostgreSQL-Client in einem separaten Docker-Container ausf\u00fchren, der auf den Host und die Anmeldeinformationen Ihrer externen Datenbank abzielt.</p>"},{"location":"de/troubleshooting/#manahmen-zur-fehlerbehebung","title":"Ma\u00dfnahmen zur Fehlerbehebung","text":"<p>Tabellenschema</p> <p>Das Schema der Tabelle <code>bw_ui_users</code> ist wie folgt:</p> Feld Typ Null Schl\u00fcssel Standard Extra username varchar(256) NO PRI NULL email varchar(256) YES UNI NULL password varchar(60) NO NULL method enum('ui','scheduler','autoconf','manual','wizard') NO NULL admin tinyint(1) NO NULL theme enum('light','dark') NO NULL language varchar(2) NO NULL totp_secret varchar(256) YES NULL creation_date datetime NO NULL update_date datetime NO NULL Benutzernamen abrufenAdmin-Benutzerpasswort aktualisieren2FA-Authentifizierung f\u00fcr Admin-Benutzer deaktivieren2FA-Wiederherstellungscodes aktualisierenKonfiguration und anonymisierte Protokolle exportieren <p>F\u00fchren Sie den folgenden Befehl aus, um Daten aus der Tabelle <code>bw_ui_users</code> zu extrahieren:</p> <pre><code>SELECT * FROM bw_ui_users;\n</code></pre> <p>Sie sollten etwas \u00c4hnliches wie das Folgende sehen:</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>Zuerst m\u00fcssen Sie das neue Passwort mit dem bcrypt-Algorithmus hashen.</p> <p>Installieren Sie die Python-bcrypt-Bibliothek:</p> <pre><code>pip install bcrypt\n</code></pre> <p>Generieren Sie Ihren Hash (ersetzen Sie <code>meinpasswort</code> durch Ihr eigenes Passwort):</p> <pre><code>python3 -c 'from bcrypt import hashpw, gensalt ; print(hashpw(b\"\"\"meinpasswort\"\"\", gensalt(rounds=10)).decode(\"utf-8\"))'\n</code></pre> <p>Sie k\u00f6nnen Ihren Benutzernamen / Ihr Passwort aktualisieren, indem Sie diesen Befehl ausf\u00fchren:</p> <pre><code>UPDATE bw_ui_users SET password = '&lt;password_hash&gt;' WHERE admin = 1;\n</code></pre> <p>Wenn Sie Ihre Tabelle <code>bw_ui_users</code> nach diesem Befehl erneut \u00fcberpr\u00fcfen:</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>Sie sollten etwas \u00c4hnliches wie das Folgende sehen:</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>Sie sollten nun in der Lage sein, die neuen Anmeldeinformationen zu verwenden, um sich in der Web-UI anzumelden.</p> <p>Sie k\u00f6nnen 2FA deaktivieren, indem Sie diesen Befehl ausf\u00fchren:</p> <pre><code>UPDATE bw_ui_users SET totp_secret = NULL WHERE admin = 1;\n</code></pre> <p>Wenn Sie Ihre Tabelle <code>bw_ui_users</code> nach diesem Befehl erneut \u00fcberpr\u00fcfen:</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>Sie sollten etwas \u00c4hnliches wie das Folgende sehen:</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light NULL *** *** <p>Sie sollten sich nun nur mit Ihrem Benutzernamen und Passwort ohne 2FA in der Web-UI anmelden k\u00f6nnen.</p> <p>Die Wiederherstellungscodes k\u00f6nnen auf Ihrer Profilseite der Web-UI unter dem Tab <code>Sicherheit</code> aktualisiert werden.</p> <p>Verwenden Sie die Support-Seite in der Web-UI, um schnell Konfigurationen und Protokolle zur Fehlerbehebung zu sammeln.</p> <ul> <li>\u00d6ffnen Sie die Web-UI und gehen Sie zur Support-Seite.</li> <li>W\u00e4hlen Sie den Geltungsbereich: Exportieren Sie die globale Konfiguration oder w\u00e4hlen Sie einen bestimmten Dienst aus.</li> <li>Klicken Sie, um das Konfigurationsarchiv f\u00fcr den ausgew\u00e4hlten Geltungsbereich herunterzuladen.</li> <li>Laden Sie optional Protokolle herunter: Die exportierten Protokolle werden automatisch anonymisiert (alle IP-Adressen und Domains werden maskiert).</li> </ul>"},{"location":"de/troubleshooting/#plugin-hochladen","title":"Plugin hochladen","text":"<p>Es ist m\u00f6glicherweise nicht m\u00f6glich, ein Plugin in bestimmten Situationen von der Benutzeroberfl\u00e4che hochzuladen:</p> <ul> <li>Fehlendes Paket zur Verwaltung komprimierter Dateien in Ihrer Integration, in diesem Fall m\u00fcssen Sie die erforderlichen Pakete hinzuf\u00fcgen</li> <li>Safari-Browser: Der \"Sicherheitsmodus\" kann Sie daran hindern, ein Plugin hinzuzuf\u00fcgen. Sie m\u00fcssen die erforderlichen \u00c4nderungen auf Ihrem Computer vornehmen</li> </ul>"},{"location":"de/upgrading/","title":"Aufr\u00fcsten","text":""},{"location":"de/upgrading/#upgrade-von-16x","title":"Upgrade von 1.6.X","text":""},{"location":"de/upgrading/#vorgehensweise","title":"Vorgehensweise","text":""},{"location":"de/upgrading/#docker","title":"Docker","text":"<ol> <li> <p>Sichern Sie die Datenbank:</p> <ul> <li>Bevor Sie mit dem Datenbank-Upgrade fortfahren, stellen Sie sicher, dass Sie eine vollst\u00e4ndige Sicherung des aktuellen Zustands der Datenbank durchf\u00fchren.</li> <li>Verwenden Sie geeignete Werkzeuge, um die gesamte Datenbank zu sichern, einschlie\u00dflich Daten, Schemata und Konfigurationen.</li> </ul> <pre><code>docker exec -it -e BACKUP_DIRECTORY=/pfad/zum/sicherungsverzeichnis &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/pfad/zum/sicherungsverzeichnis /pfad/zum/sicherungsverzeichnis\n</code></pre> </li> <li> <p>Aktualisieren Sie BunkerWeb:</p> <ul> <li> <p>Aktualisieren Sie BunkerWeb auf die neueste Version.</p> <ol> <li> <p>Aktualisieren Sie die Docker Compose-Datei: Aktualisieren Sie die Docker Compose-Datei, um die neue Version des BunkerWeb-Images zu verwenden.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Starten Sie die Container neu: Starten Sie die Container neu, um die \u00c4nderungen zu \u00fcbernehmen.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>\u00dcberpr\u00fcfen Sie die Protokolle: \u00dcberpr\u00fcfen Sie die Protokolle des Scheduler-Dienstes, um sicherzustellen, dass die Migration erfolgreich war.</p> <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> </li> <li> <p>\u00dcberpr\u00fcfen Sie die Datenbank: \u00dcberpr\u00fcfen Sie, ob das Datenbank-Upgrade erfolgreich war, indem Sie die Daten und Konfigurationen im neuen Datenbankcontainer \u00fcberpr\u00fcfen.</p> </li> </ol>"},{"location":"de/upgrading/#linux","title":"Linux","text":"Einfaches Upgrade mit dem InstallationsskriptManuell <ul> <li> <p>Schnellstart:</p> <p>Um zu beginnen, laden Sie das Installationsskript und seine Pr\u00fcfsumme herunter und \u00fcberpr\u00fcfen Sie dann die Integrit\u00e4t des Skripts, bevor Sie es ausf\u00fchren.</p> <pre><code>LATEST_VERSION=$(curl -s https://api.github.com/repos/bunkerity/bunkerweb/releases/latest | jq -r .tag_name)\n\n# Skript und Pr\u00fcfsumme herunterladen\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh.sha256\n\n# Pr\u00fcfsumme \u00fcberpr\u00fcfen\nsha256sum -c install-bunkerweb.sh.sha256\n\n# Wenn die \u00dcberpr\u00fcfung erfolgreich ist, Skript ausf\u00fchren\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Sicherheitshinweis</p> <p>\u00dcberpr\u00fcfen Sie immer die Integrit\u00e4t des Installationsskripts, bevor Sie es ausf\u00fchren.</p> <p>Laden Sie die Pr\u00fcfsummendatei herunter und verwenden Sie ein Werkzeug wie <code>sha256sum</code>, um zu best\u00e4tigen, dass das Skript nicht ver\u00e4ndert oder manipuliert wurde.</p> <p>Wenn die \u00dcberpr\u00fcfung der Pr\u00fcfsumme fehlschl\u00e4gt, f\u00fchren Sie das Skript nicht aus \u2013 es k\u00f6nnte unsicher sein.</p> </li> <li> <p>Wie es funktioniert:</p> <p>Das gleiche vielseitige Installationsskript, das f\u00fcr Neuinstallationen verwendet wird, kann auch ein In-Place-Upgrade durchf\u00fchren. Wenn es eine bestehende Installation und eine andere Zielversion erkennt, wechselt es in den Upgrade-Modus und wendet den folgenden Arbeitsablauf an:</p> <ol> <li>Erkennung &amp; Validierung<ul> <li>Erkennt Betriebssystem / Version und best\u00e4tigt die Unterst\u00fctzungsmatrix.</li> <li>Liest die aktuell installierte BunkerWeb-Version aus <code>/usr/share/bunkerweb/VERSION</code>.</li> </ul> </li> <li>Entscheidung \u00fcber das Upgrade-Szenario<ul> <li>Wenn die angeforderte Version der installierten entspricht, wird abgebrochen (es sei denn, Sie f\u00fchren explizit erneut f\u00fcr den Status aus).</li> <li>Wenn sich die Versionen unterscheiden, wird ein Upgrade markiert.</li> </ul> </li> <li>(Optional) Automatisches Pre-Upgrade-Backup<ul> <li>Wenn <code>bwcli</code> und der Scheduler verf\u00fcgbar sind und die automatische Sicherung aktiviert ist, wird eine Sicherung \u00fcber das integrierte Backup-Plugin erstellt.</li> <li>Ziel: entweder das von Ihnen mit <code>--backup-dir</code> angegebene Verzeichnis oder ein generierter Pfad wie <code>/var/tmp/bunkerweb-backup-YYYYmmdd-HHMMSS</code>.</li> <li>Sie k\u00f6nnen dies mit <code>--no-auto-backup</code> deaktivieren (die manuelle Sicherung liegt dann in Ihrer Verantwortung).</li> </ul> </li> <li>Dienste stilllegen<ul> <li>Stoppt <code>bunkerweb</code>, <code>bunkerweb-ui</code> und <code>bunkerweb-scheduler</code>, um ein konsistentes Upgrade zu gew\u00e4hrleisten (entspricht den Empfehlungen f\u00fcr das manuelle Verfahren).</li> </ul> </li> <li>Entfernen von Paketsperren<ul> <li>Entfernt vor\u00fcbergehend <code>apt-mark hold</code> / <code>dnf versionlock</code> f\u00fcr <code>bunkerweb</code> und <code>nginx</code>, damit die Zielversion installiert werden kann.</li> </ul> </li> <li>Upgrade-Ausf\u00fchrung<ul> <li>Installiert nur die neue BunkerWeb-Paketversion (NGINX wird im Upgrade-Modus nicht neu installiert, es sei denn, es fehlt \u2013 dies vermeidet das Ber\u00fchren eines korrekt fixierten NGINX).</li> <li>Wendet Holds/Versionlocks erneut an, um die aktualisierten Versionen einzufrieren.</li> </ul> </li> <li>Abschluss &amp; Status<ul> <li>Zeigt den systemd-Status f\u00fcr Kerndienste und die n\u00e4chsten Schritte an.</li> <li>Ihre Konfiguration und Datenbank bleiben unber\u00fchrt \u2013 nur der Anwendungscode und die verwalteten Dateien werden aktualisiert.</li> </ul> </li> </ol> <p>Wichtige Verhaltensweisen / Hinweise:</p> <ul> <li>Das Skript \u00e4ndert NICHT Ihre <code>/etc/bunkerweb/variables.env</code> oder den Datenbankinhalt.</li> <li>Wenn die automatische Sicherung fehlgeschlagen ist (oder deaktiviert war), k\u00f6nnen Sie immer noch eine manuelle Wiederherstellung mit dem Rollback-Abschnitt unten durchf\u00fchren.</li> <li>Der Upgrade-Modus vermeidet absichtlich die Neuinstallation oder das Downgrade von NGINX au\u00dferhalb der unterst\u00fctzten fixierten Version, die bereits vorhanden ist.</li> <li>Protokolle zur Fehlerbehebung bleiben in <code>/var/log/bunkerweb/</code>.</li> </ul> <p>Zusammenfassung des Rollbacks:</p> <ul> <li>Verwenden Sie das generierte Sicherungsverzeichnis (oder Ihre manuelle Sicherung) + die Schritte im Rollback-Abschnitt, um die DB wiederherzustellen, installieren Sie dann die vorherige Image-/Paketversion neu und sperren Sie die Pakete erneut.</li> </ul> </li> <li> <p>Befehlszeilenoptionen:</p> <p>Sie k\u00f6nnen unbeaufsichtigte Upgrades mit den gleichen Flags wie bei der Installation steuern. Die relevantesten f\u00fcr Upgrades:</p> Option Zweck <code>-v, --version &lt;X.Y.Z&gt;</code> Ziel-BunkerWeb-Version, auf die aktualisiert werden soll. <code>-y, --yes</code> Nicht-interaktiv (geht von Upgrade-Best\u00e4tigung aus und aktiviert die automatische Sicherung, es sei denn, <code>--no-auto-backup</code>). <code>--backup-dir &lt;PFAD&gt;</code> Ziel f\u00fcr die automatische Pre-Upgrade-Sicherung. Wird erstellt, wenn es fehlt. <code>--no-auto-backup</code> \u00dcberspringt die automatische Sicherung (NICHT empfohlen). Sie m\u00fcssen eine manuelle Sicherung haben. <code>-q, --quiet</code> Unterdr\u00fcckt die Ausgabe (mit Protokollierung / \u00dcberwachung kombinieren). <code>-f, --force</code> F\u00e4hrt mit einer ansonsten nicht unterst\u00fctzten Betriebssystemversion fort. <code>--dry-run</code> Zeigt die erkannte Umgebung, die beabsichtigten Aktionen an und beendet dann, ohne etwas zu \u00e4ndern. <p>Beispiele:</p> <pre><code># Interaktiv auf testing aktualisieren (fragt nach Sicherung)\nsudo ./install-bunkerweb.sh --version testing\n\n# Nicht-interaktives Upgrade mit automatischer Sicherung in ein benutzerdefiniertes Verzeichnis\nsudo ./install-bunkerweb.sh -v testing --backup-dir /var/backups/bw-2025-01 -y\n\n# Stilles unbeaufsichtigtes Upgrade (Protokolle unterdr\u00fcckt) \u2013 verl\u00e4sst sich auf die standardm\u00e4\u00dfige automatische Sicherung\nsudo ./install-bunkerweb.sh -v testing -y -q\n\n# Einen Probelauf (Plan) durchf\u00fchren, ohne \u00c4nderungen anzuwenden\nsudo ./install-bunkerweb.sh -v testing --dry-run\n\n# Upgrade unter \u00dcberspringen der automatischen Sicherung (NICHT empfohlen)\nsudo ./install-bunkerweb.sh -v testing --no-auto-backup -y\n</code></pre> <p>\u00dcberspringen von Sicherungen</p> <p>Die Verwendung von <code>--no-auto-backup</code> ohne eine verifizierte manuelle Sicherung kann zu irreversiblem Datenverlust f\u00fchren, wenn beim Upgrade Probleme auftreten. Halten Sie immer mindestens eine aktuelle, getestete Sicherung bereit.</p> </li> </ul> <ol> <li> <p>Sichern Sie die Datenbank:</p> <ul> <li>Bevor Sie mit dem Datenbank-Upgrade fortfahren, stellen Sie sicher, dass Sie eine vollst\u00e4ndige Sicherung des aktuellen Zustands der Datenbank durchf\u00fchren.</li> <li>Verwenden Sie geeignete Werkzeuge, um die gesamte Datenbank zu sichern, einschlie\u00dflich Daten, Schemata und Konfigurationen.</li> </ul> Informationen f\u00fcr Benutzer von Red Hat Enterprise Linux (RHEL) 8.10 <p>Wenn Sie RHEL 8.10 verwenden und eine externe Datenbank nutzen m\u00f6chten, m\u00fcssen Sie das Paket <code>mysql-community-client</code> installieren, um sicherzustellen, dass der Befehl <code>mysqldump</code> verf\u00fcgbar ist. Sie k\u00f6nnen das Paket mit den folgenden Befehlen installieren:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Installieren Sie das MySQL-Repository-Konfigurationspaket</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Aktivieren Sie das MySQL-Repository</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Installieren Sie den MySQL-Client</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Installieren Sie das PostgreSQL-Repository-Konfigurationspaket</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Installieren Sie den PostgreSQL-Client</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/pfad/zum/sicherungsverzeichnis bwcli plugin backup save\n</code></pre> </li> <li> <p>Aktualisieren Sie BunkerWeb:</p> <ul> <li> <p>Aktualisieren Sie BunkerWeb auf die neueste Version.</p> <ol> <li> <p>Stoppen Sie die Dienste:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Aktualisieren Sie BunkerWeb:</p> Debian/UbuntuFedora/RedHat <p>Wenn Sie das BunkerWeb-Paket zuvor gehalten haben, heben Sie die Sperre auf:</p> <p>Sie k\u00f6nnen eine Liste der gehaltenen Pakete mit <code>apt-mark showhold</code> anzeigen</p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Dann k\u00f6nnen Sie das BunkerWeb-Paket aktualisieren:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Um zu verhindern, dass das BunkerWeb-Paket bei der Ausf\u00fchrung von <code>apt upgrade</code> aktualisiert wird, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>Weitere Details auf der Seite Integration Linux.</p> <p>Wenn Sie das BunkerWeb-Paket zuvor gehalten haben, heben Sie die Sperre auf:</p> <p>Sie k\u00f6nnen eine Liste der gehaltenen Pakete mit <code>dnf versionlock list</code> anzeigen</p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Dann k\u00f6nnen Sie das BunkerWeb-Paket aktualisieren:</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Um zu verhindern, dass das BunkerWeb-Paket bei der Ausf\u00fchrung von <code>dnf upgrade</code> aktualisiert wird, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>Weitere Details auf der Seite Integration Linux.</p> </li> <li> <p>Starten Sie die Dienste:         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         Oder starten Sie das System neu:         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>\u00dcberpr\u00fcfen Sie die Protokolle: \u00dcberpr\u00fcfen Sie die Protokolle des Scheduler-Dienstes, um sicherzustellen, dass die Migration erfolgreich war.</p> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>\u00dcberpr\u00fcfen Sie die Datenbank: \u00dcberpr\u00fcfen Sie, ob das Datenbank-Upgrade erfolgreich war, indem Sie die Daten und Konfigurationen im neuen Datenbankcontainer \u00fcberpr\u00fcfen.</p> </li> </ol>"},{"location":"de/upgrading/#rollback","title":"Rollback","text":"<p>Bei Problemen</p> <p>Wenn w\u00e4hrend des Upgrades Probleme auftreten, k\u00f6nnen Sie auf die vorherige Version der Datenbank zur\u00fcckgreifen, indem Sie die in Schritt 1 erstellte Sicherung wiederherstellen.</p> <p>Holen Sie sich Unterst\u00fctzung und weitere Informationen:</p> <ul> <li>Professionellen Support bestellen</li> <li>Ein Issue auf GitHub erstellen</li> <li>Treten Sie dem BunkerWeb Discord-Server bei</li> </ul> DockerLinux <ol> <li> <p>Entpacken Sie die Sicherung, falls sie gezippt ist.</p> <p>Entpacken Sie zuerst die Sicherungs-Zip-Datei:</p> <pre><code>unzip /pfad/zum/sicherungsverzeichnis/backup.zip -d /pfad/zum/sicherungsverzeichnis/\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Entfernen Sie die vorhandene Datenbankdatei.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Korrigieren Sie die Berechtigungen.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Stoppen Sie den Stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;ihr_passwort&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Stoppen Sie den Stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Entfernen Sie die vorhandene Datenbank.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Erstellen Sie die Datenbank neu.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Stoppen Sie den Stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>Downgrade von BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;alte_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;alte_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;alte_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;alte_version&gt;\n        ...\n</code></pre> </li> <li> <p>Starten Sie die Container.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Entpacken Sie die Sicherung, falls sie gezippt ist.</p> <p>Entpacken Sie zuerst die Sicherungs-Zip-Datei:</p> <pre><code>unzip /pfad/zum/sicherungsverzeichnis/backup.zip -d /pfad/zum/sicherungsverzeichnis/\n</code></pre> </li> <li> <p>Stoppen Sie die Dienste.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> <ol> <li> <p>Entfernen Sie die vorhandene Datenbank.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Erstellen Sie die Datenbank neu.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>Starten Sie die Dienste.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Downgrade von BunkerWeb.</p> <ul> <li>F\u00fchren Sie ein Downgrade von BunkerWeb auf die vorherige Version durch, indem Sie die gleichen Schritte wie beim Upgrade von BunkerWeb auf der Seite Integration Linux befolgen.</li> </ul> </li> </ol>"},{"location":"de/upgrading/#upgrade-von-15x","title":"Upgrade von 1.5.X","text":""},{"location":"de/upgrading/#was-hat-sich-geandert","title":"Was hat sich ge\u00e4ndert?","text":""},{"location":"de/upgrading/#scheduler","title":"Scheduler","text":"<p>Im Gegensatz zu den 1.5.X-Versionen verwendet der Scheduler-Dienst nicht mehr den Docker-Socket-Proxy, um BunkerWeb-Instanzen abzurufen. Stattdessen verwendet er die neue Umgebungsvariable <code>BUNKERWEB_INSTANCES</code>.</p> <p>\u00dcber die Umgebungsvariable <code>BUNKERWEB_INSTANCES</code></p> <p>Diese neue Variable ist eine durch Leerzeichen getrennte Liste von BunkerWeb-Instanzen in diesem Format: <code>http://bunkerweb:5000 bunkerweb1:5000 bunkerweb2:5000 ...</code>. Der Scheduler verwendet dann diese Liste, um die Konfiguration der Instanzen abzurufen und die Konfiguration an sie zu senden.</p> <ul> <li>Der Pr\u00e4fix <code>http://</code> ist optional.</li> <li>Der Port ist optional und standardm\u00e4\u00dfig der Wert der Umgebungsvariable <code>API_HTTP_PORT</code>.</li> <li>Der Standardwert der Umgebungsvariable <code>BUNKERWEB_INSTANCES</code> ist <code>127.0.0.1</code>.</li> </ul> <p>Mit anderen Worten, das neue System ist vollst\u00e4ndig agnostisch und generisch: Der Scheduler ist f\u00fcr die Verwaltung einer Liste von BunkerWeb-Instanzen zust\u00e4ndig und muss sich nicht um die Umgebung k\u00fcmmern.</p> <p>Autoconf/Kubernetes/Swarm-Integrationen</p> <p>Wenn Sie die Integrationen <code>Autoconf</code>, <code>Kubernetes</code> oder <code>Swarm</code> verwenden, k\u00f6nnen Sie die Umgebungsvariable <code>BUNKERWEB_INSTANCES</code> auf eine leere Zeichenfolge setzen (damit nicht versucht wird, die Konfiguration an die Standardinstanz <code>127.0.0.1</code> zu senden).</p> <p>Die Instanzen werden automatisch vom Controller abgerufen. Sie k\u00f6nnen auch benutzerdefinierte Instanzen zur Liste hinzuf\u00fcgen, die m\u00f6glicherweise nicht vom Controller erfasst werden.</p> <p>Seit <code>1.6</code> verf\u00fcgt der Scheduler auch \u00fcber ein neues integriertes System zur Zustandspr\u00fcfung, das den Zustand der Instanzen \u00fcberpr\u00fcft. Wenn eine Instanz ungesund wird, sendet der Scheduler die Konfiguration nicht mehr an sie. Wenn die Instanz wieder gesund wird, beginnt der Scheduler wieder, die Konfiguration an sie zu senden.</p>"},{"location":"de/upgrading/#bunkerweb-container","title":"BunkerWeb-Container","text":"<p>Eine weitere wichtige \u00c4nderung ist, dass die Einstellungen, die zuvor im BunkerWeb-Container deklariert wurden, jetzt im Scheduler deklariert werden. Das bedeutet, dass Sie Ihre Einstellungen vom BunkerWeb-Container in den Scheduler-Container verschieben m\u00fcssen.</p> <p>Obwohl die Einstellungen jetzt im Scheduler-Container deklariert werden, m\u00fcssen Sie immer noch API-bezogene obligatorische Einstellungen im BunkerWeb-Container deklarieren, wie die Einstellung <code>API_WHITELIST_IP</code>, die verwendet wird, um die IP-Adresse des Schedulers auf die Whitelist zu setzen, damit er die Konfiguration an die Instanz senden kann. Wenn Sie <code>API_TOKEN</code> verwenden, m\u00fcssen Sie es auch im BunkerWeb-Container setzen (und im Scheduler spiegeln), um authentifizierte API-Aufrufe zu erm\u00f6glichen.</p> <p>Einstellungen des BunkerWeb-Containers</p> <p>Jede API-bezogene Einstellung, die Sie im BunkerWeb-Container deklarieren, muss im Scheduler-Container gespiegelt werden, damit sie weiterhin funktioniert, da die Konfiguration durch die vom Scheduler generierte Konfiguration \u00fcberschrieben wird.</p>"},{"location":"de/upgrading/#standardwerte-und-neue-einstellungen","title":"Standardwerte und neue Einstellungen","text":"<p>Wir haben unser Bestes getan, um die Standardwerte nicht zu \u00e4ndern, aber wir haben viele andere Einstellungen hinzugef\u00fcgt. Es wird dringend empfohlen, die Abschnitte Sicherheits-Tuning und Einstellungen der Dokumentation zu lesen.</p>"},{"location":"de/upgrading/#vorlagen","title":"Vorlagen","text":"<p>Wir haben eine neue Funktion namens Vorlagen hinzugef\u00fcgt. Vorlagen bieten einen strukturierten und standardisierten Ansatz zur Definition von Einstellungen und benutzerdefinierten Konfigurationen. Weitere Informationen finden Sie im Abschnitt Konzepte/Vorlagen.</p>"},{"location":"de/upgrading/#autoconf-namespaces","title":"Autoconf-Namespaces","text":"<p>Wir haben eine Namespace-Funktion zu den Autoconf-Integrationen hinzugef\u00fcgt. Mit Namespaces k\u00f6nnen Sie Ihre Instanzen gruppieren und Einstellungen nur auf sie anwenden. Weitere Informationen finden Sie in den folgenden Abschnitten entsprechend Ihrer Integration:</p> <ul> <li>Autoconf/Namespaces</li> <li>Kubernetes/Namespaces</li> <li>Swarm/Namespaces</li> </ul>"},{"location":"de/upgrading/#vorgehensweise_1","title":"Vorgehensweise","text":"<ol> <li> <p>Sichern Sie die Datenbank:</p> <ul> <li>Bevor Sie mit dem Datenbank-Upgrade fortfahren, stellen Sie sicher, dass Sie eine vollst\u00e4ndige Sicherung des aktuellen Zustands der Datenbank durchf\u00fchren.</li> <li>Verwenden Sie geeignete Werkzeuge, um die gesamte Datenbank zu sichern, einschlie\u00dflich Daten, Schemata und Konfigurationen.</li> </ul> 1.5.7 und sp\u00e4ter1.5.6 und fr\u00fcher DockerLinux <pre><code>docker exec -it -e BACKUP_DIRECTORY=/pfad/zum/sicherungsverzeichnis &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/pfad/zum/sicherungsverzeichnis /pfad/zum/sicherungsverzeichnis\n</code></pre> Informationen f\u00fcr Benutzer von Red Hat Enterprise Linux (RHEL) 8.10 <p>Wenn Sie RHEL 8.10 verwenden und eine externe Datenbank nutzen m\u00f6chten, m\u00fcssen Sie das Paket <code>mysql-community-client</code> installieren, um sicherzustellen, dass der Befehl <code>mysqldump</code> verf\u00fcgbar ist. Sie k\u00f6nnen das Paket mit den folgenden Befehlen installieren:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Installieren Sie das MySQL-Repository-Konfigurationspaket</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Aktivieren Sie das MySQL-Repository</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Installieren Sie den MySQL-Client</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Installieren Sie das PostgreSQL-Repository-Konfigurationspaket</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Installieren Sie den PostgreSQL-Client</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/pfad/zum/sicherungsverzeichnis bwcli plugin backup save\n</code></pre> SQLiteMariaDBMySQLPostgreSQL DockerLinux <p>Zuerst m\u00fcssen wir das <code>sqlite</code>-Paket im Container installieren.</p> <pre><code>docker exec -u 0 -it &lt;scheduler_container&gt; apk add sqlite\n</code></pre> <p>Dann sichern Sie die Datenbank.</p> <pre><code>docker exec -it &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e PGPASSWORD=&lt;database_password&gt; &lt;database_container&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> <pre><code>PGPASSWORD=&lt;database_password&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Aktualisieren Sie BunkerWeb:</p> <ul> <li> <p>Aktualisieren Sie BunkerWeb auf die neueste Version.</p> DockerLinux <ol> <li> <p>Aktualisieren Sie die Docker Compose-Datei: Aktualisieren Sie die Docker Compose-Datei, um die neue Version des BunkerWeb-Images zu verwenden.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Starten Sie die Container neu: Starten Sie die Container neu, um die \u00c4nderungen zu \u00fcbernehmen.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> <ol> <li> <p>Stoppen Sie die Dienste:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Aktualisieren Sie BunkerWeb:</p> Debian/UbuntuFedora/RedHat <p>Wenn Sie das BunkerWeb-Paket zuvor gehalten haben, heben Sie die Sperre auf:</p> <p>Sie k\u00f6nnen eine Liste der gehaltenen Pakete mit <code>apt-mark showhold</code> anzeigen</p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Dann k\u00f6nnen Sie das BunkerWeb-Paket aktualisieren:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Um zu verhindern, dass das BunkerWeb-Paket bei der Ausf\u00fchrung von <code>apt upgrade</code> aktualisiert wird, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>Weitere Details auf der Seite Integration Linux.</p> <p>Wenn Sie das BunkerWeb-Paket zuvor gehalten haben, heben Sie die Sperre auf:</p> <p>Sie k\u00f6nnen eine Liste der gehaltenen Pakete mit <code>dnf versionlock list</code> anzeigen</p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Dann k\u00f6nnen Sie das BunkerWeb-Paket aktualisieren:</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Um zu verhindern, dass das BunkerWeb-Paket bei der Ausf\u00fchrung von <code>dnf upgrade</code> aktualisiert wird, k\u00f6nnen Sie den folgenden Befehl verwenden:</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>Weitere Details auf der Seite Integration Linux.</p> </li> <li> <p>Starten Sie die Dienste:         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         Oder starten Sie das System neu:         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>\u00dcberpr\u00fcfen Sie die Protokolle: \u00dcberpr\u00fcfen Sie die Protokolle des Scheduler-Dienstes, um sicherzustellen, dass die Migration erfolgreich war.</p> DockerLinux <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>\u00dcberpr\u00fcfen Sie die Datenbank: \u00dcberpr\u00fcfen Sie, ob das Datenbank-Upgrade erfolgreich war, indem Sie die Daten und Konfigurationen im neuen Datenbankcontainer \u00fcberpr\u00fcfen.</p> </li> </ol>"},{"location":"de/upgrading/#rollback_1","title":"Rollback","text":"<p>Bei Problemen</p> <p>Wenn w\u00e4hrend des Upgrades Probleme auftreten, k\u00f6nnen Sie auf die vorherige Version der Datenbank zur\u00fcckgreifen, indem Sie die in Schritt 1 erstellte Sicherung wiederherstellen.</p> <p>Holen Sie sich Unterst\u00fctzung und weitere Informationen:</p> <ul> <li>Professionellen Support bestellen</li> <li>Ein Issue auf GitHub erstellen</li> <li>Treten Sie dem BunkerWeb Discord-Server bei</li> </ul> DockerLinux <ol> <li> <p>Entpacken Sie die Sicherung, falls sie gezippt ist.</p> <p>Entpacken Sie zuerst die Sicherungs-Zip-Datei:</p> <pre><code>unzip /pfad/zum/sicherungsverzeichnis/backup.zip -d /pfad/zum/sicherungsverzeichnis/\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Entfernen Sie die vorhandene Datenbankdatei.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Korrigieren Sie die Berechtigungen.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Stoppen Sie den Stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;ihr_passwort&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Stoppen Sie den Stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Entfernen Sie die vorhandene Datenbank.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Erstellen Sie die Datenbank neu.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> <li> <p>Stoppen Sie den Stack.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>Downgrade von BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;alte_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;alte_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;alte_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;alte_version&gt;\n        ...\n</code></pre> </li> <li> <p>Starten Sie die Container.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Entpacken Sie die Sicherung, falls sie gezippt ist.</p> <p>Entpacken Sie zuerst die Sicherungs-Zip-Datei:</p> <pre><code>unzip /pfad/zum/sicherungsverzeichnis/backup.zip -d /pfad/zum/sicherungsverzeichnis/\n</code></pre> </li> <li> <p>Stoppen Sie die Dienste.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> <ol> <li> <p>Entfernen Sie die vorhandene Datenbank.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Erstellen Sie die Datenbank neu.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Stellen Sie die Sicherung wieder her.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /pfad/zum/sicherungsverzeichnis/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>Starten Sie die Dienste.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Downgrade von BunkerWeb.</p> <ul> <li>F\u00fchren Sie ein Downgrade von BunkerWeb auf die vorherige Version durch, indem Sie die gleichen Schritte wie beim Upgrade von BunkerWeb auf der Seite Integration Linux befolgen.</li> </ul> </li> </ol>"},{"location":"de/web-ui/","title":"Web-UI","text":""},{"location":"de/web-ui/#ubersicht","title":"\u00dcbersicht","text":"<p>Die \"Web-UI\" ist eine Webanwendung, die Ihnen hilft, Ihre BunkerWeb-Instanz \u00fcber eine benutzerfreundliche Oberfl\u00e4che zu verwalten, anstatt sich ausschlie\u00dflich auf die Befehlszeile zu verlassen.</p> <p>Hier ist eine Liste der von der Web-UI angebotenen Funktionen:</p> <ul> <li>Einen umfassenden \u00dcberblick \u00fcber blockierte Angriffe erhalten</li> <li>Ihre BunkerWeb-Instanz starten, stoppen, neu starten und neu laden</li> <li>Einstellungen f\u00fcr Ihre Webanwendungen hinzuf\u00fcgen, bearbeiten und l\u00f6schen</li> <li>Benutzerdefinierte Konfigurationen f\u00fcr NGINX und ModSecurity hinzuf\u00fcgen, bearbeiten und l\u00f6schen</li> <li>Externe Plugins installieren und deinstallieren</li> <li>Zwischengespeicherte Dateien erkunden</li> <li>Die Ausf\u00fchrung von Jobs \u00fcberwachen und bei Bedarf neu starten</li> <li>Protokolle anzeigen und nach Mustern suchen</li> </ul>"},{"location":"de/web-ui/#voraussetzungen","title":"Voraussetzungen","text":"<p>Da die Web-UI eine Webanwendung ist, besteht die empfohlene Architektur darin, BunkerWeb als Reverse-Proxy davor zu betreiben. Das empfohlene Installationsverfahren ist die Verwendung des Einrichtungsassistenten, der Sie Schritt f\u00fcr Schritt f\u00fchrt, wie im Schnellstart-Leitfaden beschrieben.</p> <p>Sicherheitsaspekte</p> <p>Die Sicherheit der Web-UI ist \u00e4u\u00dferst wichtig. Wenn eine unbefugte Person Zugriff auf die Anwendung erh\u00e4lt, kann sie nicht nur Ihre Konfigurationen bearbeiten, sondern m\u00f6glicherweise auch Code im Kontext von BunkerWeb ausf\u00fchren (z. B. \u00fcber eine benutzerdefinierte Konfiguration mit LUA-Code). Wir empfehlen dringend, dass Sie minimale Sicherheits-Best Practices befolgen, wie z. B.:</p> <ul> <li>W\u00e4hlen Sie ein starkes Passwort f\u00fcr die Anmeldung (mindestens 8 Zeichen, einschlie\u00dflich 1 Kleinbuchstabe, 1 Gro\u00dfbuchstabe, 1 Ziffer und 1 Sonderzeichen)</li> <li>Platzieren Sie die Web-UI unter einer \"schwer zu erratenden\" URI</li> <li>Aktivieren Sie die Zwei-Faktor-Authentifizierung (2FA)</li> <li>Stellen Sie die Web-UI nicht ohne zus\u00e4tzliche Einschr\u00e4nkungen im Internet zur Verf\u00fcgung</li> <li>Wenden Sie die im Abschnitt Erweiterte Nutzungen der Dokumentation aufgef\u00fchrten Best Practices je nach Ihrem Anwendungsfall an</li> </ul>"},{"location":"de/web-ui/#upgrade-auf-pro","title":"Upgrade auf PRO","text":"<p>Kostenlose Testversion von BunkerWeb PRO</p> <p>M\u00f6chten Sie BunkerWeb PRO einen Monat lang schnell testen? Verwenden Sie den Code <code>freetrial</code> bei Ihrer Bestellung im BunkerWeb-Panel oder klicken Sie hier, um den Promo-Code direkt anzuwenden (wird an der Kasse wirksam).</p> <p>Sobald Sie Ihren PRO-Lizenzschl\u00fcssel vom BunkerWeb-Panel haben, k\u00f6nnen Sie ihn auf der PRO-Seite der Web-UI einf\u00fcgen.</p> <p> </p> Upgrade auf PRO \u00fcber die Web-UI <p>Upgrade-Zeit</p> <p>Die PRO-Version wird im Hintergrund vom Scheduler heruntergeladen, es kann einige Zeit dauern, bis das Upgrade abgeschlossen ist.</p> <p>Wenn Ihre BunkerWeb-Instanz auf die PRO-Version aktualisiert wurde, sehen Sie Ihr Lizenzablaufdatum und die maximale Anzahl der Dienste, die Sie sch\u00fctzen k\u00f6nnen.</p> <p> </p> PRO-Lizenzinformationen"},{"location":"de/web-ui/#zugriff-auf-protokolle","title":"Zugriff auf Protokolle","text":"<p>Ab Version <code>1.6</code> hat sich die Methode zum Zugriff auf Protokolle ge\u00e4ndert. Dieses Update betrifft insbesondere containerbasierte Integrationen: Die Web-UI liest die Protokolldateien nun aus dem Verzeichnis <code>/var/log/bunkerweb</code>.</p> <p>Um die Protokolle \u00fcber die Web-UI zug\u00e4nglich zu halten, empfehlen wir die Verwendung eines Syslog-Servers wie <code>syslog-ng</code>, um die Protokolle zu lesen und die entsprechenden Dateien im Verzeichnis <code>/var/log/bunkerweb</code> zu erstellen.</p> <p>Verwendung eines lokalen Ordners f\u00fcr Protokolle</p> <p>Die Web-UI l\u00e4uft als unprivilegierter Benutzer mit UID 101 und GID 101 im Container aus Sicherheitsgr\u00fcnden: Im Falle einer ausgenutzten Schwachstelle hat der Angreifer keine vollen Root-Rechte (UID/GID 0).</p> <p>Es gibt jedoch einen Nachteil: Wenn Sie einen lokalen Ordner f\u00fcr Protokolle verwenden, m\u00fcssen Sie die richtigen Berechtigungen festlegen, damit der unprivilegierte Benutzer die Protokolldateien lesen kann. Zum Beispiel:</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nchown root:101 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Alternativ, wenn der Ordner bereits existiert:</p> <pre><code>chown -R root:101 bw-logs &amp;&amp; \\\nchmod -R 770 bw-logs\n</code></pre> <p>Wenn Sie Docker im rootless-Modus oder podman verwenden, werden UIDs und GIDs im Container auf andere auf dem Host abgebildet. Sie m\u00fcssen zuerst Ihre anf\u00e4ngliche subuid und subgid \u00fcberpr\u00fcfen:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Wenn Sie beispielsweise einen Wert von 100000 haben, ist die abgebildete UID/GID 100100 (100000 + 100):</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nsudo chgrp 100100 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Oder wenn der Ordner bereits existiert:</p> <pre><code>sudo chgrp -R 100100 bw-logs &amp;&amp; \\\nsudo chmod -R 770 bw-logs\n</code></pre>"},{"location":"de/web-ui/#compose-vorlagen","title":"Compose-Vorlagen","text":"DockerDocker Autoconf <p>Um die Protokolle bei der Docker-Integration korrekt in das Verzeichnis <code>/var/log/bunkerweb</code> weiterzuleiten, m\u00fcssen Sie die Protokolle mit <code>syslog-ng</code> in eine Datei streamen. Hier ist ein Beispiel, wie das geht:</p> <pre><code>x-bw-env: &amp;bw-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  # Optionaler API-Token bei der Sicherung des API-Zugriffs\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Stellen Sie sicher, dass Sie den richtigen Instanznamen festlegen\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # \u00c4ndern Sie dies in eine schwer zu erratende URI\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\"\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr den Admin-Benutzer festzulegen\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Dies ist das Volume, das zum Speichern der Protokolle verwendet wird\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # An niedrige Ports binden\n      - NET_BROADCAST  # Broadcasts senden\n      - NET_RAW  # Raw-Sockets verwenden\n      - DAC_READ_SEARCH  # Dateien unter Umgehung von Berechtigungen lesen\n      - DAC_OVERRIDE  # Dateiberechtigungen \u00fcberschreiben\n      - CHOWN  # Eigent\u00fcmer \u00e4ndern\n      - SYSLOG  # In Systemprotokolle schreiben\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Dies ist das Volume, das zum Speichern der Protokolle verwendet wird\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # Dies ist die syslog-ng-Konfigurationsdatei\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Stellen Sie sicher, dass Sie die richtige IP-Adresse festlegen\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Um die Protokolle bei der Autoconf-Integration korrekt in das Verzeichnis <code>/var/log/bunkerweb</code> weiterzuleiten, m\u00fcssen Sie die Protokolle mit <code>syslog-ng</code> in eine Datei streamen. Hier ist ein Beispiel, wie das geht:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\" # Wir m\u00fcssen die BunkerWeb-Instanz hier nicht angeben, da sie automatisch vom Autoconf-Dienst erkannt werden\n      SERVER_NAME: \"\" # Der Servername wird mit Dienst-Labels gef\u00fcllt\n      MULTISITE: \"yes\" # Obligatorische Einstellung f\u00fcr Autoconf / UI\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # Dies ist die Adresse des Docker-Sockets\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-autoconf\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr den Admin-Benutzer festzulegen\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    volumes:\n      - bw-logs:/var/log/bunkerweb\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\" # \u00c4ndern Sie dies in eine schwer zu erratende URI\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # Dies ist das Tag, das von syslog-ng verwendet wird, um die Protokolldatei zu erstellen\n        syslog-address: \"udp://10.20.30.254:514\" # Dies ist die Adresse des syslog-ng-Containers\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # An niedrige Ports binden\n      - NET_BROADCAST  # Broadcasts senden\n      - NET_RAW  # Raw-Sockets verwenden\n      - DAC_READ_SEARCH  # Dateien unter Umgehung von Berechtigungen lesen\n      - DAC_OVERRIDE  # Dateiberechtigungen \u00fcberschreiben\n      - CHOWN  # Eigent\u00fcmer \u00e4ndern\n      - SYSLOG  # In Systemprotokolle schreiben\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Dies ist das Volume, das zum Speichern der Protokolle verwendet wird\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # Dies ist die syslog-ng-Konfigurationsdatei\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Stellen Sie sicher, dass Sie die richtige IP-Adresse festlegen\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre>"},{"location":"de/web-ui/#syslog-ng-konfiguration","title":"Syslog-ng-Konfiguration","text":"<p>Hier ist ein Beispiel f\u00fcr eine <code>syslog-ng.conf</code>-Datei, die Sie verwenden k\u00f6nnen, um die Protokolle in eine Datei weiterzuleiten:</p> <pre><code>@version: 4.8\n\n# Quellkonfiguration zum Empfang von Protokollen von Docker-Containern\nsource s_net {\n  udp(\n    ip(\"0.0.0.0\")\n  );\n};\n\n# Vorlage zum Formatieren von Protokollnachrichten\ntemplate t_imp {\n  template(\"$MSG\\n\");\n  template_escape(no);\n};\n\n# Zielkonfiguration zum Schreiben von Protokollen in dynamisch benannte Dateien\ndestination d_dyna_file {\n  file(\n    \"/var/log/bunkerweb/${PROGRAM}.log\"\n    template(t_imp)\n    owner(\"101\")\n    group(\"101\")\n    dir_owner(\"root\")\n    dir_group(\"101\")\n    perm(0440)\n    dir_perm(0770)\n    create_dirs(yes)\n  );\n};\n\n# Protokollpfad zum Weiterleiten von Protokollen an dynamisch benannte Dateien\nlog {\n  source(s_net);\n  destination(d_dyna_file);\n};\n</code></pre>"},{"location":"de/web-ui/#kontoverwaltung","title":"Kontoverwaltung","text":"<p>Sie k\u00f6nnen auf die Kontoverwaltungsseite zugreifen, indem Sie auf das Profilbild in der oberen rechten Ecke klicken:</p> <p> </p> Zugriff auf die Kontoseite von der oberen rechten Ecke"},{"location":"de/web-ui/#benutzername-passwort","title":"Benutzername / Passwort","text":"<p>Passwort/Benutzername verloren</p> <p>Falls Sie Ihre UI-Anmeldeinformationen vergessen haben, k\u00f6nnen Sie sie von der CLI aus zur\u00fccksetzen, indem Sie den in der Fehlerbehebungssektion beschriebenen Schritten folgen.</p> <p>Sie k\u00f6nnen Ihren Benutzernamen oder Ihr Passwort aktualisieren, indem Sie die entsprechenden Formulare im Tab Sicherheit ausf\u00fcllen. Aus Sicherheitsgr\u00fcnden m\u00fcssen Sie Ihr aktuelles Passwort eingeben, auch wenn Sie angemeldet sind.</p> <p>Bitte beachten Sie, dass Sie nach der Aktualisierung Ihres Benutzernamens oder Passworts von der Web-UI abgemeldet werden, um sich erneut anzumelden.</p> <p> </p> Benutzername-/Passwort-Formular"},{"location":"de/web-ui/#zwei-faktor-authentifizierung","title":"Zwei-Faktor-Authentifizierung","text":"<p>Obligatorische Verschl\u00fcsselungsschl\u00fcssel</p> <p>Wenn Sie 2FA aktivieren, m\u00fcssen Sie mindestens einen Verschl\u00fcsselungsschl\u00fcssel angeben. Dieser Schl\u00fcssel wird verwendet, um Ihre TOTP-Geheimnisse zu verschl\u00fcsseln.</p> <p>Die empfohlene Methode zur Generierung eines g\u00fcltigen Schl\u00fcssels ist die Verwendung des <code>passlib</code>-Pakets:</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> <p>Setzen Sie den generierten Schl\u00fcssel in der Umgebungsvariable <code>TOTP_ENCRYPTION_KEYS</code> der Web-UI. Sie k\u00f6nnen auch mehrere durch Leerzeichen getrennte Schl\u00fcssel oder ein W\u00f6rterbuch festlegen (aus Gr\u00fcnden der Abw\u00e4rtskompatibilit\u00e4t).</p> <p>Geheimschl\u00fcssel verloren</p> <p>Falls Sie Ihren Geheimschl\u00fcssel verlieren, stehen zwei Optionen zur Verf\u00fcgung:</p> <ul> <li>Sie k\u00f6nnen Ihr Konto mit einem der Wiederherstellungscodes wiederherstellen, die Sie bei der Aktivierung von 2FA erhalten haben (ein Wiederherstellungscode kann nur einmal verwendet werden).</li> <li>Sie k\u00f6nnen 2FA von der CLI aus deaktivieren, indem Sie den in der Fehlerbehebungssektion beschriebenen Schritten folgen.</li> </ul> <p>Sie k\u00f6nnen Ihre Anmeldesicherheit durch Hinzuf\u00fcgen einer Zwei-Faktor-Authentifizierung (2FA) zu Ihrem Konto erh\u00f6hen. Dadurch wird zus\u00e4tzlich zu Ihrem Passwort ein zus\u00e4tzlicher Code ben\u00f6tigt.</p> <p>Die Web-UI verwendet zeitbasiertes Einmalkennwort (TOTP) als 2FA-Implementierung: Mit einem geheimen Schl\u00fcssel generiert der Algorithmus Einmalkennw\u00f6rter, die nur f\u00fcr einen kurzen Zeitraum g\u00fcltig sind.</p> <p>Jeder TOTP-Client wie Google Authenticator, Authy, FreeOTP usw. kann verwendet werden, um den geheimen Schl\u00fcssel zu speichern und die Codes zu generieren. Bitte beachten Sie, dass Sie den geheimen Schl\u00fcssel nach der Aktivierung von TOTP nicht mehr von der Web-UI abrufen k\u00f6nnen.</p> <p>Die folgenden Schritte sind erforderlich, um die TOTP-Funktion in der Web-UI zu aktivieren:</p> <ul> <li>Kopieren Sie den geheimen Schl\u00fcssel oder verwenden Sie den QR-Code in Ihrer Authentifizierungs-App</li> <li>Geben Sie den aktuellen TOTP-Code in das 2FA-Eingabefeld ein</li> <li>Geben Sie Ihr aktuelles Passwort ein</li> </ul> <p>Aktualisierung des Geheimschl\u00fcssels</p> <p>Ein neuer geheimer Schl\u00fcssel wird jedes Mal generiert, wenn Sie die Seite besuchen oder das Formular absenden. Falls etwas schiefgeht (z. B. abgelaufener TOTP-Code), m\u00fcssen Sie den neuen geheimen Schl\u00fcssel in Ihre Authentifizierungs-App kopieren, bis 2FA erfolgreich aktiviert ist.</p> <p>Wiederherstellungscodes</p> <p>Wenn Sie 2FA aktivieren, erhalten Sie 5 Wiederherstellungscodes. Diese Codes k\u00f6nnen verwendet werden, um Ihr Konto wiederherzustellen, falls Sie Ihren TOTP-Geheimschl\u00fcssel verloren haben. Jeder Code kann nur einmal verwendet werden. Diese Codes werden nur einmal angezeigt, also stellen Sie sicher, dass Sie sie an einem sicheren Ort aufbewahren.</p> <p>Wenn Sie Ihre Wiederherstellungscodes verlieren, k\u00f6nnen Sie sie \u00fcber den TOTP-Abschnitt der Kontoverwaltungsseite aktualisieren. Bitte beachten Sie, dass die alten Wiederherstellungscodes ung\u00fcltig werden.</p> <p>Sie k\u00f6nnen 2FA im Tab Sicherheit aktivieren oder deaktivieren und auch die Wiederherstellungscodes aktualisieren:</p> <p> </p> Formulare zum Aktivieren/Deaktivieren/Aktualisieren von TOTP-Wiederherstellungscodes <p>Nach einer erfolgreichen Kombination aus Login und Passwort werden Sie aufgefordert, Ihren TOTP-Code einzugeben:</p> <p> </p> 2FA auf der Anmeldeseite"},{"location":"de/web-ui/#aktuelle-sitzungen","title":"Aktuelle Sitzungen","text":"<p>Im Tab Sitzung k\u00f6nnen Sie aktuelle Sitzungen auflisten und widerrufen:</p> <p> </p> Sitzungen verwalten"},{"location":"de/web-ui/#erweiterte-installation","title":"Erweiterte Installation","text":"<p>Die Web-UI kann auch ohne den Einrichtungsassistenten bereitgestellt und konfiguriert werden: Die Konfiguration erfolgt \u00fcber Umgebungsvariablen, die direkt zu den Containern oder bei einer Linux-Integration in die Datei <code>/etc/bunkerweb/ui.env</code> hinzugef\u00fcgt werden k\u00f6nnen.</p> <p>Spezifische Umgebungsvariablen der Web-UI</p> <p>Die Web-UI verwendet die folgenden Umgebungsvariablen:</p> <ul> <li><code>OVERRIDE_ADMIN_CREDS</code>: auf <code>yes</code> setzen, um die \u00dcberschreibung zu aktivieren, auch wenn die Admin-Anmeldeinformationen bereits festgelegt sind (Standard ist <code>no</code>).</li> <li><code>ADMIN_USERNAME</code>: Benutzername f\u00fcr den Zugriff auf die Web-UI.</li> <li><code>ADMIN_PASSWORD</code>: Passwort f\u00fcr den Zugriff auf die Web-UI.</li> <li><code>FLASK_SECRET</code>: ein geheimer Schl\u00fcssel, der zum Verschl\u00fcsseln des Sitzungs-Cookies verwendet wird (wenn nicht festgelegt, wird ein zuf\u00e4lliger Schl\u00fcssel generiert).</li> <li><code>TOTP_ENCRYPTION_KEYS</code> (oder <code>TOTP_SECRETS</code>): eine Liste von TOTP-Verschl\u00fcsselungsschl\u00fcsseln, die durch Leerzeichen getrennt sind, oder ein W\u00f6rterbuch (z. B. <code>{\"1\": \"meingeheimschl\u00fcssel\"}</code> oder <code>meingeheimschl\u00fcssel</code> oder <code>meingeheimschl\u00fcssel meingeheimschl\u00fcssel1</code>). Wir empfehlen dringend, diese Variable zu setzen, wenn Sie 2FA verwenden m\u00f6chten, da sie zur Verschl\u00fcsselung der TOTP-Geheimschl\u00fcssel verwendet wird (wenn nicht festgelegt, wird eine zuf\u00e4llige Anzahl von Geheimschl\u00fcsseln generiert). Weitere Informationen finden Sie in der passlib-Dokumentation.</li> <li><code>UI_LISTEN_ADDR</code> (bevorzugt): die Adresse, an der die Web-UI lauschen wird (Standard ist <code>0.0.0.0</code> in Docker-Images und <code>127.0.0.1</code> bei Linux-Installationen). F\u00e4llt auf <code>LISTEN_ADDR</code> zur\u00fcck, wenn nicht gesetzt.</li> <li><code>UI_LISTEN_PORT</code> (bevorzugt): der Port, an dem die Web-UI lauschen wird (Standard ist <code>7000</code>). F\u00e4llt auf <code>LISTEN_PORT</code> zur\u00fcck, wenn nicht gesetzt.</li> <li><code>MAX_WORKERS</code>: die Anzahl der von der Web-UI verwendeten Worker (Standard ist die Anzahl der CPUs).</li> <li><code>MAX_THREADS</code>: die Anzahl der von der Web-UI verwendeten Threads (Standard ist <code>MAX_WORKERS</code> * 2).</li> <li><code>FORWARDED_ALLOW_IPS</code>: eine Liste von IP-Adressen oder Netzwerken, die im <code>X-Forwarded-For</code>-Header verwendet werden d\u00fcrfen (Standard ist <code>*</code> in Docker-Images und <code>127.0.0.1</code> bei Linux-Installationen).</li> <li><code>CHECK_PRIVATE_IP</code>: auf <code>yes</code> setzen, um Benutzer nicht zu trennen, deren IP-Adresse sich w\u00e4hrend einer Sitzung \u00e4ndert, wenn sie sich in einem privaten Netzwerk befinden (Standard ist <code>yes</code>). (Nicht-private IP-Adressen werden immer \u00fcberpr\u00fcft).</li> <li><code>ENABLE_HEALTHCHECK</code>: auf <code>yes</code> setzen, um den <code>/healthcheck</code>-Endpunkt zu aktivieren, der eine einfache JSON-Antwort mit Statusinformationen zur\u00fcckgibt (Standard ist <code>no</code>).</li> </ul> <p>Die Web-UI verwendet diese Variablen, um Sie zu authentifizieren und die 2FA-Funktion zu handhaben.</p> <p>Empfohlene Geheimnisse generieren</p> <p>Um ein g\u00fcltiges ADMIN_PASSWORD zu generieren, empfehlen wir die Verwendung eines Passwort-Managers oder eines Passwort-Generators.</p> <p>Sie k\u00f6nnen ein g\u00fcltiges FLASK_SECRET mit dem folgenden Befehl generieren:</p> <pre><code>python3 -c \"import secrets; print(secrets.token_hex(64))\"\n</code></pre> <p>Sie k\u00f6nnen g\u00fcltige, durch Leerzeichen getrennte TOTP_ENCRYPTION_KEYS mit dem folgenden Befehl generieren (Sie ben\u00f6tigen das <code>passlib</code>-Paket):</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> LinuxDockerDocker autoconfKubernetesSwarm <p>Die Installation der Web-UI \u00fcber die Linux-Integration ist ziemlich unkompliziert, da sie mit BunkerWeb installiert wird.</p> <p>Die Web-UI wird als systemd-Dienst namens <code>bunkerweb-ui</code> geliefert. Bitte stellen Sie sicher, dass er aktiviert ist:</p> <pre><code>sudo systemctl enable bunkerweb-ui &amp;&amp; \\\nsudo systemctl status bunkerweb-ui\n</code></pre> <p>Eine dedizierte Umgebungsdatei unter <code>/etc/bunkerweb/ui.env</code> wird zur Konfiguration der Web-UI verwendet:</p> <pre><code>ADMIN_USERNAME=changeme\nADMIN_PASSWORD=changeme\nTOTP_ENCRYPTION_KEYS=mysecret\n</code></pre> <p>Ersetzen Sie die <code>changeme</code>-Daten durch Ihre eigenen Werte.</p> <p>Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel f\u00fcr <code>TOTP_ENCRYPTION_KEYS</code> festzulegen.</p> <p>Jedes Mal, wenn Sie die Datei <code>/etc/bunkerweb/ui.env</code> bearbeiten, m\u00fcssen Sie den Dienst neu starten:</p> <pre><code>systemctl restart bunkerweb-ui\n</code></pre> <p>Der Zugriff auf die Web-UI \u00fcber BunkerWeb ist eine klassische Reverse-Proxy-Einrichtung. Bitte beachten Sie, dass die Web-UI auf Port <code>7000</code> und nur auf der Loopback-Schnittstelle lauscht.</p> <p>Hier ist die <code>/etc/bunkerweb/variables.env</code>-Vorlage, die Sie verwenden k\u00f6nnen:</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nSERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_TEMPLATE=ui\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/changeme\nwww.example.com_REVERSE_PROXY_HOST=http://127.0.0.1:7000\n</code></pre> <p>Vergessen Sie nicht, den <code>bunkerweb</code>-Dienst neu zu laden:</p> <pre><code>systemctl reload bunkerweb\n</code></pre> <p>Die Web-UI kann \u00fcber einen dedizierten Container bereitgestellt werden, der auf Docker Hub verf\u00fcgbar ist:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativ k\u00f6nnen Sie es auch selbst erstellen:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Der Zugriff auf die Web-UI \u00fcber BunkerWeb ist eine klassische Reverse-Proxy-Einrichtung. Wir empfehlen Ihnen, BunkerWeb und die Web-UI \u00fcber ein dediziertes Netzwerk (wie <code>bw-universe</code>, das auch vom Scheduler verwendet wird) zu verbinden, damit es aus offensichtlichen Sicherheitsgr\u00fcnden nicht im selben Netzwerk wie Ihre Webdienste liegt. Bitte beachten Sie, dass der Web-UI-Container auf Port <code>7000</code> lauscht.</p> <p>Datenbank-Backend</p> <p>Wenn Sie ein anderes Datenbank-Backend als MariaDB w\u00fcnschen, lesen Sie bitte die docker-compose-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Hier ist die docker-compose-Vorlage, die Sie verwenden k\u00f6nnen (vergessen Sie nicht, die <code>changeme</code>-Daten zu bearbeiten):</p> <pre><code>x-ui-env: &amp;ui-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # F\u00fcr QUIC / HTTP3-Unterst\u00fctzung\n    environment:\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Stellen Sie sicher, dass Sie den richtigen IP-Bereich festlegen, damit der Scheduler die Konfiguration an die Instanz senden kann\n      API_TOKEN: \"\" # Spiegeln Sie API_TOKEN, wenn Sie es verwenden\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Stellen Sie sicher, dass Sie den richtigen Instanznamen festlegen\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Wir spiegeln die API_WHITELIST_IP vom bunkerweb-Dienst\n      API_TOKEN: \"\" # Spiegeln Sie API_TOKEN, wenn Sie es verwenden\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # Denken Sie daran, eine st\u00e4rkere URI festzulegen\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\" # Der Web-UI-Container lauscht standardm\u00e4\u00dfig auf Port 7000\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr den changeme-Benutzer festzulegen\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Die Web-UI kann \u00fcber einen dedizierten Container bereitgestellt werden, der auf Docker Hub verf\u00fcgbar ist:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativ k\u00f6nnen Sie es auch selbst erstellen:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Umgebungsvariablen</p> <p>Bitte lesen Sie den Abschnitt Voraussetzungen, um alle Umgebungsvariablen zu sehen, die Sie zur Anpassung der Web-UI festlegen k\u00f6nnen.</p> <p>Der Zugriff auf die Web-UI \u00fcber BunkerWeb ist eine klassische Reverse-Proxy-Einrichtung. Wir empfehlen Ihnen, BunkerWeb und die Web-UI \u00fcber ein dediziertes Netzwerk (wie <code>bw-universe</code>, das auch vom Scheduler und Autoconf verwendet wird) zu verbinden, damit es aus offensichtlichen Sicherheitsgr\u00fcnden nicht im selben Netzwerk wie Ihre Webdienste liegt. Bitte beachten Sie, dass der Web-UI-Container auf Port <code>7000</code> lauscht.</p> <p>Datenbank-Backend</p> <p>Wenn Sie ein anderes Datenbank-Backend als MariaDB w\u00fcnschen, lesen Sie bitte die docker-compose-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Hier ist die docker-compose-Vorlage, die Sie verwenden k\u00f6nnen (vergessen Sie nicht, die <code>changeme</code>-Daten zu bearbeiten):</p> <pre><code>x-ui-env: &amp;ui-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # F\u00fcr QUIC / HTTP3-Unterst\u00fctzung\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Wir setzen das Instanz-Label, damit die Autoconf die Instanz erkennen kann\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr den changeme-Benutzer festzulegen\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    networks:\n      - bw-universe\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>Die Web-UI kann \u00fcber einen dedizierten Container bereitgestellt werden, der auf Docker Hub verf\u00fcgbar ist, und Sie k\u00f6nnen ihn als Standard-Deployment bereitstellen.</p> <p>Der Zugriff auf die Web-UI \u00fcber BunkerWeb ist eine klassische Reverse-Proxy-Einrichtung. Die Netzwerksegmentierung zwischen der Web-UI und den Webdiensten wird in dieser Dokumentation nicht behandelt. Bitte beachten Sie, dass der Web-UI-Container auf Port <code>7000</code> lauscht.</p> <p>Datenbank-Backend</p> <p>Wenn Sie ein anderes Datenbank-Backend als MariaDB w\u00fcnschen, lesen Sie bitte die YAML-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Hier ist der entsprechende Teil Ihrer <code>values.yaml</code>-Datei, den Sie verwenden k\u00f6nnen:</p> <pre><code>settings:\n  # Verwenden Sie ein vorhandenes Secret namens bunkerweb, das die folgenden Werte enth\u00e4lt:\n  # - admin-username\n  # - admin-password\n  # - flask-secret\n  # - totp-secrets\n  existingSecret: \"secret-bunkerweb\"\nui:\n  wizard: false\n  ingress:\n    enabled: true\n    serverName: \"www.example.com\"\n    serverPath: \"/admin\"\n  overrideAdminCreds: \"yes\"\n</code></pre> <p>Veraltet</p> <p>Die Swarm-Integration ist veraltet und wird in einer zuk\u00fcnftigen Version entfernt. Bitte erw\u00e4gen Sie stattdessen die Verwendung der Kubernetes-Integration.</p> <p>Weitere Informationen finden Sie in der Swarm-Integrationsdokumentation.</p> <p>Die Web-UI kann \u00fcber einen dedizierten Container bereitgestellt werden, der auf Docker Hub verf\u00fcgbar ist:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativ k\u00f6nnen Sie es auch selbst erstellen:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Der Zugriff auf die Web-UI \u00fcber BunkerWeb ist eine klassische Reverse-Proxy-Einrichtung. Wir empfehlen Ihnen, BunkerWeb und die Web-UI \u00fcber ein dediziertes Netzwerk (wie <code>bw-universe</code>, das auch vom Scheduler und Autoconf verwendet wird) zu verbinden, damit es aus offensichtlichen Sicherheitsgr\u00fcnden nicht im selben Netzwerk wie Ihre Webdienste liegt. Bitte beachten Sie, dass der Web-UI-Container auf Port <code>7000</code> lauscht.</p> <p>Datenbank-Backend</p> <p>Wenn Sie ein anderes Datenbank-Backend als MariaDB w\u00fcnschen, lesen Sie bitte die Stack-Dateien im Ordner misc/integrations des Repositorys.</p> <p>Hier ist die Stack-Vorlage, die Sie verwenden k\u00f6nnen (vergessen Sie nicht, die <code>changeme</code>-Daten zu bearbeiten):</p> <pre><code>x-ui-env: &amp;ui-env\n  # Wir verankern die Umgebungsvariablen, um Duplikate zu vermeiden\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # F\u00fcr QUIC / HTTP3-Unterst\u00fctzung\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # Dies wird verwendet, um den Cache und andere Daten wie die Backups zu persistieren\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # Wir setzen die maximal zul\u00e4ssige Paketgr\u00f6\u00dfe, um Probleme mit gro\u00dfen Abfragen zu vermeiden\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr die Datenbank festzulegen\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Denken Sie daran, ein st\u00e4rkeres Passwort f\u00fcr den changeme-Benutzer festzulegen\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Denken Sie daran, einen st\u00e4rkeren geheimen Schl\u00fcssel festzulegen (siehe Abschnitt Voraussetzungen)\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_TEMPLATE=ui\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"de/web-ui/#sprachunterstutzung-lokalisierung","title":"Sprachunterst\u00fctzung &amp; Lokalisierung","text":"<p>Die BunkerWeb-Benutzeroberfl\u00e4che unterst\u00fctzt mehrere Sprachen. Die \u00dcbersetzungen werden im Verzeichnis <code>src/ui/app/static/locales</code> verwaltet. Derzeit sind die folgenden Sprachen verf\u00fcgbar:</p> <ul> <li>Englisch (en)</li> <li>Franz\u00f6sisch (fr)</li> <li>Arabisch (ar)</li> <li>Bengali (bn)</li> <li>Spanisch (es)</li> <li>Hindi (hi)</li> <li>Portugiesisch (pt)</li> <li>Russisch (ru)</li> <li>Urdu (ur)</li> <li>Chinesisch (zh)</li> <li>Deutsch (de)</li> <li>Italienisch (it)</li> </ul> <p>Weitere Informationen zur Herkunft und zum \u00dcberpr\u00fcfungsstatus der \u00dcbersetzungen finden Sie in der locales/README.md.</p>"},{"location":"de/web-ui/#beitragen-von-ubersetzungen","title":"Beitragen von \u00dcbersetzungen","text":"<p>Wir freuen uns \u00fcber Beitr\u00e4ge zur Verbesserung oder zum Hinzuf\u00fcgen neuer Lokalisierungsdateien!</p> <p>Wie man eine \u00dcbersetzung beisteuert:</p> <ol> <li>Bearbeiten Sie die Datei <code>src/ui/app/lang_config.py</code>, um Ihre Sprache hinzuzuf\u00fcgen (Code, Name, Flagge, englischer Name).</li> <li>Kopieren Sie <code>en.json</code> als Vorlage in <code>src/ui/app/static/locales/</code> und benennen Sie es in Ihren Sprachcode um (z. B. <code>de.json</code> f\u00fcr Deutsch).</li> <li>\u00dcbersetzen Sie die Werte in Ihrer neuen Datei.</li> <li>Aktualisieren Sie die Tabelle in <code>locales/README.md</code>, um Ihre Sprache hinzuzuf\u00fcgen und anzugeben, wer sie erstellt/\u00fcberpr\u00fcft hat.</li> <li>Senden Sie einen Pull-Request.</li> </ol> <p>F\u00fcr Aktualisierungen bearbeiten Sie die entsprechende Datei und aktualisieren Sie die Herkunftstabelle nach Bedarf.</p> <p>Weitere Richtlinien finden Sie in der locales/README.md.</p>"},{"location":"es/","title":"Introducci\u00f3n","text":""},{"location":"es/#descripcion-general","title":"Descripci\u00f3n general","text":"\u00a1Haz que tus servicios web sean seguros por defecto! <p>BunkerWeb es un Firewall de Aplicaciones Web (WAF) de c\u00f3digo abierto y de \u00faltima generaci\u00f3n.</p> <p>Como un servidor web con todas las funciones (basado en NGINX internamente), protege tus servicios web para hacerlos \"seguros por defecto\". BunkerWeb se integra sin problemas en tus entornos existentes (Linux, Docker, Swarm, Kubernetes, \u2026) como un proxy inverso y es totalmente configurable (no te preocupes, hay una impresionante interfaz de usuario web si no te gusta la CLI) para satisfacer tus casos de uso espec\u00edficos. En otras palabras, la ciberseguridad ya no es una molestia.</p> <p>BunkerWeb incluye caracter\u00edsticas de seguridad principales como parte del n\u00facleo, pero se puede ampliar f\u00e1cilmente con otras adicionales gracias a un sistema de plugins.</p>"},{"location":"es/#por-que-bunkerweb","title":"\u00bfPor qu\u00e9 BunkerWeb?","text":"<ul> <li> <p>F\u00e1cil integraci\u00f3n en entornos existentes: Integra sin problemas BunkerWeb en diversos entornos como Linux, Docker, Swarm, Kubernetes y m\u00e1s. Disfruta de una transici\u00f3n fluida y una implementaci\u00f3n sin complicaciones.</p> </li> <li> <p>Altamente personalizable: Adapta BunkerWeb a tus requisitos espec\u00edficos con facilidad. Habilita, deshabilita y configura caracter\u00edsticas sin esfuerzo, lo que te permite personalizar la configuraci\u00f3n de seguridad seg\u00fan tu caso de uso \u00fanico.</p> </li> <li> <p>Seguro por defecto: BunkerWeb proporciona seguridad m\u00ednima lista para usar y sin complicaciones para tus servicios web. Experimenta tranquilidad y protecci\u00f3n mejorada desde el principio.</p> </li> <li> <p>Impresionante interfaz de usuario web: Toma el control de BunkerWeb de manera m\u00e1s eficiente con la excepcional interfaz de usuario web (UI). Navega por la configuraci\u00f3n y las opciones sin esfuerzo a trav\u00e9s de una interfaz gr\u00e1fica f\u00e1cil de usar, eliminando la necesidad de la interfaz de l\u00ednea de comandos (CLI).</p> </li> <li> <p>Sistema de plugins: Ampl\u00eda las capacidades de BunkerWeb para satisfacer tus propios casos de uso. Integra sin problemas medidas de seguridad adicionales y personaliza la funcionalidad de BunkerWeb seg\u00fan tus requisitos espec\u00edficos.</p> </li> <li> <p>Libre como en \"libertad\": BunkerWeb est\u00e1 licenciado bajo la licencia libre AGPLv3, abrazando los principios de libertad y apertura. Disfruta de la libertad de usar, modificar y distribuir el software, respaldado por una comunidad de apoyo.</p> </li> <li> <p>Servicios profesionales: Obt\u00e9n soporte t\u00e9cnico, consultor\u00eda a medida y desarrollo personalizado directamente de los mantenedores de BunkerWeb. Visita el Panel de BunkerWeb para m\u00e1s informaci\u00f3n.</p> </li> </ul>"},{"location":"es/#caracteristicas-de-seguridad","title":"Caracter\u00edsticas de seguridad","text":"<p>Explora la impresionante gama de caracter\u00edsticas de seguridad que ofrece BunkerWeb. Aunque no es exhaustiva, aqu\u00ed hay algunos puntos destacados:</p> <ul> <li> <p>Soporte HTTPS con automatizaci\u00f3n transparente de Let's Encrypt: Asegura f\u00e1cilmente tus servicios web con la integraci\u00f3n automatizada de Let's Encrypt, garantizando la comunicaci\u00f3n cifrada entre los clientes y tu servidor.</p> </li> <li> <p>Seguridad web de \u00faltima generaci\u00f3n: Benef\u00edciate de medidas de seguridad web de vanguardia, incluyendo cabeceras de seguridad HTTP completas, prevenci\u00f3n de fugas de datos y t\u00e9cnicas de fortalecimiento de TLS.</p> </li> <li> <p>WAF ModSecurity integrado con el OWASP Core Rule Set: Disfruta de una protecci\u00f3n mejorada contra ataques a aplicaciones web con la integraci\u00f3n de ModSecurity, fortalecida por el reconocido OWASP Core Rule Set.</p> </li> <li> <p>Baneo autom\u00e1tico de comportamientos extra\u00f1os basados en c\u00f3digos de estado HTTP: BunkerWeb identifica y bloquea inteligentemente actividades sospechosas al banear autom\u00e1ticamente los comportamientos que desencadenan c\u00f3digos de estado HTTP an\u00f3malos.</p> </li> <li> <p>Aplica l\u00edmites de conexi\u00f3n y de solicitudes para los clientes: Establece l\u00edmites en el n\u00famero de conexiones y solicitudes de los clientes, previniendo el agotamiento de recursos y asegurando un uso justo de los recursos del servidor.</p> </li> <li> <p>Bloquea bots con verificaci\u00f3n basada en desaf\u00edos: Mant\u00e9n a raya a los bots maliciosos desafi\u00e1ndolos a resolver acertijos como cookies, pruebas de JavaScript, captchas, hCaptcha, reCAPTCHA o Turnstile, bloqueando eficazmente el acceso no autorizado.</p> </li> <li> <p>Bloquea IPs maliciosas conocidas con listas negras externas y DNSBL: Utiliza listas negras externas y listas negras basadas en DNS (DNSBL) para bloquear proactivamente direcciones IP maliciosas conocidas, reforzando tu defensa contra posibles amenazas.</p> </li> <li> <p>Y mucho m\u00e1s...: BunkerWeb est\u00e1 repleto de una pl\u00e9tora de caracter\u00edsticas de seguridad adicionales que van m\u00e1s all\u00e1 de esta lista, brind\u00e1ndote una protecci\u00f3n integral y tranquilidad.</p> </li> </ul> <p>Para profundizar en las caracter\u00edsticas de seguridad principales, te invitamos a explorar la secci\u00f3n de ajuste de seguridad de la documentaci\u00f3n. Descubre c\u00f3mo BunkerWeb te permite ajustar y optimizar las medidas de seguridad seg\u00fan tus necesidades espec\u00edficas.</p>"},{"location":"es/#demo","title":"Demo","text":"<p>Un sitio web de demostraci\u00f3n protegido con BunkerWeb est\u00e1 disponible en demo.bunkerweb.io. Si\u00e9ntete libre de visitarlo y realizar algunas pruebas de seguridad.</p>"},{"location":"es/#interfaz-de-usuario-web","title":"Interfaz de usuario web","text":"<p>BunkerWeb ofrece una interfaz de usuario opcional para gestionar tus instancias y sus configuraciones. Una demostraci\u00f3n en l\u00ednea de solo lectura est\u00e1 disponible en demo-ui.bunkerweb.io. Si\u00e9ntete libre de probarla t\u00fa mismo.</p>"},{"location":"es/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>\u00bfNo quieres autohospedar y gestionar tu(s) propia(s) instancia(s) de BunkerWeb? Podr\u00eda interesarte BunkerWeb Cloud, nuestra oferta SaaS totalmente gestionada para BunkerWeb.</p> <p>Prueba nuestra oferta de BunkerWeb Cloud y obt\u00e9n acceso a:</p> <ul> <li>Una instancia de BunkerWeb totalmente gestionada alojada en nuestra nube</li> <li>Todas las caracter\u00edsticas de BunkerWeb, incluidas las PRO</li> <li>Una plataforma de monitorizaci\u00f3n con paneles y alertas</li> <li>Soporte t\u00e9cnico para ayudarte con la configuraci\u00f3n</li> </ul> <p>Si est\u00e1s interesado en la oferta de BunkerWeb Cloud, no dudes en contactarnos para que podamos discutir tus necesidades.</p>"},{"location":"es/#version-pro","title":"Versi\u00f3n PRO","text":"<p>Prueba gratuita de BunkerWeb PRO</p> <p>\u00bfQuieres probar r\u00e1pidamente BunkerWeb PRO durante un mes? Usa el c\u00f3digo <code>freetrial</code> al realizar tu pedido en el Panel de BunkerWeb o haciendo clic aqu\u00ed para aplicar directamente el c\u00f3digo de promoci\u00f3n (se har\u00e1 efectivo al finalizar la compra).</p> <p>Al usar BunkerWeb, tienes la opci\u00f3n de elegir la versi\u00f3n que deseas utilizar: de c\u00f3digo abierto o PRO.</p> <p>Ya sea para una seguridad mejorada, una experiencia de usuario enriquecida o un seguimiento t\u00e9cnico, la versi\u00f3n BunkerWeb PRO te permite beneficiarte plenamente de BunkerWeb y satisfacer tus necesidades profesionales.</p> <p>En la documentaci\u00f3n o en la interfaz de usuario, las caracter\u00edsticas PRO est\u00e1n anotadas con una corona  para distinguirlas de las integradas en la versi\u00f3n de c\u00f3digo abierto.</p> <p>Puedes actualizar de la versi\u00f3n de c\u00f3digo abierto a la PRO f\u00e1cilmente y en cualquier momento. El proceso es sencillo:</p> <ul> <li>Reclama tu prueba gratuita en el panel de BunkerWeb usando el c\u00f3digo de promoci\u00f3n <code>freetrial</code> al finalizar la compra</li> <li>Una vez conectado al \u00e1rea de cliente, copia tu clave de licencia PRO</li> <li>Pega tu clave privada en BunkerWeb usando la interfaz de usuario web o la configuraci\u00f3n espec\u00edfica</li> </ul> <p>No dudes en visitar el panel de BunkerWeb o contactarnos si tienes alguna pregunta sobre la versi\u00f3n PRO.</p>"},{"location":"es/#servicios-profesionales","title":"Servicios profesionales","text":"<p>Aprovecha al m\u00e1ximo BunkerWeb accediendo a servicios profesionales directamente de los mantenedores del proyecto. Desde soporte t\u00e9cnico hasta consultor\u00eda y desarrollo a medida, estamos aqu\u00ed para ayudarte a proteger tus servicios web.</p> <p>Encontrar\u00e1s m\u00e1s informaci\u00f3n visitando el Panel de BunkerWeb, nuestra plataforma dedicada a los servicios profesionales.</p> <p>No dudes en contactarnos si tienes alguna pregunta. Estaremos encantados de responder a tus necesidades.</p>"},{"location":"es/#ecosistema-comunidad-y-recursos","title":"Ecosistema, comunidad y recursos","text":"<p>Sitios web, herramientas y recursos oficiales sobre BunkerWeb:</p> <ul> <li>Sitio web: Obt\u00e9n m\u00e1s informaci\u00f3n, noticias y art\u00edculos sobre BunkerWeb.</li> <li>Panel: Una plataforma dedicada para solicitar y gestionar servicios profesionales (p. ej., soporte t\u00e9cnico) en torno a BunkerWeb.</li> <li>Documentaci\u00f3n: Documentaci\u00f3n t\u00e9cnica de la soluci\u00f3n BunkerWeb.</li> <li>Demo: Sitio web de demostraci\u00f3n de BunkerWeb. No dudes en intentar ataques para probar la robustez de la soluci\u00f3n.</li> <li>Interfaz de usuario web: Demostraci\u00f3n en l\u00ednea de solo lectura de la interfaz de usuario web de BunkerWeb.</li> <li>Mapa de amenazas: Ciberataques en vivo bloqueados por instancias de BunkerWeb en todo el mundo.</li> </ul> <p>Comunidad y redes sociales:</p> <ul> <li>Discord</li> <li>LinkedIn</li> <li>X (Anteriormente Twitter)</li> <li>Reddit</li> </ul>"},{"location":"es/about/","title":"Acerca de","text":""},{"location":"es/about/#quien-mantiene-bunkerweb","title":"\u00bfQui\u00e9n mantiene BunkerWeb?","text":"<p>BunkerWeb es mantenido por Bunkerity, una empresa francesa \ud83c\uddeb\ud83c\uddf7 especializada en Ciberseguridad \ud83d\udee1\ufe0f.</p>"},{"location":"es/about/#teneis-una-version-profesional","title":"\u00bfTen\u00e9is una versi\u00f3n profesional?","text":"<p>Prueba gratuita de BunkerWeb PRO</p> <p>\u00bfQuieres probar r\u00e1pidamente BunkerWeb PRO durante un mes? Usa el c\u00f3digo <code>freetrial</code> al realizar tu pedido en el panel de BunkerWeb o haciendo clic aqu\u00ed para aplicar directamente el c\u00f3digo de promoci\u00f3n (se har\u00e1 efectivo al finalizar la compra).</p> <p>S\u00ed, ofrecemos una versi\u00f3n profesional de BunkerWeb llamada \"BunkerWeb PRO\" con caracter\u00edsticas adicionales y soporte t\u00e9cnico (opcional).</p> <p>No dudes en contactarnos si tienes alguna pregunta, estaremos encantados de responder a tus necesidades.</p>"},{"location":"es/about/#ofreceis-servicios-profesionales","title":"\u00bfOfrec\u00e9is servicios profesionales?","text":"<p>S\u00ed, ofrecemos servicios profesionales relacionados con BunkerWeb.</p> <p>Puedes ponerte en contacto con nosotros para cualquiera de los siguientes:</p> <ul> <li>Consultor\u00eda</li> <li>Soporte</li> <li>Desarrollo a medida</li> <li>Asociaciones</li> </ul> <p>Tenemos un panel dedicado para centralizar todas las solicitudes profesionales.</p> <p>Tambi\u00e9n puedes contactarnos si est\u00e1s interesado.</p>"},{"location":"es/about/#donde-obtener-soporte-de-la-comunidad","title":"\u00bfD\u00f3nde obtener soporte de la comunidad?","text":"<p>Para obtener soporte gratuito de la comunidad, puedes utilizar los siguientes medios:</p> <ul> <li>El canal #help de BunkerWeb en el servidor de Discord</li> <li>La categor\u00eda de ayuda de las discusiones de GitHub</li> <li>El subreddit /r/BunkerWeb</li> <li>Los foros de Server Fault y Super User</li> </ul> <p>Por favor, no utilices los issues de GitHub para pedir ayuda, \u00fasalos solo para informes de errores y solicitudes de nuevas caracter\u00edsticas.</p>"},{"location":"es/about/#como-puedo-contribuir","title":"\u00bfC\u00f3mo puedo contribuir?","text":"<p>Aqu\u00ed tienes una lista no exhaustiva de lo que puedes hacer:</p> <ul> <li>Unirte al servidor de Discord, al subreddit /r/BunkerWeb y a las discusiones de GitHub para hablar sobre el proyecto y ayudar a otros</li> <li>Seguirnos en LinkedIn, X (Anteriormente Twitter) y GitHub</li> <li>Reportar errores y proponer nuevas caracter\u00edsticas usando los issues</li> <li>Contribuir al c\u00f3digo usando pull requests</li> <li>Escribir un incre\u00edble plugin</li> <li>Hablar de BunkerWeb a tus amigos/colegas, en redes sociales, en tu blog, ...</li> </ul>"},{"location":"es/about/#como-reportar-problemas-de-seguridad","title":"\u00bfC\u00f3mo reportar problemas de seguridad?","text":"<p>Por favor, cont\u00e1ctanos en security@bunkerity.com.</p>"},{"location":"es/advanced/","title":"Usos avanzados","text":"<p>Muchos ejemplos de casos de uso del mundo real est\u00e1n disponibles en la carpeta examples del repositorio de GitHub.</p> <p>Tambi\u00e9n proporcionamos numerosos boilerplates, como archivos YAML para diversas integraciones y tipos de bases de datos. Estos est\u00e1n disponibles en la carpeta misc/integrations.</p> <p>Esta secci\u00f3n solo se enfoca en usos avanzados y ajustes de seguridad, consulta la secci\u00f3n de caracter\u00edsticas de la documentaci\u00f3n para ver todas las configuraciones disponibles.</p>"},{"location":"es/advanced/#casos-de-uso","title":"Casos de uso","text":"<p>Pruebas</p> <p>Para realizar pruebas r\u00e1pidas cuando el modo multisitio est\u00e1 habilitado (y si no tienes las entradas DNS adecuadas configuradas para los dominios) puedes usar curl con la cabecera HTTP Host de tu elecci\u00f3n: <pre><code>curl -H \"Host: app1.example.com\" http://ip-o-fqdn-del-servidor\n</code></pre></p> <p>Si est\u00e1s usando HTTPS, necesitar\u00e1s jugar con SNI: <pre><code>curl -H \"Host: app1.example.com\" --resolve example.com:443:ip-del-servidor https://example.com\n</code></pre></p>"},{"location":"es/advanced/#detras-de-un-balanceador-de-carga-o-proxy-inverso","title":"Detr\u00e1s de un balanceador de carga o proxy inverso","text":"<p>IP real</p> <p>Cuando BunkerWeb est\u00e1 a su vez detr\u00e1s de un balanceador de carga o un proxy inverso, necesitas configurarlo para que pueda obtener la direcci\u00f3n IP real de los clientes. Si no lo haces, las caracter\u00edsticas de seguridad bloquear\u00e1n la direcci\u00f3n IP del balanceador de carga o del proxy inverso en lugar de la del cliente.</p> <p>BunkerWeb admite dos m\u00e9todos para recuperar la direcci\u00f3n IP real del cliente:</p> <ul> <li>Usando el <code>protocolo PROXY</code></li> <li>Usando una cabecera HTTP como <code>X-Forwarded-For</code></li> </ul> <p>Se pueden usar las siguientes configuraciones:</p> <ul> <li><code>USE_REAL_IP</code>: habilitar/deshabilitar la recuperaci\u00f3n de la IP real</li> <li><code>USE_PROXY_PROTOCOL</code>: habilitar/deshabilitar el soporte del protocolo PROXY.</li> <li><code>REAL_IP_FROM</code>: lista de direcciones IP/red de confianza permitidas para enviarnos la \"IP real\"</li> <li><code>REAL_IP_HEADER</code>: la cabecera HTTP que contiene la IP real o el valor especial <code>proxy_protocol</code> cuando se usa el protocolo PROXY</li> </ul> <p>Encontrar\u00e1s m\u00e1s configuraciones sobre la IP real en la secci\u00f3n de caracter\u00edsticas de la documentaci\u00f3n.</p> Cabecera HTTPProtocolo Proxy <p>Asumiremos lo siguiente con respecto a los balanceadores de carga o proxies inversos (necesitar\u00e1s actualizar la configuraci\u00f3n dependiendo de tu configuraci\u00f3n):</p> <ul> <li>Usan la cabecera <code>X-Forwarded-For</code> para establecer la IP real</li> <li>Tienen IPs en las redes <code>1.2.3.0/24</code> y <code>100.64.0.0/10</code></li> </ul> Interfaz de usuario webLinuxTodo en unoDockerDocker autoconfKubernetesSwarm <p>Navega a la p\u00e1gina de Configuraci\u00f3n Global, selecciona el plugin Real IP y completa las siguientes configuraciones:</p> <p>Configuraci\u00f3n de IP real (cabecera) usando la interfaz de usuario web</p> <p>Ten en cuenta que se recomienda reiniciar BunkerWeb cuando cambies la configuraci\u00f3n relacionada con la IP real.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n al archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>...\nUSE_REAL_IP=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=X-Forwarded-For\n...\n</code></pre> <p>Ten en cuenta que se recomienda emitir un reinicio en lugar de una recarga al configurar ajustes relacionados con la IP real:</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno al ejecutar el contenedor Todo en uno:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los contenedores de BunkerWeb y del programador:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los contenedores de BunkerWeb y del programador:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los pods de BunkerWeb y del programador.</p> <p>Aqu\u00ed est\u00e1 la parte correspondiente de tu archivo <code>values.yaml</code> que puedes usar:</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"X-Forwarded-For\"\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los servicios de BunkerWeb y del programador:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"X-Forwarded-For\"\n  ...\n</code></pre> <p>Ten en cuenta que si tu servicio ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Lee con atenci\u00f3n</p> <p>Solo usa el protocolo PROXY si est\u00e1s seguro de que tu balanceador de carga o proxy inverso lo est\u00e1 enviando. Si lo habilitas y no se est\u00e1 usando, obtendr\u00e1s errores.</p> <p>Asumiremos lo siguiente con respecto a los balanceadores de carga o proxies inversos (necesitar\u00e1s actualizar la configuraci\u00f3n dependiendo de tu configuraci\u00f3n):</p> <ul> <li>Usan el <code>protocolo PROXY</code> v1 o v2 para establecer la IP real</li> <li>Tienen IPs en las redes <code>1.2.3.0/24</code> y <code>100.64.0.0/10</code></li> </ul> Interfaz de usuario webLinuxTodo en unoDockerDocker autoconfKubernetesSwarm <p>Navega a la p\u00e1gina de Configuraci\u00f3n Global, selecciona el plugin Real IP y completa las siguientes configuraciones:</p> <p>Configuraci\u00f3n de IP real (protocolo PROXY) usando la interfaz de usuario web</p> <p>Ten en cuenta que se recomienda reiniciar BunkerWeb cuando cambies la configuraci\u00f3n relacionada con la IP real.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n al archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>...\nUSE_REAL_IP=yes\nUSE_PROXY_PROTOCOL=yes\nREAL_IP_FROM=1.2.3.0/24 100.64.0.0/16\nREAL_IP_HEADER=proxy_protocol\n...\n</code></pre> <p>Ten en cuenta que se recomienda emitir un reinicio en lugar de una recarga al configurar ajustes relacionados con los protocolos proxy:</p> <pre><code>sudo systemctl restart bunkerweb &amp;&amp; \\\nsudo systemctl restart bunkerweb-scheduler\n</code></pre> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno al ejecutar el contenedor Todo en uno:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e USE_REAL_IP=\"yes\" \\\n    -e USE_PROXY_PROTOCOL=\"yes\" \\\n    -e REAL_IP_FROM=\"1.2.3.0/24 100.64.0.0/10\" \\\n    -e REAL_IP_HEADER=\"X-Forwarded-For\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los contenedores de BunkerWeb y del programador:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los contenedores de BunkerWeb y del programador:</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los pods de BunkerWeb y del programador.</p> <p>Aqu\u00ed est\u00e1 la parte correspondiente de tu archivo <code>values.yaml</code> que puedes usar:</p> <pre><code>bunkerweb:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\nscheduler:\n  extraEnvs:\n    - name: USE_REAL_IP\n      value: \"yes\"\n    - name: USE_PROXY_PROTOCOL\n      value: \"yes\"\n    - name: REAL_IP_FROM\n      value: \"1.2.3.0/24 100.64.0.0/10\"\n    - name: REAL_IP_HEADER\n      value: \"proxy_protocol\"\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno de los servicios de BunkerWeb y del programador.</p> <pre><code>bunkerweb:\n  image: bunkerity/bunkerweb:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  ...\n  environment:\n    USE_REAL_IP: \"yes\"\n    USE_PROXY_PROTOCOL: \"yes\"\n    REAL_IP_FROM: \"1.2.3.0/24 100.64.0.0/10\"\n    REAL_IP_HEADER: \"proxy_protocol\"\n  ...\n</code></pre> <p>Ten en cuenta que si tu servicio ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se actualicen las nuevas variables de entorno.</p>"},{"location":"es/advanced/#usando-mecanismos-de-resolucion-dns-personalizados","title":"Usando mecanismos de resoluci\u00f3n DNS personalizados","text":"<p>La configuraci\u00f3n de NGINX de BunkerWeb se puede personalizar para usar diferentes resolutores de DNS seg\u00fan tus necesidades. Esto puede ser particularmente \u00fatil en varios escenarios:</p> <ol> <li>Para respetar las entradas en tu archivo local <code>/etc/hosts</code></li> <li>Cuando necesitas usar servidores DNS personalizados para ciertos dominios</li> <li>Para integrarse con soluciones locales de cach\u00e9 de DNS</li> </ol>"},{"location":"es/advanced/#usando-systemd-resolved","title":"Usando systemd-resolved","text":"<p>Muchos sistemas Linux modernos usan <code>systemd-resolved</code> para la resoluci\u00f3n de DNS. Si quieres que BunkerWeb respete el contenido de tu archivo <code>/etc/hosts</code> y use el mecanismo de resoluci\u00f3n de DNS del sistema, puedes configurarlo para que use el servicio DNS local de systemd-resolved.</p> <p>Para verificar que systemd-resolved se est\u00e1 ejecutando en tu sistema, puedes usar:</p> <pre><code>systemctl status systemd-resolved\n</code></pre> <p>Para habilitar systemd-resolved como tu resolutor de DNS en BunkerWeb, establece la configuraci\u00f3n <code>DNS_RESOLVERS</code> a <code>127.0.0.53</code>, que es la direcci\u00f3n de escucha predeterminada para systemd-resolved:</p> Interfaz de usuario webLinux <p>Navega a la p\u00e1gina de Configuraci\u00f3n Global y establece los resolutores de DNS en <code>127.0.0.53</code></p> <p>Configuraci\u00f3n de resolutores de DNS usando la interfaz de usuario web</p> <p>Necesitar\u00e1s modificar el archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.53\n...\n</code></pre> <p>Despu\u00e9s de hacer este cambio, recarga el Programador para aplicar la configuraci\u00f3n:</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre>"},{"location":"es/advanced/#usando-dnsmasq","title":"Usando dnsmasq","text":"<p>dnsmasq es un servidor ligero de DNS, DHCP y TFTP que se usa com\u00fanmente para el almacenamiento en cach\u00e9 y la personalizaci\u00f3n de DNS local. Es particularmente \u00fatil cuando necesitas m\u00e1s control sobre tu resoluci\u00f3n de DNS del que proporciona systemd-resolved.</p> LinuxTodo en unoDocker <p>Primero, instala y configura dnsmasq en tu sistema Linux:</p> Debian/UbuntuRHEL/Fedora <pre><code># Instalar dnsmasq\nsudo apt-get update &amp;&amp; sudo apt-get install dnsmasq\n\n# Configurar dnsmasq para escuchar solo en localhost\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Agregar entradas DNS personalizadas si es necesario\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# Reiniciar dnsmasq\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <pre><code># Instalar dnsmasq\nsudo dnf install dnsmasq\n\n# Configurar dnsmasq para escuchar solo en localhost\necho \"listen-address=127.0.0.1\" | sudo tee -a /etc/dnsmasq.conf\necho \"bind-interfaces\" | sudo tee -a /etc/dnsmasq.conf\n\n# Agregar entradas DNS personalizadas si es necesario\necho \"address=/custom.example.com/192.168.1.10\" | sudo tee -a /etc/dnsmasq.conf\n\n# Reiniciar dnsmasq\nsudo systemctl restart dnsmasq\nsudo systemctl enable dnsmasq\n</code></pre> <p>Luego configura BunkerWeb para que use dnsmasq estableciendo <code>DNS_RESOLVERS</code> en <code>127.0.0.1</code>:</p> Interfaz de usuario webLinux <p>Navega a la p\u00e1gina de Configuraci\u00f3n Global, selecciona el plugin NGINX y establece los resolutores de DNS en <code>127.0.0.1</code>.</p> <p>Configuraci\u00f3n de resolutores de DNS usando la interfaz de usuario web</p> <p>Necesitar\u00e1s modificar el archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>...\nDNS_RESOLVERS=127.0.0.1\n...\n</code></pre> <p>Despu\u00e9s de hacer este cambio, recarga el Programador:</p> <pre><code>sudo systemctl reload bunkerweb-scheduler\n</code></pre> <p>Cuando uses el contenedor Todo en uno, ejecuta dnsmasq en un contenedor separado y configura BunkerWeb para usarlo:</p> <pre><code># Crear una red personalizada para la comunicaci\u00f3n DNS\ndocker network create bw-dns\n\n# Ejecutar el contenedor dnsmasq usando dockurr/dnsmasq con Quad9 DNS\n# Quad9 proporciona resoluci\u00f3n de DNS centrada en la seguridad con bloqueo de malware\ndocker run -d \\\n    --name dnsmasq \\\n    --network bw-dns \\\n    -e DNS1=\"9.9.9.9\" \\\n    -e DNS2=\"149.112.112.112\" \\\n    -p 53:53/udp \\\n    -p 53:53/tcp \\\n    --cap-add=NET_ADMIN \\\n    --restart=always \\\n    dockurr/dnsmasq\n\n# Ejecutar BunkerWeb Todo en uno con el resolutor de DNS dnsmasq\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network bw-dns \\\n    -v bw-storage:/data \\\n    -e DNS_RESOLVERS=\"dnsmasq\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Agrega un servicio dnsmasq a tu archivo docker-compose y configura BunkerWeb para usarlo:</p> <pre><code>services:\n  dnsmasq:\n    image: dockurr/dnsmasq\n    container_name: dnsmasq\n    environment:\n      # Usando los servidores DNS de Quad9 para mayor seguridad y privacidad\n      # Primario: 9.9.9.9 (Quad9 con bloqueo de malware)\n      # Secundario: 149.112.112.112 (Servidor de respaldo de Quad9)\n      DNS1: \"9.9.9.9\"\n      DNS2: \"149.112.112.112\"\n    ports:\n      - 53:53/udp\n      - 53:53/tcp\n    cap_add:\n      - NET_ADMIN\n    restart: always\n    networks:\n      - bw-dns\n\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-services\n      - bw-dns\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    ...\n    environment:\n      DNS_RESOLVERS: \"dnsmasq\"\n    ...\n    networks:\n      - bw-universe\n      - bw-dns\n\nnetworks:\n  # ...redes existentes...\n  bw-dns:\n    name: bw-dns\n</code></pre>"},{"location":"es/advanced/#configuraciones-personalizadas","title":"Configuraciones personalizadas","text":"<p>Para personalizar y a\u00f1adir configuraciones personalizadas a BunkerWeb, puedes aprovechar su base NGINX. Las configuraciones personalizadas de NGINX se pueden a\u00f1adir en diferentes contextos de NGINX, incluidas las configuraciones para el Firewall de Aplicaciones Web (WAF) ModSecurity, que es un componente central de BunkerWeb. Se pueden encontrar m\u00e1s detalles sobre las configuraciones de ModSecurity aqu\u00ed.</p> <p>Estos son los tipos de configuraciones personalizadas disponibles:</p> <ul> <li>http: Configuraciones a nivel HTTP de NGINX.</li> <li>server-http: Configuraciones a nivel HTTP/Servidor de NGINX.</li> <li>default-server-http: Configuraciones a nivel de Servidor de NGINX, espec\u00edficamente para el \"servidor predeterminado\" cuando el nombre del cliente proporcionado no coincide con ning\u00fan nombre de servidor en <code>SERVER_NAME</code>.</li> <li>modsec-crs: Configuraciones aplicadas antes de que se cargue el Core Rule Set de OWASP.</li> <li>modsec: Configuraciones aplicadas despu\u00e9s de que se cargue el Core Rule Set de OWASP, o se utilizan cuando el Core Rule Set no est\u00e1 cargado.</li> <li>crs-plugins-before: Configuraciones para los plugins CRS, aplicadas antes de que se carguen los plugins CRS.</li> <li>crs-plugins-after: Configuraciones para los plugins CRS, aplicadas despu\u00e9s de que se carguen los plugins CRS.</li> <li>stream: Configuraciones a nivel de Stream de NGINX.</li> <li>server-stream: Configuraciones a nivel de Stream/Servidor de NGINX.</li> </ul> <p>Las configuraciones personalizadas se pueden aplicar globalmente o espec\u00edficamente para un servidor en particular, dependiendo del contexto aplicable y de si el modo multisitio est\u00e1 habilitado.</p> <p>El m\u00e9todo para aplicar configuraciones personalizadas depende de la integraci\u00f3n que se est\u00e9 utilizando. Sin embargo, el proceso subyacente implica a\u00f1adir archivos con el sufijo <code>.conf</code> a carpetas espec\u00edficas. Para aplicar una configuraci\u00f3n personalizada para un servidor espec\u00edfico, el archivo debe colocarse en una subcarpeta con el nombre del servidor principal.</p> <p>Algunas integraciones proporcionan formas m\u00e1s convenientes de aplicar configuraciones, como el uso de Configs en Docker Swarm o ConfigMap en Kubernetes. Estas opciones ofrecen enfoques m\u00e1s sencillos para gestionar y aplicar configuraciones.</p> Interfaz de usuario webLinuxTodo en unoDockerDocker autoconfKubernetesSwarm <p>Navega a la p\u00e1gina de Configuraciones, haz clic en Crear nueva configuraci\u00f3n personalizada, luego puedes elegir si es global o espec\u00edfica para un servicio, el tipo de configuraci\u00f3n y el nombre de la configuraci\u00f3n:</p> <p>Configuraciones personalizadas usando la interfaz de usuario web</p> <p>No olvides hacer clic en el bot\u00f3n <code>\ud83d\udcbe Guardar</code>.</p> <p>Cuando se utiliza la integraci\u00f3n de Linux, las configuraciones personalizadas deben escribirse en la carpeta <code>/etc/bunkerweb/configs</code>.</p> <p>Aqu\u00ed hay un ejemplo para server-http/hello-world.conf:</p> <pre><code>location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\n</code></pre> <p>Debido a que BunkerWeb se ejecuta como un usuario sin privilegios (nginx:nginx), necesitar\u00e1s editar los permisos:</p> <pre><code>chown -R root:nginx /etc/bunkerweb/configs &amp;&amp; \\\nchmod -R 770 /etc/bunkerweb/configs\n</code></pre> <p>Ahora verifiquemos el estado del Programador:</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>Si ya se est\u00e1 ejecutando, podemos recargarlo:</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>De lo contrario, tendremos que iniciarlo:</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Cuando se utiliza la imagen Todo en uno, tienes dos opciones para a\u00f1adir configuraciones personalizadas:</p> <ul> <li>Usar configuraciones espec\u00edficas <code>*_CUSTOM_CONF_*</code> como variables de entorno al ejecutar el contenedor (recomendado).</li> <li>Escribir archivos <code>.conf</code> en el directorio <code>/data/configs/</code> dentro del volumen montado en <code>/data</code>.</li> </ul> <p>Usando configuraciones (Variables de Entorno)</p> <p>Las configuraciones a usar deben seguir el patr\u00f3n <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code>:</p> <ul> <li><code>&lt;SITE&gt;</code> : Nombre del servidor principal opcional si el modo multisitio est\u00e1 habilitado y la configuraci\u00f3n debe aplicarse a un servicio espec\u00edfico.</li> <li><code>&lt;TYPE&gt;</code> : El tipo de configuraci\u00f3n, los valores aceptados son <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> y <code>SERVER_STREAM</code>.</li> <li><code>&lt;NAME&gt;</code> : El nombre de la configuraci\u00f3n sin el sufijo <code>.conf</code>.</li> </ul> <p>Aqu\u00ed hay un ejemplo de prueba al ejecutar el contenedor Todo en uno:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e \"CUSTOM_CONF_SERVER_HTTP_hello-world=location /hello { \\\n        default_type 'text/plain'; \\\n        content_by_lua_block { \\\n          ngx.say('world'); \\\n        } \\\n      }\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se apliquen las nuevas variables de entorno.</p> <p>Usando archivos</p> <p>Lo primero que hay que hacer es crear las carpetas:</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Ahora puedes escribir tus configuraciones:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Debido a que el programador se ejecuta como un usuario sin privilegios con UID y GID 101, necesitar\u00e1s editar los permisos:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Al iniciar el contenedor del programador, necesitar\u00e1s montar la carpeta en /data:</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v ./bw-data:/data \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Cuando se utiliza la integraci\u00f3n de Docker, tienes dos opciones para a\u00f1adir configuraciones personalizadas:</p> <ul> <li>Usar configuraciones espec\u00edficas <code>*_CUSTOM_CONF_*</code> como variables de entorno (recomendado)</li> <li>Escribir archivos .conf en el volumen montado en /data del programador</li> </ul> <p>Usando configuraciones</p> <p>Las configuraciones a usar deben seguir el patr\u00f3n <code>&lt;SITE&gt;_CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code>:</p> <ul> <li><code>&lt;SITE&gt;</code>: nombre del servidor principal opcional si el modo multisitio est\u00e1 habilitado y la configuraci\u00f3n debe aplicarse a un servicio espec\u00edfico</li> <li><code>&lt;TYPE&gt;</code>: el tipo de configuraci\u00f3n, los valores aceptados son <code>HTTP</code>, <code>DEFAULT_SERVER_HTTP</code>, <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code>, <code>STREAM</code> y <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code>: el nombre de la configuraci\u00f3n sin el sufijo .conf</li> </ul> <p>Aqu\u00ed hay un ejemplo de prueba usando un archivo docker-compose:</p> <pre><code>...\nbw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  environment:\n    - |\n      CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n          ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Usando archivos</p> <p>Lo primero que hay que hacer es crear las carpetas:</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Ahora puedes escribir tus configuraciones:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Debido a que el programador se ejecuta como un usuario sin privilegios con UID y GID 101, necesitar\u00e1s editar los permisos:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Al iniciar el contenedor del programador, necesitar\u00e1s montar la carpeta en /data:</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>Cuando se utiliza la integraci\u00f3n de autoconfiguraci\u00f3n de Docker, tienes dos opciones para a\u00f1adir configuraciones personalizadas:</p> <ul> <li>Usar configuraciones espec\u00edficas <code>*_CUSTOM_CONF_*</code> como etiquetas (m\u00e1s f\u00e1cil)</li> <li>Escribir archivos .conf en el volumen montado en /data del programador</li> </ul> <p>Usando etiquetas</p> <p>Limitaciones al usar etiquetas</p> <p>Cuando usas etiquetas con la integraci\u00f3n de autoconfiguraci\u00f3n de Docker, solo puedes aplicar configuraciones personalizadas para el servicio web correspondiente. No es posible aplicar configuraciones http, default-server-http, stream o cualquier configuraci\u00f3n global (como server-http o server-stream para todos los servicios): necesitar\u00e1s montar archivos para ese prop\u00f3sito.</p> <p>Las etiquetas a usar deben seguir el patr\u00f3n <code>bunkerweb.CUSTOM_CONF_&lt;TYPE&gt;_&lt;NAME&gt;</code>:</p> <ul> <li><code>&lt;TYPE&gt;</code>: el tipo de configuraci\u00f3n, los valores aceptados son <code>SERVER_HTTP</code>, <code>MODSEC</code>, <code>MODSEC_CRS</code>, <code>CRS_PLUGINS_BEFORE</code>, <code>CRS_PLUGINS_AFTER</code> y <code>SERVER_STREAM</code></li> <li><code>&lt;NAME&gt;</code>: el nombre de la configuraci\u00f3n sin el sufijo .conf</li> </ul> <p>Aqu\u00ed hay un ejemplo de prueba usando un archivo docker-compose:</p> <pre><code>myapp:\n  image: nginxdemos/nginx-hello\n  labels:\n    - |\n      bunkerweb.CUSTOM_CONF_SERVER_HTTP_hello-world=\n      location /hello {\n        default_type 'text/plain';\n        content_by_lua_block {\n            ngx.say('world')\n        }\n      }\n  ...\n</code></pre> <p>Usando archivos</p> <p>Lo primero que hay que hacer es crear las carpetas:</p> <pre><code>mkdir -p ./bw-data/configs/server-http\n</code></pre> <p>Ahora puedes escribir tus configuraciones:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" &gt; ./bw-data/configs/server-http/hello-world.conf\n</code></pre> <p>Debido a que el programador se ejecuta como un usuario sin privilegios con UID y GID 101, necesitar\u00e1s editar los permisos:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Al iniciar el contenedor del programador, necesitar\u00e1s montar la carpeta en /data:</p> <pre><code>bw-scheduler:\n  image: bunkerity/bunkerweb-scheduler:testing\n  volumes:\n    - ./bw-data:/data\n  ...\n</code></pre> <p>Cuando se utiliza la integraci\u00f3n de Kubernetes, las configuraciones personalizadas se gestionan mediante ConfigMap.</p> <p>Para mantenerlo simple, ni siquiera necesitas usar el ConfigMap con un Pod (por ejemplo, como variable de entorno o volumen): el Pod de autoconfiguraci\u00f3n est\u00e1 escuchando eventos de ConfigMap y actualizar\u00e1 las configuraciones personalizadas cuando sea necesario.</p> <p>Al crear un ConfigMap, necesitar\u00e1s a\u00f1adir etiquetas especiales:</p> <ul> <li>bunkerweb.io/CONFIG_TYPE: debe establecerse a un tipo de configuraci\u00f3n personalizada v\u00e1lido (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream o server-stream)</li> <li>bunkerweb.io/CONFIG_SITE: establece un nombre de servidor para aplicar la configuraci\u00f3n a ese servidor espec\u00edfico (opcional, se aplicar\u00e1 globalmente si no se establece)</li> </ul> <p>Aqu\u00ed est\u00e1 el ejemplo:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-all-server-http\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"server-http\"\ndata:\n  myconf: |\n  location /hello {\n    default_type 'text/plain';\n    content_by_lua_block {\n      ngx.say('world')\n    }\n  }\n</code></pre> <p>Configuraci\u00f3n extra personalizada</p> <p>Desde la versi\u00f3n <code>1.6.0</code>, puedes a\u00f1adir/sobrescribir configuraciones usando la anotaci\u00f3n <code>bunkerweb.io/CONFIG_TYPE=settings</code>. Aqu\u00ed hay un ejemplo:</p> <pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cfg-bunkerweb-extra-settings\n  annotations:\n    bunkerweb.io/CONFIG_TYPE: \"settings\"\ndata:\n  USE_ANTIBOT: \"captcha\" # configuraci\u00f3n multisitio que se aplicar\u00e1 a todos los servicios que no la sobrescriban\n  USE_REDIS: \"yes\" # configuraci\u00f3n global que se aplicar\u00e1 globalmente\n  ...\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Cuando se utiliza la integraci\u00f3n de Swarm, las configuraciones personalizadas se gestionan mediante Docker Configs.</p> <p>Para mantenerlo simple, ni siquiera necesitas adjuntar la Configuraci\u00f3n a un servicio: el servicio de autoconfiguraci\u00f3n est\u00e1 escuchando los eventos de Configuraci\u00f3n y actualizar\u00e1 las configuraciones personalizadas cuando sea necesario.</p> <p>Al crear una Configuraci\u00f3n, necesitar\u00e1s a\u00f1adir etiquetas especiales:</p> <ul> <li>bunkerweb.CONFIG_TYPE: debe establecerse a un tipo de configuraci\u00f3n personalizada v\u00e1lido (http, server-http, default-server-http, modsec, modsec-crs, crs-plugins-before, crs-plugins-after, stream o server-stream)</li> <li>bunkerweb.CONFIG_SITE: establece un nombre de servidor para aplicar la configuraci\u00f3n a ese servidor espec\u00edfico (opcional, se aplicar\u00e1 globalmente si no se establece)</li> </ul> <p>Aqu\u00ed est\u00e1 el ejemplo:</p> <pre><code>echo \"location /hello {\n  default_type 'text/plain';\n  content_by_lua_block {\n    ngx.say('world')\n  }\n}\" | docker config create -l bunkerweb.CONFIG_TYPE=server-http my-config -\n</code></pre> <p>No hay mecanismo de actualizaci\u00f3n: la alternativa es eliminar una configuraci\u00f3n existente usando <code>docker config rm</code> y luego recrearla.</p>"},{"location":"es/advanced/#ejecutando-muchos-servicios-en-produccion","title":"Ejecutando muchos servicios en producci\u00f3n","text":""},{"location":"es/advanced/#crs-global","title":"CRS Global","text":"<p>Plugins CRS</p> <p>Cuando el CRS se carga globalmente, los plugins CRS no son compatibles. Si necesitas usarlos, tendr\u00e1s que cargar el CRS por servicio.</p> <p>Si usas BunkerWeb en producci\u00f3n con un gran n\u00famero de servicios y habilitas la caracter\u00edstica de ModSecurity globalmente con las reglas CRS, el tiempo requerido para cargar las configuraciones de BunkerWeb puede volverse demasiado largo, resultando potencialmente en un tiempo de espera agotado.</p> <p>La soluci\u00f3n es cargar las reglas CRS globalmente en lugar de por servicio. Este comportamiento no est\u00e1 habilitado por defecto por razones de compatibilidad con versiones anteriores y porque tiene un inconveniente: si habilitas la carga global de reglas CRS, ya no ser\u00e1 posible definir reglas modsec-crs (ejecutadas antes de las reglas CRS) por servicio. Sin embargo, esta limitaci\u00f3n puede ser superada escribiendo reglas de exclusi\u00f3n globales <code>modsec-crs</code> como esta:</p> <pre><code>SecRule REQUEST_FILENAME \"@rx ^/somewhere$\" \"nolog,phase:4,allow,id:1010,chain\"\nSecRule REQUEST_HEADERS:Host \"@rx ^app1\\.example\\.com$\" \"nolog\"\n</code></pre> <p>Puedes habilitar la carga global de CRS estableciendo <code>USE_MODSECURITY_GLOBAL_CRS</code> en <code>yes</code>.</p>"},{"location":"es/advanced/#ajustar-max_allowed_packet-para-mariadbmysql","title":"Ajustar max_allowed_packet para MariaDB/MySQL","text":"<p>Parece que el valor predeterminado para el par\u00e1metro <code>max_allowed_packet</code> en los servidores de bases de datos MariaDB y MySQL no es suficiente cuando se utiliza BunkerWeb con un gran n\u00famero de servicios.</p> <p>Si encuentras errores como este, especialmente en el programador:</p> <pre><code>[Warning] Aborted connection 5 to db: 'db' user: 'bunkerweb' host: '172.20.0.4' (Got a packet bigger than 'max_allowed_packet' bytes)\n</code></pre> <p>Necesitar\u00e1s aumentar el <code>max_allowed_packet</code> en tu servidor de base de datos.</p>"},{"location":"es/advanced/#persistencia-de-bloqueos-e-informes","title":"Persistencia de bloqueos e informes","text":"<p>Por defecto, BunkerWeb almacena los bloqueos e informes en un almac\u00e9n de datos Lua local. Aunque es simple y eficiente, esta configuraci\u00f3n significa que los datos se pierden cuando se reinicia la instancia. Para asegurar que los bloqueos e informes persistan a trav\u00e9s de los reinicios, puedes configurar BunkerWeb para que utilice un servidor remoto Redis o Valkey.</p> <p>\u00bfPor qu\u00e9 usar Redis/Valkey?</p> <p>Redis y Valkey son potentes almacenes de datos en memoria com\u00fanmente utilizados como bases de datos, cach\u00e9s y agentes de mensajes. Son altamente escalables y soportan una variedad de estructuras de datos, incluyendo:</p> <ul> <li>Strings: Pares b\u00e1sicos de clave-valor.</li> <li>Hashes: Pares de campo-valor dentro de una sola clave.</li> <li>Lists: Colecciones ordenadas de cadenas.</li> <li>Sets: Colecciones no ordenadas de cadenas \u00fanicas.</li> <li>Sorted Sets: Colecciones ordenadas con puntuaciones.</li> </ul> <p>Al aprovechar Redis o Valkey, BunkerWeb puede almacenar persistentemente bloqueos, informes y datos de cach\u00e9, asegurando durabilidad y escalabilidad.</p> <p>Habilitando el soporte de Redis/Valkey</p> <p>Para habilitar el soporte de Redis o Valkey, configura los siguientes ajustes en tu archivo de configuraci\u00f3n de BunkerWeb:</p> <pre><code># Habilitar el soporte de Redis/Valkey\nUSE_REDIS=yes\n\n# Nombre de host o direcci\u00f3n IP del servidor Redis/Valkey\nREDIS_HOST=&lt;hostname&gt;\n\n# N\u00famero de puerto del servidor Redis/Valkey (predeterminado: 6379)\nREDIS_PORT=6379\n\n# N\u00famero de base de datos de Redis/Valkey (predeterminado: 0)\nREDIS_DATABASE=0\n</code></pre> <ul> <li><code>USE_REDIS</code>: Establ\u00e9celo en <code>yes</code> para habilitar la integraci\u00f3n con Redis/Valkey.</li> <li><code>REDIS_HOST</code>: Especifica el nombre de host o la direcci\u00f3n IP del servidor Redis/Valkey.</li> <li><code>REDIS_PORT</code>: Especifica el n\u00famero de puerto para el servidor Redis/Valkey. El valor predeterminado es <code>6379</code>.</li> <li><code>REDIS_DATABASE</code>: Especifica el n\u00famero de la base de datos de Redis/Valkey a utilizar. El valor predeterminado es <code>0</code>.</li> </ul> <p>Si necesitas configuraciones m\u00e1s avanzadas, como autenticaci\u00f3n, soporte SSL/TLS o modo Sentinel, consulta la documentaci\u00f3n de configuraci\u00f3n del plugin de Redis para obtener una gu\u00eda detallada.</p>"},{"location":"es/advanced/#proteger-aplicaciones-udptcp","title":"Proteger aplicaciones UDP/TCP","text":"<p>Caracter\u00edstica experimental</p> <p>Esta caracter\u00edstica no est\u00e1 lista para producci\u00f3n. Si\u00e9ntete libre de probarla y reportarnos cualquier error usando los issues en el repositorio de GitHub.</p> <p>BunkerWeb ofrece la capacidad de funcionar como un proxy inverso gen\u00e9rico UDP/TCP, permiti\u00e9ndote proteger cualquier aplicaci\u00f3n basada en red que opere al menos en la capa 4 del modelo OSI. En lugar de utilizar el m\u00f3dulo HTTP \"cl\u00e1sico\", BunkerWeb aprovecha el m\u00f3dulo stream de NGINX.</p> <p>Es importante tener en cuenta que no todas las configuraciones y caracter\u00edsticas de seguridad est\u00e1n disponibles cuando se utiliza el m\u00f3dulo stream. Puedes encontrar informaci\u00f3n adicional sobre esto en las secciones de caracter\u00edsticas de la documentaci\u00f3n.</p> <p>Configurar un proxy inverso b\u00e1sico es bastante similar a la configuraci\u00f3n HTTP, ya que implica usar las mismas configuraciones: <code>USE_REVERSE_PROXY=yes</code> y <code>REVERSE_PROXY_HOST=myapp:9000</code>. Incluso cuando BunkerWeb est\u00e1 posicionado detr\u00e1s de un Balanceador de Carga, las configuraciones siguen siendo las mismas (siendo el protocolo PROXY la opci\u00f3n soportada por razones evidentes).</p> <p>Adem\u00e1s de eso, se utilizan las siguientes configuraciones espec\u00edficas:</p> <ul> <li><code>SERVER_TYPE=stream</code>: activa el modo <code>stream</code> (UDP/TCP gen\u00e9rico) en lugar del <code>http</code> (que es el predeterminado)</li> <li><code>LISTEN_STREAM_PORT=4242</code>: el puerto de escucha \"plano\" (sin SSL/TLS) en el que BunkerWeb escuchar\u00e1</li> <li><code>LISTEN_STREAM_PORT_SSL=4343</code>: el puerto de escucha \"ssl/tls\" en el que BunkerWeb escuchar\u00e1</li> <li><code>USE_UDP=no</code>: escucha y reenv\u00eda paquetes UDP en lugar de TCP</li> </ul> <p>Para obtener una lista completa de las configuraciones relacionadas con el modo <code>stream</code>, consulta la secci\u00f3n de caracter\u00edsticas de la documentaci\u00f3n.</p> <p>m\u00faltiples puertos de escucha</p> <p>Desde la versi\u00f3n <code>1.6.0</code>, BunkerWeb soporta m\u00faltiples puertos de escucha para el modo <code>stream</code>. Puedes especificarlos usando las configuraciones <code>LISTEN_STREAM_PORT</code> y <code>LISTEN_STREAM_PORT_SSL</code>.</p> <p>Aqu\u00ed hay un ejemplo:</p> <pre><code>...\nLISTEN_STREAM_PORT=4242\nLISTEN_STREAM_PORT_SSL=4343\nLISTEN_STREAM_PORT_1=4244\nLISTEN_STREAM_PORT_SSL_1=4344\n...\n</code></pre> Todo en unoDockerDocker autoconfKubernetesLinuxSwarm <p>Necesitar\u00e1s agregar la configuraci\u00f3n a las variables de entorno al ejecutar el contenedor Todo en uno. Tambi\u00e9n necesitar\u00e1s exponer los puertos de stream.</p> <p>Este ejemplo configura BunkerWeb para hacer proxy de dos aplicaciones basadas en stream, <code>app1.example.com</code> y <code>app2.example.com</code>.</p> <pre><code>docker run -d \\\n    --name bunkerweb-aio \\\n    -v bw-storage:/data \\\n    -e SERVICE_UI=\"no\" \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e USE_REVERSE_PROXY=\"yes\" \\\n    -e SERVER_TYPE=\"stream\" \\\n    -e app1.example.com_REVERSE_PROXY_HOST=\"myapp1:9000\" \\\n    -e app1.example.com_LISTEN_STREAM_PORT=\"10000\" \\\n    -e app2.example.com_REVERSE_PROXY_HOST=\"myapp2:9000\" \\\n    -e app2.example.com_LISTEN_STREAM_PORT=\"20000\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    -p 10000:10000/tcp \\\n    -p 20000:20000/tcp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se apliquen las nuevas variables de entorno.</p> <p>Tus aplicaciones (<code>myapp1</code>, <code>myapp2</code>) deber\u00edan estar ejecut\u00e1ndose en contenedores separados (o ser accesibles de otra manera) y sus nombres de host/IPs (p. ej., <code>myapp1</code>, <code>myapp2</code> usados en <code>_REVERSE_PROXY_HOST</code>) deben ser resolvibles y alcanzables desde el contenedor <code>bunkerweb-aio</code>. Esto t\u00edpicamente implica conectarlos a una red Docker compartida.</p> <p>Desactivar el servicio de la interfaz de usuario</p> <p>Se recomienda desactivar el servicio de la interfaz de usuario (p. ej., estableciendo <code>SERVICE_UI=no</code> como una variable de entorno) ya que la interfaz de usuario web no es compatible con <code>SERVER_TYPE=stream</code>.</p> <p>Cuando se utiliza la integraci\u00f3n con Docker, la forma m\u00e1s f\u00e1cil de proteger las aplicaciones de red existentes es agregar los servicios a la red <code>bw-services</code>:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Usamos un ancla para evitar repetir la misma configuraci\u00f3n para todos los servicios\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n  # Token de API opcional para llamadas de API autenticadas\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Mantenlo si quieres usar la automatizaci\u00f3n de Let's Encrypt al usar el tipo de desaf\u00edo http\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Esta configuraci\u00f3n es obligatoria para especificar la instancia de BunkerWeb\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      USE_REVERSE_PROXY: \"yes\" # Se aplicar\u00e1 a todos los servicios\n      SERVER_TYPE: \"stream\" # Se aplicar\u00e1 a todos los servicios\n      app1.example.com_REVERSE_PROXY_HOST: \"myapp1:9000\"\n      app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n      app2.example.com_REVERSE_PROXY_HOST: \"myapp2:9000\"\n      app2.example.com_LISTEN_STREAM_PORT: \"20000\"\n    volumes:\n      - bw-storage:/data # Esto se usa para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Antes de ejecutar el stack de integraci\u00f3n Docker autoconf en tu m\u00e1quina, necesitar\u00e1s editar los puertos:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080\" # Mantenlo si quieres usar la automatizaci\u00f3n de Let's Encrypt cuando usas el tipo de desaf\u00edo http\n      - \"10000:10000\" # app1\n      - \"20000:20000\" # app2\n...\n</code></pre> <p>Una vez que el stack est\u00e9 en ejecuci\u00f3n, puedes conectar tus aplicaciones existentes a la red <code>bw-services</code> y configurar BunkerWeb con etiquetas:</p> <pre><code>services:\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app1.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.SERVER_NAME=app2.example.com\"\n      - \"bunkerweb.SERVER_TYPE=stream\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n      - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Caracter\u00edstica experimental</p> <p>Por el momento, los Ingresses no soportan el modo <code>stream</code>. Lo que estamos haciendo aqu\u00ed es una soluci\u00f3n alternativa para que funcione.</p> <p>Si\u00e9ntete libre de probarlo y reportarnos cualquier error usando los issues en el repositorio de GitHub.</p> <p>Antes de ejecutar el stack de la integraci\u00f3n de Kubernetes en tu m\u00e1quina, necesitar\u00e1s abrir los puertos en tu balanceador de carga:</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: lb\nspec:\n  type: LoadBalancer\n  ports:\n    - name: http # Mantenlo si quieres usar la automatizaci\u00f3n de Let's Encrypt cuando usas el tipo de desaf\u00edo http\n      port: 80\n      targetPort: 8080\n    - name: app1\n      port: 10000\n      targetPort: 10000\n    - name: app2\n      port: 20000\n      targetPort: 20000\n  selector:\n    app: bunkerweb\n</code></pre> <p>Una vez que el stack est\u00e9 en ejecuci\u00f3n, puedes crear tus recursos de ingress:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  namespace: services\n  annotations:\n    bunkerweb.io/SERVER_TYPE: \"stream\" # Se aplicar\u00e1 a todos los servicios\n    bunkerweb.io/app1.example.com_LISTEN_STREAM_PORT: \"10000\"\n    bunkerweb.io/app2.example.com_LISTEN_STREAM_PORT: \"20000\"\nspec:\n  rules:\n    - host: app1.example.com\n      http:\n        paths:\n          - path: / # Esto no se usa en modo stream pero es obligatorio\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app1\n                port:\n                  number: 9000\n    - host: app2.example.com\n      http:\n        paths:\n          - path: / # Esto no se usa en modo stream pero es obligatorio\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-app2\n                port:\n                  number: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app1\n  namespace: services\n  labels:\n    app: app1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app1\n  template:\n    metadata:\n      labels:\n        app: app1\n    spec:\n      containers:\n        - name: app1\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app1\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app1\n  namespace: services\nspec:\n  selector:\n    app: app1\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app2\n  namespace: services\n  labels:\n    app: app2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app2\n  template:\n    metadata:\n      labels:\n        app: app2\n    spec:\n      containers:\n        - name: app2\n          image: istio/tcp-echo-server:1.3\n          args: [\"9000\", \"app2\"]\n          ports:\n            - containerPort: 9000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app2\n  namespace: services\nspec:\n  selector:\n    app: app2\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n</code></pre> <p>Necesitar\u00e1s agregar la configuraci\u00f3n al archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>...\nSERVER_NAME=app1.example.com app2.example.com\nMULTISITE=yes\nUSE_REVERSE_PROXY=yes\nSERVER_TYPE=stream\napp1.example.com_REVERSE_PROXY_HOST=myapp1.domain.or.ip:9000\napp1.example.com_LISTEN_STREAM_PORT=10000\napp2.example.com_REVERSE_PROXY_HOST=myapp2.domain.or.ip:9000\napp2.example.com_LISTEN_STREAM_PORT=20000\n...\n</code></pre> <p>Ahora verifiquemos el estado del Programador:</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>Si ya se est\u00e1 ejecutando, podemos recargarlo:</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>De lo contrario, tendremos que iniciarlo:</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Antes de ejecutar el stack de integraci\u00f3n de Swarm en tu m\u00e1quina, necesitar\u00e1s editar los puertos:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      # Mantenlo si quieres usar la automatizaci\u00f3n de Let's Encrypt cuando usas el tipo de desaf\u00edo http\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      # app1\n      - published: 10000\n        target: 10000\n        mode: host\n        protocol: tcp\n      # app2\n      - published: 20000\n        target: 20000\n        mode: host\n        protocol: tcp\n...\n</code></pre> <p>Una vez que el stack est\u00e9 en ejecuci\u00f3n, puedes conectar tus aplicaciones existentes a la red <code>bw-services</code> y configurar BunkerWeb con etiquetas:</p> <pre><code>services:\n\n  myapp1:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app1\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp1:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=10000\"\n\n  myapp2:\n    image: istio/tcp-echo-server:1.3\n    command: [ \"9000\", \"app2\" ]\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.SERVER_TYPE=stream\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=myapp2:9000\"\n        - \"bunkerweb.LISTEN_STREAM_PORT=20000\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"es/advanced/#php","title":"PHP","text":"<p>Caracter\u00edstica experimental</p> <p>Por el momento, el soporte de PHP con BunkerWeb todav\u00eda est\u00e1 en beta y te recomendamos que utilices una arquitectura de proxy inverso si puedes. Por cierto, PHP no es compatible en absoluto con algunas integraciones como Kubernetes.</p> <p>BunkerWeb soporta PHP usando instancias externas o remotas de PHP-FPM. Asumiremos que ya est\u00e1s familiarizado con la gesti\u00f3n de este tipo de servicios.</p> <p>Se pueden usar las siguientes configuraciones:</p> <ul> <li><code>REMOTE_PHP</code>: Nombre de host de la instancia remota de PHP-FPM.</li> <li><code>REMOTE_PHP_PATH</code>: Carpeta ra\u00edz que contiene los archivos en la instancia remota de PHP-FPM.</li> <li><code>REMOTE_PHP_PORT</code>: Puerto de la instancia remota de PHP-FPM (el predeterminado es 9000).</li> <li><code>LOCAL_PHP</code>: Ruta al archivo de socket local de la instancia de PHP-FPM.</li> <li><code>LOCAL_PHP_PATH</code>: Carpeta ra\u00edz que contiene los archivos en la instancia local de PHP-FPM.</li> </ul> Todo en unoDockerDocker autoconfKubernetesLinuxSwarm <p>Cuando se utiliza la imagen Todo en uno, para soportar aplicaciones PHP, necesitar\u00e1s:</p> <ul> <li>Montar tus archivos PHP en la carpeta <code>/var/www/html</code> de BunkerWeb.</li> <li>Configurar un contenedor PHP-FPM para tu aplicaci\u00f3n y montar la carpeta que contiene los archivos PHP.</li> <li>Usar las configuraciones espec\u00edficas <code>REMOTE_PHP</code> y <code>REMOTE_PHP_PATH</code> como variables de entorno al ejecutar BunkerWeb.</li> </ul> <p>Si habilitas el modo multisitio, necesitar\u00e1s crear directorios separados para cada una de tus aplicaciones. Cada subdirectorio debe nombrarse usando el primer valor de <code>SERVER_NAME</code>. Aqu\u00ed hay un ejemplo de prueba:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app2.example.com\n    \u2514\u2500\u2500 index.php\n\n2 directorios, 2 archivos\n</code></pre> <p>Asumiremos que tus aplicaciones PHP est\u00e1n ubicadas en una carpeta llamada <code>www</code>. Ten en cuenta que necesitar\u00e1s corregir los permisos para que BunkerWeb (UID/GID 101) pueda al menos leer archivos y listar carpetas, y que PHP-FPM (UID/GID 33 si usas la imagen <code>php:fpm</code>) sea el propietario de los archivos y carpetas:</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Ahora puedes ejecutar BunkerWeb, configurarlo para tu aplicaci\u00f3n PHP y tambi\u00e9n ejecutar las aplicaciones PHP. Necesitar\u00e1s crear una red Docker personalizada para permitir que BunkerWeb se comunique con tus contenedores PHP-FPM.</p> <pre><code># Crear una red personalizada\ndocker network create php-network\n\n# Ejecutar contenedores PHP-FPM\ndocker run -d --name myapp1-php --network php-network -v ./www/app1.example.com:/app php:fpm\ndocker run -d --name myapp2-php --network php-network -v ./www/app2.example.com:/app php:fpm\n\n# Ejecutar BunkerWeb Todo en uno\ndocker run -d \\\n    --name bunkerweb-aio \\\n    --network php-network \\\n    -v ./www:/var/www/html \\\n    -v bw-storage:/data \\\n    -e SERVER_NAME=\"app1.example.com app2.example.com\" \\\n    -e MULTISITE=\"yes\" \\\n    -e REMOTE_PHP_PATH=\"/app\" \\\n    -e app1.example.com_REMOTE_PHP=\"myapp1-php\" \\\n    -e app2.example.com_REMOTE_PHP=\"myapp2-php\" \\\n    -p 80:8080/tcp \\\n    -p 443:8443/tcp \\\n    -p 443:8443/udp \\\n    bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Ten en cuenta que si tu contenedor ya est\u00e1 creado, necesitar\u00e1s eliminarlo y recrearlo para que se apliquen las nuevas variables de entorno.</p> <p>Cuando se utiliza la integraci\u00f3n de Docker, para admitir aplicaciones PHP, necesitar\u00e1s:</p> <ul> <li>Montar tus archivos PHP en la carpeta <code>/var/www/html</code> de BunkerWeb</li> <li>Configurar un contenedor PHP-FPM para tu aplicaci\u00f3n y montar la carpeta que contiene los archivos PHP</li> <li>Usar las configuraciones espec\u00edficas <code>REMOTE_PHP</code> y <code>REMOTE_PHP_PATH</code> como variables de entorno al iniciar BunkerWeb</li> </ul> <p>Si habilitas el modo multisitio, necesitar\u00e1s crear directorios separados para cada una de tus aplicaciones. Cada subdirectorio debe nombrarse utilizando el primer valor de <code>SERVER_NAME</code>. Aqu\u00ed hay un ejemplo de prueba:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directorios, 3 archivos\n</code></pre> <p>Asumiremos que tus aplicaciones PHP est\u00e1n ubicadas en una carpeta llamada <code>www</code>. Ten en cuenta que necesitar\u00e1s arreglar los permisos para que BunkerWeb (UID/GID 101) pueda al menos leer archivos y listar carpetas y PHP-FPM (UID/GID 33 si usas la imagen <code>php:fpm</code>) sea el propietario de los archivos y carpetas:</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Ahora puedes ejecutar BunkerWeb, configurarlo para tu aplicaci\u00f3n PHP y tambi\u00e9n ejecutar las aplicaciones PHP:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Usamos un ancla para evitar repetir la misma configuraci\u00f3n para todos los servicios\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Esta configuraci\u00f3n es obligatoria para especificar la instancia de BunkerWeb\n      SERVER_NAME: \"app1.example.com app2.example.com\"\n      MULTISITE: \"yes\"\n      REMOTE_PHP_PATH: \"/app\" # Se aplicar\u00e1 a todos los servicios gracias a la configuraci\u00f3n MULTISITE\n      app1.example.com_REMOTE_PHP: \"myapp1\"\n      app2.example.com_REMOTE_PHP: \"myapp2\"\n      app3.example.com_REMOTE_PHP: \"myapp3\"\n    volumes:\n      - bw-storage:/data # Esto se usa para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\n  myapp1:\n    image: php:fpm\n    volumes:\n      - ./www/app1.example.com:/app\n    networks:\n      - bw-services\n\n  myapp2:\n    image: php:fpm\n    volumes:\n      - ./www/app2.example.com:/app\n    networks:\n      - bw-services\n\n  myapp3:\n    image: php:fpm\n    volumes:\n      - ./www/app3.example.com:/app\n    networks:\n      - bw-services\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n</code></pre> <p>Modo multisitio habilitado</p> <p>La integraci\u00f3n de Docker autoconf implica el uso del modo multisitio: proteger una aplicaci\u00f3n PHP es lo mismo que proteger varias.</p> <p>Cuando se utiliza la integraci\u00f3n de Docker autoconf, para admitir aplicaciones PHP, necesitar\u00e1s:</p> <ul> <li>Montar tus archivos PHP en la carpeta <code>/var/www/html</code> de BunkerWeb</li> <li>Configurar contenedores PHP-FPM para tus aplicaciones y montar la carpeta que contiene las aplicaciones PHP</li> <li>Usar las configuraciones espec\u00edficas <code>REMOTE_PHP</code> y <code>REMOTE_PHP_PATH</code> como etiquetas para tu contenedor PHP-FPM</li> </ul> <p>Dado que la autoconfiguraci\u00f3n de Docker implica el uso del modo multisitio, necesitar\u00e1s crear directorios separados para cada una de tus aplicaciones. Cada subdirectorio debe tener el nombre del primer valor de <code>SERVER_NAME</code>. Aqu\u00ed hay un ejemplo de prueba:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directorios, 3 archivos\n</code></pre> <p>Una vez creadas las carpetas, copia tus archivos y corrige los permisos para que BunkerWeb (UID/GID 101) pueda al menos leer archivos y listar carpetas, y PHP-FPM (UID/GID 33 si usas la imagen <code>php:fpm</code>) sea el propietario de los archivos y carpetas:</p> <pre><code>chown -R 33:101 ./www &amp;&amp; \\\nfind ./www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind ./www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Cuando inicies el stack de autoconfiguraci\u00f3n de BunkerWeb, monta la carpeta <code>www</code> en <code>/var/www/html</code> para el contenedor del Scheduler:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Usamos un ancla para evitar repetir la misma configuraci\u00f3n para todos los servicios\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n    environment:\n      &lt;&lt;: *bw-api-env\n    volumes:\n      - ./www:/var/www/html\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"\" # No necesitamos especificar la instancia de BunkerWeb aqu\u00ed, ya que son detectadas autom\u00e1ticamente por el servicio de autoconfiguraci\u00f3n\n      SERVER_NAME: \"\" # El nombre del servidor se llenar\u00e1 con las etiquetas de los servicios\n      MULTISITE: \"yes\" # Configuraci\u00f3n obligatoria para la autoconfiguraci\u00f3n\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # El socket de Docker\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Ahora puedes crear tus contenedores PHP-FPM, montar las subcarpetas correctas y usar etiquetas para configurar BunkerWeb:</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      labels:\n        - \"bunkerweb.SERVER_NAME=app1.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp1\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      labels:\n        - \"bunkerweb.SERVER_NAME=app2.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp2\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      labels:\n        - \"bunkerweb.SERVER_NAME=app3.example.com\"\n        - \"bunkerweb.REMOTE_PHP=myapp3\"\n        - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>PHP no es compatible con Kubernetes</p> <p>La integraci\u00f3n de Kubernetes permite la configuraci\u00f3n a trav\u00e9s de Ingress y el controlador de BunkerWeb solo admite aplicaciones HTTP por el momento.</p> <p>Asumiremos que ya tienes el stack de integraci\u00f3n de Linux funcionando en tu m\u00e1quina.</p> <p>Por defecto, BunkerWeb buscar\u00e1 archivos web dentro de la carpeta <code>/var/www/html</code>. Puedes usarla para almacenar tus aplicaciones PHP. Ten en cuenta que necesitar\u00e1s configurar tu servicio PHP-FPM para obtener o establecer el usuario/grupo de los procesos en ejecuci\u00f3n y el archivo de socket UNIX utilizado para comunicarse con BunkerWeb.</p> <p>En primer lugar, deber\u00e1s asegurarte de que tu instancia de PHP-FPM pueda acceder a los archivos dentro de la carpeta <code>/var/www/html</code> y tambi\u00e9n de que BunkerWeb pueda acceder al archivo de socket UNIX para comunicarse con PHP-FPM. Recomendamos establecer un usuario diferente como <code>www-data</code> para el servicio PHP-FPM y dar al grupo nginx acceso al archivo de socket UNIX. Aqu\u00ed est\u00e1 la configuraci\u00f3n correspondiente de PHP-FPM:</p> <pre><code>...\n[www]\nuser = www-data\ngroup = www-data\nlisten = /run/php/php-fpm.sock\nlisten.owner = www-data\nlisten.group = nginx\nlisten.mode = 0660\n...\n</code></pre> <p>No olvides reiniciar tu servicio PHP-FPM:</p> <pre><code>systemctl restart php-fpm\n</code></pre> <p>Si habilitas el modo multisitio, necesitar\u00e1s crear directorios separados para cada una de tus aplicaciones. Cada subdirectorio debe nombrarse utilizando el primer valor de <code>SERVER_NAME</code>. Aqu\u00ed hay un ejemplo de prueba:</p> <pre><code>/var/www/html\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directorios, 3 archivos\n</code></pre> <p>Ten en cuenta que necesitar\u00e1s arreglar los permisos para que BunkerWeb (grupo <code>nginx</code>) pueda al menos leer archivos y listar carpetas, y PHP-FPM (usuario <code>www-data</code>, pero podr\u00eda ser diferente dependiendo de tu sistema) sea el propietario de los archivos y carpetas:</p> <pre><code>chown -R www-data:nginx /var/www/html &amp;&amp; \\\nfind /var/www/html -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /var/www/html -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Ahora puedes editar el archivo <code>/etc/bunkerweb/variable.env</code>:</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nMULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\napp1.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp1.example.com_LOCAL_PHP_PATH=/var/www/html/app1.example.com\napp2.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp2.example.com_LOCAL_PHP_PATH=/var/www/html/app2.example.com\napp3.example.com_LOCAL_PHP=/run/php/php-fpm.sock\napp3.example.com_LOCAL_PHP_PATH=/var/www/html/app3.example.com\n</code></pre> <p>Ahora verifiquemos el estado del Programador:</p> <pre><code>systemctl status bunkerweb-scheduler\n</code></pre> <p>Si ya se est\u00e1n ejecutando, podemos recargarlo:</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>De lo contrario, tendremos que iniciarlo:</p> <pre><code>systemctl start bunkerweb-scheduler\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Se puede encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de integraci\u00f3n de Swarm.</p> <p>Modo multisitio habilitado</p> <p>La integraci\u00f3n Swarm implica el uso del modo multisitio: proteger una aplicaci\u00f3n PHP es lo mismo que proteger varias.</p> <p>Volumen compartido</p> <p>Usar PHP con la integraci\u00f3n de Docker Swarm necesita un volumen compartido entre todas las instancias de BunkerWeb y PHP-FPM, lo cual no se cubre en esta documentaci\u00f3n.</p> <p>Cuando se usa la integraci\u00f3n Swarm, para admitir aplicaciones PHP, necesitar\u00e1s:</p> <ul> <li>Montar tus archivos PHP en la carpeta <code>/var/www/html</code> de BunkerWeb</li> <li>Configurar contenedores PHP-FPM para tus aplicaciones y montar la carpeta que contiene las aplicaciones PHP</li> <li>Usar las configuraciones espec\u00edficas <code>REMOTE_PHP</code> y <code>REMOTE_PHP_PATH</code> como etiquetas para tu contenedor PHP-FPM</li> </ul> <p>Dado que la integraci\u00f3n de Swarm implica el uso del modo multisitio, necesitar\u00e1s crear directorios separados para cada una de tus aplicaciones. Cada subdirectorio debe tener el nombre del primer valor de <code>SERVER_NAME</code>. Aqu\u00ed hay un ejemplo de prueba:</p> <pre><code>www\n\u251c\u2500\u2500 app1.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u251c\u2500\u2500 app2.example.com\n\u2502   \u2514\u2500\u2500 index.php\n\u2514\u2500\u2500 app3.example.com\n    \u2514\u2500\u2500 index.php\n\n3 directorios, 3 archivos\n</code></pre> <p>Como ejemplo, consideraremos que tienes una carpeta compartida montada en tus nodos de trabajo en el punto final <code>/shared</code>.</p> <p>Una vez creadas las carpetas, copia tus archivos y corrige los permisos para que BunkerWeb (UID/GID 101) pueda al menos leer archivos y listar carpetas, y PHP-FPM (UID/GID 33 si usas la imagen <code>php:fpm</code>) sea el propietario de los archivos y carpetas:</p> <pre><code>chown -R 33:101 /shared/www &amp;&amp; \\\nfind /shared/www -type f -exec chmod 0640 {} \\; &amp;&amp; \\\nfind /shared/www -type d -exec chmod 0750 {} \\;\n</code></pre> <p>Cuando inicies el stack de BunkerWeb, monta la carpeta <code>/shared/www</code> en <code>/var/www/html</code> para el contenedor del Scheduler:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    volumes:\n      - /shared/www:/var/www/html\n...\n</code></pre> <p>Ahora puedes crear tus servicios PHP-FPM, montar las subcarpetas correctas y usar etiquetas para configurar BunkerWeb:</p> <pre><code>services:\n  myapp1:\n      image: php:fpm\n      volumes:\n        - ./www/app1.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp1\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app1.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp1\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp2:\n      image: php:fpm\n      volumes:\n        - ./www/app2.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp2\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app2.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp2\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\n  myapp3:\n      image: php:fpm\n      volumes:\n        - ./www/app3.example.com:/app\n      networks:\n        bw-services:\n            aliases:\n              - myapp3\n      deploy:\n        placement:\n          constraints:\n            - \"node.role==worker\"\n        labels:\n          - \"bunkerweb.SERVER_NAME=app3.example.com\"\n          - \"bunkerweb.REMOTE_PHP=myapp3\"\n          - \"bunkerweb.REMOTE_PHP_PATH=/app\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"es/advanced/#ipv6","title":"IPv6","text":"<p>Caracter\u00edstica experimental</p> <p>Esta caracter\u00edstica no est\u00e1 lista para producci\u00f3n. Si\u00e9ntete libre de probarla y reportarnos cualquier error usando los issues en el repositorio de GitHub.</p> <p>Por defecto, BunkerWeb solo escuchar\u00e1 en direcciones IPv4 y no usar\u00e1 IPv6 para las comunicaciones de red. Si quieres habilitar el soporte de IPv6, necesitas establecer <code>USE_IPV6=yes</code>. Ten en cuenta que la configuraci\u00f3n de IPv6 de tu red y entorno est\u00e1 fuera del alcance de esta documentaci\u00f3n.</p> Docker / Autoconf / SwarmLinux <p>En primer lugar, necesitar\u00e1s configurar tu demonio de Docker para habilitar el soporte de IPv6 para los contenedores y usar ip6tables si es necesario. Aqu\u00ed hay una configuraci\u00f3n de ejemplo para tu archivo <code>/etc/docker/daemon.json</code>:</p> <pre><code>{\n  \"experimental\": true,\n  \"ipv6\": true,\n  \"ip6tables\": true,\n  \"fixed-cidr-v6\": \"fd00:dead:beef::/48\"\n}\n</code></pre> <p>Ahora puedes reiniciar el servicio de Docker para aplicar los cambios:</p> <pre><code>systemctl restart docker\n</code></pre> <p>Una vez que Docker est\u00e9 configurado para soportar IPv6, puedes agregar la configuraci\u00f3n <code>USE_IPV6</code> y configurar la red <code>bw-services</code> para IPv6:</p> <pre><code>services:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      USE_IPv6: \"yes\"\n\n...\n\nnetworks:\n  bw-services:\n    name: bw-services\n    enable_ipv6: true\n    ipam:\n      config:\n        - subnet: fd00:13:37::/48\n          gateway: fd00:13:37::1\n\n...\n</code></pre> <p>Necesitar\u00e1s agregar la configuraci\u00f3n al archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>...\nUSE_IPV6=yes\n...\n</code></pre> <p>Verifiquemos el estado de BunkerWeb:</p> <pre><code>systemctl status bunkerweb\n</code></pre> <p>Si ya se est\u00e1 ejecutando, podemos reiniciarlo:</p> <pre><code>systemctl restart bunkerweb\n</code></pre> <p>De lo contrario, tendremos que iniciarlo:</p> <pre><code>systemctl start bunkerweb\n</code></pre>"},{"location":"es/advanced/#ajuste-de-seguridad","title":"Ajuste de seguridad","text":"<p>BunkerWeb ofrece muchas caracter\u00edsticas de seguridad que puedes configurar con caracter\u00edsticas. Aunque los valores predeterminados de las configuraciones aseguran una \"seguridad por defecto\" m\u00ednima, te recomendamos encarecidamente que los ajustes. Al hacerlo, podr\u00e1s asegurar el nivel de seguridad de tu elecci\u00f3n y tambi\u00e9n gestionar los falsos positivos.</p> <p>Otras caracter\u00edsticas</p> <p>Esta secci\u00f3n solo se enfoca en el ajuste de seguridad, consulta la secci\u00f3n de caracter\u00edsticas de la documentaci\u00f3n para otras configuraciones.</p> <p> </p> Descripci\u00f3n general y orden de los plugins de seguridad principales"},{"location":"es/advanced/#integracion-con-la-consola-de-crowdsec","title":"Integraci\u00f3n con la Consola de CrowdSec","text":"<p>Si a\u00fan no est\u00e1s familiarizado con la integraci\u00f3n de la Consola de CrowdSec, CrowdSec aprovecha la inteligencia de la comunidad para combatir las amenazas cibern\u00e9ticas. Pi\u00e9nsalo como el \"Waze de la ciberseguridad\"\u2014cuando un servidor es atacado, otros sistemas en todo el mundo son alertados y protegidos de los mismos atacantes. Puedes aprender m\u00e1s sobre ello aqu\u00ed.</p> <p>\u00a1Felicidades, tu instancia de BunkerWeb ahora est\u00e1 inscrita en tu Consola de CrowdSec!</p> <p>Consejo profesional: Al ver tus alertas, haz clic en la opci\u00f3n \"columnas\" y marca la casilla \"contexto\" para acceder a los datos espec\u00edficos de BunkerWeb.</p> <p> </p> Datos de BunkerWeb mostrados en la columna de contexto"},{"location":"es/advanced/#monitoreo-y-reportes","title":"Monitoreo y reportes","text":""},{"location":"es/advanced/#monitoreo-pro","title":"Monitoreo  (PRO)","text":"<p>Soporte STREAM </p> <p>El plugin de monitoreo te permite recolectar y recuperar m\u00e9tricas sobre BunkerWeb. Al habilitarlo, tu(s) instancia(s) comenzar\u00e1(n) a recolectar varios datos relacionados con ataques, solicitudes y rendimiento. Luego puedes recuperarlos llamando al punto final de la API <code>/monitoring</code> de forma regular o usando otros plugins como el exportador de Prometheus.</p> <p>Lista de caracter\u00edsticas</p> <ul> <li>Habilitar la recolecci\u00f3n de varias m\u00e9tricas de BunkerWeb</li> <li>Recuperar m\u00e9tricas de la API</li> <li>Usar en combinaci\u00f3n con otros plugins (p. ej. exportador de Prometheus)</li> <li>P\u00e1gina de interfaz de usuario dedicada para monitorear tu(s) instancia(s)</li> </ul> <p>Lista de configuraciones</p> Configuraci\u00f3n Predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_MONITORING</code> <code>yes</code> global no Habilitar el monitoreo de BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global no Tama\u00f1o del diccionario para almacenar m\u00e9tricas de monitoreo."},{"location":"es/advanced/#exportador-de-prometheus-pro","title":"Exportador de Prometheus  (PRO)","text":"<p>Soporte STREAM </p> <p>El plugin exportador de Prometheus agrega un exportador de Prometheus en tu(s) instancia(s) de BunkerWeb. Cuando est\u00e1 habilitado, puedes configurar tu(s) instancia(s) de Prometheus para que extraigan datos de un punto final espec\u00edfico en BunkerWeb y recopilen m\u00e9tricas internas.</p> <p>Tambi\u00e9n proporcionamos un panel de control de Grafana que puedes importar en tu propia instancia y conectar a tu propia fuente de datos de Prometheus.</p> <p>Ten en cuenta que el uso del plugin exportador de Prometheus requiere habilitar el plugin de Monitoreo (<code>USE_MONITORING=yes</code>)</p> <p>Lista de caracter\u00edsticas</p> <ul> <li>Exportador de Prometheus que proporciona m\u00e9tricas internas de BunkerWeb</li> <li>Puerto, IP de escucha y URL dedicados y configurables</li> <li>Lista blanca de IP/red para m\u00e1xima seguridad</li> </ul> <p>Lista de configuraciones</p> Configuraci\u00f3n Predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global no Habilitar el exportador de Prometheus. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global no IP de escucha del exportador de Prometheus. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global no Puerto de escucha del exportador de Prometheus. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global no URL HTTP del exportador de Prometheus. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global no Lista de IP/redes permitidas para contactar el punto final del exportador de Prometheus."},{"location":"es/advanced/#reportes-pro","title":"Reportes  (PRO)","text":"<p>Soporte STREAM </p> <p>Se necesita el plugin de Monitoreo</p> <p>Este plugin requiere que el plugin de Monitoreo Pro est\u00e9 instalado y habilitado con la configuraci\u00f3n <code>USE_MONITORING</code> establecida en <code>yes</code>.</p> <p>El plugin de Reportes proporciona una soluci\u00f3n integral para la generaci\u00f3n de informes peri\u00f3dicos de datos importantes de BunkerWeb, incluidas estad\u00edsticas globales, ataques, prohibiciones, solicitudes, motivos e informaci\u00f3n de AS. Ofrece una amplia gama de funciones, que incluyen la creaci\u00f3n autom\u00e1tica de informes, opciones de personalizaci\u00f3n y una integraci\u00f3n perfecta con el plugin de monitoreo pro. Con el plugin de Reportes, puedes generar y gestionar f\u00e1cilmente informes para monitorear el rendimiento y la seguridad de tu aplicaci\u00f3n.</p> <p>Lista de caracter\u00edsticas</p> <ul> <li>Informes peri\u00f3dicos de datos importantes de BunkerWeb, incluidas estad\u00edsticas globales, ataques, prohibiciones, solicitudes, motivos e informaci\u00f3n de AS.</li> <li>Integraci\u00f3n con el plugin Monitoring Pro para una integraci\u00f3n perfecta y capacidades de generaci\u00f3n de informes mejoradas.</li> <li>Soporte para webhooks (cl\u00e1sico, Discord y Slack) para notificaciones en tiempo real.</li> <li>Soporte para SMTP para notificaciones por correo electr\u00f3nico.</li> <li>Opciones de configuraci\u00f3n para personalizaci\u00f3n y flexibilidad.</li> </ul> <p>Lista de configuraciones</p> Configuraci\u00f3n Predeterminado Contexto Descripci\u00f3n <code>USE_REPORTING_SMTP</code> <code>no</code> global Habilitar el env\u00edo del informe por correo electr\u00f3nico. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global Habilitar el env\u00edo del informe a trav\u00e9s de webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global La frecuencia con la que se env\u00edan los informes. <code>REPORTING_WEBHOOK_URLS</code> global Lista de URLs de webhook para recibir el informe en Markdown (separadas por espacios). <code>REPORTING_SMTP_EMAILS</code> global Lista de direcciones de correo electr\u00f3nico para recibir el informe en formato HTML (separadas por espacios). <code>REPORTING_SMTP_HOST</code> global El servidor anfitri\u00f3n utilizado para el env\u00edo SMTP. <code>REPORTING_SMTP_PORT</code> <code>465</code> global El puerto utilizado para SMTP. Ten en cuenta que existen diferentes est\u00e1ndares seg\u00fan el tipo de conexi\u00f3n (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global La direcci\u00f3n de correo electr\u00f3nico utilizada como remitente. Ten en cuenta que la 2FA debe estar deshabilitada para esta direcci\u00f3n de correo electr\u00f3nico. <code>REPORTING_SMTP_FROM_USER</code> global El valor de autenticaci\u00f3n del usuario para enviar a trav\u00e9s de la direcci\u00f3n de correo electr\u00f3nico del remitente. <code>REPORTING_SMTP_FROM_PASSWORD</code> global El valor de autenticaci\u00f3n de la contrase\u00f1a para enviar a trav\u00e9s de la direcci\u00f3n de correo electr\u00f3nico del remitente. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global Determinar si se debe utilizar o no una conexi\u00f3n segura para SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global La l\u00ednea de asunto del correo electr\u00f3nico. <p>Informaci\u00f3n y comportamiento</p> <ul> <li>si <code>USE_REPORTING_SMTP</code> se establece en <code>yes</code>, se debe establecer la configuraci\u00f3n <code>REPORTING_SMTP_EMAILS</code>.</li> <li>si <code>USE_REPORTING_WEBHOOK</code> se establece en <code>yes</code>, se debe establecer la configuraci\u00f3n <code>REPORTING_WEBHOOK_URLS</code>.</li> <li>Los valores aceptados para <code>REPORTING_SCHEDULE</code> son <code>daily</code>, <code>weekly</code> y <code>monthly</code>.</li> <li>si no se establecen <code>REPORTING_SMTP_FROM_USER</code> y <code>REPORTING_SMTP_FROM_PASSWORD</code>, el plugin intentar\u00e1 enviar el correo electr\u00f3nico sin autenticaci\u00f3n.</li> <li>si <code>REPORTING_SMTP_FROM_USER</code> no est\u00e1 configurado pero <code>REPORTING_SMTP_FROM_PASSWORD</code> s\u00ed, el plugin utilizar\u00e1 <code>REPORTING_SMTP_FROM_EMAIL</code> como nombre de usuario.</li> <li>si el trabajo falla, el plugin volver\u00e1 a intentar enviar el informe en la siguiente ejecuci\u00f3n.</li> </ul>"},{"location":"es/advanced/#copia-de-seguridad-y-restauracion","title":"Copia de seguridad y restauraci\u00f3n","text":""},{"location":"es/advanced/#copia-de-seguridad-s3-pro","title":"Copia de seguridad S3  (PRO)","text":"<p>Soporte STREAM </p> <p>La herramienta de Copia de seguridad S3 automatiza sin problemas la protecci\u00f3n de datos, de forma similar al plugin de copia de seguridad de la comunidad. Sin embargo, se destaca por almacenar de forma segura las copias de seguridad directamente en un bucket S3.</p> <p>Al activar esta funci\u00f3n, est\u00e1s salvaguardando proactivamente la integridad de tus datos. Almacenar las copias de seguridad de forma remota protege la informaci\u00f3n crucial de amenazas como fallos de hardware, ciberataques o desastres naturales. Esto garantiza tanto la seguridad como la disponibilidad, permitiendo una r\u00e1pida recuperaci\u00f3n durante eventos inesperados, preservando la continuidad operativa y asegurando la tranquilidad.</p> Informaci\u00f3n para usuarios de Red Hat Enterprise Linux (RHEL) 8.9 <p>Si est\u00e1s utilizando RHEL 8.9 y planeas usar una base de datos externa, necesitar\u00e1s instalar el paquete <code>mysql-community-client</code> para asegurar que el comando <code>mysqldump</code> est\u00e9 disponible. Puedes instalar el paquete ejecutando los siguientes comandos:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Instalar el paquete de configuraci\u00f3n del repositorio de MySQL</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Habilitar el repositorio de MySQL</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Instalar el cliente de MySQL</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Instalar el paquete de configuraci\u00f3n del repositorio de PostgreSQL</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Instalar el cliente de PostgreSQL</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <p>Lista de caracter\u00edsticas</p> <ul> <li>Copia de seguridad autom\u00e1tica de datos a un bucket S3</li> <li>Opciones de programaci\u00f3n flexibles: diaria, semanal o mensual</li> <li>Gesti\u00f3n de rotaci\u00f3n para controlar el n\u00famero de copias de seguridad a mantener</li> <li>Nivel de compresi\u00f3n personalizable para los archivos de copia de seguridad</li> </ul> <p>Lista de configuraciones</p> Configuraci\u00f3n Predeterminado Contexto Descripci\u00f3n <code>USE_BACKUP_S3</code> <code>no</code> global Habilitar o deshabilitar la funci\u00f3n de copia de seguridad S3 <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global La frecuencia de la copia de seguridad <code>BACKUP_S3_ROTATION</code> <code>7</code> global El n\u00famero de copias de seguridad a mantener <code>BACKUP_S3_ENDPOINT</code> global El punto final S3 <code>BACKUP_S3_BUCKET</code> global El bucket S3 <code>BACKUP_S3_DIR</code> global El directorio S3 <code>BACKUP_S3_REGION</code> global La regi\u00f3n S3 <code>BACKUP_S3_ACCESS_KEY_ID</code> global El ID de la clave de acceso S3 <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global El secreto de la clave de acceso S3 <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global El nivel de compresi\u00f3n del archivo zip de la copia de seguridad"},{"location":"es/advanced/#copia-de-seguridad-manual","title":"Copia de seguridad manual","text":"<p>Para iniciar manualmente una copia de seguridad, ejecuta el siguiente comando:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Este comando crear\u00e1 una copia de seguridad de tu base de datos y la almacenar\u00e1 en el bucket S3 especificado en la configuraci\u00f3n <code>BACKUP_S3_BUCKET</code>.</p> <p>Tambi\u00e9n puedes especificar un bucket S3 personalizado para la copia de seguridad proporcionando la variable de entorno <code>BACKUP_S3_BUCKET</code> al ejecutar el comando:</p> LinuxDocker <pre><code>BACKUP_S3_BUCKET=your-bucket-name bwcli plugin backup_s3 save\n</code></pre> <pre><code>docker exec -it -e BACKUP_S3_BUCKET=your-bucket-name &lt;scheduler_container&gt; bwcli plugin backup_s3 save\n</code></pre> <p>Especificaciones para MariaDB/MySQL</p> <p>En caso de que est\u00e9s usando MariaDB/MySQL, puedes encontrar el siguiente error al intentar hacer una copia de seguridad de tu base de datos:</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>Para resolver este problema, puedes ejecutar el siguiente comando para cambiar el plugin de autenticaci\u00f3n a <code>mysql_native_password</code>:</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>Si est\u00e1s usando la integraci\u00f3n de Docker, puedes agregar el siguiente comando al archivo <code>docker-compose.yml</code> para cambiar autom\u00e1ticamente el plugin de autenticaci\u00f3n:</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"es/advanced/#restauracion-manual","title":"Restauraci\u00f3n manual","text":"<p>Para iniciar manualmente una restauraci\u00f3n, ejecuta el siguiente comando:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre> <p>Este comando crear\u00e1 una copia de seguridad temporal de tu base de datos en el bucket S3 especificado en la configuraci\u00f3n <code>BACKUP_S3_BUCKET</code> y restaurar\u00e1 tu base de datos a la \u00faltima copia de seguridad disponible en el bucket.</p> <p>Tambi\u00e9n puedes especificar un archivo de copia de seguridad personalizado para la restauraci\u00f3n proporcionando la ruta al mismo como argumento al ejecutar el comando:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore s3_backup_file.zip\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup restore s3_backup_file.zip\n</code></pre> <p>En caso de fallo</p> <p>No te preocupes si la restauraci\u00f3n falla, siempre puedes restaurar tu base de datos al estado anterior ejecutando el comando de nuevo, ya que se crea una copia de seguridad antes de la restauraci\u00f3n:</p> LinuxDocker <pre><code>bwcli plugin backup_s3 restore\n</code></pre> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin backup_s3 restore\n</code></pre>"},{"location":"es/advanced/#migracion-pro","title":"Migraci\u00f3n  (PRO)","text":"<p>Soporte STREAM </p> <p>El plugin de Migraci\u00f3n revoluciona las transferencias de configuraci\u00f3n de BunkerWeb entre instancias con su interfaz web f\u00e1cil de usar, simplificando todo el proceso de migraci\u00f3n. Ya sea que est\u00e9s actualizando sistemas, escalando la infraestructura o haciendo la transici\u00f3n de entornos, esta herramienta te permite transferir sin esfuerzo configuraciones, preferencias y datos con una facilidad y confianza inigualables. Di adi\u00f3s a los engorrosos procesos manuales y hola a una experiencia de migraci\u00f3n fluida y sin complicaciones.</p> <p>Lista de caracter\u00edsticas</p> <ul> <li> <p>Migraci\u00f3n sin esfuerzo: Transfiere f\u00e1cilmente las configuraciones de BunkerWeb entre instancias sin las complejidades de los procedimientos manuales.</p> </li> <li> <p>Interfaz web intuitiva: Navega por el proceso de migraci\u00f3n sin esfuerzo con una interfaz web f\u00e1cil de usar dise\u00f1ada para una operaci\u00f3n intuitiva.</p> </li> <li> <p>Compatibilidad entre bases de datos: Disfruta de una migraci\u00f3n fluida a trav\u00e9s de varias plataformas de bases de datos, incluidas SQLite, MySQL, MariaDB y PostgreSQL, lo que garantiza la compatibilidad con tu entorno de base de datos preferido.</p> </li> </ul>"},{"location":"es/advanced/#crear-un-archivo-de-migracion","title":"Crear un archivo de migraci\u00f3n","text":"<p>Para crear manualmente un archivo de migraci\u00f3n, ejecuta el siguiente comando:</p> LinuxDocker <pre><code>bwcli plugin migration create /path/to/migration/file\n</code></pre> <ol> <li> <p>Crear un archivo de migraci\u00f3n:</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration create /path/to/migration/file\n</code></pre> </li> <li> <p>Copiar el archivo de migraci\u00f3n a tu m\u00e1quina local:</p> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/migration/file /path/to/migration/file\n</code></pre> </li> </ol> <p>Este comando crear\u00e1 una copia de seguridad de tu base de datos y la almacenar\u00e1 en el directorio de copia de seguridad especificado en el comando.</p> <p>Especificaciones para MariaDB/MySQL</p> <p>En caso de que est\u00e9s usando MariaDB/MySQL, puedes encontrar el siguiente error al intentar hacer una copia de seguridad de tu base de datos:</p> <pre><code>caching_sha2_password could not be loaded: Error loading shared library /usr/lib/mariadb/plugin/caching_sha2_password.so\n</code></pre> <p>Para resolver este problema, puedes ejecutar el siguiente comando para cambiar el plugin de autenticaci\u00f3n a <code>mysql_native_password</code>:</p> <pre><code>ALTER USER 'yourusername'@'localhost' IDENTIFIED WITH mysql_native_password BY 'youpassword';\n</code></pre> <p>Si est\u00e1s usando la integraci\u00f3n de Docker, puedes agregar el siguiente comando al archivo <code>docker-compose.yml</code> para cambiar autom\u00e1ticamente el plugin de autenticaci\u00f3n:</p> MariaDBMySQL <pre><code>bw-db:\n    image: mariadb:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre> <pre><code>bw-db:\n    image: mysql:&lt;version&gt;\n    command: --default-authentication-plugin=mysql_native_password\n    ...\n</code></pre>"},{"location":"es/advanced/#iniciar-una-migracion","title":"Iniciar una migraci\u00f3n","text":"<p>Para iniciar manualmente una migraci\u00f3n, ejecuta el siguiente comando:</p> LinuxDockerTodo en uno <pre><code>bwcli plugin migration migrate /path/to/migration/file\n</code></pre> <ol> <li> <p>Copia el archivo de migraci\u00f3n al contenedor:</p> <pre><code>docker cp /path/to/migration/file &lt;scheduler_container&gt;:/path/to/migration/file\n</code></pre> </li> <li> <p>Inicia la migraci\u00f3n:</p> <pre><code>docker exec -it &lt;scheduler_container&gt; bwcli plugin migration migrate /path/to/migration/file\n</code></pre> </li> </ol> <ol> <li> <p>Copia el archivo de migraci\u00f3n al contenedor:</p> <pre><code>docker cp /path/to/migration/file bunkerweb-aio:/path/to/migration/file\n</code></pre> </li> <li> <p>Inicia la migraci\u00f3n:</p> <pre><code>docker exec -it bunkerweb-aio bwcli plugin migration migrate /path/to/migration/file\n</code></pre> </li> </ol> <p>Este comando migra sin problemas tus datos de BunkerWeb para que coincidan precisamente con la configuraci\u00f3n descrita en el archivo de migraci\u00f3n.</p>"},{"location":"es/advanced/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>Soporte STREAM </p> <p>El plugin Anti DDoS proporciona protecci\u00f3n avanzada contra ataques de denegaci\u00f3n de servicio distribuido (DDoS) mediante el monitoreo, an\u00e1lisis y filtrado de tr\u00e1fico sospechoso en tiempo real.</p> <p>Mediante el empleo de un mecanismo de ventana deslizante, el plugin mantiene un diccionario en memoria de las marcas de tiempo de las solicitudes para detectar picos de tr\u00e1fico anormales de direcciones IP individuales. Seg\u00fan el modo de seguridad configurado, puede bloquear las conexiones ofensivas o registrar la actividad sospechosa para una revisi\u00f3n posterior.</p>"},{"location":"es/advanced/#caracteristicas","title":"Caracter\u00edsticas","text":"<ul> <li>An\u00e1lisis de tr\u00e1fico en tiempo real: Monitorea continuamente las solicitudes entrantes para detectar posibles ataques DDoS.</li> <li>Mecanismo de ventana deslizante: Rastrea la actividad de solicitudes recientes dentro de una ventana de tiempo configurable.</li> <li>Umbrales configurables: Te permite definir el n\u00famero m\u00e1ximo de solicitudes sospechosas por IP.</li> <li>L\u00f3gica de bloqueo avanzada: Eval\u00faa tanto el recuento de solicitudes por IP como el n\u00famero de IP distintas que superan el umbral.</li> <li>Modos de seguridad flexibles: Elige entre el bloqueo inmediato de la conexi\u00f3n o el modo de solo detecci\u00f3n (registro).</li> <li>Almac\u00e9n de datos en memoria optimizado: Garantiza b\u00fasquedas de alta velocidad y un seguimiento eficiente de las m\u00e9tricas.</li> <li>Mantenimiento autom\u00e1tico: Borra peri\u00f3dicamente los datos obsoletos para mantener un rendimiento \u00f3ptimo.</li> </ul>"},{"location":"es/advanced/#configuracion","title":"Configuraci\u00f3n","text":"<p>Personaliza el comportamiento del plugin usando las siguientes configuraciones:</p> Configuraci\u00f3n Predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIDDOS</code> <code>no</code> global no Habilita o deshabilita la protecci\u00f3n Anti DDoS. Establ\u00e9celo en <code>\"yes\"</code> para activar el plugin. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global no Tama\u00f1o del almac\u00e9n de datos en memoria para el seguimiento de m\u00e9tricas de DDoS (p. ej., <code>10M</code>, <code>500k</code>). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global no N\u00famero m\u00e1ximo de solicitudes sospechosas permitidas por IP dentro de la ventana de tiempo definida. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global no Ventana de tiempo en segundos durante la cual se cuentan las solicitudes sospechosas. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global no C\u00f3digos de estado HTTP considerados sospechosos y utilizados para activar acciones anti-DDoS. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global no N\u00famero m\u00ednimo de IP distintas que deben superar el umbral antes de aplicar el modo de bloqueo."},{"location":"es/advanced/#mejores-practicas","title":"Mejores pr\u00e1cticas","text":"<ul> <li>Ajuste de umbrales: Ajusta <code>ANTIDDOS_THRESHOLD</code> y <code>ANTIDDOS_WINDOW_TIME</code> seg\u00fan tus patrones de tr\u00e1fico t\u00edpicos.</li> <li>Revisi\u00f3n de c\u00f3digos de estado: Actualiza regularmente <code>ANTIDDOS_STATUS_CODES</code> para capturar comportamientos sospechosos nuevos o en evoluci\u00f3n.</li> <li>Monitoreo: Analiza los registros y las m\u00e9tricas peri\u00f3dicamente para ajustar la configuraci\u00f3n y mejorar la protecci\u00f3n general.</li> </ul>"},{"location":"es/advanced/#administrador-de-usuarios-pro","title":"Administrador de usuarios  (PRO)","text":"<p>El Plugin de gesti\u00f3n de usuarios ofrece una interfaz robusta para administrar cuentas de usuario dentro de tu sistema.</p> <p>Con este plugin, los administradores pueden crear, actualizar y deshabilitar cuentas de usuario sin esfuerzo, gestionar roles de usuario, activar o desactivar la autenticaci\u00f3n de dos factores (2FA) y ver informaci\u00f3n detallada del usuario, como las marcas de tiempo del \u00faltimo inicio de sesi\u00f3n y los estados de la cuenta (activa o inactiva). Dise\u00f1ado teniendo en cuenta la seguridad y la facilidad de uso, este plugin simplifica las tareas rutinarias de gesti\u00f3n de usuarios al tiempo que garantiza el cumplimiento y la auditabilidad.</p>"},{"location":"es/advanced/#caracteristicas_1","title":"Caracter\u00edsticas","text":"<ul> <li>Operaciones de cuenta de usuario: Importar en formato CSV/XSLX, crear, editar y eliminar cuentas de usuario con facilidad.</li> <li>Control de acceso basado en roles: Asigna y modifica roles de usuario para gestionar permisos y niveles de acceso.</li> <li>Gesti\u00f3n de 2FA: Desactiva la autenticaci\u00f3n de dos factores seg\u00fan las decisiones administrativas.</li> <li>Informaci\u00f3n completa del usuario: Supervisa los datos clave del usuario, incluidas las \u00faltimas horas de inicio de sesi\u00f3n, las fechas de creaci\u00f3n de la cuenta y el estado activo/inactivo.</li> <li>Registro de auditor\u00eda: Mantiene un registro de auditor\u00eda de todas las acciones de gesti\u00f3n de usuarios para mejorar la seguridad y el cumplimiento.</li> </ul> P\u00e1gina del Administrador de usuarios Administrador de usuarios - Formulario de creaci\u00f3n de usuario Administrador de usuarios - P\u00e1gina de actividades"},{"location":"es/advanced/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>El plugin Easy Resolve te permite remediar r\u00e1pidamente falsos positivos y problemas recurrentes directamente desde la p\u00e1gina de Informes. Convierte las acciones guiadas de \"Resolver\" en actualizaciones de configuraci\u00f3n seguras y acotadas, sin edici\u00f3n manual.</p>"},{"location":"es/advanced/#caracteristicas_2","title":"Caracter\u00edsticas","text":"<ul> <li>Acciones con un solo clic desde Informes y detalles del informe.</li> <li>Sugerencias contextuales para ModSecurity, lista negra y DNSBL.</li> <li>Genera exclusiones seguras de ModSecurity o actualiza las listas de ignorados.</li> <li>Aplica cambios a nivel de servicio o global con comprobaciones de permisos.</li> <li>Apertura autom\u00e1tica opcional de la p\u00e1gina de configuraci\u00f3n relacionada despu\u00e9s de aplicar.</li> </ul> P\u00e1gina de informes - con Easy Resolve Resoluci\u00f3n de ModSecurity Resoluci\u00f3n de DNSBL Lista negra - IP Lista negra - User-Agent Lista negra - rDNS Lista negra - ASN Lista negra - URI"},{"location":"es/api/#descripcion-general","title":"Descripci\u00f3n general","text":"<p>La API de BunkerWeb es el plano de control utilizado para gestionar las instancias de BunkerWeb de forma program\u00e1tica: listar y gestionar instancias, recargar/detener, manejar baneos, plugins, trabajos, configuraciones y m\u00e1s. Expone una aplicaci\u00f3n FastAPI documentada con autenticaci\u00f3n fuerte, autorizaci\u00f3n y limitaci\u00f3n de velocidad.</p> <p>Abre la documentaci\u00f3n interactiva en <code>/docs</code> (o <code>&lt;root_path&gt;/docs</code> si estableciste <code>API_ROOT_PATH</code>). El esquema OpenAPI est\u00e1 disponible en <code>/openapi.json</code>.</p> <p>Seguridad</p> <p>La API es un plano de control privilegiado. No la expongas en la Internet p\u00fablica sin protecciones adicionales.</p> <p>Como m\u00ednimo, restringe las IP de origen (<code>API_WHITELIST_IPS</code>), habilita la autenticaci\u00f3n (<code>API_TOKEN</code> o usuarios de API + Biscuit), y considera ponerla detr\u00e1s de BunkerWeb con una ruta dif\u00edcil de adivinar y controles de acceso adicionales.</p>"},{"location":"es/api/#requisitos-previos","title":"Requisitos previos","text":"<p>El servicio de la API requiere acceso a la base de datos de BunkerWeb (<code>DATABASE_URI</code>). Generalmente se despliega junto con el Programador y opcionalmente la Interfaz de Usuario Web. La configuraci\u00f3n recomendada es ejecutar BunkerWeb al frente como un proxy inverso y aislar la API en una red interna.</p> <p>Consulta el asistente de inicio r\u00e1pido y la gu\u00eda de arquitectura en la gu\u00eda de inicio r\u00e1pido.</p>"},{"location":"es/api/#puntos-destacados","title":"Puntos destacados","text":"<ul> <li>Consciente de las instancias: transmite acciones operativas a las instancias descubiertas.</li> <li>Autenticaci\u00f3n fuerte: B\u00e1sica para administradores, anulaci\u00f3n de administrador con Bearer, o ACL de Biscuit para permisos detallados.</li> <li>Lista blanca de IP y limitaci\u00f3n de velocidad flexible por ruta.</li> <li>Se\u00f1ales est\u00e1ndar de salud/disponibilidad y comprobaciones de seguridad al inicio.</li> </ul>"},{"location":"es/api/#plantillas-de-compose","title":"Plantillas de Compose","text":"DockerDocker Autoconf <p>Haz un proxy inverso de la API bajo <code>/api</code> con BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # Lista blanca compartida del plano de control de instancias para BunkerWeb/Scheduler\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\"  # Coincide con el nombre del servicio de la instancia\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      # Proxy inverso de la API en /api\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/api\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-api:8888\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Usa una contrase\u00f1a fuerte\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"                      # Lista blanca de la API\n      API_TOKEN: \"secret\"                                                 # Token de anulaci\u00f3n de administrador opcional\n      API_ROOT_PATH: \"/api\"                                               # Coincide con la ruta del proxy inverso\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Evita problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"  # Usa una contrase\u00f1a fuerte\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Lo mismo que arriba pero aprovechando el servicio Autoconf para descubrir y configurar servicios autom\u00e1ticamente. La API se expone bajo <code>/api</code> usando etiquetas en el contenedor de la API.</p> <pre><code>x-api-env: &amp;api-env\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\"  # Usa una contrase\u00f1a fuerte\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"  # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *api-env\n      BUNKERWEB_INSTANCES: \"\"    # Descubierto por Autoconf\n      SERVER_NAME: \"\"            # Rellenado a trav\u00e9s de etiquetas\n      MULTISITE: \"yes\"           # Obligatorio con Autoconf\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *api-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-api:\n    image: bunkerity/bunkerweb-api:testing\n    environment:\n      &lt;&lt;: *api-env\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      API_TOKEN: \"secret\"\n      API_ROOT_PATH: \"/api\"\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/api\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-api:8888\"\n    restart: unless-stopped\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\"\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: unless-stopped\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: unless-stopped\n    networks:\n      - bw-docker\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre> <p>Ruta del proxy inverso</p> <p>Mant\u00e9n la ruta de la API dif\u00edcil de adivinar y comb\u00ednala con la lista blanca de la API y la autenticaci\u00f3n.</p> <p>Si ya expones otra aplicaci\u00f3n en el mismo nombre de servidor con una plantilla (p. ej., <code>USE_TEMPLATE</code>), prefiere un nombre de host separado para la API para evitar conflictos.</p>"},{"location":"es/api/#todo-en-uno","title":"Todo en Uno","text":"<p>Si utilizas la imagen Todo en Uno, la API se puede habilitar estableciendo <code>SERVICE_API=yes</code>:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre>"},{"location":"es/api/#autenticacion","title":"Autenticaci\u00f3n","text":"<p>Formas admitidas para autenticar solicitudes:</p> <ul> <li>Administrador B\u00e1sico: Cuando las credenciales pertenecen a un usuario de API administrador, los puntos finales protegidos aceptan <code>Authorization: Basic &lt;base64(nombredeusuario:contrase\u00f1a)&gt;</code>.</li> <li>Anulaci\u00f3n de Administrador con Bearer: Si se configura <code>API_TOKEN</code>, <code>Authorization: Bearer &lt;API_TOKEN&gt;</code> otorga acceso completo.</li> <li>Token Biscuit (recomendado): Obt\u00e9n un token desde <code>POST /auth</code> utilizando credenciales B\u00e1sicas o un cuerpo JSON/formulario que contenga <code>username</code> y <code>password</code>. Utiliza el token devuelto como <code>Authorization: Bearer &lt;token&gt;</code> en llamadas posteriores.</li> </ul> <p>Ejemplo: obtener un Biscuit, listar instancias y luego recargar todas las instancias.</p> <pre><code># 1) Obtener un token Biscuit con credenciales de administrador\nTOKEN=$(curl -s -X POST -u admin:changeme http://api.example.com/auth | jq -r .token)\n\n# 2) Listar instancias\ncurl -H \"Authorization: Bearer $TOKEN\" http://api.example.com/instances\n\n# 3) Recargar la configuraci\u00f3n en todas las instancias (sin prueba)\ncurl -X POST -H \"Authorization: Bearer $TOKEN\" \\\n     \"http://api.example.com/instances/reload?test=no\"\n</code></pre>"},{"location":"es/api/#hechos-y-comprobaciones-de-biscuit","title":"Hechos y comprobaciones de Biscuit","text":"<p>Los tokens incorporan hechos como <code>user(&lt;username&gt;)</code>, <code>client_ip(&lt;ip&gt;)</code>, <code>domain(&lt;host&gt;)</code>, y un rol general <code>role(\"api_user\", [\"read\", \"write\"])</code> derivado de los permisos de la base de datos. Los administradores incluyen <code>admin(true)</code> mientras que los no administradores llevan hechos detallados como <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code>.</p> <p>La autorizaci\u00f3n mapea la ruta/m\u00e9todo a los permisos requeridos; <code>admin(true)</code> siempre pasa. Cuando los hechos detallados est\u00e1n ausentes, la guarda recurre al rol general: GET/HEAD/OPTIONS requieren <code>read</code>; los verbos de escritura requieren <code>write</code>.</p> <p>Las claves se almacenan en <code>/var/lib/bunkerweb/.api_biscuit_private_key</code> y <code>/var/lib/bunkerweb/.api_biscuit_public_key</code>. Tambi\u00e9n puedes proporcionar <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> a trav\u00e9s de variables de entorno; si no se establecen ni archivos ni variables de entorno, la API genera un par de claves al inicio y lo persiste de forma segura.</p>"},{"location":"es/api/#permisos-acl","title":"Permisos (ACL)","text":"<p>Esta API soporta dos capas de autorizaci\u00f3n:</p> <ul> <li>Rol general: Los tokens llevan <code>role(\"api_user\", [\"read\"[, \"write\"]])</code> para los puntos finales sin un mapeo detallado. Lectura se mapea a GET/HEAD/OPTIONS; escritura se mapea a POST/PUT/PATCH/DELETE.</li> <li>ACL detallada: Los tokens incorporan <code>api_perm(&lt;resource_type&gt;, &lt;resource_id|*&gt;, &lt;permission&gt;)</code> y las rutas declaran lo que requieren. <code>admin(true)</code> omite todas las comprobaciones.</li> </ul> <p>Tipos de recursos admitidos: <code>instances</code>, <code>global_config</code>, <code>services</code>, <code>configs</code>, <code>plugins</code>, <code>cache</code>, <code>bans</code>, <code>jobs</code>.</p> <p>Nombres de permisos por tipo de recurso:</p> <ul> <li>instances: <code>instances_read</code>, <code>instances_update</code>, <code>instances_delete</code>, <code>instances_create</code>, <code>instances_execute</code></li> <li>global_config: <code>global_config_read</code>, <code>global_config_update</code></li> <li>services: <code>service_read</code>, <code>service_create</code>, <code>service_update</code>, <code>service_delete</code>, <code>service_convert</code>, <code>service_export</code></li> <li>configs: <code>configs_read</code>, <code>config_read</code>, <code>config_create</code>, <code>config_update</code>, <code>config_delete</code></li> <li>plugins: <code>plugin_read</code>, <code>plugin_create</code>, <code>plugin_delete</code></li> <li>cache: <code>cache_read</code>, <code>cache_delete</code></li> <li>bans: <code>ban_read</code>, <code>ban_update</code>, <code>ban_delete</code>, <code>ban_created</code></li> <li>jobs: <code>job_read</code>, <code>job_run</code></li> </ul> <p>ID de recursos: Para comprobaciones detalladas, el segundo segmento de la ruta se trata como <code>resource_id</code> cuando tiene sentido. Ejemplos: <code>/services/{service}</code> -&gt; <code>{service}</code>; <code>/configs/{service}/...</code> -&gt; <code>{service}</code>. Usa <code>\"*\"</code> (u omite) para otorgar globalmente para un tipo de recurso.</p> <p>Configuraci\u00f3n de usuario y ACL:</p> <ul> <li>Usuario administrador: Establece <code>API_USERNAME</code> y <code>API_PASSWORD</code> para crear el primer administrador al inicio. Para rotar las credenciales m\u00e1s tarde, establece <code>OVERRIDE_API_CREDS=yes</code> (o aseg\u00farate de que el administrador fue creado con el m\u00e9todo <code>manual</code>). Solo existe un administrador; los intentos adicionales recurren a la creaci\u00f3n de no administradores.</li> <li>Usuarios no administradores y concesiones: Proporciona <code>API_ACL_BOOTSTRAP_FILE</code> apuntando a un archivo JSON, o monta <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>. La API lo lee al inicio para crear/actualizar usuarios y permisos.</li> <li>Archivo de cach\u00e9 de ACL: Se escribe un resumen de solo lectura en <code>/var/lib/bunkerweb/api_acl.json</code> al inicio para introspecci\u00f3n; la autorizaci\u00f3n eval\u00faa las concesiones respaldadas por la base de datos incorporadas en el token Biscuit.</li> </ul> <p>Ejemplos de JSON de arranque (se admiten ambas formas):</p> <pre><code>{\n  \"users\": {\n    \"ci\": {\n      \"admin\": false,\n      \"password\": \"Str0ng&amp;P@ss!\",\n      \"permissions\": {\n        \"services\": {\n          \"*\": { \"service_read\": true },\n          \"app-frontend\": { \"service_update\": true, \"service_delete\": false }\n        },\n        \"configs\": {\n          \"app-frontend\": { \"config_read\": true, \"config_update\": true }\n        }\n      }\n    },\n    \"ops\": {\n      \"admin\": false,\n      \"password_hash\": \"$2b$13$...bcrypt-hash...\",\n      \"permissions\": {\n        \"instances\": { \"*\": { \"instances_execute\": true } },\n        \"jobs\": { \"*\": { \"job_run\": true } }\n      }\n    }\n  }\n}\n</code></pre> <p>O en formato de lista:</p> <pre><code>{\n  \"users\": [\n    {\n      \"username\": \"ci\",\n      \"password\": \"Str0ng&amp;P@ss!\",\n      \"permissions\": [\n        { \"resource_type\": \"services\", \"resource_id\": \"*\", \"permission\": \"service_read\" },\n        { \"resource_type\": \"services\", \"resource_id\": \"app-frontend\", \"permission\": \"service_update\" }\n      ]\n    }\n  ]\n}\n</code></pre> <p>Notas:</p> <ul> <li>Las contrase\u00f1as pueden ser texto plano (<code>password</code>) o bcrypt (<code>password_hash</code> / <code>password_bcrypt</code>). Las contrase\u00f1as de texto plano d\u00e9biles son rechazadas en compilaciones que no son de depuraci\u00f3n; si faltan, se genera una aleatoria y se registra una advertencia.</li> <li><code>resource_id: \"*\"</code> (o nulo/vac\u00edo) otorga globalmente sobre ese tipo de recurso.</li> <li>Las contrase\u00f1as de los usuarios existentes pueden actualizarse y se pueden aplicar concesiones adicionales a trav\u00e9s del arranque.</li> </ul>"},{"location":"es/api/#referencia-de-caracteristicas","title":"Referencia de caracter\u00edsticas","text":"<p>La API est\u00e1 organizada por enrutadores centrados en recursos. Utiliza las secciones a continuaci\u00f3n como un mapa de capacidades; el esquema interactivo en <code>/docs</code> documenta los modelos de solicitud/respuesta en detalle.</p>"},{"location":"es/api/#nucleo-y-autenticacion","title":"N\u00facleo y autenticaci\u00f3n","text":"<ul> <li><code>GET /ping</code>, <code>GET /health</code>: sondas de actividad ligeras para el propio servicio de la API.</li> <li><code>POST /auth</code>: intercambia credenciales B\u00e1sicas (o el token de anulaci\u00f3n de administrador) por un Biscuit. Acepta JSON, formulario o cabeceras <code>Authorization</code>. Los administradores tambi\u00e9n pueden continuar usando HTTP Basic directamente en rutas protegidas cuando lo deseen.</li> </ul>"},{"location":"es/api/#plano-de-control-de-instancias","title":"Plano de control de instancias","text":"<ul> <li><code>GET /instances</code>: lista las instancias registradas, incluyendo marcas de tiempo de creaci\u00f3n/\u00faltima vez visto, m\u00e9todo de registro y metadatos.</li> <li><code>POST /instances</code>: registra una nueva instancia gestionada por la API (nombre de host, puerto opcional, nombre de servidor, nombre amigable, m\u00e9todo).</li> <li><code>GET /instances/{hostname}</code> / <code>PATCH /instances/{hostname}</code> / <code>DELETE /instances/{hostname}</code>: inspecciona, actualiza campos mutables o elimina instancias gestionadas por la API.</li> <li><code>DELETE /instances</code>: eliminaci\u00f3n masiva; omite las instancias que no son de la API y las informa en <code>skipped</code>.</li> <li><code>GET /instances/ping</code> y <code>GET /instances/{hostname}/ping</code>: comprobaciones de salud en todas o en instancias individuales.</li> <li><code>POST /instances/reload?test=yes|no</code>, <code>POST /instances/{hostname}/reload</code>: activa la recarga de la configuraci\u00f3n (el modo de prueba realiza una validaci\u00f3n de ejecuci\u00f3n en seco).</li> <li><code>POST /instances/stop</code>, <code>POST /instances/{hostname}/stop</code>: retransmite comandos de detenci\u00f3n a las instancias.</li> </ul>"},{"location":"es/api/#configuracion-global","title":"Configuraci\u00f3n global","text":"<ul> <li><code>GET /global_config</code>: obtiene configuraciones no predeterminadas (usa <code>full=true</code> para la configuraci\u00f3n completa, <code>methods=true</code> para incluir la procedencia).</li> <li><code>PATCH /global_config</code>: actualiza o inserta configuraciones globales propiedad de la API (<code>method=\"api\"</code>); los errores de validaci\u00f3n se\u00f1alan claves desconocidas o de solo lectura.</li> </ul>"},{"location":"es/api/#ciclo-de-vida-del-servicio","title":"Ciclo de vida del servicio","text":"<ul> <li><code>GET /services</code>: enumera los servicios con metadatos, incluido el estado de borrador y las marcas de tiempo.</li> <li><code>GET /services/{service}</code>: recupera las superposiciones no predeterminadas (<code>full=false</code>) o la instant\u00e1nea completa de la configuraci\u00f3n (<code>full=true</code>) para un servicio.</li> <li><code>POST /services</code>: crea servicios, opcionalmente como borrador, y siembra variables con prefijo (<code>{service}_{KEY}</code>). Actualiza la lista <code>SERVER_NAME</code> at\u00f3micamente.</li> <li><code>PATCH /services/{service}</code>: renombra servicios, cambia los indicadores de borrador y actualiza las variables con prefijo. Ignora las ediciones directas a <code>SERVER_NAME</code> dentro de <code>variables</code> por seguridad.</li> <li><code>DELETE /services/{service}</code>: elimina un servicio y sus claves de configuraci\u00f3n derivadas.</li> <li><code>POST /services/{service}/convert?convert_to=online|draft</code>: cambia r\u00e1pidamente el estado borrador/en l\u00ednea sin alterar otras variables.</li> </ul>"},{"location":"es/api/#fragmentos-de-configuracion-personalizados","title":"Fragmentos de configuraci\u00f3n personalizados","text":"<ul> <li><code>GET /configs</code>: lista fragmentos de configuraci\u00f3n personalizados (HTTP/servidor/stream/ModSecurity/ganchos CRS) para un servicio (<code>service=global</code> por defecto). <code>with_data=true</code> incrusta contenido UTF-8 cuando es imprimible.</li> <li><code>POST /configs</code> y <code>POST /configs/upload</code>: crea nuevos fragmentos a partir de cargas \u00fatiles JSON o archivos subidos. Los tipos aceptados incluyen <code>http</code>, <code>server_http</code>, <code>default_server_http</code>, <code>modsec</code>, <code>modsec_crs</code>, <code>stream</code>, <code>server_stream</code>, y ganchos de plugins CRS. Los nombres deben coincidir con <code>^[\\w_-]{1,64}$</code>.</li> <li><code>GET /configs/{service}/{type}/{name}</code>: recupera un fragmento con contenido opcional (<code>with_data=true</code>).</li> <li><code>PATCH /configs/{service}/{type}/{name}</code> y <code>PATCH .../upload</code>: actualiza o mueve fragmentos gestionados por la API; las entradas gestionadas por plantilla o archivo permanecen de solo lectura.</li> <li><code>DELETE /configs</code> y <code>DELETE /configs/{service}/{type}/{name}</code>: elimina fragmentos gestionados por la API conservando los gestionados por plantilla, devolviendo una lista <code>skipped</code> para las entradas ignoradas.</li> </ul>"},{"location":"es/api/#orquestacion-de-baneos","title":"Orquestaci\u00f3n de baneos","text":"<ul> <li><code>GET /bans</code>: agrega los baneos activos informados por todas las instancias.</li> <li><code>POST /bans</code> o <code>POST /bans/ban</code>: aplica uno o varios baneos. Las cargas \u00fatiles pueden ser objetos JSON, matrices o JSON en formato de cadena. <code>service</code> es opcional; cuando se omite, el baneo es global.</li> <li><code>POST /bans/unban</code> o <code>DELETE /bans</code>: elimina baneos globalmente o por servicio utilizando las mismas cargas \u00fatiles flexibles.</li> </ul>"},{"location":"es/api/#gestion-de-plugins","title":"Gesti\u00f3n de plugins","text":"<ul> <li><code>GET /plugins?type=all|external|ui|pro</code>: lista plugins con metadatos; <code>with_data=true</code> incluye los bytes empaquetados cuando est\u00e1n disponibles.</li> <li><code>POST /plugins/upload</code>: instala plugins de UI desde archivos <code>.zip</code>, <code>.tar.gz</code> o <code>.tar.xz</code>. Los archivos pueden agrupar m\u00faltiples plugins siempre que cada uno contenga un <code>plugin.json</code>.</li> <li><code>DELETE /plugins/{id}</code>: elimina un plugin de UI por ID (<code>^[\\w.-]{4,64}$</code>).</li> </ul>"},{"location":"es/api/#cache-y-ejecucion-de-trabajos","title":"Cach\u00e9 y ejecuci\u00f3n de trabajos","text":"<ul> <li><code>GET /cache</code>: lista los artefactos en cach\u00e9 producidos por los trabajos del programador, filtrados por servicio, ID de plugin o nombre de trabajo. <code>with_data=true</code> incluye contenido de archivo imprimible.</li> <li><code>GET /cache/{service}/{plugin}/{job}/{file}</code>: obtiene un archivo de cach\u00e9 espec\u00edfico (<code>download=true</code> transmite un archivo adjunto).</li> <li><code>DELETE /cache</code> o <code>DELETE /cache/{service}/{plugin}/{job}/{file}</code>: elimina archivos de cach\u00e9 y notifica al programador sobre los plugins afectados.</li> <li><code>GET /jobs</code>: inspecciona trabajos conocidos, sus metadatos de programaci\u00f3n y res\u00famenes de cach\u00e9.</li> <li><code>POST /jobs/run</code>: solicita la ejecuci\u00f3n de un trabajo marcando el(los) plugin(s) asociado(s) como cambiado(s).</li> </ul>"},{"location":"es/api/#notas-operativas","title":"Notas operativas","text":"<ul> <li>Los puntos finales de escritura persisten en la base de datos compartida; las instancias recogen los cambios a trav\u00e9s de la sincronizaci\u00f3n del programador o despu\u00e9s de un <code>/instances/reload</code>.</li> <li>Los errores se normalizan a <code>{ \"status\": \"error\", \"message\": \"...\" }</code> con los c\u00f3digos de estado HTTP apropiados (422 validaci\u00f3n, 404 no encontrado, 403 ACL, 5xx fallos de origen).</li> </ul>"},{"location":"es/api/#limitacion-de-velocidad","title":"Limitaci\u00f3n de velocidad","text":"<p>La limitaci\u00f3n de velocidad por cliente es manejada por SlowAPI. Habil\u00edtala/deshabil\u00edtala y configura los l\u00edmites a trav\u00e9s de variables de entorno o <code>/etc/bunkerweb/api.yml</code>.</p> <ul> <li><code>API_RATE_LIMIT_ENABLED</code> (predeterminado: <code>yes</code>)</li> <li>L\u00edmite predeterminado: <code>API_RATE_LIMIT_TIMES</code> por <code>API_RATE_LIMIT_SECONDS</code> (p. ej., <code>100</code> por <code>60</code>)</li> <li><code>API_RATE_LIMIT_RULES</code>: JSON/CSV en l\u00ednea, o una ruta a un archivo YAML/JSON con reglas por ruta</li> <li>Backend de almacenamiento: en memoria o Redis/Valkey cuando <code>USE_REDIS=yes</code> y se proporcionan las variables <code>REDIS_*</code> (compatible con Sentinel)</li> <li>Cabeceras: <code>API_RATE_LIMIT_HEADERS_ENABLED</code> (predeterminado: <code>yes</code>)</li> </ul> <p>Ejemplo de YAML (montado en <code>/etc/bunkerweb/api.yml</code>):</p> <p><code>yaml API_RATE_LIMIT_ENABLED: yes API_RATE_LIMIT_DEFAULTS: [\"200/minute\"] API_RATE_LIMIT_RULES:   - path: \"/auth\"     methods: \"POST\"     times: 10     seconds: 60   - path: \"/instances*\"     methods: \"GET|POST\"     times: 100     seconds: 60</code></p>"},{"location":"es/api/#configuracion","title":"Configuraci\u00f3n","text":"<p>Puedes configurar la API a trav\u00e9s de variables de entorno, secretos de Docker y los archivos opcionales <code>/etc/bunkerweb/api.yml</code> o <code>/etc/bunkerweb/api.env</code>. Configuraciones clave:</p> <ul> <li>Documentaci\u00f3n y esquema: <code>API_DOCS_URL</code>, <code>API_REDOC_URL</code>, <code>API_OPENAPI_URL</code>, <code>API_ROOT_PATH</code>.</li> <li>Autenticaci\u00f3n b\u00e1sica: <code>API_TOKEN</code> (Bearer de anulaci\u00f3n de administrador), <code>API_USERNAME</code>/<code>API_PASSWORD</code> (crear/actualizar administrador), <code>OVERRIDE_API_CREDS</code>.</li> <li>ACL y usuarios: <code>API_ACL_BOOTSTRAP_FILE</code> (ruta JSON).</li> <li>Pol\u00edtica de Biscuit: <code>API_BISCUIT_TTL_SECONDS</code> (0/desactivado deshabilita el TTL), <code>CHECK_PRIVATE_IP</code> (vincula el token a la IP del cliente a menos que sea privada).</li> <li>Lista blanca de IP: <code>API_WHITELIST_ENABLED</code>, <code>API_WHITELIST_IPS</code>.</li> <li>Limitaci\u00f3n de velocidad (n\u00facleo): <code>API_RATE_LIMIT_ENABLED</code>, <code>API_RATE_LIMIT_TIMES</code>, <code>API_RATE_LIMIT_SECONDS</code>, <code>API_RATE_LIMIT_HEADERS_ENABLED</code>.</li> <li>Limitaci\u00f3n de velocidad (avanzado): <code>API_RATE_LIMIT_AUTH_TIMES</code>, <code>API_RATE_LIMIT_AUTH_SECONDS</code>, <code>API_RATE_LIMIT_RULES</code>, <code>API_RATE_LIMIT_DEFAULTS</code>, <code>API_RATE_LIMIT_APPLICATION_LIMITS</code>, <code>API_RATE_LIMIT_STRATEGY</code>, <code>API_RATE_LIMIT_KEY</code>, <code>API_RATE_LIMIT_EXEMPT_IPS</code>, <code>API_RATE_LIMIT_STORAGE_OPTIONS</code>.</li> <li>Almacenamiento de limitaci\u00f3n de velocidad: en memoria o Redis/Valkey cuando <code>USE_REDIS=yes</code> y se establecen configuraciones de Redis como <code>REDIS_HOST</code>, <code>REDIS_PORT</code>, <code>REDIS_PASSWORD</code>, <code>REDIS_DATABASE</code>, <code>REDIS_SSL</code>, o variables de Sentinel. Consulta la tabla de configuraciones de Redis en <code>docs/features.md</code>.</li> <li>Red/TLS: <code>API_LISTEN_ADDR</code>, <code>API_LISTEN_PORT</code>, <code>API_FORWARDED_ALLOW_IPS</code>, <code>API_SSL_ENABLED</code>, <code>API_SSL_CERTFILE</code>, <code>API_SSL_KEYFILE</code>, <code>API_SSL_CA_CERTS</code>.</li> </ul>"},{"location":"es/api/#como-se-carga-la-configuracion","title":"C\u00f3mo se carga la configuraci\u00f3n","text":"<p>Precedencia de mayor a menor:</p> <ul> <li>Variables de entorno (p. ej., <code>environment:</code> del contenedor o variables de shell exportadas)</li> <li>Archivos de secretos en <code>/run/secrets</code> (secretos de Docker/K8s; los nombres de archivo coinciden con los nombres de las variables)</li> <li>Archivo YAML en <code>/etc/bunkerweb/api.yml</code></li> <li>Archivo de entorno en <code>/etc/bunkerweb/api.env</code> (l\u00edneas clave=valor)</li> <li>Valores predeterminados incorporados</li> </ul> <p>Notas:</p> <ul> <li>YAML admite la inserci\u00f3n de archivos de secretos con <code>&lt;file:relative/path&gt;</code>; la ruta se resuelve contra <code>/run/secrets</code>.</li> <li>Establece las URL de la documentaci\u00f3n en <code>off</code>/<code>disabled</code>/<code>none</code> para deshabilitar los puntos finales (p. ej., <code>API_DOCS_URL=off</code>).</li> <li>Si <code>API_SSL_ENABLED=yes</code>, tambi\u00e9n debes establecer <code>API_SSL_CERTFILE</code> y <code>API_SSL_KEYFILE</code>.</li> <li>Si Redis est\u00e1 habilitado (<code>USE_REDIS=yes</code>), proporciona los detalles de Redis; consulta la secci\u00f3n de Redis en <code>docs/features.md</code>.</li> </ul>"},{"location":"es/api/#autenticacion-y-usuarios","title":"Autenticaci\u00f3n y usuarios","text":"<ul> <li>Arranque de administrador: establece <code>API_USERNAME</code> y <code>API_PASSWORD</code> para crear el primer administrador. Para volver a aplicar m\u00e1s tarde, establece <code>OVERRIDE_API_CREDS=yes</code>.</li> <li>No administradores y permisos: proporciona <code>API_ACL_BOOTSTRAP_FILE</code> con una ruta JSON (o monta en <code>/var/lib/bunkerweb/api_acl_bootstrap.json</code>). El archivo puede listar usuarios y concesiones detalladas.</li> <li>Claves de Biscuit: establece <code>BISCUIT_PUBLIC_KEY</code>/<code>BISCUIT_PRIVATE_KEY</code> o monta archivos en <code>/var/lib/bunkerweb/.api_biscuit_public_key</code> y <code>/var/lib/bunkerweb/.api_biscuit_private_key</code>. Si no se proporciona ninguno, la API genera y persiste un par de claves al inicio.</li> </ul>"},{"location":"es/api/#tls-y-redes","title":"TLS y redes","text":"<ul> <li>Direcci\u00f3n/puerto de enlace: <code>API_LISTEN_ADDR</code> (predeterminado <code>0.0.0.0</code>), <code>API_LISTEN_PORT</code> (predeterminado <code>8888</code>).</li> <li>Proxies inversos: establece <code>API_FORWARDED_ALLOW_IPS</code> en las IP del proxy para que Gunicorn conf\u00ede en las cabeceras <code>X-Forwarded-*</code>.</li> <li>Terminaci\u00f3n de TLS en la API: <code>API_SSL_ENABLED=yes</code> m\u00e1s <code>API_SSL_CERTFILE</code> y <code>API_SSL_KEYFILE</code>; opcional <code>API_SSL_CA_CERTS</code></li> </ul>"},{"location":"es/api/#recetas-rapidas-de-limitacion-de-velocidad","title":"Recetas r\u00e1pidas de limitaci\u00f3n de velocidad","text":"<ul> <li>Deshabilitar globalmente: <code>API_RATE_LIMIT_ENABLED=no</code></li> <li>Establecer un l\u00edmite global simple: <code>API_RATE_LIMIT_TIMES=100</code>, <code>API_RATE_LIMIT_SECONDS=60</code></li> <li>Reglas por ruta: establece <code>API_RATE_LIMIT_RULES</code> en una ruta de archivo JSON/YAML o YAML en l\u00ednea en <code>/etc/bunkerweb/api.yml</code>.</li> </ul> <p>Seguridad de inicio</p> <p>La API se cierra si no hay una ruta de autenticaci\u00f3n configurada (sin claves Biscuit, sin usuario administrador y sin <code>API_TOKEN</code>). Aseg\u00farate de que al menos un m\u00e9todo est\u00e9 configurado antes de iniciar.</p> <p>Seguridad de inicio: La API se cierra si no hay una ruta de autenticaci\u00f3n disponible (sin claves Biscuit, sin usuario de API administrador y sin <code>API_TOKEN</code>). Aseg\u00farate de que al menos una est\u00e9 configurada.</p> <p>Ruta ra\u00edz y proxies</p> <p>Si despliegas la API detr\u00e1s de BunkerWeb en una subruta, establece <code>API_ROOT_PATH</code> en esa ruta para que <code>/docs</code> y las rutas relativas funcionen correctamente cuando se usan con un proxy.</p>"},{"location":"es/api/#operaciones","title":"Operaciones","text":"<ul> <li>Salud: <code>GET /health</code> devuelve <code>{\"status\":\"ok\"}</code> cuando el servicio est\u00e1 activo.</li> <li>Servicio de Linux: se empaqueta una unidad <code>systemd</code> llamada <code>bunkerweb-api.service</code>. Personaliza a trav\u00e9s de <code>/etc/bunkerweb/api.env</code> y gestiona con <code>systemctl</code>.</li> <li>Seguridad de inicio: la API falla r\u00e1pidamente cuando no hay una ruta de autenticaci\u00f3n disponible (sin claves Biscuit, sin usuario administrador, sin <code>API_TOKEN</code>). Los errores se escriben en <code>/var/tmp/bunkerweb/api.error</code>.</li> </ul>"},{"location":"es/concepts/","title":"Conceptos","text":""},{"location":"es/concepts/#arquitectura","title":"Arquitectura","text":"<p>Dentro de tu infraestructura, BunkerWeb act\u00faa como un proxy inverso frente a tus servicios web. La arquitectura t\u00edpica implica acceder a BunkerWeb desde Internet, que luego reenv\u00eda las solicitudes al servicio de aplicaci\u00f3n apropiado en una red segura.</p> <p>Usar BunkerWeb de esta manera (arquitectura cl\u00e1sica de proxy inverso) con descarga de TLS y pol\u00edticas de seguridad centralizadas mejora el rendimiento al reducir la sobrecarga de cifrado en los servidores backend, al tiempo que garantiza un control de acceso consistente, mitigaci\u00f3n de amenazas y cumplimiento de normativas en todos los servicios.</p>"},{"location":"es/concepts/#integraciones","title":"Integraciones","text":"<p>El primer concepto es la integraci\u00f3n de BunkerWeb en el entorno de destino. Preferimos usar la palabra \"integraci\u00f3n\" en lugar de \"instalaci\u00f3n\" porque uno de los objetivos de BunkerWeb es integrarse sin problemas en los entornos existentes.</p> <p>Las siguientes integraciones son oficialmente compatibles:</p> <ul> <li>Docker</li> <li>Linux</li> <li>Docker autoconf</li> <li>Kubernetes</li> <li>Swarm</li> </ul> <p>Si crees que se deber\u00eda admitir una nueva integraci\u00f3n, no dudes en abrir un nuevo issue en el repositorio de GitHub.</p> <p>Para saber m\u00e1s</p> <p>Los detalles t\u00e9cnicos de todas las integraciones de BunkerWeb est\u00e1n disponibles en la secci\u00f3n de integraciones de la documentaci\u00f3n.</p>"},{"location":"es/concepts/#configuraciones","title":"Configuraciones","text":"<p>Configuraciones de BunkerWeb PRO</p> <p>Algunos plugins est\u00e1n reservados para la versi\u00f3n PRO. \u00bfQuieres probar r\u00e1pidamente BunkerWeb PRO durante un mes? Usa el c\u00f3digo <code>freetrial</code> al realizar tu pedido en el panel de BunkerWeb o haciendo clic aqu\u00ed para aplicar directamente el c\u00f3digo de promoci\u00f3n (se har\u00e1 efectivo al finalizar la compra).</p> <p>Una vez que BunkerWeb est\u00e9 integrado en tu entorno, necesitar\u00e1s configurarlo para servir y proteger tus aplicaciones web.</p> <p>La configuraci\u00f3n de BunkerWeb se realiza utilizando lo que llamamos \"configuraciones\" o \"variables\". Cada configuraci\u00f3n se identifica por un nombre como <code>AUTO_LETS_ENCRYPT</code> o <code>USE_ANTIBOT</code>. Puedes asignar valores a estas configuraciones para configurar BunkerWeb.</p> <p>Aqu\u00ed hay un ejemplo ficticio de una configuraci\u00f3n de BunkerWeb:</p> <pre><code>SERVER_NAME=www.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_ANTIBOT=captcha\nREFERRER_POLICY=no-referrer\nUSE_MODSECURITY=no\nUSE_GZIP=yes\nUSE_BROTLI=no\n</code></pre> <p>Ten en cuenta que si est\u00e1s utilizando la interfaz de usuario web, los nombres de las configuraciones tambi\u00e9n se muestran adem\u00e1s de una etiqueta \"f\u00e1cil de usar\":</p> <p> </p> Nombre de la configuraci\u00f3n en la interfaz de usuario web <p>Tambi\u00e9n puedes usar la barra de b\u00fasqueda y especificar directamente el nombre de una configuraci\u00f3n:</p> <p> </p> B\u00fasqueda de configuraciones en la interfaz de usuario web <p>Para saber m\u00e1s</p> <p>La lista completa de configuraciones disponibles con descripciones y posibles valores est\u00e1 disponible en la secci\u00f3n de caracter\u00edsticas de la documentaci\u00f3n.</p>"},{"location":"es/concepts/#modo-multisitio","title":"Modo multisitio","text":"<p>Comprender el modo multisitio es esencial al utilizar BunkerWeb. Como nuestro enfoque principal es proteger las aplicaciones web, nuestra soluci\u00f3n est\u00e1 intr\u00ednsecamente vinculada al concepto de \"hosts virtuales\" o \"vhosts\" (m\u00e1s informaci\u00f3n aqu\u00ed). Estos hosts virtuales permiten servir m\u00faltiples aplicaciones web desde una \u00fanica instancia o cl\u00faster.</p> <p>Por defecto, BunkerWeb tiene el modo multisitio deshabilitado. Esto significa que solo se servir\u00e1 una aplicaci\u00f3n web, y todas las configuraciones se aplicar\u00e1n a ella. Esta configuraci\u00f3n es ideal cuando tienes una sola aplicaci\u00f3n que proteger, ya que no necesitas preocuparte por las configuraciones multisitio.</p> <p>Sin embargo, cuando el modo multisitio est\u00e1 habilitado, BunkerWeb se vuelve capaz de servir y proteger m\u00faltiples aplicaciones web. Cada aplicaci\u00f3n web se identifica por un nombre de servidor \u00fanico y tiene su propio conjunto de configuraciones. Este modo resulta beneficioso cuando tienes m\u00faltiples aplicaciones que asegurar y prefieres utilizar una \u00fanica instancia (o un cl\u00faster) de BunkerWeb.</p> <p>La activaci\u00f3n del modo multisitio se controla mediante la configuraci\u00f3n <code>MULTISITE</code>, que se puede establecer en <code>yes</code> para habilitarlo o <code>no</code> para mantenerlo deshabilitado (el valor predeterminado).</p> <p>Cada configuraci\u00f3n dentro de BunkerWeb tiene un contexto espec\u00edfico que determina d\u00f3nde se puede aplicar. Si el contexto se establece en \"global\", la configuraci\u00f3n no se puede aplicar por servidor o sitio, sino que se aplica a toda la configuraci\u00f3n en su conjunto. Por otro lado, si el contexto es \"multisitio\", la configuraci\u00f3n se puede aplicar globalmente y por servidor. Para definir una configuraci\u00f3n multisitio para un servidor espec\u00edfico, simplemente agrega el nombre del servidor como prefijo al nombre de la configuraci\u00f3n. Por ejemplo, <code>app1.example.com_AUTO_LETS_ENCRYPT</code> o <code>app2.example.com_USE_ANTIBOT</code> son ejemplos de nombres de configuraci\u00f3n con prefijos de nombre de servidor. Cuando una configuraci\u00f3n multisitio se define globalmente sin un prefijo de servidor, todos los servidores heredan esa configuraci\u00f3n. Sin embargo, los servidores individuales a\u00fan pueden anular la configuraci\u00f3n si la misma configuraci\u00f3n se define con un prefijo de nombre de servidor.</p> <p>Comprender las complejidades del modo multisitio y sus configuraciones asociadas te permite adaptar el comportamiento de BunkerWeb a tus requisitos espec\u00edficos, garantizando una protecci\u00f3n \u00f3ptima para tus aplicaciones web.</p> <p>Aqu\u00ed hay un ejemplo ficticio de una configuraci\u00f3n multisitio de BunkerWeb:</p> <pre><code>MULTISITE=yes\nSERVER_NAME=app1.example.com app2.example.com app3.example.com\nAUTO_LETS_ENCRYPT=yes\nUSE_GZIP=yes\nUSE_BROTLI=yes\napp1.example.com_USE_ANTIBOT=javascript\napp1.example.com_USE_MODSECURITY=no\napp2.example.com_USE_ANTIBOT=cookie\napp2.example.com_WHITELIST_COUNTRY=FR\napp3.example.com_USE_BAD_BEHAVIOR=no\n</code></pre> <p>Ten en cuenta que el modo multisitio es impl\u00edcito cuando se utiliza la interfaz de usuario web. Tienes la opci\u00f3n de aplicar configuraciones directamente a tus servicios o de establecer una configuraci\u00f3n global que se aplicar\u00e1 a todos tus servicios (a\u00fan puedes aplicar excepciones directamente a servicios espec\u00edficos):</p> <p> </p> Aplicar una configuraci\u00f3n a todos los servicios desde la interfaz de usuario web <p>Para saber m\u00e1s</p> <p>Encontrar\u00e1s ejemplos concretos del modo multisitio en los usos avanzados de la documentaci\u00f3n y en el directorio de ejemplos del repositorio.</p>"},{"location":"es/concepts/#configuraciones-personalizadas","title":"Configuraciones personalizadas","text":"<p>Para abordar desaf\u00edos \u00fanicos y satisfacer casos de uso espec\u00edficos, BunkerWeb ofrece la flexibilidad de las configuraciones personalizadas. Si bien las configuraciones proporcionadas y los plugins externos cubren una amplia gama de escenarios, puede haber situaciones que requieran una personalizaci\u00f3n adicional.</p> <p>BunkerWeb est\u00e1 construido sobre el reconocido servidor web NGINX, que proporciona un potente sistema de configuraci\u00f3n. Esto significa que puedes aprovechar las capacidades de configuraci\u00f3n de NGINX para satisfacer tus necesidades espec\u00edficas. Las configuraciones personalizadas de NGINX se pueden incluir en varios contextos como HTTP o servidor, lo que te permite ajustar el comportamiento de BunkerWeb seg\u00fan tus requisitos. Ya sea que necesites personalizar configuraciones globales o aplicar configuraciones a bloques de servidor espec\u00edficos, BunkerWeb te permite optimizar su comportamiento para alinearse perfectamente con tu caso de uso.</p> <p>Otro componente integral de BunkerWeb es el Firewall de Aplicaciones Web ModSecurity. Con configuraciones personalizadas, tienes la flexibilidad de abordar falsos positivos o agregar reglas personalizadas para mejorar a\u00fan m\u00e1s la protecci\u00f3n proporcionada por ModSecurity. Estas configuraciones personalizadas te permiten ajustar el comportamiento del firewall y asegurar que se alinee con los requisitos espec\u00edficos de tus aplicaciones web.</p> <p>Al aprovechar las configuraciones personalizadas, desbloqueas un mundo de posibilidades para adaptar el comportamiento y las medidas de seguridad de BunkerWeb precisamente a tus necesidades. Ya sea ajustando las configuraciones de NGINX o afinando ModSecurity, BunkerWeb proporciona la flexibilidad para enfrentar tus desaf\u00edos \u00fanicos de manera efectiva.</p> <p>La gesti\u00f3n de configuraciones personalizadas desde la interfaz de usuario web se realiza a trav\u00e9s del men\u00fa Configuraciones:</p> <p> </p> Gestionar configuraciones personalizadas desde la interfaz de usuario web <p>Para saber m\u00e1s</p> <p>Encontrar\u00e1s ejemplos concretos de configuraciones personalizadas en los usos avanzados de la documentaci\u00f3n y en el directorio de ejemplos del repositorio.</p>"},{"location":"es/concepts/#base-de-datos","title":"Base de datos","text":"<p>BunkerWeb almacena de forma segura su configuraci\u00f3n actual en una base de datos de backend, que contiene datos esenciales para un funcionamiento sin problemas. La siguiente informaci\u00f3n se almacena en la base de datos:</p> <ul> <li> <p>Configuraciones para todos los servicios: La base de datos contiene las configuraciones definidas para todos los servicios proporcionados por BunkerWeb. Esto asegura que tus configuraciones y preferencias se conserven y sean f\u00e1cilmente accesibles.</p> </li> <li> <p>Configuraciones personalizadas: Cualquier configuraci\u00f3n personalizada que crees tambi\u00e9n se almacena en la base de datos de backend. Esto incluye configuraciones personalizadas y modificaciones adaptadas a tus requisitos espec\u00edficos.</p> </li> <li> <p>Instancias de BunkerWeb: La informaci\u00f3n sobre las instancias de BunkerWeb, incluida su configuraci\u00f3n y detalles relevantes, se almacena en la base de datos. Esto permite una f\u00e1cil gesti\u00f3n y monitoreo de m\u00faltiples instancias si corresponde.</p> </li> <li> <p>Metadatos sobre la ejecuci\u00f3n de trabajos: La base de datos almacena metadatos relacionados con la ejecuci\u00f3n de varios trabajos dentro de BunkerWeb. Esto incluye informaci\u00f3n sobre tareas programadas, procesos de mantenimiento y otras actividades automatizadas.</p> </li> <li> <p>Archivos en cach\u00e9: BunkerWeb utiliza mecanismos de almacenamiento en cach\u00e9 para mejorar el rendimiento. La base de datos contiene archivos en cach\u00e9, lo que garantiza una recuperaci\u00f3n y entrega eficientes de los recursos a los que se accede con frecuencia.</p> </li> </ul> <p>Bajo el cap\u00f3, cada vez que editas una configuraci\u00f3n o agregas una nueva, BunkerWeb almacena autom\u00e1ticamente los cambios en la base de datos, garantizando la persistencia y coherencia de los datos. BunkerWeb admite m\u00faltiples opciones de bases de datos de backend, como SQLite, MariaDB, MySQL y PostgreSQL.</p> <p>Configurar la base de datos es sencillo utilizando la configuraci\u00f3n <code>DATABASE_URI</code>, que sigue los formatos especificados para cada base de datos compatible:</p> <p>Warning</p> <p>Cuando se utiliza la Integraci\u00f3n de Docker, debes establecer la variable de entorno <code>DATABASE_URI</code> en todos los contenedores de BunkerWeb (excepto el propio contenedor de BunkerWeb), para garantizar que todos los componentes puedan acceder a la base de datos correctamente. Esto es crucial para mantener la integridad y la funcionalidad del sistema.</p> <p>En todos los casos, aseg\u00farate de que <code>DATABASE_URI</code> est\u00e9 configurado antes de iniciar BunkerWeb, ya que es necesario para un funcionamiento correcto.</p> <ul> <li>SQLite: <code>sqlite:///var/lib/bunkerweb/db.sqlite3</code></li> <li>MariaDB: <code>mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>MySQL: <code>mysql+pymysql://bunkerweb:changeme@bw-db:3306/db</code></li> <li>PostgreSQL: <code>postgresql://bunkerweb:changeme@bw-db:5432/db</code></li> </ul> <p>Al especificar el URI de la base de datos apropiado en la configuraci\u00f3n, puedes integrar BunkerWeb sin problemas con tu backend de base de datos preferido, garantizando un almacenamiento eficiente y confiable de tus datos de configuraci\u00f3n.</p> <p> </p> Esquema de la base de datos"},{"location":"es/concepts/#programador","title":"Programador","text":"<p>Para una coordinaci\u00f3n y automatizaci\u00f3n fluidas, BunkerWeb emplea un servicio especializado conocido como el programador. El programador desempe\u00f1a un papel vital para garantizar un funcionamiento sin problemas al realizar las siguientes tareas:</p> <ul> <li> <p>Almacenar configuraciones y configuraciones personalizadas: El programador es responsable de almacenar todas las configuraciones y configuraciones personalizadas dentro de la base de datos de backend. Esto centraliza los datos de configuraci\u00f3n, haci\u00e9ndolos f\u00e1cilmente accesibles y manejables.</p> </li> <li> <p>Ejecutar diversas tareas (trabajos): El programador se encarga de la ejecuci\u00f3n de diversas tareas, conocidas como trabajos. Estos trabajos abarcan una gama de actividades, como el mantenimiento peri\u00f3dico, las actualizaciones programadas o cualquier otra tarea automatizada requerida por BunkerWeb.</p> </li> <li> <p>Generar la configuraci\u00f3n de BunkerWeb: El programador genera una configuraci\u00f3n que es f\u00e1cilmente comprensible por BunkerWeb. Esta configuraci\u00f3n se deriva de las configuraciones almacenadas y las configuraciones personalizadas, asegurando que todo el sistema funcione de manera cohesiva.</p> </li> <li> <p>Actuar como intermediario para otros servicios: El programador act\u00faa como intermediario, facilitando la comunicaci\u00f3n y coordinaci\u00f3n entre los diferentes componentes de BunkerWeb. Interact\u00faa con servicios como la interfaz de usuario web o la autoconfiguraci\u00f3n, asegurando un flujo de informaci\u00f3n y un intercambio de datos fluidos.</p> </li> </ul> <p>En esencia, el programador sirve como el cerebro de BunkerWeb, orquestando diversas operaciones y asegurando el buen funcionamiento del sistema.</p> <p>Dependiendo del enfoque de integraci\u00f3n, el entorno de ejecuci\u00f3n del programador puede diferir. En las integraciones basadas en contenedores, el programador se ejecuta dentro de su contenedor dedicado, proporcionando aislamiento y flexibilidad. Por otro lado, para las integraciones basadas en Linux, el programador est\u00e1 autocontenido dentro del servicio bunkerweb, simplificando el proceso de implementaci\u00f3n y gesti\u00f3n.</p> <p>Al emplear el programador, BunkerWeb agiliza la automatizaci\u00f3n y coordinaci\u00f3n de tareas esenciales, permitiendo un funcionamiento eficiente y confiable de todo el sistema.</p> <p>Si est\u00e1s utilizando la interfaz de usuario web, puedes gestionar los trabajos del programador haciendo clic en Trabajos en el men\u00fa:</p> <p> </p> Gestionar trabajos desde la interfaz de usuario web"},{"location":"es/concepts/#comprobacion-del-estado-de-las-instancias","title":"Comprobaci\u00f3n del estado de las instancias","text":"<p>Desde la versi\u00f3n 1.6.0, el programador posee un sistema de comprobaci\u00f3n de estado incorporado que monitorea la salud de las instancias. Si una instancia deja de estar saludable, el programador dejar\u00e1 de enviarle la configuraci\u00f3n. Si la instancia vuelve a estar saludable, el programador reanudar\u00e1 el env\u00edo de la configuraci\u00f3n.</p> <p>El intervalo de comprobaci\u00f3n de estado se establece mediante la variable de entorno <code>HEALTHCHECK_INTERVAL</code>, con un valor predeterminado de <code>30</code>, lo que significa que el programador comprobar\u00e1 la salud de las instancias cada 30 segundos.</p>"},{"location":"es/concepts/#plantillas","title":"Plantillas","text":"<p>BunkerWeb aprovecha el poder de las plantillas para simplificar el proceso de configuraci\u00f3n y mejorar la flexibilidad. Las plantillas proporcionan un enfoque estructurado y estandarizado para definir configuraciones y configuraciones personalizadas, garantizando la coherencia y la facilidad de uso.</p> <ul> <li> <p>Plantillas predefinidas: La versi\u00f3n comunitaria ofrece tres plantillas predefinidas que encapsulan configuraciones personalizadas y configuraciones comunes. Estas plantillas sirven como punto de partida para configurar BunkerWeb, permitiendo una configuraci\u00f3n y despliegue r\u00e1pidos. Las plantillas predefinidas son las siguientes:</p> <ul> <li>low: Una plantilla b\u00e1sica que proporciona configuraciones esenciales para la protecci\u00f3n de aplicaciones web.</li> <li>medium: Una plantilla equilibrada que ofrece una mezcla de caracter\u00edsticas de seguridad y optimizaciones de rendimiento.</li> <li>high: Una plantilla avanzada que se centra en medidas de seguridad robustas y protecci\u00f3n integral.</li> </ul> </li> <li> <p>Plantillas personalizadas: Adem\u00e1s de las plantillas predefinidas, BunkerWeb permite a los usuarios crear plantillas personalizadas adaptadas a sus requisitos espec\u00edficos. Las plantillas personalizadas permiten un ajuste fino de las configuraciones y configuraciones personalizadas, asegurando que BunkerWeb se alinee perfectamente con las necesidades del usuario.</p> </li> </ul> <p>Con la interfaz de usuario web, las plantillas est\u00e1n disponibles a trav\u00e9s del modo f\u00e1cil cuando agregas o editas un servicio:</p> <p> </p> Uso de plantillas desde la interfaz de usuario web <p>Creaci\u00f3n de plantillas personalizadas</p> <p>Crear una plantilla personalizada es un proceso sencillo que implica definir las configuraciones deseadas, las configuraciones personalizadas y los pasos en un formato estructurado.</p> <ul> <li>Estructura de la plantilla: Una plantilla personalizada consta de un nombre, una serie de configuraciones, configuraciones personalizadas y pasos opcionales. La estructura de la plantilla se define en un archivo JSON que cumple con el formato especificado. Los componentes clave de una plantilla personalizada incluyen:<ul> <li>Configuraciones: Una configuraci\u00f3n se define con un nombre y un valor correspondiente. Este valor anular\u00e1 el valor predeterminado de la configuraci\u00f3n. Solo se admiten configuraciones multisitio.</li> <li>Configuraciones personalizadas: Una configuraci\u00f3n personalizada es una ruta a un archivo de configuraci\u00f3n de NGINX que se incluir\u00e1 como una configuraci\u00f3n personalizada. Para saber d\u00f3nde colocar el archivo de configuraci\u00f3n personalizada, consulta el ejemplo del \u00e1rbol de un plugin a continuaci\u00f3n. Solo se admiten tipos de configuraci\u00f3n multisitio.</li> <li>Pasos: Un paso contiene un t\u00edtulo, un subt\u00edtulo, configuraciones y configuraciones personalizadas. Cada paso representa un paso de configuraci\u00f3n que el usuario puede seguir para configurar BunkerWeb de acuerdo con la plantilla personalizada en la interfaz de usuario web.</li> </ul> </li> </ul> <p>Especificaciones sobre los pasos</p> <p>Si se declaran pasos, no es obligatorio incluir todas las configuraciones y configuraciones personalizadas en las secciones de configuraciones y configuraciones personalizadas. Ten en cuenta que cuando una configuraci\u00f3n o una configuraci\u00f3n personalizada se declara en un paso, al usuario se le permitir\u00e1 realizar ediciones en la interfaz de usuario web.</p> <ul> <li> <p>Archivo de plantilla: La plantilla personalizada se define en un archivo JSON en una carpeta <code>templates</code> dentro del directorio del plugin que se adhiere a la estructura especificada. El archivo de plantilla contiene un nombre, las configuraciones, las configuraciones personalizadas y los pasos necesarios para configurar BunkerWeb de acuerdo con las preferencias del usuario.</p> </li> <li> <p>Selecci\u00f3n de una plantilla: Una vez definida la plantilla personalizada, los usuarios pueden seleccionarla durante el proceso de configuraci\u00f3n en modo f\u00e1cil de un servicio en la interfaz de usuario web. Tambi\u00e9n se puede seleccionar una plantilla con la configuraci\u00f3n <code>USE_TEMPLATE</code> en la configuraci\u00f3n. El nombre del archivo de la plantilla (sin la extensi\u00f3n <code>.json</code>) debe especificarse como el valor de la configuraci\u00f3n <code>USE_TEMPLATE</code>.</p> </li> </ul> <p>Ejemplo de un archivo de plantilla personalizada: <pre><code>{\n    \"name\": \"nombre de la plantilla\",\n    // opcional\n    \"settings\": {\n        \"SETTING_1\": \"valor\",\n        \"SETTING_2\": \"valor\"\n    },\n    // opcional\n    \"configs\": [\n        \"modsec/false_positives.conf\",\n        \"modsec/non_editable.conf\",\n        \"modsec-crs/custom_rules.conf\"\n    ],\n    // opcional\n    \"steps\": [\n        {\n            \"title\": \"T\u00edtulo 1\",\n            \"subtitle\": \"subt\u00edtulo 1\",\n            \"settings\": [\n                \"SETTING_1\"\n            ],\n            \"configs\": [\n                \"modsec-crs/custom_rules.conf\"\n            ]\n        },\n        {\n            \"title\": \"T\u00edtulo 2\",\n            \"subtitle\": \"subt\u00edtulo 2\",\n            \"settings\": [\n                \"SETTING_2\"\n            ],\n            \"configs\": [\n                \"modsec/false_positives.conf\"\n            ]\n        }\n    ]\n}\n</code></pre></p> <p>Ejemplo de un \u00e1rbol de un plugin que incluye plantillas personalizadas: <pre><code>.\n\u251c\u2500\u2500 plugin.json\n\u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 my_other_template.json\n    \u251c\u2500\u2500 my_template\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 configs\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 modsec\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 false_positives.conf\n    \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 non_editable.conf\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 modsec-crs\n    \u2502\u00a0\u00a0         \u2514\u2500\u2500 custom_rules.conf\n    \u2514\u2500\u2500 my_template.json\n</code></pre></p>"},{"location":"es/features/","title":"Caracter\u00edsticas","text":"<p>Esta secci\u00f3n contiene la lista completa de ajustes admitidos por BunkerWeb. Si a\u00fan no est\u00e1 familiarizado con BunkerWeb, primero lea la secci\u00f3n de conceptos de la documentaci\u00f3n. Siga las instrucciones de su integraci\u00f3n para aplicar los ajustes.</p>"},{"location":"es/features/#configuracion-global","title":"Configuraci\u00f3n global","text":"<p>Compatibilidad con STREAM </p> <p>El plugin General proporciona el marco de configuraci\u00f3n principal para BunkerWeb, permiti\u00e9ndote definir los ajustes esenciales que controlan c\u00f3mo se protegen y entregan tus servicios web. Este plugin fundamental gestiona aspectos b\u00e1sicos como los modos de seguridad, los valores predeterminados del servidor, el comportamiento de los registros y los par\u00e1metros operativos cr\u00edticos para todo el ecosistema de BunkerWeb.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando BunkerWeb se inicia, el plugin General carga y aplica tus ajustes de configuraci\u00f3n principales.</li> <li>Los modos de seguridad se establecen de forma global o por sitio, determinando el nivel de protecci\u00f3n aplicado.</li> <li>Los ajustes predeterminados del servidor establecen valores de respaldo para cualquier configuraci\u00f3n multisitio no especificada.</li> <li>Los par\u00e1metros de registro controlan qu\u00e9 informaci\u00f3n se graba y c\u00f3mo se formatea.</li> <li>Estos ajustes crean la base sobre la que operan todos los dem\u00e1s plugins y funcionalidades de BunkerWeb.</li> </ol>"},{"location":"es/features/#modo-multisite","title":"Modo Multisite","text":"<p>Cuando <code>MULTISITE</code> se establece en <code>yes</code>, BunkerWeb puede alojar y proteger m\u00faltiples sitios web, cada uno con su propia configuraci\u00f3n \u00fanica. Esta caracter\u00edstica es particularmente \u00fatil para escenarios como:</p> <ul> <li>Alojar m\u00faltiples dominios con configuraciones distintas</li> <li>Ejecutar m\u00faltiples aplicaciones con diferentes requisitos de seguridad</li> <li>Aplicar pol\u00edticas de seguridad personalizadas a diferentes servicios</li> </ul> <p>En el modo multisitio, cada sitio se identifica por un <code>SERVER_NAME</code> \u00fanico. Para aplicar ajustes espec\u00edficos a un sitio, antep\u00f3n el <code>SERVER_NAME</code> principal al nombre del ajuste. Por ejemplo:</p> <ul> <li><code>www.example.com_USE_ANTIBOT=captcha</code> habilita el CAPTCHA para <code>www.example.com</code>.</li> <li><code>myapp.example.com_USE_GZIP=yes</code> habilita la compresi\u00f3n GZIP para <code>myapp.example.com</code>.</li> </ul> <p>Este enfoque asegura que los ajustes se apliquen al sitio correcto en un entorno multisitio.</p>"},{"location":"es/features/#ajustes-multiples","title":"Ajustes M\u00faltiples","text":"<p>Algunos ajustes en BunkerWeb admiten m\u00faltiples configuraciones para la misma caracter\u00edstica. Para definir m\u00faltiples grupos de ajustes, a\u00f1ade un sufijo num\u00e9rico al nombre del ajuste. Por ejemplo:</p> <ul> <li><code>REVERSE_PROXY_URL_1=/subdir</code> y <code>REVERSE_PROXY_HOST_1=http://myhost1</code> configuran el primer proxy inverso.</li> <li><code>REVERSE_PROXY_URL_2=/anotherdir</code> y <code>REVERSE_PROXY_HOST_2=http://myhost2</code> configuran el segundo proxy inverso.</li> </ul> <p>Este patr\u00f3n te permite gestionar m\u00faltiples configuraciones para caracter\u00edsticas como proxies inversos, puertos u otros ajustes que requieren valores distintos para diferentes casos de uso.</p>"},{"location":"es/features/#modos-de-seguridad","title":"Modos de Seguridad","text":"<p>El ajuste <code>SECURITY_MODE</code> determina c\u00f3mo BunkerWeb maneja las amenazas detectadas. Esta caracter\u00edstica flexible te permite elegir entre monitorizar o bloquear activamente la actividad sospechosa, dependiendo de tus necesidades espec\u00edficas:</p> <ul> <li><code>detect</code>: Registra las amenazas potenciales sin bloquear el acceso. Este modo es \u00fatil para identificar y analizar falsos positivos de una manera segura y no disruptiva.</li> <li><code>block</code> (predeterminado): Bloquea activamente las amenazas detectadas mientras registra los incidentes para prevenir el acceso no autorizado y proteger tu aplicaci\u00f3n.</li> </ul> <p>Cambiar al modo <code>detect</code> puede ayudarte a identificar y resolver posibles falsos positivos sin interrumpir a los clientes leg\u00edtimos. Una vez que estos problemas se resuelvan, puedes volver con confianza al modo <code>block</code> para una protecci\u00f3n completa.</p>"},{"location":"es/features/#ajustes-de-configuracion","title":"Ajustes de Configuraci\u00f3n","text":"Ajustes PrincipalesAjustes de la APIAjustes de Red y PuertosAjustes del Servidor de StreamAjustes de WorkersAjustes de MemoriaAjustes de RegistroAjustes de Integraci\u00f3nAjustes de Nginx Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>SERVER_NAME</code> <code>www.example.com</code> multisite No Dominio Principal: El nombre de dominio principal para este sitio. Requerido en modo multisitio. <code>BUNKERWEB_INSTANCES</code> <code>127.0.0.1</code> global No Instancias de BunkerWeb: Lista de instancias de BunkerWeb separadas por espacios. <code>MULTISITE</code> <code>no</code> global No M\u00faltiples Sitios: Establ\u00e9celo en <code>yes</code> para permitir el alojamiento de m\u00faltiples sitios web con diferentes configuraciones. <code>SECURITY_MODE</code> <code>block</code> multisite No Nivel de Seguridad: Controla el nivel de aplicaci\u00f3n de la seguridad. Opciones: <code>detect</code> o <code>block</code>. <code>SERVER_TYPE</code> <code>http</code> multisite No Tipo de Servidor: Define si el servidor es de tipo <code>http</code> o <code>stream</code>. Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_API</code> <code>yes</code> global No Activar API: Activa la API para controlar BunkerWeb. <code>API_HTTP_PORT</code> <code>5000</code> global No Puerto de la API: N\u00famero de puerto de escucha para la API. <code>API_HTTPS_PORT</code> <code>6000</code> global No Puerto HTTPS de la API: N\u00famero de puerto de escucha (TLS) para la API. <code>API_LISTEN_HTTP</code> <code>yes</code> global No Escucha HTTP de la API: Habilita el listener HTTP para la API. <code>API_LISTEN_HTTPS</code> <code>no</code> global No Escucha HTTPS de la API: Habilita el listener HTTPS (TLS) para la API. <code>API_LISTEN_IP</code> <code>0.0.0.0</code> global No IP de Escucha de la API: Direcci\u00f3n IP de escucha para la API. <code>API_SERVER_NAME</code> <code>bwapi</code> global No Nombre del Servidor de la API: Nombre del servidor (host virtual) para la API. <code>API_WHITELIST_IP</code> <code>127.0.0.0/8</code> global No IP de la Lista Blanca de la API: Lista de IP/redes permitidas para contactar con la API. <code>API_TOKEN</code> global No Token de Acceso a la API (opcional): Si se establece, todas las solicitudes a la API deben incluir <code>Authorization: Bearer &lt;token&gt;</code>. <p>Nota: por razones de arranque, si habilitas <code>API_TOKEN</code> debes establecerlo en el entorno de AMBAS, la instancia de BunkerWeb y el Programador. El Programador incluye autom\u00e1ticamente el encabezado <code>Authorization</code> cuando <code>API_TOKEN</code> est\u00e1 presente en su entorno. Si no se establece, no se env\u00eda ning\u00fan encabezado y BunkerWeb no aplicar\u00e1 la autenticaci\u00f3n por token. Puedes exponer la API a trav\u00e9s de HTTPS estableciendo <code>API_LISTEN_HTTPS=yes</code> (puerto: <code>API_HTTPS_PORT</code>, predeterminado <code>6000</code>).</p> <p>Prueba de ejemplo con curl (reemplaza el token y el host):</p> <pre><code>curl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://&lt;bunkerweb-host&gt;:5000/ping\n\ncurl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     --insecure \\\n     https://&lt;bunkerweb-host&gt;:6000/ping\n</code></pre> Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>HTTP_PORT</code> <code>8080</code> global S\u00ed Puerto HTTP: N\u00famero de puerto para el tr\u00e1fico HTTP. <code>HTTPS_PORT</code> <code>8443</code> global S\u00ed Puerto HTTPS: N\u00famero de puerto para el tr\u00e1fico HTTPS. <code>USE_IPV6</code> <code>no</code> global No Soporte IPv6: Habilita la conectividad IPv6. <code>DNS_RESOLVERS</code> <code>127.0.0.11</code> global No Resolutores DNS: Direcciones DNS de los resolutores a usar. Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>LISTEN_STREAM</code> <code>yes</code> multisite No Escucha de Stream: Habilita la escucha para no-ssl (passthrough). <code>LISTEN_STREAM_PORT</code> <code>1337</code> multisite S\u00ed Puerto de Stream: Puerto de escucha para no-ssl (passthrough). <code>LISTEN_STREAM_PORT_SSL</code> <code>4242</code> multisite S\u00ed Puerto SSL de Stream: Puerto de escucha para ssl (passthrough). <code>USE_TCP</code> <code>yes</code> multisite No Escucha TCP: Habilita la escucha TCP (stream). <code>USE_UDP</code> <code>no</code> multisite No Escucha UDP: Habilita la escucha UDP (stream). Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>WORKER_PROCESSES</code> <code>auto</code> global No Procesos Worker: N\u00famero de procesos worker. Establ\u00e9celo en <code>auto</code> para usar los n\u00facleos disponibles. <code>WORKER_CONNECTIONS</code> <code>1024</code> global No Conexiones por Worker: N\u00famero m\u00e1ximo de conexiones por worker. <code>WORKER_RLIMIT_NOFILE</code> <code>2048</code> global No L\u00edmite de Descriptores de Archivo: N\u00famero m\u00e1ximo de archivos abiertos por worker. Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>WORKERLOCK_MEMORY_SIZE</code> <code>48k</code> global No Tama\u00f1o de Memoria de Workerlock: Tama\u00f1o de lua_shared_dict para los workers de inicializaci\u00f3n. <code>DATASTORE_MEMORY_SIZE</code> <code>64m</code> global No Tama\u00f1o de Memoria del Datastore: Tama\u00f1o del datastore interno. <code>CACHESTORE_MEMORY_SIZE</code> <code>64m</code> global No Tama\u00f1o de Memoria del Cachestore: Tama\u00f1o del cachestore interno. <code>CACHESTORE_IPC_MEMORY_SIZE</code> <code>16m</code> global No Tama\u00f1o de Memoria IPC del Cachestore: Tama\u00f1o del cachestore interno (ipc). <code>CACHESTORE_MISS_MEMORY_SIZE</code> <code>16m</code> global No Tama\u00f1o de Memoria de Fallos del Cachestore: Tama\u00f1o del cachestore interno (fallos). <code>CACHESTORE_LOCKS_MEMORY_SIZE</code> <code>16m</code> global No Tama\u00f1o de Memoria de Bloqueos del Cachestore: Tama\u00f1o del cachestore interno (bloqueos). Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>LOG_FORMAT</code> <code>$host $remote_addr - $request_id $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\"</code> global No Formato de Registro: El formato a usar para los registros de acceso. <code>LOG_LEVEL</code> <code>notice</code> global No Nivel de Registro: Nivel de verbosidad para los registros de errores. Opciones: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>error</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <code>TIMERS_LOG_LEVEL</code> <code>debug</code> global No Nivel de Registro de Temporizadores: Nivel de registro para los temporizadores. Opciones: <code>debug</code>, <code>info</code>, <code>notice</code>, <code>warn</code>, <code>err</code>, <code>crit</code>, <code>alert</code>, <code>emerg</code>. <p>Mejores Pr\u00e1cticas de Registro</p> <ul> <li>Para entornos de producci\u00f3n, usa los niveles de registro <code>notice</code>, <code>warn</code>, o <code>error</code> para minimizar el volumen de registros.</li> <li>Para depurar problemas, establece temporalmente el nivel de registro en <code>debug</code> para obtener informaci\u00f3n m\u00e1s detallada.</li> </ul> Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>AUTOCONF_MODE</code> <code>no</code> global No Modo Autoconf: Habilita la integraci\u00f3n con Docker Autoconf. <code>SWARM_MODE</code> <code>no</code> global No Modo Swarm: Habilita la integraci\u00f3n con Docker Swarm. <code>KUBERNETES_MODE</code> <code>no</code> global No Modo Kubernetes: Habilita la integraci\u00f3n con Kubernetes. <code>USE_TEMPLATE</code> multisite No Usar Plantilla: Plantilla de configuraci\u00f3n a usar que sobrescribir\u00e1 los valores predeterminados de ajustes espec\u00edficos. Par\u00e1metro Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>NGINX_PREFIX</code> <code>/etc/nginx/</code> global No Prefijo de Nginx: D\u00f3nde buscar\u00e1 Nginx las configuraciones. <code>SERVER_NAMES_HASH_BUCKET_SIZE</code> global No Tama\u00f1o del Bucket de Hash de Nombres de Servidor: Valor para la directiva <code>server_names_hash_bucket_size</code>."},{"location":"es/features/#configuraciones-de-ejemplo","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sica de Producci\u00f3nModo de DesarrolloConfiguraci\u00f3n MultisiteConfiguraci\u00f3n del Servidor de Stream <p>Una configuraci\u00f3n est\u00e1ndar para un sitio de producci\u00f3n con seguridad estricta:</p> <pre><code>SECURITY_MODE: \"block\"\nSERVER_NAME: \"example.com\"\nLOG_LEVEL: \"notice\"\n</code></pre> <p>Configuraci\u00f3n para un entorno de desarrollo con registro adicional:</p> <pre><code>SECURITY_MODE: \"detect\"\nSERVER_NAME: \"dev.example.com\"\nLOG_LEVEL: \"debug\"\n</code></pre> <p>Configuraci\u00f3n para alojar m\u00faltiples sitios web:</p> <pre><code>MULTISITE: \"yes\"\n\n# Primer sitio\nsite1.example.com_SERVER_NAME: \"site1.example.com\"\nsite1.example.com_SECURITY_MODE: \"block\"\n\n# Segundo sitio\nsite2.example.com_SERVER_NAME: \"site2.example.com\"\nsite2.example.com_SECURITY_MODE: \"detect\"\n</code></pre> <p>Configuraci\u00f3n para un servidor TCP/UDP:</p> <pre><code>SERVER_TYPE: \"stream\"\nSERVER_NAME: \"stream.example.com\"\nLISTEN_STREAM: \"yes\"\nLISTEN_STREAM_PORT: \"1337\"\nUSE_TCP: \"yes\"\nUSE_UDP: \"no\"\n</code></pre>"},{"location":"es/features/#anti-ddos-pro","title":"Anti DDoS  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Provides enhanced protection against DDoS attacks by analyzing and filtering suspicious traffic.</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIDDOS</code> <code>no</code> global no Enable or disable anti DDoS protection to mitigate high traffic spikes. <code>ANTIDDOS_METRICS_DICT_SIZE</code> <code>10M</code> global no Size of in-memory storage for DDoS metrics (e.g., 10M, 500k). <code>ANTIDDOS_THRESHOLD</code> <code>100</code> global no Maximum suspicious requests allowed from a single IP before blocking. <code>ANTIDDOS_WINDOW_TIME</code> <code>10</code> global no Time window (seconds) to detect abnormal request patterns. <code>ANTIDDOS_STATUS_CODES</code> <code>429 403 444</code> global no HTTP status codes treated as suspicious for DDoS analysis. <code>ANTIDDOS_DISTINCT_IP</code> <code>5</code> global no Minimum distinct IP count before enabling anti DDoS measures."},{"location":"es/features/#antibot","title":"Antibot","text":"<p>Compatibilidad con STREAM </p> <p>Los atacantes suelen utilizar herramientas automatizadas (bots) para intentar explotar su sitio web. Para protegerse contra esto, BunkerWeb incluye una funci\u00f3n \"Antibot\" que desaf\u00eda a los usuarios a demostrar que son humanos. Si un usuario completa con \u00e9xito el desaf\u00edo, se le concede acceso a su sitio web. Esta funci\u00f3n est\u00e1 desactivada por defecto.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un usuario visita su sitio, BunkerWeb comprueba si ya ha superado el desaf\u00edo antibot.</li> <li>Si no, el usuario es redirigido a una p\u00e1gina de desaf\u00edo.</li> <li>El usuario debe completar el desaf\u00edo (por ejemplo, resolver un CAPTCHA, ejecutar JavaScript).</li> <li>Si el desaf\u00edo tiene \u00e9xito, el usuario es redirigido de nuevo a la p\u00e1gina que intentaba visitar originalmente y puede navegar por su sitio web con normalidad.</li> </ol>"},{"location":"es/features/#como-usar","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para habilitar y configurar la funci\u00f3n Antibot:</p> <ol> <li>Elija un tipo de desaf\u00edo: Decida qu\u00e9 tipo de desaf\u00edo antibot usar (p. ej., captcha, hcaptcha, javascript).</li> <li>Habilite la funci\u00f3n: Establezca la configuraci\u00f3n <code>USE_ANTIBOT</code> en el tipo de desaf\u00edo elegido en su configuraci\u00f3n de BunkerWeb.</li> <li>Configure los ajustes: Ajuste las otras configuraciones <code>ANTIBOT_*</code> seg\u00fan sea necesario. Para reCAPTCHA, hCaptcha, Turnstile y mCaptcha, debe crear una cuenta con el servicio respectivo y obtener claves de API.</li> <li>Importante: Aseg\u00farese de que el <code>ANTIBOT_URI</code> sea una URL \u00fanica en su sitio que no est\u00e9 en uso.</li> </ol> <p>Acerca de la configuraci\u00f3n <code>ANTIBOT_URI</code></p> <p>Aseg\u00farese de que el <code>ANTIBOT_URI</code> sea una URL \u00fanica en su sitio que no est\u00e9 en uso.</p> <p>Configuraci\u00f3n de sesi\u00f3n en entornos de cl\u00faster</p> <p>La funci\u00f3n antibot utiliza cookies para rastrear si un usuario ha completado el desaf\u00edo. Si est\u00e1 ejecutando BunkerWeb en un entorno de cl\u00faster (m\u00faltiples instancias de BunkerWeb), debe configurar la gesti\u00f3n de sesiones correctamente. Esto implica establecer las configuraciones <code>SESSIONS_SECRET</code> y <code>SESSIONS_NAME</code> con los mismos valores en todas las instancias de BunkerWeb. Si no lo hace, es posible que a los usuarios se les pida repetidamente que completen el desaf\u00edo antibot. Puede encontrar m\u00e1s informaci\u00f3n sobre la configuraci\u00f3n de sesiones aqu\u00ed.</p>"},{"location":"es/features/#configuraciones-comunes","title":"Configuraciones comunes","text":"<p>Las siguientes configuraciones son compartidas por todos los mecanismos de desaf\u00edo:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>ANTIBOT_URI</code> <code>/challenge</code> multisite no URL del desaf\u00edo: La URL a la que se redirigir\u00e1 a los usuarios para completar el desaf\u00edo. Aseg\u00farese de que esta URL no se utilice para nada m\u00e1s en su sitio. <code>ANTIBOT_TIME_RESOLVE</code> <code>60</code> multisite no L\u00edmite de tiempo del desaf\u00edo: El tiempo m\u00e1ximo (en segundos) que un usuario tiene para completar el desaf\u00edo. Despu\u00e9s de este tiempo, se generar\u00e1 un nuevo desaf\u00edo. <code>ANTIBOT_TIME_VALID</code> <code>86400</code> multisite no Validez del desaf\u00edo: Cu\u00e1nto tiempo (en segundos) es v\u00e1lido un desaf\u00edo completado. Despu\u00e9s de este tiempo, los usuarios tendr\u00e1n que resolver un nuevo desaf\u00edo."},{"location":"es/features/#excluir-trafico-de-los-desafios","title":"Excluir tr\u00e1fico de los desaf\u00edos","text":"<p>BunkerWeb le permite especificar ciertos usuarios, IP o solicitudes que deben omitir por completo el desaf\u00edo antibot. Esto es \u00fatil para incluir en la lista blanca servicios de confianza, redes internas o p\u00e1ginas espec\u00edficas que siempre deben ser accesibles sin desaf\u00edo:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>ANTIBOT_IGNORE_URI</code> multisite no URL excluidas: Lista de patrones regex de URI separados por espacios que deben omitir el desaf\u00edo. <code>ANTIBOT_IGNORE_IP</code> multisite no IP excluidas: Lista de direcciones IP o rangos CIDR separados por espacios que deben omitir el desaf\u00edo. <code>ANTIBOT_IGNORE_RDNS</code> multisite no DNS inverso excluido: Lista de sufijos de DNS inverso separados por espacios que deben omitir el desaf\u00edo. <code>ANTIBOT_RDNS_GLOBAL</code> <code>yes</code> multisite no Solo IP globales: Si se establece en <code>yes</code>, solo realiza comprobaciones de DNS inverso en direcciones IP p\u00fablicas. <code>ANTIBOT_IGNORE_ASN</code> multisite no ASN excluidos: Lista de n\u00fameros de ASN separados por espacios que deben omitir el desaf\u00edo. <code>ANTIBOT_IGNORE_USER_AGENT</code> multisite no User-Agents excluidos: Lista de patrones regex de User-Agent separados por espacios que deben omitir el desaf\u00edo. <p>Ejemplos:</p> <ul> <li><code>ANTIBOT_IGNORE_URI: \"^/api/ ^/webhook/ ^/assets/\"</code>   Esto excluir\u00e1 del desaf\u00edo antibot todas las URI que comiencen con <code>/api/</code>, <code>/webhook/</code> o <code>/assets/</code>.</li> <li><code>ANTIBOT_IGNORE_IP: \"192.168.1.0/24 10.0.0.1\"</code>   Esto excluir\u00e1 del desaf\u00edo antibot la red interna <code>192.168.1.0/24</code> y la IP espec\u00edfica <code>10.0.0.1</code>.</li> <li><code>ANTIBOT_IGNORE_RDNS: \".googlebot.com .bingbot.com\"</code>   Esto excluir\u00e1 del desaf\u00edo antibot las solicitudes de hosts con DNS inverso que terminen en <code>googlebot.com</code> o <code>bingbot.com</code>.</li> <li><code>ANTIBOT_IGNORE_ASN: \"15169 8075\"</code>   Esto excluir\u00e1 del desaf\u00edo antibot las solicitudes de los ASN 15169 (Google) y 8075 (Microsoft).</li> <li><code>ANTIBOT_IGNORE_USER_AGENT: \"^Mozilla.+Chrome.+Safari\"</code>   Esto excluir\u00e1 del desaf\u00edo antibot las solicitudes con User-Agents que coincidan con el patr\u00f3n regex especificado.</li> </ul>"},{"location":"es/features/#mecanismos-de-desafio-compatibles","title":"Mecanismos de desaf\u00edo compatibles","text":"Cookie <p>El desaf\u00edo de Cookie es un mecanismo ligero que se basa en establecer una cookie en el navegador del usuario. Cuando un usuario accede al sitio, el servidor env\u00eda una cookie al cliente. En solicitudes posteriores, el servidor comprueba la presencia de esta cookie para verificar que el usuario es leg\u00edtimo. Este m\u00e9todo es simple y eficaz para la protecci\u00f3n b\u00e1sica contra bots sin requerir interacci\u00f3n adicional del usuario.</p> <p>C\u00f3mo funciona:</p> <ol> <li>El servidor genera una cookie \u00fanica y la env\u00eda al cliente.</li> <li>El cliente debe devolver la cookie en las solicitudes posteriores.</li> <li>Si la cookie falta o no es v\u00e1lida, el usuario es redirigido a la p\u00e1gina del desaf\u00edo.</li> </ol> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar Antibot: Establezca en <code>cookie</code> para habilitar el desaf\u00edo de Cookie. <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre> JavaScript <p>El desaf\u00edo de JavaScript requiere que el cliente resuelva una tarea computacional usando JavaScript. Este mecanismo asegura que el cliente tenga JavaScript habilitado y pueda ejecutar el c\u00f3digo requerido, lo cual est\u00e1 t\u00edpicamente fuera de la capacidad de la mayor\u00eda de los bots.</p> <p>C\u00f3mo funciona:</p> <ol> <li>El servidor env\u00eda un script de JavaScript al cliente.</li> <li>El script realiza una tarea computacional (p. ej., hashing) y env\u00eda el resultado de vuelta al servidor.</li> <li>El servidor verifica el resultado para confirmar la legitimidad del cliente.</li> </ol> <p>Caracter\u00edsticas principales:</p> <ul> <li>El desaf\u00edo genera din\u00e1micamente una tarea \u00fanica para cada cliente.</li> <li>La tarea computacional implica hashing con condiciones espec\u00edficas (p. ej., encontrar un hash con un prefijo determinado).</li> </ul> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar Antibot: Establezca en <code>javascript</code> para habilitar el desaf\u00edo de JavaScript. <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre> Captcha <p>El desaf\u00edo de Captcha es un mecanismo casero que genera desaf\u00edos basados en im\u00e1genes alojados completamente dentro de su entorno de BunkerWeb. Pone a prueba la capacidad de los usuarios para reconocer e interpretar caracteres aleatorios, asegurando que los bots automatizados sean bloqueados eficazmente sin depender de servicios externos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>El servidor genera una imagen CAPTCHA que contiene caracteres aleatorios.</li> <li>El usuario debe introducir los caracteres que se muestran en la imagen en un campo de texto.</li> <li>El servidor valida la entrada del usuario con el CAPTCHA generado.</li> </ol> <p>Caracter\u00edsticas principales:</p> <ul> <li>Totalmente autoalojado, eliminando la necesidad de API de terceros.</li> <li>Los desaf\u00edos generados din\u00e1micamente aseguran la unicidad para cada sesi\u00f3n de usuario.</li> <li>Utiliza un conjunto de caracteres personalizable para la generaci\u00f3n de CAPTCHA.</li> </ul> <p>Caracteres admitidos:</p> <p>El sistema CAPTCHA admite los siguientes tipos de caracteres:</p> <ul> <li>Letras: Todas las letras min\u00fasculas (a-z) y may\u00fasculas (A-Z)</li> <li>N\u00fameros: 2, 3, 4, 5, 6, 7, 8, 9 (excluye 0 y 1 para evitar confusiones)</li> <li>Caracteres especiales: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code></li> </ul> <p>Para tener el conjunto completo de caracteres admitidos, consulte el mapa de caracteres de la fuente utilizada para el CAPTCHA.</p> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar Antibot: Establezca en <code>captcha</code> para habilitar el desaf\u00edo de Captcha. <code>ANTIBOT_CAPTCHA_ALPHABET</code> <code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</code> multisite no Alfabeto del Captcha: Una cadena de caracteres para usar en la generaci\u00f3n del CAPTCHA. Caracteres admitidos: todas las letras (a-z, A-Z), n\u00fameros 2-9 (excluye 0 y 1) y caracteres especiales: <code>+-/=%\"'&amp;_(),.;:?!\u00a7`^\u00c4\u00d6\u00dc\u00df\u00e4\u00f6\u00fc\u00e9''\u201a\"\"\u201e</code> <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre> reCAPTCHA <p>Cuando est\u00e1 habilitado, reCAPTCHA se ejecuta en segundo plano (v3) para asignar una puntuaci\u00f3n basada en el comportamiento del usuario. Una puntuaci\u00f3n inferior al umbral configurado solicitar\u00e1 una verificaci\u00f3n adicional o bloquear\u00e1 la solicitud. Para los desaf\u00edos visibles (v2), los usuarios deben interactuar con el widget de reCAPTCHA antes de continuar.</p> <p>Ahora hay dos formas de integrar reCAPTCHA: *   La versi\u00f3n cl\u00e1sica (claves de sitio/secretas, punto final de verificaci\u00f3n v2/v3) *   La nueva versi\u00f3n que utiliza Google Cloud (ID del proyecto + clave de API). La versi\u00f3n cl\u00e1sica sigue disponible y se puede activar con <code>ANTIBOT_RECAPTCHA_CLASSIC</code>.</p> <p>Para la versi\u00f3n cl\u00e1sica, obtenga sus claves de sitio y secretas en la consola de administraci\u00f3n de Google reCAPTCHA. Para la nueva versi\u00f3n, cree una clave de reCAPTCHA en su proyecto de Google Cloud y use el ID del proyecto y una clave de API (consulte la consola de reCAPTCHA de Google Cloud). Todav\u00eda se requiere una clave de sitio.</p> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar antibot; establezca en <code>recaptcha</code> para habilitar reCAPTCHA. <code>ANTIBOT_RECAPTCHA_CLASSIC</code> <code>yes</code> multisite no Usar reCAPTCHA cl\u00e1sico. Establezca en <code>no</code> para usar la nueva versi\u00f3n basada en Google Cloud. <code>ANTIBOT_RECAPTCHA_SITEKEY</code> multisite no Clave de sitio de reCAPTCHA. Requerida para las versiones cl\u00e1sica y nueva. <code>ANTIBOT_RECAPTCHA_SECRET</code> multisite no Clave secreta de reCAPTCHA. Requerida solo para la versi\u00f3n cl\u00e1sica. <code>ANTIBOT_RECAPTCHA_PROJECT_ID</code> multisite no ID del proyecto de Google Cloud. Requerido solo para la nueva versi\u00f3n. <code>ANTIBOT_RECAPTCHA_API_KEY</code> multisite no Clave de API de Google Cloud utilizada para llamar a la API de reCAPTCHA Enterprise. Requerida solo para la nueva versi\u00f3n. <code>ANTIBOT_RECAPTCHA_JA3</code> multisite no Huella digital JA3 TLS opcional para incluir en las evaluaciones de Enterprise. <code>ANTIBOT_RECAPTCHA_JA4</code> multisite no Huella digital JA4 TLS opcional para incluir en las evaluaciones de Enterprise. <code>ANTIBOT_RECAPTCHA_SCORE</code> <code>0.7</code> multisite no Puntuaci\u00f3n m\u00ednima requerida para pasar (se aplica tanto a la v3 cl\u00e1sica como a la nueva versi\u00f3n). <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre> hCaptcha <p>Cuando est\u00e1 habilitado, hCaptcha proporciona una alternativa eficaz a reCAPTCHA al verificar las interacciones del usuario sin depender de un mecanismo de puntuaci\u00f3n. Desaf\u00eda a los usuarios con una prueba simple e interactiva para confirmar su legitimidad.</p> <p>Para integrar hCaptcha con BunkerWeb, debe obtener las credenciales necesarias del panel de hCaptcha en hCaptcha. Estas credenciales incluyen una clave de sitio y una clave secreta.</p> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar Antibot: Establezca en <code>hcaptcha</code> para habilitar el desaf\u00edo de hCaptcha. <code>ANTIBOT_HCAPTCHA_SITEKEY</code> multisite no Clave del sitio de hCaptcha: Su clave de sitio de hCaptcha (obtenerla de hCaptcha). <code>ANTIBOT_HCAPTCHA_SECRET</code> multisite no Clave secreta de hCaptcha: Su clave secreta de hCaptcha (obtenerla de hCaptcha). <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre> Turnstile <p>Turnstile es un mecanismo de desaf\u00edo moderno y respetuoso con la privacidad que aprovecha la tecnolog\u00eda de Cloudflare para detectar y bloquear el tr\u00e1fico automatizado. Valida las interacciones del usuario de manera fluida y en segundo plano, reduciendo la fricci\u00f3n para los usuarios leg\u00edtimos y desalentando eficazmente a los bots.</p> <p>Para integrar Turnstile con BunkerWeb, aseg\u00farese de obtener las credenciales necesarias de Cloudflare Turnstile.</p> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar Antibot: Establezca en <code>turnstile</code> para habilitar el desaf\u00edo Turnstile. <code>ANTIBOT_TURNSTILE_SITEKEY</code> multisite no Clave del sitio de Turnstile: Su clave de sitio de Turnstile (obtenerla de Cloudflare). <code>ANTIBOT_TURNSTILE_SECRET</code> multisite no Clave secreta de Turnstile: Su clave secreta de Turnstile (obtenerla de Cloudflare). <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre> mCaptcha <p>mCaptcha es un mecanismo de desaf\u00edo CAPTCHA alternativo que verifica la legitimidad de los usuarios presentando una prueba interactiva similar a otras soluciones antibot. Cuando est\u00e1 habilitado, desaf\u00eda a los usuarios con un CAPTCHA proporcionado por mCaptcha, asegurando que solo los usuarios genuinos omitan las comprobaciones de seguridad automatizadas.</p> <p>mCaptcha est\u00e1 dise\u00f1ado pensando en la privacidad. Es totalmente compatible con el GDPR, lo que garantiza que todos los datos del usuario involucrados en el proceso de desaf\u00edo cumplan con estrictos est\u00e1ndares de protecci\u00f3n de datos. Adem\u00e1s, mCaptcha ofrece la flexibilidad de ser autoalojado, lo que permite a las organizaciones mantener un control total sobre sus datos e infraestructura. Esta capacidad de autoalojamiento no solo mejora la privacidad, sino que tambi\u00e9n optimiza el rendimiento y la personalizaci\u00f3n para adaptarse a las necesidades espec\u00edficas de implementaci\u00f3n.</p> <p>Para integrar mCaptcha con BunkerWeb, debe obtener las credenciales necesarias de la plataforma mCaptcha o de su propio proveedor. Estas credenciales incluyen una clave de sitio y una clave secreta para la verificaci\u00f3n.</p> <p>Ajustes de configuraci\u00f3n:</p> Configuraci\u00f3n Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ANTIBOT</code> <code>no</code> multisite no Habilitar Antibot: Establezca en <code>mcaptcha</code> para habilitar el desaf\u00edo mCaptcha. <code>ANTIBOT_MCAPTCHA_SITEKEY</code> multisite no Clave del sitio de mCaptcha: Su clave de sitio de mCaptcha (obtenerla de mCaptcha). <code>ANTIBOT_MCAPTCHA_SECRET</code> multisite no Clave secreta de mCaptcha: Su clave secreta de mCaptcha (obtenerla de mCaptcha). <code>ANTIBOT_MCAPTCHA_URL</code> <code>https://demo.mcaptcha.org</code> multisite no Dominio de mCaptcha: El dominio a utilizar para el desaf\u00edo mCaptcha. <pre><code>Consulte los [Ajustes comunes](#configuraciones-comunes) para opciones de configuraci\u00f3n adicionales.\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_1","title":"Configuraciones de ejemplo","text":"Desaf\u00edo de CookieDesaf\u00edo de JavaScriptDesaf\u00edo de CaptchareCAPTCHA Cl\u00e1sicoreCAPTCHA (nuevo)Desaf\u00edo de hCaptchaDesaf\u00edo de TurnstileDesaf\u00edo de mCaptcha <p>Configuraci\u00f3n de ejemplo para habilitar el desaf\u00edo de Cookie:</p> <pre><code>USE_ANTIBOT: \"cookie\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar el desaf\u00edo de JavaScript:</p> <pre><code>USE_ANTIBOT: \"javascript\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar el desaf\u00edo de Captcha:</p> <pre><code>USE_ANTIBOT: \"captcha\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\nANTIBOT_CAPTCHA_ALPHABET: \"23456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n</code></pre> <p>Nota: El ejemplo anterior utiliza los n\u00fameros del 2 al 9 y todas las letras, que son los caracteres m\u00e1s utilizados para los desaf\u00edos CAPTCHA. Puede personalizar el alfabeto para incluir caracteres especiales seg\u00fan sea necesario.</p> <p>Configuraci\u00f3n de ejemplo para el reCAPTCHA cl\u00e1sico (claves de sitio/secretas):</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"yes\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para el nuevo reCAPTCHA basado en Google Cloud (ID del proyecto + clave de API):</p> <pre><code>USE_ANTIBOT: \"recaptcha\"\nANTIBOT_RECAPTCHA_CLASSIC: \"no\"\nANTIBOT_RECAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_RECAPTCHA_PROJECT_ID: \"your-gcp-project-id\"\nANTIBOT_RECAPTCHA_API_KEY: \"your-gcp-api-key\"\n# Huellas dactilares opcionales para mejorar las evaluaciones de Enterprise\n# ANTIBOT_RECAPTCHA_JA3: \"&lt;ja3-fingerprint&gt;\"\n# ANTIBOT_RECAPTCHA_JA4: \"&lt;ja4-fingerprint&gt;\"\nANTIBOT_RECAPTCHA_SCORE: \"0.7\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar el desaf\u00edo de hCaptcha:</p> <pre><code>USE_ANTIBOT: \"hcaptcha\"\nANTIBOT_HCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_HCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar el desaf\u00edo de Turnstile:</p> <pre><code>USE_ANTIBOT: \"turnstile\"\nANTIBOT_TURNSTILE_SITEKEY: \"your-site-key\"\nANTIBOT_TURNSTILE_SECRET: \"your-secret-key\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar el desaf\u00edo de mCaptcha:</p> <pre><code>USE_ANTIBOT: \"mcaptcha\"\nANTIBOT_MCAPTCHA_SITEKEY: \"your-site-key\"\nANTIBOT_MCAPTCHA_SECRET: \"your-secret-key\"\nANTIBOT_MCAPTCHA_URL: \"https://demo.mcaptcha.org\"\nANTIBOT_URI: \"/challenge\"\nANTIBOT_TIME_RESOLVE: \"60\"\nANTIBOT_TIME_VALID: \"86400\"\n</code></pre>"},{"location":"es/features/#auth-basic","title":"Auth basic","text":"<p>Compatibilidad con STREAM </p> <p>El plugin Auth Basic proporciona autenticaci\u00f3n b\u00e1sica HTTP para proteger su sitio web o recursos espec\u00edficos. Esta funci\u00f3n a\u00f1ade una capa extra de seguridad al requerir que los usuarios introduzcan un nombre de usuario y una contrase\u00f1a antes de acceder al contenido protegido. Este tipo de autenticaci\u00f3n es f\u00e1cil de implementar y es ampliamente compatible con los navegadores.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un usuario intenta acceder a un \u00e1rea protegida de su sitio web, el servidor env\u00eda un desaf\u00edo de autenticaci\u00f3n.</li> <li>El navegador muestra un cuadro de di\u00e1logo de inicio de sesi\u00f3n pidiendo al usuario un nombre de usuario y una contrase\u00f1a.</li> <li>El usuario introduce sus credenciales, que se env\u00edan al servidor.</li> <li>Si las credenciales son v\u00e1lidas, se le concede al usuario acceso al contenido solicitado.</li> <li>Si las credenciales no son v\u00e1lidas, se le muestra al usuario un mensaje de error con el c\u00f3digo de estado 401 No autorizado.</li> </ol>"},{"location":"es/features/#como-usar_1","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para habilitar y configurar la autenticaci\u00f3n b\u00e1sica:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_AUTH_BASIC</code> en <code>yes</code> en su configuraci\u00f3n de BunkerWeb.</li> <li>Elija el \u00e1mbito de protecci\u00f3n: Decida si proteger todo su sitio o solo URL espec\u00edficas configurando el ajuste <code>AUTH_BASIC_LOCATION</code>.</li> <li>Defina las credenciales: Configure al menos un par de nombre de usuario y contrase\u00f1a utilizando los ajustes <code>AUTH_BASIC_USER</code> y <code>AUTH_BASIC_PASSWORD</code>.</li> <li>Personalice el mensaje: Opcionalmente, cambie el <code>AUTH_BASIC_TEXT</code> para mostrar un mensaje personalizado en la solicitud de inicio de sesi\u00f3n.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_1","title":"Ajustes de configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_AUTH_BASIC</code> <code>no</code> multisite no Habilitar autenticaci\u00f3n b\u00e1sica: Establezca en <code>yes</code> para habilitar la autenticaci\u00f3n b\u00e1sica. <code>AUTH_BASIC_LOCATION</code> <code>sitewide</code> multisite no \u00c1mbito de protecci\u00f3n: Establezca en <code>sitewide</code> para proteger todo el sitio, o especifique una ruta de URL (p. ej., <code>/admin</code>) para proteger solo \u00e1reas espec\u00edficas. <code>AUTH_BASIC_USER</code> <code>changeme</code> multisite yes Nombre de usuario: El nombre de usuario requerido para la autenticaci\u00f3n. Puede definir m\u00faltiples pares de nombre de usuario/contrase\u00f1a. <code>AUTH_BASIC_PASSWORD</code> <code>changeme</code> multisite yes Contrase\u00f1a: La contrase\u00f1a requerida para la autenticaci\u00f3n. Cada contrase\u00f1a corresponde a un nombre de usuario. <code>AUTH_BASIC_TEXT</code> <code>Restricted area</code> multisite no Texto de la solicitud: El mensaje que se muestra en la solicitud de autenticaci\u00f3n mostrada a los usuarios. <p>Consideraciones de seguridad</p> <p>La autenticaci\u00f3n b\u00e1sica HTTP transmite las credenciales codificadas (no cifradas) en Base64. Aunque esto es aceptable cuando se utiliza sobre HTTPS, no debe considerarse seguro sobre HTTP plano. Habilite siempre SSL/TLS cuando utilice la autenticaci\u00f3n b\u00e1sica.</p> <p>Uso de m\u00faltiples credenciales</p> <p>Puede configurar m\u00faltiples pares de nombre de usuario/contrase\u00f1a para el acceso. Cada ajuste <code>AUTH_BASIC_USER</code> debe tener un ajuste <code>AUTH_BASIC_PASSWORD</code> correspondiente.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_2","title":"Configuraciones de ejemplo","text":"Protecci\u00f3n de todo el sitioProtecci\u00f3n de \u00e1reas espec\u00edficasM\u00faltiples usuarios <p>Para proteger todo su sitio web con un \u00fanico conjunto de credenciales:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> <p>Para proteger solo una ruta espec\u00edfica, como un panel de administraci\u00f3n:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"/admin/\"\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"secure_password\"\nAUTH_BASIC_TEXT: \"Admin Access Only\"\n</code></pre> <p>Para configurar m\u00faltiples usuarios con diferentes credenciales:</p> <pre><code>USE_AUTH_BASIC: \"yes\"\nAUTH_BASIC_LOCATION: \"sitewide\"\nAUTH_BASIC_TEXT: \"Staff Area\"\n\n# Primer usuario\nAUTH_BASIC_USER: \"admin\"\nAUTH_BASIC_PASSWORD: \"admin_password\"\n\n# Segundo usuario\nAUTH_BASIC_USER_2: \"editor\"\nAUTH_BASIC_PASSWORD_2: \"editor_password\"\n\n# Tercer usuario\nAUTH_BASIC_USER_3: \"viewer\"\nAUTH_BASIC_PASSWORD_3: \"viewer_password\"\n</code></pre>"},{"location":"es/features/#backup","title":"Backup","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de copia de seguridad proporciona una soluci\u00f3n de respaldo automatizada para proteger sus datos de BunkerWeb. Esta funci\u00f3n garantiza la seguridad y disponibilidad de su importante base de datos mediante la creaci\u00f3n de copias de seguridad peri\u00f3dicas seg\u00fan el cronograma que prefiera. Las copias de seguridad se almacenan en una ubicaci\u00f3n designada y se pueden gestionar f\u00e1cilmente a trav\u00e9s de procesos automatizados y comandos manuales.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Su base de datos se respalda autom\u00e1ticamente seg\u00fan el cronograma que establezca (diario, semanal o mensual).</li> <li>Las copias de seguridad se almacenan en un directorio espec\u00edfico de su sistema.</li> <li>Las copias de seguridad antiguas se rotan autom\u00e1ticamente seg\u00fan su configuraci\u00f3n de retenci\u00f3n.</li> <li>Puede crear copias de seguridad manualmente, enumerar las copias de seguridad existentes o restaurar desde una copia de seguridad en cualquier momento.</li> <li>Antes de cualquier operaci\u00f3n de restauraci\u00f3n, el estado actual se respalda autom\u00e1ticamente como medida de seguridad.</li> </ol>"},{"location":"es/features/#como-usar_2","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de copia de seguridad:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n de copia de seguridad est\u00e1 habilitada por defecto. Si es necesario, puede controlarla con el ajuste <code>USE_BACKUP</code>.</li> <li>Configure el cronograma de copia de seguridad: Elija la frecuencia con la que deben realizarse las copias de seguridad estableciendo el par\u00e1metro <code>BACKUP_SCHEDULE</code>.</li> <li>Establezca la pol\u00edtica de retenci\u00f3n: Especifique cu\u00e1ntas copias de seguridad conservar utilizando el ajuste <code>BACKUP_ROTATION</code>.</li> <li>Defina la ubicaci\u00f3n de almacenamiento: Elija d\u00f3nde se almacenar\u00e1n las copias de seguridad utilizando el ajuste <code>BACKUP_DIRECTORY</code>.</li> <li>Use los comandos de la CLI: Gestione las copias de seguridad manualmente con los comandos <code>bwcli plugin backup</code> cuando sea necesario.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_2","title":"Ajustes de configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_BACKUP</code> <code>yes</code> global no Habilitar copia de seguridad: Establezca en <code>yes</code> para habilitar las copias de seguridad autom\u00e1ticas. <code>BACKUP_SCHEDULE</code> <code>daily</code> global no Frecuencia de la copia de seguridad: Con qu\u00e9 frecuencia se realizan las copias de seguridad. Opciones: <code>daily</code>, <code>weekly</code> o <code>monthly</code>. <code>BACKUP_ROTATION</code> <code>7</code> global no Retenci\u00f3n de copias de seguridad: El n\u00famero de archivos de copia de seguridad que se deben conservar. Las copias de seguridad m\u00e1s antiguas que este n\u00famero se eliminar\u00e1n autom\u00e1ticamente. <code>BACKUP_DIRECTORY</code> <code>/var/lib/bunkerweb/backups</code> global no Ubicaci\u00f3n de la copia de seguridad: El directorio donde se almacenar\u00e1n los archivos de copia de seguridad."},{"location":"es/features/#interfaz-de-linea-de-comandos","title":"Interfaz de l\u00ednea de comandos","text":"<p>El complemento de copia de seguridad proporciona varios comandos de la CLI para gestionar sus copias de seguridad:</p> <pre><code># Listar todas las copias de seguridad disponibles\nbwcli plugin backup list\n\n# Crear una copia de seguridad manual\nbwcli plugin backup save\n\n# Crear una copia de seguridad en una ubicaci\u00f3n personalizada\nbwcli plugin backup save --directory /ruta/a/ubicacion/personalizada\n\n# Restaurar desde la copia de seguridad m\u00e1s reciente\nbwcli plugin backup restore\n\n# Restaurar desde un archivo de copia de seguridad espec\u00edfico\nbwcli plugin backup restore /ruta/a/copia/de/seguridad/backup-sqlite-2023-08-15_12-34-56.zip\n</code></pre> <p>La seguridad es lo primero</p> <p>Antes de cualquier operaci\u00f3n de restauraci\u00f3n, el complemento de copia de seguridad crea autom\u00e1ticamente una copia de seguridad del estado actual de su base de datos en una ubicaci\u00f3n temporal. Esto proporciona una protecci\u00f3n adicional en caso de que necesite revertir la operaci\u00f3n de restauraci\u00f3n.</p> <p>Compatibilidad de la base de datos</p> <p>El complemento de copia de seguridad es compatible con las bases de datos SQLite, MySQL/MariaDB y PostgreSQL. Las bases de datos de Oracle no son compatibles actualmente para las operaciones de copia de seguridad y restauraci\u00f3n.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_3","title":"Configuraciones de ejemplo","text":"Copias de seguridad diarias con retenci\u00f3n de 7 d\u00edasCopias de seguridad semanales con retenci\u00f3n extendidaCopias de seguridad mensuales en una ubicaci\u00f3n personalizada <p>Configuraci\u00f3n por defecto que crea copias de seguridad diarias y conserva los 7 archivos m\u00e1s recientes:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"daily\"\nBACKUP_ROTATION: \"7\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> <p>Configuraci\u00f3n para copias de seguridad menos frecuentes con una retenci\u00f3n m\u00e1s prolongada:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"weekly\"\nBACKUP_ROTATION: \"12\"\nBACKUP_DIRECTORY: \"/var/lib/bunkerweb/backups\"\n</code></pre> <p>Configuraci\u00f3n para copias de seguridad mensuales almacenadas en una ubicaci\u00f3n personalizada:</p> <pre><code>USE_BACKUP: \"yes\"\nBACKUP_SCHEDULE: \"monthly\"\nBACKUP_ROTATION: \"24\"\nBACKUP_DIRECTORY: \"/mnt/backup-drive/bunkerweb-backups\"\n</code></pre>"},{"location":"es/features/#backup-s3-pro","title":"Backup S3  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Automatically backup your data to an S3 bucket</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_BACKUP_S3</code> <code>no</code> global no Enable or disable the S3 backup feature <code>BACKUP_S3_SCHEDULE</code> <code>daily</code> global no The frequency of the backup <code>BACKUP_S3_ROTATION</code> <code>7</code> global no The number of backups to keep <code>BACKUP_S3_ENDPOINT</code> global no The S3 endpoint <code>BACKUP_S3_BUCKET</code> global no The S3 bucket <code>BACKUP_S3_DIR</code> global no The S3 directory <code>BACKUP_S3_REGION</code> global no The S3 region <code>BACKUP_S3_ACCESS_KEY_ID</code> global no The S3 access key ID <code>BACKUP_S3_ACCESS_KEY_SECRET</code> global no The S3 access key secret <code>BACKUP_S3_COMP_LEVEL</code> <code>6</code> global no The compression level of the backup zip file"},{"location":"es/features/#bad-behavior","title":"Bad behavior","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Mal Comportamiento protege su sitio web al detectar y bloquear autom\u00e1ticamente las direcciones IP que generan demasiados errores o c\u00f3digos de estado HTTP \"malos\" dentro de un per\u00edodo de tiempo espec\u00edfico. Esto ayuda a defenderse contra ataques de fuerza bruta, raspadores web, esc\u00e1neres de vulnerabilidades y otras actividades maliciosas que podr\u00edan generar numerosas respuestas de error.</p> <p>Los atacantes a menudo generan c\u00f3digos de estado HTTP \"sospechosos\" al sondear o explotar vulnerabilidades, c\u00f3digos que un usuario t\u00edpico es poco probable que active en un per\u00edodo de tiempo determinado. Al detectar este comportamiento, BunkerWeb puede bloquear autom\u00e1ticamente la direcci\u00f3n IP infractora, obligando al atacante a usar una nueva direcci\u00f3n IP para continuar sus intentos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>El complemento supervisa las respuestas HTTP de su sitio.</li> <li>Cuando un visitante recibe un c\u00f3digo de estado HTTP \"malo\" (como 400, 401, 403, 404, etc.), el contador para esa direcci\u00f3n IP se incrementa.</li> <li>Si una direcci\u00f3n IP excede el umbral configurado de c\u00f3digos de estado malos dentro del per\u00edodo de tiempo especificado, la IP se bloquea autom\u00e1ticamente.</li> <li>Las IP bloqueadas pueden ser bloqueadas a nivel de servicio (solo para el sitio espec\u00edfico) o globalmente (en todos los sitios), dependiendo de su configuraci\u00f3n.</li> <li>Los bloqueos expiran autom\u00e1ticamente despu\u00e9s de la duraci\u00f3n de bloqueo configurada, o permanecen permanentes si se configuran con <code>0</code>.</li> </ol> <p>Beneficios clave</p> <ol> <li>Protecci\u00f3n autom\u00e1tica: Detecta y bloquea clientes potencialmente maliciosos sin requerir intervenci\u00f3n manual.</li> <li>Reglas personalizables: Ajuste con precisi\u00f3n lo que constituye un \"mal comportamiento\" seg\u00fan sus necesidades espec\u00edficas.</li> <li>Conservaci\u00f3n de recursos: Evita que los actores maliciosos consuman recursos del servidor con repetidas solicitudes no v\u00e1lidas.</li> <li>\u00c1mbito flexible: Elija si los bloqueos deben aplicarse solo al servicio actual o globalmente a todos los servicios.</li> <li>Control de la duraci\u00f3n del bloqueo: Establezca bloqueos temporales que expiran autom\u00e1ticamente despu\u00e9s de la duraci\u00f3n configurada, o bloqueos permanentes que permanecen hasta que se eliminan manualmente.</li> </ol>"},{"location":"es/features/#como-usar_3","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de Mal Comportamiento:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n de Mal Comportamiento est\u00e1 habilitada por defecto. Si es necesario, puede controlarla con la configuraci\u00f3n <code>USE_BAD_BEHAVIOR</code>.</li> <li>Configure los c\u00f3digos de estado: Defina qu\u00e9 c\u00f3digos de estado HTTP deben considerarse \"malos\" utilizando la configuraci\u00f3n <code>BAD_BEHAVIOR_STATUS_CODES</code>.</li> <li>Establezca los valores de umbral: Determine cu\u00e1ntas respuestas \"malas\" deben desencadenar un bloqueo utilizando la configuraci\u00f3n <code>BAD_BEHAVIOR_THRESHOLD</code>.</li> <li>Configure los per\u00edodos de tiempo: Especifique la duraci\u00f3n para contar las respuestas malas y la duraci\u00f3n del bloqueo utilizando las configuraciones <code>BAD_BEHAVIOR_COUNT_TIME</code> y <code>BAD_BEHAVIOR_BAN_TIME</code>.</li> <li>Elija el \u00e1mbito del bloqueo: Decida si los bloqueos deben aplicarse solo al servicio actual o globalmente a todos los servicios utilizando la configuraci\u00f3n <code>BAD_BEHAVIOR_BAN_SCOPE</code>.</li> </ol> <p>Modo Stream</p> <p>En modo stream, solo el c\u00f3digo de estado <code>444</code> se considera \"malo\" y activar\u00e1 este comportamiento.</p>"},{"location":"es/features/#ajustes-de-configuracion_3","title":"Ajustes de configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_BAD_BEHAVIOR</code> <code>yes</code> multisite no Habilitar Mal Comportamiento: Establezca en <code>yes</code> para habilitar la funci\u00f3n de detecci\u00f3n y bloqueo de mal comportamiento. <code>BAD_BEHAVIOR_STATUS_CODES</code> <code>400 401 403 404 405 429 444</code> multisite no C\u00f3digos de estado malos: Lista de c\u00f3digos de estado HTTP que se contar\u00e1n como comportamiento \"malo\" cuando se devuelvan a un cliente. <code>BAD_BEHAVIOR_THRESHOLD</code> <code>10</code> multisite no Umbral: El n\u00famero de c\u00f3digos de estado \"malos\" que una IP puede generar dentro del per\u00edodo de conteo antes de ser bloqueada. <code>BAD_BEHAVIOR_COUNT_TIME</code> <code>60</code> multisite no Per\u00edodo de conteo: La ventana de tiempo (en segundos) durante la cual se cuentan los c\u00f3digos de estado malos para alcanzar el umbral. <code>BAD_BEHAVIOR_BAN_TIME</code> <code>86400</code> multisite no Duraci\u00f3n del bloqueo: Cu\u00e1nto tiempo (en segundos) permanecer\u00e1 bloqueada una IP despu\u00e9s de exceder el umbral. El valor por defecto es de 24 horas (86400 segundos). Establezca en <code>0</code> para bloqueos permanentes que nunca expiran. <code>BAD_BEHAVIOR_BAN_SCOPE</code> <code>service</code> global no \u00c1mbito del bloqueo: Determina si los bloqueos se aplican solo al servicio actual (<code>service</code>) o a todos los servicios (<code>global</code>). <p>Falsos positivos</p> <p>Tenga cuidado al establecer el umbral y el tiempo de conteo. Establecer estos valores demasiado bajos puede bloquear inadvertidamente a usuarios leg\u00edtimos que encuentren errores mientras navegan por su sitio.</p> <p>Ajuste de su configuraci\u00f3n</p> <p>Comience con configuraciones conservadoras (umbral m\u00e1s alto, tiempo de bloqueo m\u00e1s corto) y aj\u00fastelas seg\u00fan sus necesidades espec\u00edficas y patrones de tr\u00e1fico. Supervise sus registros para asegurarse de que los usuarios leg\u00edtimos no sean bloqueados por error.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_4","title":"Configuraciones de ejemplo","text":"Configuraci\u00f3n por defectoConfiguraci\u00f3n estrictaConfiguraci\u00f3n permisivaConfiguraci\u00f3n de bloqueo permanente <p>La configuraci\u00f3n por defecto proporciona un enfoque equilibrado adecuado para la mayor\u00eda de los sitios web:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"86400\"\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> <p>Para aplicaciones de alta seguridad donde se desea ser m\u00e1s agresivo al bloquear amenazas potenciales:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444 500 502 503\"\nBAD_BEHAVIOR_THRESHOLD: \"5\"\nBAD_BEHAVIOR_COUNT_TIME: \"120\"\nBAD_BEHAVIOR_BAN_TIME: \"604800\"  # 7 d\u00edas\nBAD_BEHAVIOR_BAN_SCOPE: \"global\" # Bloquear en todos los servicios\n</code></pre> <p>Para sitios con alto tr\u00e1fico leg\u00edtimo donde se desea evitar falsos positivos:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"401 403 429\"  # Solo contar no autorizados, prohibidos y con l\u00edmite de velocidad\nBAD_BEHAVIOR_THRESHOLD: \"20\"\nBAD_BEHAVIOR_COUNT_TIME: \"30\"\nBAD_BEHAVIOR_BAN_TIME: \"3600\"  # 1 hora\nBAD_BEHAVIOR_BAN_SCOPE: \"service\"\n</code></pre> <p>Para escenarios donde desea que los atacantes detectados sean bloqueados permanentemente hasta que se desbloqueen manualmente:</p> <pre><code>USE_BAD_BEHAVIOR: \"yes\"\nBAD_BEHAVIOR_STATUS_CODES: \"400 401 403 404 405 429 444\"\nBAD_BEHAVIOR_THRESHOLD: \"10\"\nBAD_BEHAVIOR_COUNT_TIME: \"60\"\nBAD_BEHAVIOR_BAN_TIME: \"0\"  # Bloqueo permanente (nunca expira)\nBAD_BEHAVIOR_BAN_SCOPE: \"global\" # Bloquear en todos los servicios\n</code></pre>"},{"location":"es/features/#blacklist","title":"Blacklist","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Lista Negra proporciona una protecci\u00f3n robusta para su sitio web al bloquear el acceso basado en varios atributos del cliente. Esta funci\u00f3n defiende contra entidades maliciosas conocidas, esc\u00e1neres y visitantes sospechosos al denegar el acceso basado en direcciones IP, redes, entradas de DNS inverso, ASN, agentes de usuario y patrones de URI espec\u00edficos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>El complemento comprueba las solicitudes entrantes contra m\u00faltiples criterios de la lista negra (direcciones IP, redes, rDNS, ASN, User-Agent o patrones de URI).</li> <li>Las listas negras se pueden especificar directamente en su configuraci\u00f3n o cargar desde URL externas.</li> <li>Si un visitante coincide con alguna regla de la lista negra (y no coincide con ninguna regla de omisi\u00f3n), se le deniega el acceso.</li> <li>Las listas negras se actualizan autom\u00e1ticamente en un horario regular desde las URL configuradas.</li> <li>Puede personalizar exactamente qu\u00e9 criterios se comprueban y se omiten seg\u00fan sus necesidades de seguridad espec\u00edficas.</li> </ol>"},{"location":"es/features/#como-usar_4","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Lista Negra:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n de Lista Negra est\u00e1 habilitada por defecto. Si es necesario, puede controlarla con el ajuste <code>USE_BLACKLIST</code>.</li> <li>Configure las reglas de bloqueo: Defina qu\u00e9 IP, redes, patrones de rDNS, ASN, User-Agents o URI deben ser bloqueados.</li> <li>Configure las reglas de omisi\u00f3n: Especifique cualquier excepci\u00f3n que deba omitir las comprobaciones de la lista negra.</li> <li>A\u00f1ada fuentes externas: Configure las URL para descargar y actualizar autom\u00e1ticamente los datos de la lista negra.</li> <li>Supervise la eficacia: Consulte la interfaz de usuario web para ver las estad\u00edsticas de las solicitudes bloqueadas.</li> </ol> <p>modo stream</p> <p>Cuando se utiliza el modo stream, solo se realizar\u00e1n comprobaciones de IP, rDNS y ASN.</p>"},{"location":"es/features/#ajustes-de-configuracion_4","title":"Ajustes de configuraci\u00f3n","text":"<p>General</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_BLACKLIST</code> <code>yes</code> multisite no Habilitar Lista Negra: Establezca en <code>yes</code> para habilitar la funci\u00f3n de lista negra. <code>BLACKLIST_COMMUNITY_LISTS</code> <code>ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents</code> multisite no Listas Negras de la Comunidad: Seleccione listas negras preconfiguradas mantenidas por la comunidad para incluirlas en el bloqueo. Listas Negras de la Comunidad <p>Qu\u00e9 hace esto: Le permite a\u00f1adir r\u00e1pidamente listas negras bien mantenidas y de origen comunitario sin tener que configurar manualmente las URL.</p> <pre><code>El ajuste `BLACKLIST_COMMUNITY_LISTS` le permite seleccionar de fuentes de listas negras curadas. Las opciones disponibles incluyen:\n</code></pre> ID Descripci\u00f3n Fuente <code>ip:laurent-minne-data-shield-aggressive</code> Lista de bloqueo de IPv4 de Data-Shield. DST = Europa <code>https://raw.githubusercontent.com/duggytuxy/Data-Shield_IPv4_Blocklist/refs/heads/main/prod_data-shield_ipv4_blocklist.txt</code> <code>ip:danmeuk-tor-exit</code> IP de nodos de salida de Tor (dan.me.uk) <code>https://www.dan.me.uk/torlist/?exit</code> <code>ua:mitchellkrogza-bad-user-agents</code> Nginx Block Bad Bots, Spam Referrer Blocker, Vulnerability Scanners, User-Agents, Malware, Adware, Ransomware, Malicious Sites, con anti-DDOS, Wordpress Theme Detector Blocking y Fail2Ban Jail para infractores reincidentes <code>https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list</code> <pre><code>**Configuraci\u00f3n:** Especifique m\u00faltiples listas separadas por espacios. Por ejemplo:\n```yaml\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n```\n\n!!! tip \"Comunidad vs Configuraci\u00f3n Manual\"\n    Las listas negras de la comunidad proporcionan una forma conveniente de empezar con fuentes de listas negras probadas. Puede usarlas junto con configuraciones de URL manuales para una m\u00e1xima flexibilidad.\n</code></pre> Direcci\u00f3n IP <p>Qu\u00e9 hace esto: Bloquea a los visitantes seg\u00fan su direcci\u00f3n IP o red.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>BLACKLIST_IP</code> multisite no Lista Negra de IP: Lista de direcciones IP o redes (notaci\u00f3n CIDR) a bloquear, separadas por espacios. <code>BLACKLIST_IGNORE_IP</code> multisite no Lista de Omisi\u00f3n de IP: Lista de direcciones IP o redes que deben omitir las comprobaciones de la lista negra de IP. <code>BLACKLIST_IP_URLS</code> <code>https://www.dan.me.uk/torlist/?exit</code> multisite no URL de la Lista Negra de IP: Lista de URL que contienen direcciones IP o redes a bloquear, separadas por espacios. <code>BLACKLIST_IGNORE_IP_URLS</code> multisite no URL de la Lista de Omisi\u00f3n de IP: Lista de URL que contienen direcciones IP o redes a omitir. <pre><code>El ajuste por defecto de `BLACKLIST_IP_URLS` incluye una URL que proporciona una **lista de nodos de salida de Tor conocidos**. Esta es una fuente com\u00fan de tr\u00e1fico malicioso y es un buen punto de partida para muchos sitios.\n</code></pre> DNS Inverso <p>Qu\u00e9 hace esto: Bloquea a los visitantes seg\u00fan su nombre de dominio inverso. Esto es \u00fatil para bloquear esc\u00e1neres y rastreadores conocidos basados en los dominios de su organizaci\u00f3n.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>BLACKLIST_RDNS</code> <code>.shodan.io .censys.io</code> multisite no Lista Negra de rDNS: Lista de sufijos de DNS inverso a bloquear, separados por espacios. <code>BLACKLIST_RDNS_GLOBAL</code> <code>yes</code> multisite no Solo Global para rDNS: Solo realizar comprobaciones de rDNS en direcciones IP globales cuando se establece en <code>yes</code>. <code>BLACKLIST_IGNORE_RDNS</code> multisite no Lista de Omisi\u00f3n de rDNS: Lista de sufijos de DNS inverso que deben omitir las comprobaciones de la lista negra de rDNS. <code>BLACKLIST_RDNS_URLS</code> multisite no URL de la Lista Negra de rDNS: Lista de URL que contienen sufijos de DNS inverso a bloquear, separadas por espacios. <code>BLACKLIST_IGNORE_RDNS_URLS</code> multisite no URL de la Lista de Omisi\u00f3n de rDNS: Lista de URL que contienen sufijos de DNS inverso a omitir. <pre><code>El ajuste por defecto de `BLACKLIST_RDNS` incluye dominios de esc\u00e1neres comunes como **Shodan** y **Censys**. Estos son a menudo utilizados por investigadores de seguridad y esc\u00e1neres para identificar sitios vulnerables.\n</code></pre> ASN <p>Qu\u00e9 hace esto: Bloquea a los visitantes de proveedores de red espec\u00edficos. Los ASN son como los c\u00f3digos postales de Internet: identifican a qu\u00e9 proveedor u organizaci\u00f3n pertenece una IP.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>BLACKLIST_ASN</code> multisite no Lista Negra de ASN: Lista de N\u00fameros de Sistema Aut\u00f3nomo a bloquear, separados por espacios. <code>BLACKLIST_IGNORE_ASN</code> multisite no Lista de Omisi\u00f3n de ASN: Lista de ASN que deben omitir las comprobaciones de la lista negra de ASN. <code>BLACKLIST_ASN_URLS</code> multisite no URL de la Lista Negra de ASN: Lista de URL que contienen ASN a bloquear, separadas por espacios. <code>BLACKLIST_IGNORE_ASN_URLS</code> multisite no URL de la Lista de Omisi\u00f3n de ASN: Lista de URL que contienen ASN a omitir. Agente de Usuario <p>Qu\u00e9 hace esto: Bloquea a los visitantes seg\u00fan el navegador o la herramienta que dicen estar usando. Esto es efectivo contra los bots que se identifican honestamente (como \"ScannerBot\" o \"WebHarvestTool\").</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>BLACKLIST_USER_AGENT</code> multisite no Lista Negra de User-Agent: Lista de patrones de User-Agent (expresi\u00f3n regular PCRE) a bloquear, separados por espacios. <code>BLACKLIST_IGNORE_USER_AGENT</code> multisite no Lista de Omisi\u00f3n de User-Agent: Lista de patrones de User-Agent que deben omitir las comprobaciones de la lista negra de User-Agent. <code>BLACKLIST_USER_AGENT_URLS</code> <code>https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list</code> multisite no URL de la Lista Negra de User-Agent: Lista de URL que contienen patrones de User-Agent a bloquear. <code>BLACKLIST_IGNORE_USER_AGENT_URLS</code> multisite no URL de la Lista de Omisi\u00f3n de User-Agent: Lista de URL que contienen patrones de User-Agent a omitir. <pre><code>El ajuste por defecto de `BLACKLIST_USER_AGENT_URLS` incluye una URL que proporciona una **lista de agentes de usuario maliciosos conocidos**. Estos son a menudo utilizados por bots y esc\u00e1neres maliciosos para identificar sitios vulnerables.\n</code></pre> URI <p>Qu\u00e9 hace esto: Bloquea las solicitudes a URL espec\u00edficas en su sitio. Esto es \u00fatil para bloquear intentos de acceso a p\u00e1ginas de administraci\u00f3n, formularios de inicio de sesi\u00f3n u otras \u00e1reas sensibles que podr\u00edan ser objetivo de ataques.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>BLACKLIST_URI</code> multisite no Lista Negra de URI: Lista de patrones de URI (expresi\u00f3n regular PCRE) a bloquear, separados por espacios. <code>BLACKLIST_IGNORE_URI</code> multisite no Lista de Omisi\u00f3n de URI: Lista de patrones de URI que deben omitir las comprobaciones de la lista negra de URI. <code>BLACKLIST_URI_URLS</code> multisite no URL de la Lista Negra de URI: Lista de URL que contienen patrones de URI a bloquear, separadas por espacios. <code>BLACKLIST_IGNORE_URI_URLS</code> multisite no URL de la Lista de Omisi\u00f3n de URI: Lista de URL que contienen patrones de URI a omitir. <p>Soporte de Formato de URL</p> <p>Todos los ajustes <code>*_URLS</code> admiten URL HTTP/HTTPS as\u00ed como rutas de archivos locales usando el prefijo <code>file:///</code>. Se admite la autenticaci\u00f3n b\u00e1sica usando el formato <code>http://usuario:contrase\u00f1a@url</code>.</p> <p>Actualizaciones Regulares</p> <p>Las listas negras de las URL se descargan y actualizan autom\u00e1ticamente cada hora para asegurar que su protecci\u00f3n se mantenga actualizada contra las \u00faltimas amenazas.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_5","title":"Configuraciones de Ejemplo","text":"Protecci\u00f3n B\u00e1sica de IP y User-AgentProtecci\u00f3n Avanzada con Reglas PersonalizadasUsando Archivos Locales <p>Una configuraci\u00f3n simple que bloquea los nodos de salida de Tor conocidos y los agentes de usuario maliciosos comunes usando listas negras de la comunidad:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_COMMUNITY_LISTS: \"ip:danmeuk-tor-exit ua:mitchellkrogza-bad-user-agents\"\n</code></pre> <p>Alternativamente, puede usar la configuraci\u00f3n manual de URL:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Una configuraci\u00f3n m\u00e1s completa con entradas de lista negra personalizadas y excepciones:</p> <pre><code>USE_BLACKLIST: \"yes\"\n\n# Entradas de lista negra personalizadas\nBLACKLIST_IP: \"192.168.1.100 203.0.113.0/24\"\nBLACKLIST_RDNS: \".shodan.io .censys.io .scanner.com\"\nBLACKLIST_ASN: \"16509 14618\"  # ASN de AWS y Amazon\nBLACKLIST_USER_AGENT: \"(?:\\b)SemrushBot(?:\\b) (?:\\b)AhrefsBot(?:\\b)\"\nBLACKLIST_URI: \"^/wp-login\\.php$ ^/administrator/\"\n\n# Reglas de omisi\u00f3n personalizadas\nBLACKLIST_IGNORE_IP: \"192.168.1.200 203.0.113.42\"\n\n# Fuentes de listas negras externas\nBLACKLIST_IP_URLS: \"https://www.dan.me.uk/torlist/?exit https://www.spamhaus.org/drop/drop.txt\"\nBLACKLIST_USER_AGENT_URLS: \"https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list\"\n</code></pre> <p>Configuraci\u00f3n usando archivos locales para las listas negras:</p> <pre><code>USE_BLACKLIST: \"yes\"\nBLACKLIST_IP_URLS: \"file:///ruta/a/ip-blacklist.txt\"\nBLACKLIST_RDNS_URLS: \"file:///ruta/a/rdns-blacklist.txt\"\nBLACKLIST_ASN_URLS: \"file:///ruta/a/asn-blacklist.txt\"\nBLACKLIST_USER_AGENT_URLS: \"file:///ruta/a/user-agent-blacklist.txt\"\nBLACKLIST_URI_URLS: \"file:///ruta/a/uri-blacklist.txt\"\n</code></pre>"},{"location":"es/features/#brotli","title":"Brotli","text":"<p>Compatibilidad con STREAM </p> <p>El complemento Brotli permite la compresi\u00f3n eficiente de las respuestas HTTP utilizando el algoritmo Brotli. Esta funci\u00f3n ayuda a reducir el uso de ancho de banda y a mejorar los tiempos de carga de la p\u00e1gina al comprimir el contenido web antes de que se env\u00ede al navegador del cliente.</p> <p>En comparaci\u00f3n con otros m\u00e9todos de compresi\u00f3n como gzip, Brotli suele alcanzar mayores tasas de compresi\u00f3n, lo que se traduce en archivos de menor tama\u00f1o y una entrega de contenido m\u00e1s r\u00e1pida.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente solicita contenido de su sitio web, BunkerWeb comprueba si el cliente admite la compresi\u00f3n Brotli.</li> <li>Si es compatible, BunkerWeb comprime la respuesta utilizando el algoritmo Brotli en el nivel de compresi\u00f3n que haya configurado.</li> <li>El contenido comprimido se env\u00eda al cliente con las cabeceras adecuadas que indican la compresi\u00f3n Brotli.</li> <li>El navegador del cliente descomprime el contenido antes de mostrarlo al usuario.</li> <li>Tanto el uso de ancho de banda como los tiempos de carga de la p\u00e1gina se reducen, mejorando la experiencia general del usuario.</li> </ol>"},{"location":"es/features/#como-usar_5","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de compresi\u00f3n Brotli:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n Brotli est\u00e1 desactivada por defecto. Habil\u00edtela estableciendo el ajuste <code>USE_BROTLI</code> en <code>yes</code>.</li> <li>Configure los tipos MIME: Especifique qu\u00e9 tipos de contenido deben comprimirse utilizando el ajuste <code>BROTLI_TYPES</code>.</li> <li>Establezca el tama\u00f1o m\u00ednimo: Defina el tama\u00f1o m\u00ednimo de respuesta para la compresi\u00f3n con <code>BROTLI_MIN_LENGTH</code> para evitar comprimir archivos muy peque\u00f1os.</li> <li>Elija el nivel de compresi\u00f3n: Seleccione su equilibrio preferido entre velocidad y tasa de compresi\u00f3n con <code>BROTLI_COMP_LEVEL</code>.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, la compresi\u00f3n se realiza autom\u00e1ticamente para las respuestas que cumplan los requisitos.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_5","title":"Ajustes de configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_BROTLI</code> <code>no</code> multisite no Habilitar Brotli: Establezca en <code>yes</code> para habilitar la compresi\u00f3n Brotli. <code>BROTLI_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> multisite no Tipos MIME: Lista de tipos de contenido que se comprimir\u00e1n con Brotli. <code>BROTLI_MIN_LENGTH</code> <code>1000</code> multisite no Tama\u00f1o m\u00ednimo: El tama\u00f1o m\u00ednimo de respuesta (en bytes) para que se aplique la compresi\u00f3n Brotli. <code>BROTLI_COMP_LEVEL</code> <code>6</code> multisite no Nivel de compresi\u00f3n: Nivel de compresi\u00f3n de 0 (sin compresi\u00f3n) a 11 (compresi\u00f3n m\u00e1xima). Los valores m\u00e1s altos consumen m\u00e1s CPU. <p>Optimizaci\u00f3n del nivel de compresi\u00f3n</p> <p>El nivel de compresi\u00f3n por defecto (6) ofrece un buen equilibrio entre la tasa de compresi\u00f3n y el uso de la CPU. Para contenido est\u00e1tico o cuando los recursos de la CPU del servidor son abundantes, considere aumentarlo a 9-11 para una compresi\u00f3n m\u00e1xima. Para contenido din\u00e1mico o cuando los recursos de la CPU son limitados, es posible que desee utilizar 4-5 para una compresi\u00f3n m\u00e1s r\u00e1pida con una reducci\u00f3n de tama\u00f1o razonable.</p> <p>Soporte de navegadores</p> <p>Brotli es compatible con todos los navegadores modernos, incluidos Chrome, Firefox, Edge, Safari y Opera. Los navegadores m\u00e1s antiguos recibir\u00e1n autom\u00e1ticamente el contenido sin comprimir, lo que garantiza la compatibilidad.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_6","title":"Configuraciones de ejemplo","text":"Configuraci\u00f3n b\u00e1sicaCompresi\u00f3n m\u00e1ximaRendimiento equilibrado <p>Una configuraci\u00f3n est\u00e1ndar que habilita Brotli con los ajustes por defecto:</p> <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json application/xml application/xhtml+xml text/css text/html text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"6\"\n</code></pre> <p>Configuraci\u00f3n optimizada para un ahorro m\u00e1ximo de compresi\u00f3n:</p> <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nBROTLI_MIN_LENGTH: \"500\"\nBROTLI_COMP_LEVEL: \"11\"\n</code></pre> <p>Configuraci\u00f3n que equilibra la tasa de compresi\u00f3n con el uso de la CPU:</p> <pre><code>USE_BROTLI: \"yes\"\nBROTLI_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nBROTLI_MIN_LENGTH: \"1000\"\nBROTLI_COMP_LEVEL: \"4\"\n</code></pre>"},{"location":"es/features/#bunkernet","title":"BunkerNet","text":"<p>Compatibilidad con STREAM </p> <p>El complemento BunkerNet permite el intercambio colectivo de inteligencia sobre amenazas entre las instancias de BunkerWeb, creando una poderosa red de protecci\u00f3n contra actores maliciosos. Al participar en BunkerNet, su instancia se beneficia y contribuye a una base de datos global de amenazas conocidas, mejorando la seguridad para toda la comunidad de BunkerWeb.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Su instancia de BunkerWeb se registra autom\u00e1ticamente con la API de BunkerNet para recibir un identificador \u00fanico.</li> <li>Cuando su instancia detecta y bloquea una direcci\u00f3n IP o comportamiento malicioso, informa an\u00f3nimamente la amenaza a BunkerNet.</li> <li>BunkerNet agrega la inteligencia sobre amenazas de todas las instancias participantes y distribuye la base de datos consolidada.</li> <li>Su instancia descarga regularmente una base de datos actualizada de amenazas conocidas desde BunkerNet.</li> <li>Esta inteligencia colectiva permite que su instancia bloquee proactivamente las direcciones IP que han exhibido comportamiento malicioso en otras instancias de BunkerWeb.</li> </ol> <p>Beneficios clave</p> <ol> <li>Defensa Colectiva: Aproveche los hallazgos de seguridad de miles de otras instancias de BunkerWeb a nivel mundial.</li> <li>Protecci\u00f3n Proactiva: Bloquee a los actores maliciosos antes de que puedan atacar su sitio bas\u00e1ndose en su comportamiento en otros lugares.</li> <li>Contribuci\u00f3n a la Comunidad: Ayude a proteger a otros usuarios de BunkerWeb compartiendo datos de amenazas an\u00f3nimos sobre los atacantes.</li> <li>Cero Configuraci\u00f3n: Funciona desde el primer momento con valores predeterminados sensatos, requiriendo una configuraci\u00f3n m\u00ednima.</li> <li>Enfoque en la Privacidad: Solo comparte la informaci\u00f3n de amenazas necesaria sin comprometer su privacidad ni la de sus usuarios.</li> </ol>"},{"location":"es/features/#como-usar_6","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n BunkerNet:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n BunkerNet est\u00e1 habilitada por defecto. Si es necesario, puede controlarla con la configuraci\u00f3n <code>USE_BUNKERNET</code>.</li> <li>Registro inicial: En el primer arranque, su instancia se registrar\u00e1 autom\u00e1ticamente con la API de BunkerNet y recibir\u00e1 un identificador \u00fanico.</li> <li>Actualizaciones autom\u00e1ticas: Su instancia descargar\u00e1 autom\u00e1ticamente la \u00faltima base de datos de amenazas en un horario regular.</li> <li>Informes autom\u00e1ticos: Cuando su instancia bloquee una direcci\u00f3n IP maliciosa, contribuir\u00e1 autom\u00e1ticamente estos datos a la comunidad.</li> <li>Monitoree la protecci\u00f3n: Consulte la interfaz de usuario web para ver estad\u00edsticas sobre las amenazas bloqueadas por la inteligencia de BunkerNet.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_6","title":"Ajustes de configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_BUNKERNET</code> <code>yes</code> multisite no Habilitar BunkerNet: Establezca en <code>yes</code> para habilitar el intercambio de inteligencia sobre amenazas de BunkerNet. <code>BUNKERNET_SERVER</code> <code>https://api.bunkerweb.io</code> global no Servidor BunkerNet: La direcci\u00f3n del servidor de la API de BunkerNet para compartir inteligencia sobre amenazas. <p>Protecci\u00f3n de Red</p> <p>Cuando BunkerNet detecta que una direcci\u00f3n IP ha estado involucrada en actividades maliciosas en m\u00faltiples instancias de BunkerWeb, a\u00f1ade esa IP a una lista negra colectiva. Esto proporciona una capa de defensa proactiva, protegiendo su sitio de amenazas antes de que puedan atacarlo directamente.</p> <p>Informes An\u00f3nimos</p> <p>Al informar sobre amenazas a BunkerNet, su instancia solo comparte los datos necesarios para identificar la amenaza: la direcci\u00f3n IP, el motivo del bloqueo y datos contextuales m\u00ednimos. No se comparte informaci\u00f3n personal sobre sus usuarios ni detalles sensibles sobre su sitio.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_7","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n por Defecto (Recomendada)Configuraci\u00f3n DeshabilitadaConfiguraci\u00f3n de Servidor Personalizado <p>La configuraci\u00f3n por defecto habilita BunkerNet con el servidor oficial de la API de BunkerWeb:</p> <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://api.bunkerweb.io\"\n</code></pre> <p>Si prefiere no participar en la red de inteligencia sobre amenazas de BunkerNet:</p> <pre><code>USE_BUNKERNET: \"no\"\n</code></pre> <p>Para organizaciones que ejecutan su propio servidor BunkerNet (poco com\u00fan):</p> <pre><code>USE_BUNKERNET: \"yes\"\nBUNKERNET_SERVER: \"https://bunkernet.example.com\"\n</code></pre>"},{"location":"es/features/#integracion-con-la-consola-de-crowdsec","title":"Integraci\u00f3n con la Consola de CrowdSec","text":"<p>Si a\u00fan no est\u00e1 familiarizado con la integraci\u00f3n de la Consola de CrowdSec, CrowdSec aprovecha la inteligencia colectiva para combatir las ciberamenazas. Piense en ello como el \"Waze de la ciberseguridad\": cuando un servidor es atacado, otros sistemas en todo el mundo son alertados y protegidos de los mismos atacantes. Puede obtener m\u00e1s informaci\u00f3n al respecto aqu\u00ed.</p> <p>A trav\u00e9s de nuestra asociaci\u00f3n con CrowdSec, puede inscribir sus instancias de BunkerWeb en su Consola de CrowdSec. Esto significa que los ataques bloqueados por BunkerWeb ser\u00e1n visibles en su Consola de CrowdSec junto con los ataques bloqueados por los Motores de Seguridad de CrowdSec, brind\u00e1ndole una vista unificada de las amenazas.</p> <p>Es importante destacar que no es necesario instalar CrowdSec para esta integraci\u00f3n (aunque recomendamos encarecidamente probarlo con el complemento de CrowdSec para BunkerWeb para mejorar a\u00fan m\u00e1s la seguridad de sus servicios web). Adem\u00e1s, puede inscribir sus Motores de Seguridad de CrowdSec en la misma cuenta de la Consola para una sinergia a\u00fan mayor.</p> <p>Paso #1: Cree su cuenta en la Consola de CrowdSec</p> <p>Vaya a la Consola de CrowdSec y reg\u00edstrese si a\u00fan no tiene una cuenta. Una vez hecho esto, anote la clave de inscripci\u00f3n que se encuentra en \"Security Engines\" despu\u00e9s de hacer clic en \"Add Security Engine\":</p> <p> </p> Obtenga su clave de inscripci\u00f3n de la Consola de CrowdSec <p>Paso #2: Obtenga su ID de BunkerNet</p> <p>Activar la funci\u00f3n BunkerNet (habilitada por defecto) es obligatorio si desea inscribir su(s) instancia(s) de BunkerWeb en su Consola de CrowdSec. Habil\u00edtela estableciendo <code>USE_BUNKERNET</code> en <code>yes</code>.</p> <p>Para Docker, obtenga su ID de BunkerNet usando:</p> <pre><code>docker exec mi-bw-scheduler cat /var/cache/bunkerweb/bunkernet/instance.id\n</code></pre> <p>Para Linux, use:</p> <pre><code>cat /var/cache/bunkerweb/bunkernet/instance.id\n</code></pre> <p>Paso #3: Inscriba su instancia usando el Panel</p> <p>Una vez que tenga su ID de BunkerNet y la clave de inscripci\u00f3n de la Consola de CrowdSec, solicite el producto gratuito \"BunkerNet / CrowdSec\" en el Panel. Es posible que se le pida que cree una cuenta si a\u00fan no lo ha hecho.</p> <p>Ahora puede seleccionar el servicio \"BunkerNet / CrowdSec\" y completar el formulario pegando su ID de BunkerNet y la clave de inscripci\u00f3n de la Consola de CrowdSec:</p> <p> </p> Inscriba su instancia de BunkerWeb en la Consola de CrowdSec <p>Paso #4: Acepte el nuevo motor de seguridad en la Consola</p> <p>Luego, vuelva a su Consola de CrowdSec y acepte el nuevo Motor de Seguridad:</p> <p> </p> Acepte la inscripci\u00f3n en la Consola de CrowdSec <p>\u00a1Felicitaciones, su instancia de BunkerWeb ahora est\u00e1 inscrita en su Consola de CrowdSec!</p> <p>Consejo profesional: Al ver sus alertas, haga clic en la opci\u00f3n \"columnas\" y marque la casilla \"contexto\" para acceder a datos espec\u00edficos de BunkerWeb.</p> <p> </p> Datos de BunkerWeb mostrados en la columna de contexto"},{"location":"es/features/#cors","title":"CORS","text":"<p>Compatibilidad con STREAM </p> <p>El complemento CORS habilita el Intercambio de Recursos de Origen Cruzado para su sitio web, permitiendo un acceso controlado a sus recursos desde diferentes dominios. Esta caracter\u00edstica le ayuda a compartir su contenido de forma segura con sitios web de terceros de confianza, manteniendo la seguridad al definir expl\u00edcitamente qu\u00e9 or\u00edgenes, m\u00e9todos y encabezados est\u00e1n permitidos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un navegador realiza una solicitud de origen cruzado a su sitio web, primero env\u00eda una solicitud de comprobaci\u00f3n previa (preflight) con el m\u00e9todo <code>OPTIONS</code>.</li> <li>BunkerWeb comprueba si el origen solicitante est\u00e1 permitido seg\u00fan su configuraci\u00f3n.</li> <li>Si est\u00e1 permitido, BunkerWeb responde con los encabezados CORS apropiados que definen lo que el sitio solicitante puede hacer.</li> <li>Para los or\u00edgenes no permitidos, la solicitud puede ser denegada por completo o servida sin los encabezados CORS.</li> <li>Se pueden configurar pol\u00edticas adicionales de origen cruzado, como COEP, COOP y CORP, para mejorar a\u00fan m\u00e1s la seguridad.</li> </ol>"},{"location":"es/features/#como-usar_7","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n CORS:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n CORS est\u00e1 deshabilitada por defecto. Establezca el ajuste <code>USE_CORS</code> en <code>yes</code> para habilitarla.</li> <li>Configure los or\u00edgenes permitidos: Especifique qu\u00e9 dominios pueden acceder a sus recursos utilizando el ajuste <code>CORS_ALLOW_ORIGIN</code>.</li> <li>Establezca los m\u00e9todos permitidos: Defina qu\u00e9 m\u00e9todos HTTP est\u00e1n permitidos para las solicitudes de origen cruzado con <code>CORS_ALLOW_METHODS</code>.</li> <li>Configure los encabezados permitidos: Especifique qu\u00e9 encabezados se pueden usar en las solicitudes con <code>CORS_ALLOW_HEADERS</code>.</li> <li>Controle las credenciales: Decida si las solicitudes de origen cruzado pueden incluir credenciales utilizando <code>CORS_ALLOW_CREDENTIALS</code>.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_7","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_CORS</code> <code>no</code> multisite no Habilitar CORS: Establezca en <code>yes</code> para habilitar el Intercambio de Recursos de Origen Cruzado. <code>CORS_ALLOW_ORIGIN</code> <code>self</code> multisite no Or\u00edgenes Permitidos: Expresi\u00f3n regular PCRE que representa los or\u00edgenes permitidos; use <code>*</code> para cualquier origen, o <code>self</code> solo para el mismo origen. <code>CORS_ALLOW_METHODS</code> <code>GET, POST, OPTIONS</code> multisite no M\u00e9todos Permitidos: M\u00e9todos HTTP que se pueden usar en solicitudes de origen cruzado. <code>CORS_ALLOW_HEADERS</code> <code>DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range</code> multisite no Encabezados Permitidos: Encabezados HTTP que se pueden usar en solicitudes de origen cruzado. <code>CORS_ALLOW_CREDENTIALS</code> <code>no</code> multisite no Permitir Credenciales: Establezca en <code>yes</code> para permitir credenciales (cookies, autenticaci\u00f3n HTTP) en solicitudes CORS. <code>CORS_EXPOSE_HEADERS</code> <code>Content-Length,Content-Range</code> multisite no Encabezados Expuestos: Encabezados HTTP a los que los navegadores pueden acceder desde respuestas de origen cruzado. <code>CROSS_ORIGIN_OPENER_POLICY</code> <code>same-origin</code> multisite no Cross-Origin-Opener-Policy: Controla la comunicaci\u00f3n entre contextos de navegaci\u00f3n. <code>CROSS_ORIGIN_EMBEDDER_POLICY</code> <code>require-corp</code> multisite no Cross-Origin-Embedder-Policy: Controla si un documento puede cargar recursos de otros or\u00edgenes. <code>CROSS_ORIGIN_RESOURCE_POLICY</code> <code>same-site</code> multisite no Cross-Origin-Resource-Policy: Controla qu\u00e9 sitios web pueden incrustar sus recursos. <code>CORS_MAX_AGE</code> <code>86400</code> multisite no Duraci\u00f3n de la Cach\u00e9 de Preflight: Cu\u00e1nto tiempo (en segundos) los navegadores deben almacenar en cach\u00e9 la respuesta de preflight. <code>CORS_DENY_REQUEST</code> <code>yes</code> multisite no Denegar Or\u00edgenes No Autorizados: Cuando es <code>yes</code>, las solicitudes de or\u00edgenes no autorizados se deniegan con un c\u00f3digo de error. <p>Optimizando las Solicitudes de Preflight</p> <p>El ajuste <code>CORS_MAX_AGE</code> determina cu\u00e1nto tiempo los navegadores almacenar\u00e1n en cach\u00e9 los resultados de una solicitud de preflight. Establecer esto en un valor m\u00e1s alto (como el predeterminado de 86400 segundos/24 horas) reduce el n\u00famero de solicitudes de preflight, mejorando el rendimiento para los recursos a los que se accede con frecuencia.</p> <p>Consideraciones de Seguridad</p> <p>Tenga cuidado al establecer <code>CORS_ALLOW_ORIGIN</code> en <code>*</code> (todos los or\u00edgenes) o <code>CORS_ALLOW_CREDENTIALS</code> en <code>yes</code> porque estas configuraciones pueden introducir riesgos de seguridad si no se gestionan adecuadamente. Generalmente es m\u00e1s seguro enumerar expl\u00edcitamente los or\u00edgenes de confianza y limitar los m\u00e9todos y encabezados permitidos.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_8","title":"Configuraciones de Ejemplo","text":"<p>Aqu\u00ed hay ejemplos de posibles valores para el ajuste <code>CORS_ALLOW_ORIGIN</code>, junto con su comportamiento:</p> <ul> <li><code>*</code>: Permite solicitudes de todos los or\u00edgenes.</li> <li><code>self</code>: Permite autom\u00e1ticamente solicitudes del mismo origen que el <code>server_name</code> configurado.</li> <li><code>^https://www\\.example\\.com$</code>: Permite solicitudes solo de <code>https://www.example.com</code>.</li> <li><code>^https://.+\\.example\\.com$</code>: Permite solicitudes de cualquier subdominio que termine en <code>.example.com</code>.</li> <li><code>^https://(www\\.example1\\.com|www\\.example2\\.com)$</code>: Permite solicitudes de <code>https://www.example1.com</code> o <code>https://www.example2.com</code>.</li> <li><code>^https?://www\\.example\\.com$</code>: Permite solicitudes tanto de <code>https://www.example.com</code> como de <code>http://www.example.com</code>.</li> </ul> Configuraci\u00f3n B\u00e1sicaConfiguraci\u00f3n de API P\u00fablicaM\u00faltiples Dominios de ConfianzaComod\u00edn de SubdominioM\u00faltiples Patrones de Dominio <p>Una configuraci\u00f3n simple que permite solicitudes de origen cruzado desde el mismo dominio:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"self\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Configuraci\u00f3n para una API p\u00fablica que necesita ser accesible desde cualquier origen:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"*\"\nCORS_ALLOW_METHODS: \"GET, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, X-API-Key\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"3600\"\nCORS_DENY_REQUEST: \"no\"\n</code></pre> <p>Configuraci\u00f3n para permitir m\u00faltiples dominios espec\u00edficos con un \u00fanico patr\u00f3n de expresi\u00f3n regular PCRE:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(app|api|dashboard)\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, DELETE, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Requested-With\"\nCORS_ALLOW_CREDENTIALS: \"yes\"\nCORS_EXPOSE_HEADERS: \"Content-Length, Content-Range, X-RateLimit-Remaining\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Configuraci\u00f3n que permite todos los subdominios de un dominio principal utilizando un patr\u00f3n de expresi\u00f3n regular PCRE:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://.*\\\\.example\\\\.com$\"\nCORS_ALLOW_METHODS: \"GET, POST, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre> <p>Configuraci\u00f3n que permite solicitudes de m\u00faltiples patrones de dominio con alternancia:</p> <pre><code>USE_CORS: \"yes\"\nCORS_ALLOW_ORIGIN: \"^https://(.*\\\\.example\\\\.com|.*\\\\.trusted-partner\\\\.org|api\\\\.third-party\\\\.net)$\"\nCORS_ALLOW_METHODS: \"GET, POST, PUT, OPTIONS\"\nCORS_ALLOW_HEADERS: \"Content-Type, Authorization, X-Custom-Header\"\nCORS_ALLOW_CREDENTIALS: \"no\"\nCORS_MAX_AGE: \"86400\"\nCORS_DENY_REQUEST: \"yes\"\n</code></pre>"},{"location":"es/features/#client-cache","title":"Client cache","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Cach\u00e9 del Cliente optimiza el rendimiento del sitio web al controlar c\u00f3mo los navegadores almacenan en cach\u00e9 el contenido est\u00e1tico. Reduce el uso de ancho de banda, disminuye la carga del servidor y mejora los tiempos de carga de la p\u00e1gina al indicar a los navegadores que almacenen y reutilicen activos est\u00e1ticos \u2014como im\u00e1genes, archivos CSS y JavaScript\u2014 localmente en lugar de solicitarlos en cada visita a la p\u00e1gina.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando est\u00e1 habilitado, BunkerWeb agrega encabezados <code>Cache-Control</code> a las respuestas para archivos est\u00e1ticos.</li> <li>Estos encabezados le dicen a los navegadores por cu\u00e1nto tiempo deben almacenar el contenido en cach\u00e9 localmente.</li> <li>Para los archivos con extensiones espec\u00edficas (como im\u00e1genes, CSS, JavaScript), BunkerWeb aplica la pol\u00edtica de almacenamiento en cach\u00e9 configurada.</li> <li>El soporte opcional de ETag proporciona un mecanismo de validaci\u00f3n adicional para determinar si el contenido en cach\u00e9 todav\u00eda est\u00e1 actualizado.</li> <li>Cuando los visitantes regresan a su sitio, sus navegadores pueden usar los archivos almacenados en cach\u00e9 localmente en lugar de descargarlos nuevamente, lo que resulta en tiempos de carga de p\u00e1gina m\u00e1s r\u00e1pidos.</li> </ol>"},{"location":"es/features/#como-usar_8","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Cach\u00e9 del Cliente:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n de Cach\u00e9 del Cliente est\u00e1 deshabilitada por defecto; establezca la configuraci\u00f3n <code>USE_CLIENT_CACHE</code> en <code>yes</code> para habilitarla.</li> <li>Configure las extensiones de archivo: Especifique qu\u00e9 tipos de archivo deben almacenarse en cach\u00e9 utilizando la configuraci\u00f3n <code>CLIENT_CACHE_EXTENSIONS</code>.</li> <li>Establezca las directivas de control de cach\u00e9: Personalice c\u00f3mo los clientes deben almacenar el contenido en cach\u00e9 utilizando la configuraci\u00f3n <code>CLIENT_CACHE_CONTROL</code>.</li> <li>Configure el soporte de ETag: Decida si habilitar los ETags para validar la frescura de la cach\u00e9 con la configuraci\u00f3n <code>CLIENT_CACHE_ETAG</code>.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, los encabezados de cach\u00e9 se aplican autom\u00e1ticamente a las respuestas elegibles.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_8","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_CLIENT_CACHE</code> <code>no</code> multisite no Habilitar Cach\u00e9 del Cliente: Establezca en <code>yes</code> para habilitar el almacenamiento en cach\u00e9 del lado del cliente de los archivos est\u00e1ticos. <code>CLIENT_CACHE_EXTENSIONS</code> <code>jpg                       | jpeg      | png      | bmp                                                                                                                                            | ico | svg | tif | css | js | otf | ttf | eot | woff | woff2</code> global no Extensiones Cacheadas: Lista de extensiones de archivo (separadas por barras verticales) que deben ser almacenadas en cach\u00e9 por el cliente. <code>CLIENT_CACHE_CONTROL</code> <code>public, max-age=15552000</code> multisite no Encabezado Cache-Control: Valor para el encabezado HTTP Cache-Control para controlar el comportamiento del almacenamiento en cach\u00e9. <code>CLIENT_CACHE_ETAG</code> <code>yes</code> multisite no Habilitar ETags: Establezca en <code>yes</code> para enviar el encabezado HTTP ETag para los recursos est\u00e1ticos. <p>Optimizando los Ajustes de Cach\u00e9</p> <p>Para contenido que se actualiza con frecuencia, considere usar valores de <code>max-age</code> m\u00e1s cortos. Para contenido que cambia raramente (como bibliotecas de JavaScript versionadas o logotipos), use tiempos de cach\u00e9 m\u00e1s largos. El valor por defecto de 15552000 segundos (180 d\u00edas) es apropiado para la mayor\u00eda de los activos est\u00e1ticos.</p> <p>Comportamiento del Navegador</p> <p>Diferentes navegadores implementan el almacenamiento en cach\u00e9 de manera ligeramente diferente, pero todos los navegadores modernos respetan las directivas est\u00e1ndar de <code>Cache-Control</code>. Los ETags proporcionan un mecanismo de validaci\u00f3n adicional que ayuda a los navegadores a determinar si el contenido en cach\u00e9 sigue siendo v\u00e1lido.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_9","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaAlmacenamiento en Cach\u00e9 AgresivoEstrategia de Contenido Mixto <p>Una configuraci\u00f3n simple que habilita el almacenamiento en cach\u00e9 para activos est\u00e1ticos comunes:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|gif|css|js|svg|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=86400\"  # 1 d\u00eda\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> <p>Configuraci\u00f3n optimizada para un almacenamiento en cach\u00e9 m\u00e1ximo, adecuada para sitios con contenido est\u00e1tico que se actualiza con poca frecuencia:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2|pdf|xml|txt\"\nCLIENT_CACHE_CONTROL: \"public, max-age=31536000, immutable\"  # 1 a\u00f1o\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre> <p>Para sitios con una mezcla de contenido actualizado con frecuencia y con poca frecuencia, considere usar el versionado de archivos en su aplicaci\u00f3n y una configuraci\u00f3n como esta:</p> <pre><code>USE_CLIENT_CACHE: \"yes\"\nCLIENT_CACHE_EXTENSIONS: \"jpg|jpeg|png|bmp|ico|svg|tif|gif|css|js|otf|ttf|eot|woff|woff2\"\nCLIENT_CACHE_CONTROL: \"public, max-age=604800\"  # 1 semana\nCLIENT_CACHE_ETAG: \"yes\"\n</code></pre>"},{"location":"es/features/#country","title":"Country","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Pa\u00eds habilita la funcionalidad de bloqueo geogr\u00e1fico para su sitio web, permiti\u00e9ndole restringir el acceso seg\u00fan la ubicaci\u00f3n geogr\u00e1fica de sus visitantes. Esta funci\u00f3n le ayuda a cumplir con las regulaciones regionales, prevenir actividades fraudulentas a menudo asociadas con regiones de alto riesgo e implementar restricciones de contenido basadas en l\u00edmites geogr\u00e1ficos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un visitante accede a su sitio web, BunkerWeb determina su pa\u00eds bas\u00e1ndose en su direcci\u00f3n IP.</li> <li>Su configuraci\u00f3n especifica una lista blanca (pa\u00edses permitidos) o una lista negra (pa\u00edses bloqueados).</li> <li>Si ha configurado una lista blanca, solo los visitantes de los pa\u00edses de esa lista tendr\u00e1n acceso.</li> <li>Si ha configurado una lista negra, se denegar\u00e1 el acceso a los visitantes de los pa\u00edses de esa lista.</li> <li>El resultado se almacena en cach\u00e9 para mejorar el rendimiento de los visitantes recurrentes de la misma direcci\u00f3n IP.</li> </ol>"},{"location":"es/features/#como-usar_9","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de Pa\u00eds:</p> <ol> <li>Defina su estrategia: Decida si desea utilizar un enfoque de lista blanca (permitir solo pa\u00edses espec\u00edficos) o un enfoque de lista negra (bloquear pa\u00edses espec\u00edficos).</li> <li>Configure los c\u00f3digos de pa\u00eds: A\u00f1ada los c\u00f3digos de pa\u00eds ISO 3166-1 alfa-2 (c\u00f3digos de dos letras como US, GB, FR) a la configuraci\u00f3n <code>WHITELIST_COUNTRY</code> o <code>BLACKLIST_COUNTRY</code>.</li> <li>Aplique la configuraci\u00f3n: Una vez configuradas, las restricciones basadas en el pa\u00eds se aplicar\u00e1n a todos los visitantes de su sitio.</li> <li>Supervise la eficacia: Consulte la interfaz de usuario web para ver estad\u00edsticas sobre las solicitudes bloqueadas por pa\u00eds.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_9","title":"Ajustes de configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>WHITELIST_COUNTRY</code> multisite no Lista Blanca de Pa\u00edses: Lista de c\u00f3digos de pa\u00eds (formato ISO 3166-1 alfa-2) separados por espacios. Solo se permiten estos pa\u00edses. <code>BLACKLIST_COUNTRY</code> multisite no Lista Negra de Pa\u00edses: Lista de c\u00f3digos de pa\u00eds (formato ISO 3166-1 alfa-2) separados por espacios. Estos pa\u00edses est\u00e1n bloqueados. <p>Lista Blanca vs. Lista Negra</p> <p>Elija el enfoque que mejor se adapte a sus necesidades:</p> <pre><code>-   Use la lista blanca cuando quiera restringir el acceso a un peque\u00f1o n\u00famero de pa\u00edses.\n-   Use la lista negra cuando quiera bloquear el acceso desde regiones problem\u00e1ticas espec\u00edficas mientras permite a todos los dem\u00e1s.\n</code></pre> <p>Regla de Precedencia</p> <p>Si se configuran tanto la lista blanca como la lista negra, la lista blanca tiene prioridad. Esto significa que el sistema primero comprueba si un pa\u00eds est\u00e1 en la lista blanca; si no, se deniega el acceso independientemente de la configuraci\u00f3n de la lista negra.</p> <p>Detecci\u00f3n de Pa\u00eds</p> <p>BunkerWeb utiliza la base de datos mmdb lite de db-ip para determinar el pa\u00eds de origen bas\u00e1ndose en las direcciones IP.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_10","title":"Configuraciones de Ejemplo","text":"Solo Lista BlancaSolo Lista NegraAcceso Solo para la UEBloqueo de Pa\u00edses de Alto Riesgo <p>Permitir el acceso solo desde Estados Unidos, Canad\u00e1 y el Reino Unido:</p> <pre><code>WHITELIST_COUNTRY: \"US CA GB\"\n</code></pre> <p>Bloquear el acceso desde pa\u00edses espec\u00edficos mientras se permite a todos los dem\u00e1s:</p> <pre><code>BLACKLIST_COUNTRY: \"RU CN KP\"\n</code></pre> <p>Permitir el acceso solo desde los estados miembros de la Uni\u00f3n Europea:</p> <pre><code>WHITELIST_COUNTRY: \"AT BE BG HR CY CZ DK EE FI FR DE GR HU IE IT LV LT LU MT NL PL PT RO SK SI ES SE\"\n</code></pre> <p>Bloquear el acceso desde pa\u00edses a menudo asociados con ciertas ciberamenazas:</p> <pre><code>BLACKLIST_COUNTRY: \"RU CN KP IR SY\"\n</code></pre>"},{"location":"es/features/#crowdsec","title":"CrowdSec","text":"<p>Compatibilidad con STREAM </p> <p></p> <p>El complemento CrowdSec integra BunkerWeb con el motor de seguridad CrowdSec, proporcionando una capa adicional de protecci\u00f3n contra diversas ciberamenazas. Este complemento act\u00faa como un bouncer de CrowdSec, denegando solicitudes basadas en decisiones de la API de CrowdSec.</p> <p>CrowdSec es un motor de seguridad moderno y de c\u00f3digo abierto que detecta y bloquea direcciones IP maliciosas bas\u00e1ndose en el an\u00e1lisis de comportamiento y la inteligencia colectiva de su comunidad. Tambi\u00e9n puede configurar escenarios para prohibir autom\u00e1ticamente direcciones IP basadas en comportamiento sospechoso, benefici\u00e1ndose de una lista negra de origen colectivo.</p> <p>C\u00f3mo funciona:</p> <ol> <li>El motor de CrowdSec analiza los registros y detecta actividades sospechosas en su infraestructura.</li> <li>Cuando se detecta una actividad maliciosa, CrowdSec crea una decisi\u00f3n para bloquear la direcci\u00f3n IP infractora.</li> <li>BunkerWeb, actuando como un bouncer, consulta la API local de CrowdSec para obtener decisiones sobre las solicitudes entrantes.</li> <li>Si la direcci\u00f3n IP de un cliente tiene una decisi\u00f3n de bloqueo activa, BunkerWeb deniega el acceso a los servicios protegidos.</li> <li>Opcionalmente, el Componente de Seguridad de Aplicaciones puede realizar una inspecci\u00f3n profunda de las solicitudes para una mayor seguridad.</li> </ol> <p>Beneficios clave</p> <ol> <li>Seguridad impulsada por la comunidad: Benef\u00edciese de la inteligencia de amenazas compartida en toda la comunidad de usuarios de CrowdSec.</li> <li>An\u00e1lisis de comportamiento: Detecte ataques sofisticados basados en patrones de comportamiento, no solo en firmas.</li> <li>Integraci\u00f3n ligera: Impacto m\u00ednimo en el rendimiento de su instancia de BunkerWeb.</li> <li>Protecci\u00f3n multinivel: Combine la defensa perimetral (bloqueo de IP) con la seguridad de aplicaciones para una protecci\u00f3n en profundidad.</li> </ol>"},{"location":"es/features/#configuracion","title":"Configuraci\u00f3n","text":"Docker <p>Archivo de adquisici\u00f3n</p> <pre><code>Necesitar\u00e1 ejecutar una instancia de CrowdSec y configurarla para analizar los registros de BunkerWeb. Dado que BunkerWeb se basa en NGINX, puede usar el valor `nginx` para el par\u00e1metro `type` en su archivo de adquisici\u00f3n (suponiendo que los registros de BunkerWeb se almacenan tal cual sin datos adicionales):\n\n```yaml\nfilenames:\n  - /var/log/bunkerweb.log\nlabels:\n  type: nginx\n```\n\n**Componente de Seguridad de Aplicaciones (*opcional*)**\n\nCrowdSec tambi\u00e9n proporciona un [Componente de Seguridad de Aplicaciones](https://docs.crowdsec.net/docs/appsec/intro?utm_source=external-docs&amp;utm_medium=cta&amp;utm_campaign=bunker-web-docs) que se puede utilizar para proteger su aplicaci\u00f3n de ataques. Si desea utilizarlo, debe crear otro archivo de adquisici\u00f3n para el Componente AppSec:\n\n```yaml\nappsec_config: crowdsecurity/appsec-default\nlabels:\n  type: appsec\nlisten_addr: 0.0.0.0:7422\nsource: appsec\n```\n\n**Syslog**\n\nPara las integraciones basadas en contenedores, recomendamos redirigir los registros del contenedor de BunkerWeb a un servicio de syslog para que CrowdSec pueda acceder a ellos f\u00e1cilmente. Aqu\u00ed hay un ejemplo de configuraci\u00f3n para syslog-ng que almacenar\u00e1 los registros sin procesar provenientes de BunkerWeb en un archivo local `/var/log/bunkerweb.log`:\n\n```syslog\n@version: 4.8\n\nsource s_net {\n    udp(\n        ip(\"0.0.0.0\")\n    );\n};\n\ntemplate t_imp {\n    template(\"$MSG\\n\");\n    template_escape(no);\n};\n\ndestination d_file {\n    file(\"/var/log/bunkerweb.log\" template(t_imp));\n};\n\nlog {\n    source(s_net);\n    destination(d_file);\n};\n```\n\n**Docker Compose**\n\nAqu\u00ed est\u00e1 la plantilla de docker-compose que puede utilizar (no olvide actualizar la clave del bouncer):\n\n```yaml\nx-bw-env: &amp;bw-env\n  # Usamos un ancla para evitar repetir la misma configuraci\u00f3n para ambos servicios\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Aseg\u00farese de establecer el rango de IP correcto para que el planificador pueda enviar la configuraci\u00f3n a la instancia\n\nservices:\n  bunkerweb:\n    # Este es el nombre que se utilizar\u00e1 para identificar la instancia en el Planificador\n    image: bunkerity/bunkerweb:1.6.5-rc3\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # Para soporte de QUIC / HTTP3\n    environment:\n      &lt;&lt;: *bw-env # Usamos el ancla para evitar repetir la misma configuraci\u00f3n para todos los servicios\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog # Enviar registros a syslog\n      options:\n        syslog-address: \"udp://10.20.30.254:514\" # La direcci\u00f3n IP del servicio syslog\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:1.6.5-rc3\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Aseg\u00farese de establecer el nombre de instancia correcto\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerde establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      USE_CROWDSEC: \"yes\"\n      CROWDSEC_API: \"http://crowdsec:8080\" # Esta es la direcci\u00f3n de la API del contenedor de CrowdSec en la misma red\n      CROWDSEC_APPSEC_URL: \"http://crowdsec:7422\" # Comente si no desea usar el Componente AppSec\n      CROWDSEC_API_KEY: \"s3cr3tb0unc3rk3y\" # Recuerde establecer una clave m\u00e1s segura para el bouncer\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerde establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  crowdsec:\n    image: crowdsecurity/crowdsec:v1.7.0 # Use la \u00faltima versi\u00f3n pero siempre fije la versi\u00f3n para una mejor estabilidad/seguridad\n    volumes:\n      - cs-data:/var/lib/crowdsec/data # Para persistir los datos de CrowdSec\n      - bw-logs:/var/log:ro # Los registros de BunkerWeb para que CrowdSec los analice\n      - ./acquis.yaml:/etc/crowdsec/acquis.yaml # El archivo de adquisici\u00f3n para los registros de BunkerWeb\n      - ./appsec.yaml:/etc/crowdsec/acquis.d/appsec.yaml # Comente si no desea usar el Componente AppSec\n    environment:\n      BOUNCER_KEY_bunkerweb: \"s3cr3tb0unc3rk3y\" # Recuerde establecer una clave m\u00e1s segura para el bouncer\n      COLLECTIONS: \"crowdsecurity/nginx crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules\"\n      #   COLLECTIONS: \"crowdsecurity/nginx\" # Si no desea usar el Componente AppSec, use esta l\u00ednea en su lugar\n    networks:\n      - bw-universe\n\n  syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Vincular a puertos bajos\n      - NET_BROADCAST  # Enviar difusiones\n      - NET_RAW  # Usar sockets sin procesar\n      - DAC_READ_SEARCH  # Leer archivos omitiendo permisos\n      - DAC_OVERRIDE  # Anular permisos de archivo\n      - CHOWN  # Cambiar propietario\n      - SYSLOG  # Escribir en registros del sistema\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Este es el volumen utilizado para almacenar los registros\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # Este es el archivo de configuraci\u00f3n de syslog-ng\n    networks:\n        bw-universe:\n          ipv4_address: 10.20.30.254\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n  cs-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Aseg\u00farese de establecer el rango de IP correcto para que el planificador pueda enviar la configuraci\u00f3n a la instancia\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n```\n</code></pre> LinuxTodo en uno <p>Necesita instalar CrowdSec y configurarlo para analizar los registros de BunkerWeb. Siga la documentaci\u00f3n oficial.</p> <p>Para permitir que CrowdSec analice los registros de BunkerWeb, agregue las siguientes l\u00edneas a su archivo de adquisici\u00f3n ubicado en <code>/etc/crowdsec/acquis.yaml</code>:</p> <pre><code>filenames:\n  - /var/log/bunkerweb/access.log\n  - /var/log/bunkerweb/error.log\n  - /var/log/bunkerweb/modsec_audit.log\nlabels:\n    type: nginx\n</code></pre> <p>Ahora, agregue su bouncer personalizado a la API de CrowdSec usando la herramienta <code>cscli</code>:</p> <pre><code>sudo cscli bouncers add crowdsec-bunkerweb-bouncer/v1.6\n</code></pre> <p>Clave de API</p> <p>Guarde la clave generada por el comando <code>cscli</code>; la necesitar\u00e1 m\u00e1s tarde.</p> <p>Luego reinicie el servicio de CrowdSec:</p> <pre><code>sudo systemctl restart crowdsec\n</code></pre> <p>Componente de Seguridad de Aplicaciones (opcional)</p> <p>Si desea usar el Componente AppSec, debe crear otro archivo de adquisici\u00f3n para \u00e9l ubicado en <code>/etc/crowdsec/acquis.d/appsec.yaml</code>:</p> <pre><code>appsec_config: crowdsecurity/appsec-default\nlabels:\n    type: appsec\nlisten_addr: 127.0.0.1:7422\nsource: appsec\n</code></pre> <p>Tambi\u00e9n necesitar\u00e1 instalar las colecciones del Componente AppSec:</p> <pre><code>sudo cscli collections install crowdsecurity/appsec-virtual-patching\nsudo cscli collections install crowdsecurity/appsec-generic-rules\n</code></pre> <p>Finalmente, reinicie el servicio de CrowdSec:</p> <pre><code>sudo systemctl restart crowdsec\n</code></pre> <p>Ajustes</p> <p>Configure el complemento agregando los siguientes ajustes a su archivo de configuraci\u00f3n de BunkerWeb:</p> <pre><code>USE_CROWDSEC=yes\nCROWDSEC_API=http://127.0.0.1:8080\nCROWDSEC_API_KEY=&lt;La clave proporcionada por cscli&gt;\n# Comente si no desea usar el Componente AppSec\nCROWDSEC_APPSEC_URL=http://127.0.0.1:7422\n</code></pre> <p>Finalmente, recargue el servicio de BunkerWeb:</p> <pre><code>sudo systemctl reload bunkerweb\n</code></pre> <p>La imagen Docker Todo en Uno (AIO) de BunkerWeb viene con CrowdSec totalmente integrado. No necesita configurar una instancia de CrowdSec separada ni configurar manualmente los archivos de adquisici\u00f3n para los registros de BunkerWeb cuando usa el agente interno de CrowdSec.</p> <p>Consulte la documentaci\u00f3n de integraci\u00f3n de la Imagen Todo en Uno (AIO).</p>"},{"location":"es/features/#ajustes-de-configuracion_10","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_CROWDSEC</code> <code>no</code> multisite no Habilitar CrowdSec: Establezca en <code>yes</code> para habilitar el bouncer de CrowdSec. <code>CROWDSEC_API</code> <code>http://crowdsec:8080</code> global no URL de la API de CrowdSec: La direcci\u00f3n del servicio de la API Local de CrowdSec. <code>CROWDSEC_API_KEY</code> global no Clave de API de CrowdSec: La clave de API para autenticarse con la API de CrowdSec, obtenida usando <code>cscli bouncers add</code>. <code>CROWDSEC_MODE</code> <code>live</code> global no Modo de Operaci\u00f3n: <code>live</code> (consultar la API para cada solicitud) o <code>stream</code> (almacenar en cach\u00e9 peri\u00f3dicamente todas las decisiones). <code>CROWDSEC_ENABLE_INTERNAL</code> <code>no</code> global no Tr\u00e1fico Interno: Establezca en <code>yes</code> para verificar el tr\u00e1fico interno contra las decisiones de CrowdSec. <code>CROWDSEC_REQUEST_TIMEOUT</code> <code>1000</code> global no Tiempo de Espera de la Solicitud: Tiempo de espera en milisegundos para las solicitudes HTTP a la API Local de CrowdSec en modo <code>live</code>. <code>CROWDSEC_EXCLUDE_LOCATION</code> global no Ubicaciones Excluidas: Lista de ubicaciones (URI) separadas por comas para excluir de las verificaciones de CrowdSec. <code>CROWDSEC_CACHE_EXPIRATION</code> <code>1</code> global no Expiraci\u00f3n de la Cach\u00e9: El tiempo de expiraci\u00f3n de la cach\u00e9 en segundos para las decisiones de IP en modo <code>live</code>. <code>CROWDSEC_UPDATE_FREQUENCY</code> <code>10</code> global no Frecuencia de Actualizaci\u00f3n: Con qu\u00e9 frecuencia (en segundos) obtener decisiones nuevas/expiradas de la API de CrowdSec en modo <code>stream</code>."},{"location":"es/features/#ajustes-del-componente-de-seguridad-de-aplicaciones","title":"Ajustes del Componente de Seguridad de Aplicaciones","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>CROWDSEC_APPSEC_URL</code> global no URL de AppSec: La URL del Componente de Seguridad de Aplicaciones de CrowdSec. Dejar vac\u00edo para deshabilitar AppSec. <code>CROWDSEC_APPSEC_FAILURE_ACTION</code> <code>passthrough</code> global no Acci\u00f3n en Caso de Falla: Acci\u00f3n a tomar cuando AppSec devuelve un error. Puede ser <code>passthrough</code> o <code>deny</code>. <code>CROWDSEC_APPSEC_CONNECT_TIMEOUT</code> <code>100</code> global no Tiempo de Espera de Conexi\u00f3n: El tiempo de espera en milisegundos para conectarse al Componente AppSec. <code>CROWDSEC_APPSEC_SEND_TIMEOUT</code> <code>100</code> global no Tiempo de Espera de Env\u00edo: El tiempo de espera en milisegundos para enviar datos al Componente AppSec. <code>CROWDSEC_APPSEC_PROCESS_TIMEOUT</code> <code>500</code> global no Tiempo de Espera de Procesamiento: El tiempo de espera en milisegundos para procesar la solicitud en el Componente AppSec. <code>CROWDSEC_ALWAYS_SEND_TO_APPSEC</code> <code>no</code> global no Enviar Siempre: Establezca en <code>yes</code> para enviar siempre las solicitudes a AppSec, incluso si hay una decisi\u00f3n a nivel de IP. <code>CROWDSEC_APPSEC_SSL_VERIFY</code> <code>no</code> global no Verificar SSL: Establezca en <code>yes</code> para verificar el certificado SSL del Componente AppSec. <p>!!! info \"Sobre los Modos de Operaci\u00f3n\" - Modo <code>live</code> consulta la API de CrowdSec para cada solicitud entrante, proporcionando protecci\u00f3n en tiempo real a costa de una mayor latencia. - Modo <code>stream</code> descarga peri\u00f3dicamente todas las decisiones de la API de CrowdSec y las almacena en cach\u00e9 localmente, reduciendo la latencia con un ligero retraso en la aplicaci\u00f3n de nuevas decisiones.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_11","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaConfiguraci\u00f3n Avanzada con AppSec <p>Esta es una configuraci\u00f3n simple para cuando CrowdSec se ejecuta en el mismo host:</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"tu-clave-de-api-aqui\"\nCROWDSEC_MODE: \"live\"\n</code></pre> <p>Una configuraci\u00f3n m\u00e1s completa que incluye el Componente de Seguridad de Aplicaciones:</p> <pre><code>USE_CROWDSEC: \"yes\"\nCROWDSEC_API: \"http://crowdsec:8080\"\nCROWDSEC_API_KEY: \"tu-clave-de-api-aqui\"\nCROWDSEC_MODE: \"stream\"\nCROWDSEC_UPDATE_FREQUENCY: \"30\"\nCROWDSEC_EXCLUDE_LOCATION: \"/health,/metrics\"\n\n# Configuraci\u00f3n de AppSec\nCROWDSEC_APPSEC_URL: \"http://crowdsec:7422\"\nCROWDSEC_APPSEC_FAILURE_ACTION: \"deny\"\nCROWDSEC_ALWAYS_SEND_TO_APPSEC: \"yes\"\nCROWDSEC_APPSEC_SSL_VERIFY: \"yes\"\n</code></pre>"},{"location":"es/features/#custom-ssl-certificate","title":"Custom SSL certificate","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de certificado SSL personalizado le permite usar sus propios certificados SSL/TLS con BunkerWeb en lugar de los generados autom\u00e1ticamente. Esta funci\u00f3n es particularmente \u00fatil si tiene certificados existentes de una Autoridad de Certificaci\u00f3n (CA) de confianza, necesita usar certificados con configuraciones espec\u00edficas o desea mantener una gesti\u00f3n de certificados consistente en toda su infraestructura.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Usted proporciona a BunkerWeb sus archivos de certificado y clave privada, ya sea especificando las rutas de los archivos o proporcionando los datos en formato PEM codificado en base64 o en texto plano.</li> <li>BunkerWeb valida su certificado y clave para asegurarse de que est\u00e9n formateados correctamente y sean utilizables.</li> <li>Cuando se establece una conexi\u00f3n segura, BunkerWeb sirve su certificado personalizado en lugar del generado autom\u00e1ticamente.</li> <li>BunkerWeb supervisa autom\u00e1ticamente la validez de su certificado y muestra advertencias si se acerca a su vencimiento.</li> <li>Usted tiene control total sobre la gesti\u00f3n de certificados, lo que le permite usar certificados de cualquier emisor que prefiera.</li> </ol> <p>Monitoreo Autom\u00e1tico de Certificados</p> <p>Cuando habilita SSL/TLS personalizado estableciendo <code>USE_CUSTOM_SSL</code> en <code>yes</code>, BunkerWeb monitorea autom\u00e1ticamente el certificado personalizado especificado en <code>CUSTOM_SSL_CERT</code>. Comprueba los cambios diariamente y recarga NGINX si se detecta alguna modificaci\u00f3n, asegurando que el certificado m\u00e1s reciente est\u00e9 siempre en uso.</p>"},{"location":"es/features/#como-usar_10","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de certificado SSL personalizado:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_CUSTOM_SSL</code> en <code>yes</code> para habilitar el soporte de certificados personalizados.</li> <li>Elija un m\u00e9todo: Decida si proporcionar los certificados a trav\u00e9s de rutas de archivo o como datos codificados en base64/texto plano, y establezca la prioridad usando <code>CUSTOM_SSL_CERT_PRIORITY</code>.</li> <li>Proporcione los archivos de certificado: Si usa rutas de archivo, especifique las ubicaciones de sus archivos de certificado y clave privada.</li> <li>O proporcione los datos del certificado: Si usa datos, proporcione su certificado y clave como cadenas codificadas en base64 o en formato PEM de texto plano.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, BunkerWeb usa autom\u00e1ticamente sus certificados personalizados para todas las conexiones HTTPS.</li> </ol> <p>Configuraci\u00f3n en Modo Stream</p> <p>Para el modo stream, debe configurar el ajuste <code>LISTEN_STREAM_PORT_SSL</code> para especificar el puerto de escucha SSL/TLS. Este paso es esencial para el correcto funcionamiento en modo stream.</p>"},{"location":"es/features/#ajustes-de-configuracion_11","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_CUSTOM_SSL</code> <code>no</code> multisite no Habilitar SSL personalizado: Establezca en <code>yes</code> para usar su propio certificado en lugar del generado autom\u00e1ticamente. <code>CUSTOM_SSL_CERT_PRIORITY</code> <code>file</code> multisite no Prioridad del Certificado: Elija si priorizar el certificado de la ruta del archivo o de los datos base64 (<code>file</code> o <code>data</code>). <code>CUSTOM_SSL_CERT</code> multisite no Ruta del Certificado: Ruta completa a su archivo de certificado SSL o paquete de certificados. <code>CUSTOM_SSL_KEY</code> multisite no Ruta de la Clave Privada: Ruta completa a su archivo de clave privada SSL. <code>CUSTOM_SSL_CERT_DATA</code> multisite no Datos del Certificado: Su certificado codificado en formato base64 o como texto plano PEM. <code>CUSTOM_SSL_KEY_DATA</code> multisite no Datos de la Clave Privada: Su clave privada codificada en formato base64 o como texto plano PEM. <p>Consideraciones de Seguridad</p> <p>Cuando use certificados personalizados, aseg\u00farese de que su clave privada est\u00e9 debidamente protegida y tenga los permisos adecuados. Los archivos deben ser legibles por el programador de BunkerWeb.</p> <p>Formato del Certificado</p> <p>BunkerWeb espera los certificados en formato PEM. Si su certificado est\u00e1 en un formato diferente, es posible que necesite convertirlo primero.</p> <p>Cadenas de Certificados</p> <p>Si su certificado incluye una cadena (intermediarios), debe proporcionar la cadena de certificados completa en el orden correcto, con su certificado primero, seguido de los certificados intermedios.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_12","title":"Configuraciones de Ejemplo","text":"Usando Rutas de ArchivoUsando Datos Base64Usando Datos PEM de Texto PlanoConfiguraci\u00f3n de Respaldo <p>Una configuraci\u00f3n que usa archivos de certificado y clave en el disco:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/ruta/a/su/certificado.pem\"\nCUSTOM_SSL_KEY: \"/ruta/a/su/clave-privada.pem\"\n</code></pre> <p>Una configuraci\u00f3n que usa datos de certificado y clave codificados en base64:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...certificado codificado en base64...Cg==\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...clave codificada en base64...Cg==\"\n</code></pre> <p>Una configuraci\u00f3n que usa datos de certificado y clave en texto plano en formato PEM:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"data\"\nCUSTOM_SSL_CERT_DATA: |\n  -----BEGIN CERTIFICATE-----\n  MIIDdzCCAl+gAwIBAgIUJH...contenido del certificado...AAAA\n  -----END CERTIFICATE-----\nCUSTOM_SSL_KEY_DATA: |\n  -----BEGIN PRIVATE KEY-----\n  MIIEvQIBADAN...contenido de la clave...AAAA\n  -----END PRIVATE KEY-----\n</code></pre> <p>Una configuraci\u00f3n que prioriza los archivos pero recurre a los datos base64 si los archivos no est\u00e1n disponibles:</p> <pre><code>USE_CUSTOM_SSL: \"yes\"\nCUSTOM_SSL_CERT_PRIORITY: \"file\"\nCUSTOM_SSL_CERT: \"/ruta/a/su/certificado.pem\"\nCUSTOM_SSL_KEY: \"/ruta/a/su/clave-privada.pem\"\nCUSTOM_SSL_CERT_DATA: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR...certificado codificado en base64...Cg==\"\nCUSTOM_SSL_KEY_DATA: \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSEV...clave codificada en base64...Cg==\"\n</code></pre>"},{"location":"es/features/#dnsbl","title":"DNSBL","text":"<p>Compatibilidad con STREAM </p> <p>El complemento DNSBL (Domain Name System Blacklist) proporciona protecci\u00f3n contra direcciones IP maliciosas conocidas al verificar las direcciones IP de los clientes contra servidores DNSBL externos. Esta funci\u00f3n ayuda a proteger su sitio web contra el spam, las redes de bots y diversos tipos de ciberamenazas al aprovechar listas mantenidas por la comunidad de direcciones IP problem\u00e1ticas.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente se conecta a su sitio web, BunkerWeb consulta los servidores DNSBL que ha elegido utilizando el protocolo DNS.</li> <li>La verificaci\u00f3n se realiza enviando una consulta de DNS inversa a cada servidor DNSBL con la direcci\u00f3n IP del cliente.</li> <li>Si alg\u00fan servidor DNSBL confirma que la direcci\u00f3n IP del cliente est\u00e1 listada como maliciosa, BunkerWeb prohibir\u00e1 autom\u00e1ticamente al cliente, evitando que amenazas potenciales lleguen a su aplicaci\u00f3n.</li> <li>Los resultados se almacenan en cach\u00e9 para mejorar el rendimiento de los visitantes recurrentes de la misma direcci\u00f3n IP.</li> <li>Las b\u00fasquedas se realizan de manera eficiente utilizando consultas as\u00edncronas para minimizar el impacto en los tiempos de carga de la p\u00e1gina.</li> </ol>"},{"location":"es/features/#como-usar_11","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n DNSBL:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n DNSBL est\u00e1 deshabilitada de forma predeterminada. Establezca la configuraci\u00f3n <code>USE_DNSBL</code> en <code>yes</code> para habilitarla.</li> <li>Configure los servidores DNSBL: Agregue los nombres de dominio de los servicios DNSBL que desea usar a la configuraci\u00f3n <code>DNSBL_LIST</code>.</li> <li>Aplique la configuraci\u00f3n: Una vez configurado, BunkerWeb verificar\u00e1 autom\u00e1ticamente las conexiones entrantes contra los servidores DNSBL especificados.</li> <li>Supervise la eficacia: Consulte la interfaz de usuario web para ver las estad\u00edsticas de las solicitudes bloqueadas por las verificaciones de DNSBL.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_12","title":"Ajustes de Configuraci\u00f3n","text":"<p>General</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_DNSBL</code> <code>no</code> multisite no Habilitar DNSBL: establezca en <code>yes</code> para habilitar las verificaciones de DNSBL para las conexiones entrantes. <code>DNSBL_LIST</code> <code>bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org</code> global no Servidores DNSBL: lista de dominios de servidores DNSBL para verificar, separados por espacios. <p>Listas de Omisi\u00f3n</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>DNSBL_IGNORE_IP</code> `` multisite yes IPs/CIDRs separados por espacios para omitir las verificaciones de DNSBL (lista blanca). <code>DNSBL_IGNORE_IP_URLS</code> `` multisite yes URL separadas por espacios que proporcionan IPs/CIDRs para omitir. Admite los esquemas <code>http(s)://</code> y <code>file://</code>. <p>Elecci\u00f3n de Servidores DNSBL</p> <p>Elija proveedores de DNSBL de buena reputaci\u00f3n para minimizar los falsos positivos. La lista predeterminada incluye servicios bien establecidos que son adecuados para la mayor\u00eda de los sitios web:</p> <pre><code>-   **bl.blocklist.de:** Lista las IP que han sido detectadas atacando otros servidores.\n-   **sbl.spamhaus.org:** Se centra en fuentes de spam y otras actividades maliciosas.\n-   **xbl.spamhaus.org:** Apunta a sistemas infectados, como m\u00e1quinas comprometidas o proxies abiertos.\n</code></pre> <p>C\u00f3mo Funciona DNSBL</p> <p>Los servidores DNSBL funcionan respondiendo a consultas DNS con formato especial. Cuando BunkerWeb verifica una direcci\u00f3n IP, invierte la IP y a\u00f1ade el nombre de dominio del DNSBL. Si la consulta DNS resultante devuelve una respuesta de \"\u00e9xito\", la IP se considera en la lista negra.</p> <p>Consideraciones de Rendimiento</p> <p>Aunque BunkerWeb optimiza las b\u00fasquedas de DNSBL para el rendimiento, agregar un gran n\u00famero de servidores DNSBL podr\u00eda afectar potencialmente los tiempos de respuesta. Comience con unos pocos servidores DNSBL de buena reputaci\u00f3n y supervise el rendimiento antes de agregar m\u00e1s.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_13","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaConfiguraci\u00f3n M\u00ednimaExcluyendo IPs de ConfianzaUsando URL Remotas <p>Una configuraci\u00f3n simple que utiliza los servidores DNSBL predeterminados:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org\"\n</code></pre> <p>Una configuraci\u00f3n m\u00ednima que se centra en los servicios DNSBL m\u00e1s fiables:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\n</code></pre> <p>Esta configuraci\u00f3n utiliza solo:</p> <ul> <li>zen.spamhaus.org: La lista combinada de Spamhaus a menudo se considera suficiente como una soluci\u00f3n independiente debido a su amplia cobertura y reputaci\u00f3n de precisi\u00f3n. Combina las listas SBL, XBL y PBL en una sola consulta, lo que la hace eficiente y completa.</li> </ul> <p>Puede excluir clientes espec\u00edficos de las verificaciones de DNSBL utilizando valores est\u00e1ticos y/o archivos remotos:</p> <ul> <li><code>DNSBL_IGNORE_IP</code>: Agregue IPs y rangos CIDR separados por espacios. Ejemplo: <code>192.0.2.10 203.0.113.0/24 2001:db8::/32</code>.</li> <li><code>DNSBL_IGNORE_IP_URLS</code>: Proporcione URL cuyo contenido liste una IP/CIDR por l\u00ednea. Los comentarios que comienzan con <code>#</code> o <code>;</code> se ignoran. Las entradas duplicadas se eliminan.</li> </ul> <p>Cuando la IP de un cliente entrante coincide con la lista de omisi\u00f3n, BunkerWeb omite las b\u00fasquedas de DNSBL y almacena en cach\u00e9 el resultado como \"ok\" para solicitudes posteriores m\u00e1s r\u00e1pidas.</p> <p>El trabajo <code>dnsbl-download</code> descarga y almacena en cach\u00e9 las IPs a omitir cada hora:</p> <ul> <li>Protocolos: <code>https://</code>, <code>http://</code> y rutas locales <code>file://</code>.</li> <li>La cach\u00e9 por URL con suma de verificaci\u00f3n evita descargas redundantes (per\u00edodo de gracia de 1 hora).</li> <li>Archivo combinado por servicio: <code>/var/cache/bunkerweb/dnsbl/&lt;service&gt;/IGNORE_IP.list</code>.</li> <li>Se carga al inicio y se combina con <code>DNSBL_IGNORE_IP</code>.</li> </ul> <p>Ejemplo que combina fuentes est\u00e1ticas y de URL:</p> <pre><code>```yaml\nUSE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP: \"10.0.0.0/8 192.168.0.0/16 2001:db8::/32\"\nDNSBL_IGNORE_IP_URLS: \"https://example.com/allow-cidrs.txt file:///etc/bunkerweb/dnsbl/ignore.txt\"\n```\n</code></pre> Usando Archivos Locales <p>Cargue las IPs a omitir desde archivos locales usando URL <code>file://</code>:</p> <pre><code>USE_DNSBL: \"yes\"\nDNSBL_LIST: \"zen.spamhaus.org\"\nDNSBL_IGNORE_IP_URLS: \"file:///etc/bunkerweb/dnsbl/ignore.txt file:///opt/data/allow-cidrs.txt\"\n</code></pre>"},{"location":"es/features/#database","title":"Database","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Base de Datos proporciona una integraci\u00f3n robusta de base de datos para BunkerWeb al habilitar el almacenamiento y la gesti\u00f3n centralizados de datos de configuraci\u00f3n, registros y otra informaci\u00f3n esencial.</p> <p>Este componente principal admite m\u00faltiples motores de base de datos, incluidos SQLite, PostgreSQL, MySQL/MariaDB y Oracle, lo que le permite elegir la soluci\u00f3n de base de datos que mejor se adapte a su entorno y requisitos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>BunkerWeb se conecta a su base de datos configurada utilizando el URI proporcionado en el formato SQLAlchemy.</li> <li>Los datos cr\u00edticos de configuraci\u00f3n, la informaci\u00f3n en tiempo de ejecuci\u00f3n y los registros de trabajos se almacenan de forma segura en la base de datos.</li> <li>Los procesos de mantenimiento autom\u00e1tico optimizan su base de datos al gestionar el crecimiento de los datos y limpiar los registros sobrantes.</li> <li>Para escenarios de alta disponibilidad, puede configurar un URI de base de datos de solo lectura que sirva tanto como respaldo (failover) como m\u00e9todo para descargar las operaciones de lectura.</li> <li>Las operaciones de la base de datos se registran seg\u00fan el nivel de registro especificado, proporcionando una visibilidad adecuada de las interacciones con la base de datos.</li> </ol>"},{"location":"es/features/#como-usar_12","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de Base de Datos:</p> <ol> <li>Elija un motor de base de datos: Seleccione entre SQLite (predeterminado), PostgreSQL, MySQL/MariaDB u Oracle seg\u00fan sus requisitos.</li> <li>Configure el URI de la base de datos: Establezca el <code>DATABASE_URI</code> para conectarse a su base de datos principal utilizando el formato SQLAlchemy.</li> <li>Base de datos de solo lectura opcional: Para configuraciones de alta disponibilidad, configure un <code>DATABASE_URI_READONLY</code> como respaldo o para operaciones de lectura.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_13","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>DATABASE_URI</code> <code>sqlite:////var/lib/bunkerweb/db.sqlite3</code> global no URI de la Base de Datos: La cadena de conexi\u00f3n de la base de datos principal en formato SQLAlchemy. <code>DATABASE_URI_READONLY</code> global no URI de la Base de Datos de Solo Lectura: Base de datos opcional para operaciones de solo lectura o como respaldo si la base de datos principal est\u00e1 ca\u00edda. <code>DATABASE_LOG_LEVEL</code> <code>warning</code> global no Nivel de Registro: El nivel de verbosidad para los registros de la base de datos. Opciones: <code>debug</code>, <code>info</code>, <code>warn</code>, <code>warning</code> o <code>error</code>. <code>DATABASE_MAX_JOBS_RUNS</code> <code>10000</code> global no M\u00e1ximo de Ejecuciones de Trabajos: El n\u00famero m\u00e1ximo de registros de ejecuci\u00f3n de trabajos que se conservar\u00e1n en la base de datos antes de la limpieza autom\u00e1tica. <p>!!! tip \"Selecci\u00f3n de Base de Datos\" - SQLite (predeterminado): Ideal para implementaciones de un solo nodo o entornos de prueba debido a su simplicidad y naturaleza basada en archivos. - PostgreSQL: Recomendado para entornos de producci\u00f3n con m\u00faltiples instancias de BunkerWeb debido a su robustez y soporte de concurrencia. - MySQL/MariaDB: Una buena alternativa a PostgreSQL con capacidades similares de nivel de producci\u00f3n. - Oracle: Adecuado para entornos empresariales donde Oracle ya es la plataforma de base de datos est\u00e1ndar.</p> <p>Formato de URI de SQLAlchemy</p> <p>El URI de la base de datos sigue el formato de SQLAlchemy:</p> <pre><code>-   SQLite: `sqlite:////ruta/a/database.sqlite3`\n-   PostgreSQL: `postgresql://usuario:contrase\u00f1a@hostname:puerto/basededatos`\n-   MySQL/MariaDB: `mysql://usuario:contrase\u00f1a@hostname:puerto/basededatos` o `mariadb://usuario:contrase\u00f1a@hostname:puerto/basededatos`\n-   Oracle: `oracle://usuario:contrase\u00f1a@hostname:puerto/basededatos`\n</code></pre> <p>Mantenimiento de la Base de Datos</p> <p>El complemento ejecuta autom\u00e1ticamente un trabajo diario que limpia las ejecuciones de trabajos sobrantes bas\u00e1ndose en el ajuste <code>DATABASE_MAX_JOBS_RUNS</code>. Esto evita el crecimiento ilimitado de la base de datos mientras se mantiene un historial \u00fatil de las ejecuciones de trabajos.</p>"},{"location":"es/features/#easy-resolve-pro","title":"Easy Resolve  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Provides a simpler way to fix false positives in reports.</p>"},{"location":"es/features/#errors","title":"Errors","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Errores proporciona un manejo de errores personalizable para su sitio web, permiti\u00e9ndole configurar c\u00f3mo aparecen las respuestas de error HTTP a los usuarios. Esta caracter\u00edstica le ayuda a presentar p\u00e1ginas de error amigables y con su marca que mejoran la experiencia del usuario durante escenarios de error, en lugar de mostrar las p\u00e1ginas de error predeterminadas del servidor, que pueden parecer t\u00e9cnicas y confusas para los visitantes.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente encuentra un error HTTP (por ejemplo, 400, 404 o 500), BunkerWeb intercepta la respuesta de error.</li> <li>En lugar de mostrar la p\u00e1gina de error predeterminada, BunkerWeb muestra una p\u00e1gina de error personalizada y dise\u00f1ada profesionalmente.</li> <li>Las p\u00e1ginas de error son totalmente personalizables a trav\u00e9s de su configuraci\u00f3n, permiti\u00e9ndole especificar p\u00e1ginas personalizadas para c\u00f3digos de error espec\u00edficos. Los archivos de las p\u00e1ginas de error personalizadas deben colocarse en el directorio definido por el ajuste <code>ROOT_FOLDER</code> (consulte la documentaci\u00f3n del complemento Varios).<ul> <li>Por defecto, <code>ROOT_FOLDER</code> es <code>/var/www/html/{server_name}</code> (donde <code>{server_name}</code> se reemplaza por el nombre real del servidor).</li> <li>En el modo multisitio, cada sitio puede tener su propio <code>ROOT_FOLDER</code>, por lo que las p\u00e1ginas de error personalizadas deben colocarse en el directorio correspondiente para cada sitio.</li> </ul> </li> <li>Las p\u00e1ginas de error predeterminadas proporcionan explicaciones claras, ayudando a los usuarios a entender qu\u00e9 sali\u00f3 mal y qu\u00e9 pueden hacer a continuaci\u00f3n.</li> </ol>"},{"location":"es/features/#como-usar_13","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Errores:</p> <ol> <li>Defina las p\u00e1ginas de error personalizadas: Especifique qu\u00e9 c\u00f3digos de error HTTP deben usar p\u00e1ginas de error personalizadas utilizando el ajuste <code>ERRORS</code>. Los archivos de las p\u00e1ginas de error personalizadas deben estar ubicados en la carpeta especificada por el ajuste <code>ROOT_FOLDER</code> para el sitio. En el modo multisitio, esto significa que cada sitio/servidor puede tener su propia carpeta para las p\u00e1ginas de error personalizadas.</li> <li>Configure sus p\u00e1ginas de error: Para cada c\u00f3digo de error, puede usar la p\u00e1gina de error predeterminada de BunkerWeb o proporcionar su propia p\u00e1gina HTML personalizada (colocada en el <code>ROOT_FOLDER</code> apropiado).</li> <li>Establezca los c\u00f3digos de error interceptados: Seleccione qu\u00e9 c\u00f3digos de error siempre deben ser manejados por BunkerWeb con el ajuste <code>INTERCEPTED_ERROR_CODES</code>.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, el manejo de errores ocurre autom\u00e1ticamente para todos los c\u00f3digos de error especificados.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_14","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>ERRORS</code> multisite no P\u00e1ginas de Error Personalizadas: Asigne c\u00f3digos de error espec\u00edficos a archivos HTML personalizados usando el formato <code>CODIGO_DE_ERROR=/ruta/al/archivo.html</code>. <code>INTERCEPTED_ERROR_CODES</code> <code>400 401 403 404 405 413 429 500 501 502 503 504</code> multisite no Errores Interceptados: Lista de c\u00f3digos de error HTTP que BunkerWeb debe manejar con su p\u00e1gina de error predeterminada cuando no se especifica una p\u00e1gina personalizada. <p>Dise\u00f1o de la P\u00e1gina de Error</p> <p>Las p\u00e1ginas de error predeterminadas de BunkerWeb est\u00e1n dise\u00f1adas para ser informativas, amigables y de apariencia profesional. Incluyen:</p> <pre><code>-   Descripciones claras del error\n-   Informaci\u00f3n sobre qu\u00e9 pudo haber causado el error\n-   Acciones sugeridas para que los usuarios resuelvan el problema\n-   Indicadores visuales que ayudan a los usuarios a comprender si el problema est\u00e1 del lado del cliente o del servidor\n</code></pre> <p>Tipos de Error</p> <p>Los c\u00f3digos de error se clasifican por tipo:</p> <pre><code>-   **Errores 4xx (del lado del cliente):** Indican problemas con la solicitud del cliente, como intentar acceder a p\u00e1ginas inexistentes o carecer de la autenticaci\u00f3n adecuada.\n-   **Errores 5xx (del lado del servidor):** Indican problemas con la capacidad del servidor para cumplir una solicitud v\u00e1lida, como errores internos del servidor o indisponibilidad temporal.\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_14","title":"Configuraciones de Ejemplo","text":"Manejo de Errores PredeterminadoP\u00e1ginas de Error PersonalizadasManejo de Errores Selectivo <p>Deje que BunkerWeb maneje los c\u00f3digos de error comunes con sus p\u00e1ginas de error predeterminadas:</p> <pre><code>INTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> <p>Use p\u00e1ginas de error personalizadas para c\u00f3digos de error espec\u00edficos:</p> <pre><code>ERRORS: \"404=/custom/404.html 500=/custom/500.html\"\nINTERCEPTED_ERROR_CODES: \"400 401 403 404 405 413 429 500 501 502 503 504\"\n</code></pre> <p>Solo maneje c\u00f3digos de error espec\u00edficos con BunkerWeb:</p> <pre><code>INTERCEPTED_ERROR_CODES: \"404 500\"\n</code></pre>"},{"location":"es/features/#greylist","title":"Greylist","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Lista Gris proporciona un enfoque de seguridad flexible que permite el acceso de los visitantes mientras se mantienen las caracter\u00edsticas de seguridad esenciales.</p> <p>A diferencia de los enfoques tradicionales de lista negra/lista blanca \u2014que bloquean o permiten completamente el acceso\u2014, la lista gris crea un punto intermedio al conceder acceso a ciertos visitantes mientras los somete a controles de seguridad.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Usted define los criterios para que los visitantes sean incluidos en la lista gris (direcciones IP, redes, DNS inverso, ASN, User-Agent o patrones de URI).</li> <li>Cuando un visitante coincide con cualquiera de estos criterios, se le concede acceso a su sitio mientras las dem\u00e1s caracter\u00edsticas de seguridad permanecen activas.</li> <li>Si un visitante no coincide con ning\u00fan criterio de la lista gris, se le deniega el acceso.</li> <li>Los datos de la lista gris se pueden actualizar autom\u00e1ticamente desde fuentes externas de forma programada.</li> </ol>"},{"location":"es/features/#como-usar_14","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Lista Gris:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n de Lista Gris est\u00e1 desactivada por defecto. Establezca el ajuste <code>USE_GREYLIST</code> en <code>yes</code> para habilitarla.</li> <li>Configure las reglas de la lista gris: Defina qu\u00e9 IPs, redes, patrones de DNS inverso, ASNs, User-Agents o URIs deben incluirse en la lista gris.</li> <li>A\u00f1ada fuentes externas: Opcionalmente, configure URLs para descargar y actualizar autom\u00e1ticamente los datos de la lista gris.</li> <li>Supervise el acceso: Revise la interfaz de usuario web para ver qu\u00e9 visitantes est\u00e1n siendo permitidos o denegados.</li> </ol> <p>Comportamiento del Control de Acceso</p> <p>Cuando la funci\u00f3n de lista gris est\u00e1 habilitada con el ajuste <code>USE_GREYLIST</code> establecido en <code>yes</code>:</p> <pre><code>1.  **Visitantes en la lista gris:** Se les permite el acceso pero siguen estando sujetos a todos los controles de seguridad.\n2.  **Visitantes no incluidos en la lista gris:** Se les deniega completamente el acceso.\n</code></pre> <p>modo stream</p> <p>Cuando se utiliza el modo stream, solo se realizan las comprobaciones de IP, DNS inverso y ASN.</p>"},{"location":"es/features/#ajustes-de-configuracion_15","title":"Ajustes de Configuraci\u00f3n","text":"<p>General</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_GREYLIST</code> <code>no</code> multisite no Habilitar Lista Gris: Establezca en <code>yes</code> para habilitar la lista gris. Direcci\u00f3n IP <p>Qu\u00e9 hace esto: Incluye en la lista gris a los visitantes seg\u00fan su direcci\u00f3n IP o red. Estos visitantes obtienen acceso pero siguen estando sujetos a los controles de seguridad.</p> <pre><code>| Ajuste             | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                             |\n| ------------------ | ----------------- | --------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_IP`      |                   | multisite | no       | **Lista Gris de IP:** Lista de direcciones IP o redes (en notaci\u00f3n CIDR) para incluir en la lista gris, separadas por espacios.         |\n| `GREYLIST_IP_URLS` |                   | multisite | no       | **URLs de Lista Gris de IP:** Lista de URLs que contienen direcciones IP o redes para incluir en la lista gris, separadas por espacios. |\n</code></pre> DNS Inverso <p>Qu\u00e9 hace esto: Incluye en la lista gris a los visitantes seg\u00fan su nombre de dominio (en inverso). \u00datil para permitir el acceso condicional a visitantes de organizaciones o redes espec\u00edficas.</p> <pre><code>| Ajuste                 | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                               |\n| ---------------------- | ----------------- | --------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_RDNS`        |                   | multisite | no       | **Lista Gris de rDNS:** Lista de sufijos de DNS inverso para incluir en la lista gris, separados por espacios.                            |\n| `GREYLIST_RDNS_GLOBAL` | `yes`             | multisite | no       | **Solo rDNS Global:** Realiza comprobaciones de la lista gris de rDNS solo en direcciones IP globales cuando se establece en `yes`.       |\n| `GREYLIST_RDNS_URLS`   |                   | multisite | no       | **URLs de Lista Gris de rDNS:** Lista de URLs que contienen sufijos de DNS inverso para incluir en la lista gris, separadas por espacios. |\n</code></pre> ASN <p>Qu\u00e9 hace esto: Incluye en la lista gris a los visitantes de proveedores de red espec\u00edficos utilizando N\u00fameros de Sistema Aut\u00f3nomo. Los ASN identifican a qu\u00e9 proveedor u organizaci\u00f3n pertenece una IP.</p> <pre><code>| Ajuste              | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                            |\n| ------------------- | ----------------- | --------- | -------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_ASN`      |                   | multisite | no       | **Lista Gris de ASN:** Lista de N\u00fameros de Sistema Aut\u00f3nomo para incluir en la lista gris, separados por espacios.     |\n| `GREYLIST_ASN_URLS` |                   | multisite | no       | **URLs de Lista Gris de ASN:** Lista de URLs que contienen ASNs para incluir en la lista gris, separadas por espacios. |\n</code></pre> User Agent <p>Qu\u00e9 hace esto: Incluye en la lista gris a los visitantes seg\u00fan el navegador o la herramienta que dicen estar usando. Esto permite el acceso controlado para herramientas espec\u00edficas mientras se mantienen los controles de seguridad.</p> <pre><code>| Ajuste                     | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                                   |\n| -------------------------- | ----------------- | --------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_USER_AGENT`      |                   | multisite | no       | **Lista Gris de User-Agent:** Lista de patrones de User-Agent (expresi\u00f3n regular PCRE) para incluir en la lista gris, separados por espacios. |\n| `GREYLIST_USER_AGENT_URLS` |                   | multisite | no       | **URLs de Lista Gris de User-Agent:** Lista de URLs que contienen patrones de User-Agent para incluir en la lista gris.                       |\n</code></pre> URI <p>Qu\u00e9 hace esto: Incluye en la lista gris las solicitudes a URLs espec\u00edficas de su sitio. Esto permite el acceso condicional a ciertos puntos finales mientras se mantienen los controles de seguridad.</p> <pre><code>| Ajuste              | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                       |\n| ------------------- | ----------------- | --------- | -------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| `GREYLIST_URI`      |                   | multisite | no       | **Lista Gris de URI:** Lista de patrones de URI (expresi\u00f3n regular PCRE) para incluir en la lista gris, separados por espacios.   |\n| `GREYLIST_URI_URLS` |                   | multisite | no       | **URLs de Lista Gris de URI:** Lista de URLs que contienen patrones de URI para incluir en la lista gris, separadas por espacios. |\n</code></pre> <p>Soporte de Formato de URL</p> <p>Todos los ajustes <code>*_URLS</code> admiten URLs HTTP/HTTPS as\u00ed como rutas de archivos locales usando el prefijo <code>file:///</code>. Se admite la autenticaci\u00f3n b\u00e1sica usando el formato <code>http://usuario:contrase\u00f1a@url</code>.</p> <p>Actualizaciones Regulares</p> <p>Las listas grises de las URLs se descargan y actualizan autom\u00e1ticamente cada hora para asegurar que su protecci\u00f3n se mantenga actualizada con las \u00faltimas fuentes de confianza.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_15","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaConfiguraci\u00f3n AvanzadaUsando Archivos LocalesAcceso Selectivo a la API <p>Una configuraci\u00f3n simple que aplica la lista gris a la red interna y al rastreador de una empresa:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_IP: \"192.168.1.0/24 10.0.0.0/8\"\nGREYLIST_USER_AGENT: \"(?:\\b)CompanyCrawler(?:\\b)\"\n</code></pre> <p>Una configuraci\u00f3n m\u00e1s completa con m\u00faltiples criterios de lista gris:</p> <pre><code>USE_GREYLIST: \"yes\"\n\n# Activos de la empresa y rastreadores aprobados\nGREYLIST_IP: \"192.168.1.0/24 203.0.113.0/24\"\nGREYLIST_RDNS: \".company.com .partner-company.org\"\nGREYLIST_ASN: \"12345 67890\"  # ASNs de la empresa y del socio\nGREYLIST_USER_AGENT: \"(?:\\b)GoodBot(?:\\b) (?:\\b)PartnerCrawler(?:\\b)\"\nGREYLIST_URI: \"^/api/v1/\"\n\n# Fuentes externas de confianza\nGREYLIST_IP_URLS: \"https://example.com/trusted-networks.txt\"\nGREYLIST_USER_AGENT_URLS: \"https://example.com/trusted-crawlers.txt\"\n</code></pre> <p>Configuraci\u00f3n usando archivos locales para las listas grises:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_IP_URLS: \"file:///ruta/a/ip-greylist.txt\"\nGREYLIST_RDNS_URLS: \"file:///ruta/a/rdns-greylist.txt\"\nGREYLIST_ASN_URLS: \"file:///ruta/a/asn-greylist.txt\"\nGREYLIST_USER_AGENT_URLS: \"file:///ruta/a/user-agent-greylist.txt\"\nGREYLIST_URI_URLS: \"file:///ruta/a/uri-greylist.txt\"\n</code></pre> <p>Una configuraci\u00f3n que permite el acceso a puntos finales espec\u00edficos de la API:</p> <pre><code>USE_GREYLIST: \"yes\"\nGREYLIST_URI: \"^/api/v1/public/ ^/api/v1/status\"\nGREYLIST_IP: \"203.0.113.0/24\"  # Red del socio externo\n</code></pre>"},{"location":"es/features/#gzip","title":"Gzip","text":"<p>Compatibilidad con STREAM </p> <p>El complemento GZIP mejora el rendimiento del sitio web al comprimir las respuestas HTTP utilizando el algoritmo GZIP. Esta funci\u00f3n reduce el uso de ancho de banda y mejora los tiempos de carga de la p\u00e1gina al comprimir el contenido web antes de que se env\u00ede al navegador del cliente, lo que resulta en una entrega m\u00e1s r\u00e1pida y una mejor experiencia de usuario.</p>"},{"location":"es/features/#como-funciona","title":"C\u00f3mo funciona","text":"<ol> <li>Cuando un cliente solicita contenido de su sitio web, BunkerWeb comprueba si el cliente admite la compresi\u00f3n GZIP.</li> <li>Si es compatible, BunkerWeb comprime la respuesta utilizando el algoritmo GZIP en el nivel de compresi\u00f3n que haya configurado.</li> <li>El contenido comprimido se env\u00eda al cliente con las cabeceras adecuadas que indican la compresi\u00f3n GZIP.</li> <li>El navegador del cliente descomprime el contenido antes de mostrarlo.</li> <li>Tanto el uso de ancho de banda como los tiempos de carga de la p\u00e1gina se reducen, mejorando el rendimiento general del sitio y la experiencia del usuario.</li> </ol>"},{"location":"es/features/#como-usar_15","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de compresi\u00f3n GZIP:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n GZIP est\u00e1 desactivada por defecto. Habil\u00edtela estableciendo el ajuste <code>USE_GZIP</code> en <code>yes</code>.</li> <li>Configure los tipos MIME: Especifique qu\u00e9 tipos de contenido deben comprimirse utilizando el ajuste <code>GZIP_TYPES</code>.</li> <li>Establezca el tama\u00f1o m\u00ednimo: Defina el tama\u00f1o m\u00ednimo de respuesta requerido para la compresi\u00f3n con el ajuste <code>GZIP_MIN_LENGTH</code> para evitar comprimir archivos peque\u00f1os.</li> <li>Elija un nivel de compresi\u00f3n: Seleccione su equilibrio preferido entre velocidad y tasa de compresi\u00f3n utilizando el ajuste <code>GZIP_COMP_LEVEL</code>.</li> <li>Configure las solicitudes proxy: Especifique qu\u00e9 solicitudes proxy deben comprimirse utilizando el ajuste <code>GZIP_PROXIED</code>.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_16","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_GZIP</code> <code>no</code> multisite no Habilitar GZIP: Establezca en <code>yes</code> para habilitar la compresi\u00f3n GZIP. <code>GZIP_TYPES</code> <code>application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml</code> multisite no Tipos MIME: Lista de tipos de contenido que se comprimir\u00e1n con GZIP. <code>GZIP_MIN_LENGTH</code> <code>1000</code> multisite no Tama\u00f1o M\u00ednimo: El tama\u00f1o m\u00ednimo de respuesta (en bytes) para que se aplique la compresi\u00f3n GZIP. <code>GZIP_COMP_LEVEL</code> <code>5</code> multisite no Nivel de Compresi\u00f3n: Nivel de compresi\u00f3n de 1 (compresi\u00f3n m\u00ednima) a 9 (compresi\u00f3n m\u00e1xima). Los valores m\u00e1s altos consumen m\u00e1s CPU. <code>GZIP_PROXIED</code> <code>no-cache no-store private expired auth</code> multisite no Solicitudes Proxy: Especifica qu\u00e9 solicitudes proxy deben comprimirse seg\u00fan las cabeceras de respuesta. <p>Optimizando el Nivel de Compresi\u00f3n</p> <p>El nivel de compresi\u00f3n por defecto (5) ofrece un buen equilibrio entre la tasa de compresi\u00f3n y el uso de la CPU. Para contenido est\u00e1tico o cuando los recursos de la CPU del servidor son abundantes, considere aumentarlo a 7-9 para una compresi\u00f3n m\u00e1xima. Para contenido din\u00e1mico o cuando los recursos de la CPU son limitados, es posible que desee utilizar 1-3 para una compresi\u00f3n m\u00e1s r\u00e1pida con una reducci\u00f3n de tama\u00f1o razonable.</p> <p>Soporte de Navegadores</p> <p>GZIP es compatible con todos los navegadores modernos y ha sido el m\u00e9todo de compresi\u00f3n est\u00e1ndar para las respuestas HTTP durante muchos a\u00f1os, lo que garantiza una excelente compatibilidad en todos los dispositivos y navegadores.</p> <p>Compresi\u00f3n vs. Uso de CPU</p> <p>Aunque la compresi\u00f3n GZIP reduce el ancho de banda y mejora los tiempos de carga, los niveles de compresi\u00f3n m\u00e1s altos consumen m\u00e1s recursos de la CPU. Para sitios de alto tr\u00e1fico, encuentre el equilibrio adecuado entre la eficiencia de la compresi\u00f3n y el rendimiento del servidor.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_16","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaCompresi\u00f3n M\u00e1ximaRendimiento EquilibradoEnfoque en Contenido Proxy <p>Una configuraci\u00f3n est\u00e1ndar que habilita GZIP con los ajustes por defecto:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json application/xml text/css text/html text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"5\"\n</code></pre> <p>Configuraci\u00f3n optimizada para un ahorro m\u00e1ximo de compresi\u00f3n:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/xml\"\nGZIP_MIN_LENGTH: \"500\"\nGZIP_COMP_LEVEL: \"9\"\nGZIP_PROXIED: \"any\"\n</code></pre> <p>Configuraci\u00f3n que equilibra la tasa de compresi\u00f3n con el uso de la CPU:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript text/plain\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"3\"\nGZIP_PROXIED: \"no-cache no-store private expired\"\n</code></pre> <p>Configuraci\u00f3n que se centra en manejar adecuadamente la compresi\u00f3n para el contenido proxy:</p> <pre><code>USE_GZIP: \"yes\"\nGZIP_TYPES: \"application/javascript application/json text/css text/html text/javascript\"\nGZIP_MIN_LENGTH: \"1000\"\nGZIP_COMP_LEVEL: \"4\"\nGZIP_PROXIED: \"any\"\n</code></pre>"},{"location":"es/features/#html-injection","title":"HTML injection","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Inyecci\u00f3n de HTML le permite agregar sin problemas c\u00f3digo HTML personalizado a las p\u00e1ginas de su sitio web antes de las etiquetas de cierre <code>&lt;/body&gt;</code> o <code>&lt;/head&gt;</code>. Esta funci\u00f3n es particularmente \u00fatil para agregar scripts de an\u00e1lisis, p\u00edxeles de seguimiento, JavaScript personalizado, estilos CSS u otras integraciones de terceros sin modificar el c\u00f3digo fuente de su sitio web.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando se sirve una p\u00e1gina de su sitio web, BunkerWeb examina la respuesta HTML.</li> <li>Si ha configurado la inyecci\u00f3n en el cuerpo (body), BunkerWeb inserta su c\u00f3digo HTML personalizado justo antes de la etiqueta de cierre <code>&lt;/body&gt;</code>.</li> <li>Si ha configurado la inyecci\u00f3n en la cabecera (head), BunkerWeb inserta su c\u00f3digo HTML personalizado justo antes de la etiqueta de cierre <code>&lt;/head&gt;</code>.</li> <li>La inserci\u00f3n se realiza autom\u00e1ticamente para todas las p\u00e1ginas HTML servidas por su sitio web.</li> <li>Esto le permite agregar scripts, estilos u otros elementos sin modificar el c\u00f3digo de su aplicaci\u00f3n.</li> </ol>"},{"location":"es/features/#como-usar_16","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Inyecci\u00f3n de HTML:</p> <ol> <li>Prepare su HTML personalizado: Decida qu\u00e9 c\u00f3digo HTML desea inyectar en sus p\u00e1ginas.</li> <li>Elija las ubicaciones de inyecci\u00f3n: Determine si necesita inyectar c\u00f3digo en la secci\u00f3n <code>&lt;head&gt;</code>, en la secci\u00f3n <code>&lt;body&gt;</code>, o en ambas.</li> <li>Configure los ajustes: Agregue su HTML personalizado a los ajustes apropiados (<code>INJECT_HEAD</code> y/o <code>INJECT_BODY</code>).</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, el HTML se inyectar\u00e1 autom\u00e1ticamente en todas las p\u00e1ginas HTML servidas.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_17","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>INJECT_HEAD</code> multisite no C\u00f3digo HTML de la Cabecera: El c\u00f3digo HTML para inyectar antes de la etiqueta <code>&lt;/head&gt;</code>. <code>INJECT_BODY</code> multisite no C\u00f3digo HTML del Cuerpo: El c\u00f3digo HTML para inyectar antes de la etiqueta <code>&lt;/body&gt;</code>. <p>!!! tip \"Mejores Pr\u00e1cticas\" - Por razones de rendimiento, coloque los archivos de JavaScript al final del cuerpo para evitar el bloqueo del renderizado. - Coloque CSS y JavaScript cr\u00edtico en la secci\u00f3n de la cabecera para evitar un \"destello\" de contenido sin estilo (FOUC). - Tenga cuidado con el contenido inyectado que podr\u00eda potencialmente romper la funcionalidad de su sitio.</p> <p>!!! info \"Casos de Uso Comunes\" - Agregar scripts de an\u00e1lisis (como Google Analytics, Matomo) - Integrar widgets de chat o herramientas de soporte al cliente - Incluir p\u00edxeles de seguimiento para campa\u00f1as de marketing - Agregar estilos CSS personalizados o funcionalidad de JavaScript - Incluir bibliotecas de terceros sin modificar el c\u00f3digo de su aplicaci\u00f3n</p>"},{"location":"es/features/#configuraciones-de-ejemplo_17","title":"Configuraciones de Ejemplo","text":"Google AnalyticsEstilos PersonalizadosM\u00faltiples IntegracionesBanner de Consentimiento de Cookies <p>Agregar el seguimiento de Google Analytics a su sitio web:</p> <pre><code>INJECT_HEAD: \"\"\nINJECT_BODY: \"&lt;script async src=\\\"https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX\\\"&gt;&lt;/script&gt;&lt;script&gt;window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-XXXXXXXXXX');&lt;/script&gt;\"\n</code></pre> <p>Agregar estilos CSS personalizados a su sitio web:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .custom-element { color: blue; }&lt;/style&gt;\"\nINJECT_BODY: \"\"\n</code></pre> <p>Agregar tanto estilos personalizados como JavaScript:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;body { font-family: 'Arial', sans-serif; } .notification-banner { background: #f8f9fa; padding: 10px; text-align: center; }&lt;/style&gt;\"\nINJECT_BODY: \"&lt;script src=\\\"https://cdn.example.com/js/widget.js\\\"&gt;&lt;/script&gt;&lt;script&gt;initializeWidget('your-api-key');&lt;/script&gt;\"\n</code></pre> <p>Agregar un banner simple de consentimiento de cookies:</p> <pre><code>INJECT_HEAD: \"&lt;style&gt;.cookie-banner { position: fixed; bottom: 0; left: 0; right: 0; background: #f1f1f1; padding: 20px; text-align: center; z-index: 1000; } .cookie-banner button { background: #4CAF50; border: none; color: white; padding: 10px 20px; cursor: pointer; }&lt;/style&gt;\"\nINJECT_BODY: \"&lt;div id=\\\"cookie-banner\\\" class=\\\"cookie-banner\\\"&gt;Este sitio web utiliza cookies para garantizar que obtenga la mejor experiencia. &lt;button onclick=\\\"acceptCookies()\\\"&gt;Aceptar&lt;/button&gt;&lt;/div&gt;&lt;script&gt;function acceptCookies() { document.getElementById('cookie-banner').style.display = 'none'; localStorage.setItem('cookies-accepted', 'true'); } if(localStorage.getItem('cookies-accepted') === 'true') { document.getElementById('cookie-banner').style.display = 'none'; }&lt;/script&gt;\"\n</code></pre>"},{"location":"es/features/#headers","title":"Headers","text":"<p>Compatibilidad con STREAM </p> <p>Las cabeceras juegan un papel crucial en la seguridad HTTP. El complemento de Cabeceras proporciona una gesti\u00f3n robusta tanto de cabeceras HTTP est\u00e1ndar como personalizadas, mejorando la seguridad y la funcionalidad. Aplica din\u00e1micamente medidas de seguridad, como HSTS, CSP (incluido un modo de informe), y la inyecci\u00f3n de cabeceras personalizadas, al tiempo que previene la fuga de informaci\u00f3n.</p> <p>C\u00f3mo funciona</p> <ol> <li>Cuando un cliente solicita contenido de su sitio web, BunkerWeb procesa las cabeceras de la respuesta.</li> <li>Se aplican las cabeceras de seguridad de acuerdo con su configuraci\u00f3n.</li> <li>Se pueden a\u00f1adir cabeceras personalizadas para proporcionar informaci\u00f3n o funcionalidad adicional a los clientes.</li> <li>Las cabeceras no deseadas que podr\u00edan revelar informaci\u00f3n del servidor se eliminan autom\u00e1ticamente.</li> <li>Las cookies se modifican para incluir indicadores de seguridad apropiados seg\u00fan sus ajustes.</li> <li>Las cabeceras de los servidores de origen (upstream) se pueden preservar selectivamente cuando sea necesario.</li> </ol>"},{"location":"es/features/#como-usar_17","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Cabeceras:</p> <ol> <li>Configure las cabeceras de seguridad: Establezca valores para las cabeceras comunes.</li> <li>A\u00f1ada cabeceras personalizadas: Defina cualquier cabecera personalizada usando el ajuste <code>CUSTOM_HEADER</code>.</li> <li>Elimine las cabeceras no deseadas: Use <code>REMOVE_HEADERS</code> para asegurarse de que se eliminen las cabeceras que podr\u00edan exponer detalles del servidor.</li> <li>Establezca la seguridad de las cookies: Habilite una seguridad robusta para las cookies configurando <code>COOKIE_FLAGS</code> y estableciendo <code>COOKIE_AUTO_SECURE_FLAG</code> en <code>yes</code> para que el indicador <code>Secure</code> se a\u00f1ada autom\u00e1ticamente en las conexiones HTTPS.</li> <li>Preserve las cabeceras de origen: Especifique qu\u00e9 cabeceras de origen conservar usando <code>KEEP_UPSTREAM_HEADERS</code>.</li> <li>Aproveche la aplicaci\u00f3n condicional de cabeceras: Si desea probar pol\u00edticas sin interrupciones, habilite el modo CSP Report-Only a trav\u00e9s de <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code>.</li> </ol>"},{"location":"es/features/#guia-de-configuracion","title":"Gu\u00eda de Configuraci\u00f3n","text":"Cabeceras de Seguridad <p>Descripci\u00f3n General</p> <p>Las cabeceras de seguridad imponen una comunicaci\u00f3n segura, restringen la carga de recursos y previenen ataques como el clickjacking y la inyecci\u00f3n. Unas cabeceras configuradas correctamente crean una capa defensiva robusta para su sitio web.</p> <p>Beneficios de las Cabeceras de Seguridad</p> <ul> <li>HSTS: Asegura que todas las conexiones est\u00e9n cifradas, protegiendo contra ataques de degradaci\u00f3n de protocolo.</li> <li>CSP: Previene la ejecuci\u00f3n de scripts maliciosos, reduciendo el riesgo de ataques XSS.</li> <li>X-Frame-Options: Bloquea los intentos de clickjacking controlando la incrustaci\u00f3n de iframes.</li> <li>Referrer Policy: Limita la fuga de informaci\u00f3n sensible a trav\u00e9s de las cabeceras de referencia.</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>STRICT_TRANSPORT_SECURITY</code> <code>max-age=63072000; includeSubDomains; preload</code> multisite no HSTS: Impone conexiones HTTPS seguras, reduciendo los riesgos de ataques de intermediario (man-in-the-middle). <code>CONTENT_SECURITY_POLICY</code> <code>object-src 'none'; form-action 'self'; frame-ancestors 'self';</code> multisite no CSP: Restringe la carga de recursos a fuentes de confianza, mitigando los ataques de cross-site scripting e inyecci\u00f3n de datos. <code>CONTENT_SECURITY_POLICY_REPORT_ONLY</code> <code>no</code> multisite no Modo de Informe CSP: Informa de las violaciones sin bloquear el contenido, ayudando a probar las pol\u00edticas de seguridad mientras se capturan los registros. <code>X_FRAME_OPTIONS</code> <code>SAMEORIGIN</code> multisite no X-Frame-Options: Previene el clickjacking controlando si su sitio puede ser enmarcado (framed). <code>X_CONTENT_TYPE_OPTIONS</code> <code>nosniff</code> multisite no X-Content-Type-Options: Evita que los navegadores realicen \"MIME-sniffing\", protegiendo contra ataques de descarga no autorizada (drive-by download). <code>X_DNS_PREFETCH_CONTROL</code> <code>off</code> multisite no X-DNS-Prefetch-Control: Regula la captaci\u00f3n previa de DNS para reducir las solicitudes de red no intencionadas y mejorar la privacidad. <code>REFERRER_POLICY</code> <code>strict-origin-when-cross-origin</code> multisite no Pol\u00edtica de Referencia: Controla la cantidad de informaci\u00f3n de referencia enviada, salvaguardando la privacidad del usuario. <code>PERMISSIONS_POLICY</code> <code>accelerometer=(), ambient-light-sensor=(), attribution-reporting=(), autoplay=(), battery=(), ...</code> multisite no Pol\u00edtica de Permisos: Restringe el acceso a las funciones del navegador, reduciendo los posibles vectores de ataque. <code>KEEP_UPSTREAM_HEADERS</code> <code>Content-Security-Policy Permissions-Policy X-Frame-Options</code> multisite no Conservar Cabeceras: Preserva las cabeceras de origen seleccionadas, ayudando a la integraci\u00f3n con sistemas heredados mientras se mantiene la seguridad. <pre><code>!!! tip \"Mejores Pr\u00e1cticas\"\n    - Revise y actualice regularmente sus cabeceras de seguridad para alinearse con los est\u00e1ndares de seguridad en evoluci\u00f3n.\n    - Use herramientas como [Mozilla Observatory](https://observatory.mozilla.org/) para validar la configuraci\u00f3n de sus cabeceras.\n    - Pruebe el CSP en modo `Report-Only` antes de aplicarlo para evitar romper la funcionalidad.\n</code></pre> Configuraci\u00f3n de Cookies <p>Descripci\u00f3n General</p> <p>Una configuraci\u00f3n adecuada de las cookies garantiza sesiones de usuario seguras al prevenir el secuestro, la fijaci\u00f3n y el cross-site scripting. Las cookies seguras mantienen la integridad de la sesi\u00f3n sobre HTTPS y mejoran la protecci\u00f3n general de los datos del usuario.</p> <p>Beneficios de las Cookies Seguras</p> <ul> <li>Indicador HttpOnly: Evita que los scripts del lado del cliente accedan a las cookies, mitigando los riesgos de XSS.</li> <li>Indicador SameSite: Reduce los ataques CSRF al restringir el uso de cookies entre diferentes or\u00edgenes.</li> <li>Indicador Secure: Asegura que las cookies se transmitan solo a trav\u00e9s de conexiones HTTPS cifradas.</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>COOKIE_FLAGS</code> <code>* HttpOnly SameSite=Lax</code> multisite yes Indicadores de Cookie: A\u00f1ade autom\u00e1ticamente indicadores de seguridad como HttpOnly y SameSite, protegiendo las cookies del acceso de scripts del lado del cliente y de ataques CSRF. <code>COOKIE_AUTO_SECURE_FLAG</code> <code>yes</code> multisite no Indicador Secure Autom\u00e1tico: Asegura que las cookies solo se env\u00eden a trav\u00e9s de conexiones HTTPS seguras a\u00f1adiendo autom\u00e1ticamente el indicador Secure. <pre><code>!!! tip \"Mejores Pr\u00e1cticas\"\n    - Use `SameSite=Strict` para cookies sensibles para prevenir el acceso entre or\u00edgenes.\n    - Audite regularmente la configuraci\u00f3n de sus cookies para asegurar el cumplimiento con las regulaciones de seguridad y privacidad.\n    - Evite establecer cookies sin el indicador `Secure` en entornos de producci\u00f3n.\n</code></pre> Cabeceras Personalizadas <p>Descripci\u00f3n General</p> <p>Las cabeceras personalizadas le permiten a\u00f1adir cabeceras HTTP espec\u00edficas para cumplir con los requisitos de la aplicaci\u00f3n o el rendimiento. Ofrecen flexibilidad pero deben configurarse con cuidado para evitar exponer detalles sensibles del servidor.</p> <p>Beneficios de las Cabeceras Personalizadas</p> <ul> <li>Mejore la seguridad eliminando cabeceras innecesarias que puedan filtrar detalles del servidor.</li> <li>A\u00f1ada cabeceras espec\u00edficas de la aplicaci\u00f3n para mejorar la funcionalidad o la depuraci\u00f3n.</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>CUSTOM_HEADER</code> multisite yes Cabecera Personalizada: Proporciona un medio para a\u00f1adir cabeceras definidas por el usuario en el formato <code>NombreCabecera: ValorCabecera</code> para mejoras especializadas de seguridad o rendimiento. <code>REMOVE_HEADERS</code> <code>Server Expect-CT X-Powered-By X-AspNet-Version X-AspNetMvc-Version Public-Key-Pins</code> multisite no Eliminar Cabeceras: Especifica las cabeceras a eliminar, disminuyendo la posibilidad de exponer detalles internos del servidor y vulnerabilidades conocidas. <pre><code>!!! warning \"Consideraciones de Seguridad\"\n    - Evite exponer informaci\u00f3n sensible a trav\u00e9s de cabeceras personalizadas.\n    - Revise y actualice regularmente las cabeceras personalizadas para alinearlas con los requisitos de su aplicaci\u00f3n.\n\n!!! tip \"Mejores Pr\u00e1cticas\"\n    - Use `REMOVE_HEADERS` para eliminar cabeceras como `Server` y `X-Powered-By` para reducir los riesgos de \"fingerprinting\" (identificaci\u00f3n del servidor).\n    - Pruebe las cabeceras personalizadas en un entorno de preproducci\u00f3n (staging) antes de desplegarlas en producci\u00f3n.\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_18","title":"Configuraciones de Ejemplo","text":"Cabeceras de Seguridad B\u00e1sicasSeguridad de Cookies MejoradaCabeceras Personalizadas para APIContent Security Policy - Modo de Informe <p>Una configuraci\u00f3n est\u00e1ndar con cabeceras de seguridad esenciales:</p> <pre><code>STRICT_TRANSPORT_SECURITY: \"max-age=63072000; includeSubDomains; preload\"\nCONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self'; object-src 'none'; frame-ancestors 'self'\"\nX_FRAME_OPTIONS: \"SAMEORIGIN\"\nX_CONTENT_TYPE_OPTIONS: \"nosniff\"\nREFERRER_POLICY: \"strict-origin-when-cross-origin\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version\"\n</code></pre> <p>Configuraci\u00f3n con ajustes robustos de seguridad para cookies:</p> <pre><code>COOKIE_FLAGS: \"* HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_2: \"session_cookie Secure HttpOnly SameSite=Strict\"\nCOOKIE_FLAGS_3: \"auth_cookie Secure HttpOnly SameSite=Strict Max-Age=3600\"\nCOOKIE_AUTO_SECURE_FLAG: \"yes\"\n</code></pre> <p>Configuraci\u00f3n para un servicio de API con cabeceras personalizadas:</p> <pre><code>CUSTOM_HEADER: \"API-Version: 1.2.3\"\nCUSTOM_HEADER_2: \"Access-Control-Max-Age: 86400\"\nCONTENT_SECURITY_POLICY: \"default-src 'none'; frame-ancestors 'none'\"\nREMOVE_HEADERS: \"Server X-Powered-By X-AspNet-Version X-Runtime\"\n</code></pre> <p>Configuraci\u00f3n para probar CSP sin romper la funcionalidad:</p> <pre><code>CONTENT_SECURITY_POLICY: \"default-src 'self'; script-src 'self' https://trusted-cdn.example.com; img-src 'self' data: https://*.example.com; style-src 'self' 'unsafe-inline' https://trusted-cdn.example.com; connect-src 'self' https://api.example.com; object-src 'none'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; report-uri https://example.com/csp-reports\"\nCONTENT_SECURITY_POLICY_REPORT_ONLY: \"yes\"\n</code></pre>"},{"location":"es/features/#lets-encrypt","title":"Let's Encrypt","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Let's Encrypt simplifica la gesti\u00f3n de certificados SSL/TLS al automatizar la creaci\u00f3n, renovaci\u00f3n y configuraci\u00f3n de certificados gratuitos de Let's Encrypt. Esta funci\u00f3n permite conexiones HTTPS seguras para sus sitios web sin la complejidad de la gesti\u00f3n manual de certificados, reduciendo tanto los costos como la sobrecarga administrativa.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando est\u00e1 habilitado, BunkerWeb detecta autom\u00e1ticamente los dominios configurados para su sitio web.</li> <li>BunkerWeb solicita certificados SSL/TLS gratuitos a la autoridad de certificaci\u00f3n de Let's Encrypt.</li> <li>La propiedad del dominio se verifica mediante desaf\u00edos HTTP (demostrando que usted controla el sitio web) o desaf\u00edos DNS (demostrando que usted controla el DNS de su dominio).</li> <li>Los certificados se instalan y configuran autom\u00e1ticamente para sus dominios.</li> <li>BunkerWeb se encarga de las renovaciones de certificados en segundo plano antes de su vencimiento, garantizando la disponibilidad continua de HTTPS.</li> <li>Todo el proceso est\u00e1 totalmente automatizado, requiriendo una intervenci\u00f3n m\u00ednima despu\u00e9s de la configuraci\u00f3n inicial.</li> </ol> <p>Requisitos previos</p> <p>Para utilizar esta funci\u00f3n, aseg\u00farese de que los registros A de DNS adecuados est\u00e9n configurados para cada dominio, apuntando a la(s) IP(s) p\u00fablica(s) donde BunkerWeb es accesible. Sin una configuraci\u00f3n de DNS correcta, el proceso de verificaci\u00f3n del dominio fallar\u00e1.</p>"},{"location":"es/features/#como-usar_18","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Let's Encrypt:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>AUTO_LETS_ENCRYPT</code> en <code>yes</code> para habilitar la emisi\u00f3n y renovaci\u00f3n autom\u00e1tica de certificados.</li> <li>Proporcione un correo electr\u00f3nico de contacto: Ingrese su direcci\u00f3n de correo electr\u00f3nico utilizando el ajuste <code>EMAIL_LETS_ENCRYPT</code> para recibir notificaciones importantes sobre sus certificados.</li> <li>Elija el tipo de desaf\u00edo: Seleccione la verificaci\u00f3n <code>http</code> o <code>dns</code> con el ajuste <code>LETS_ENCRYPT_CHALLENGE</code>.</li> <li>Configure el proveedor de DNS: Si utiliza desaf\u00edos DNS, especifique su proveedor de DNS y sus credenciales.</li> <li>Seleccione el perfil del certificado: Elija su perfil de certificado preferido utilizando el ajuste <code>LETS_ENCRYPT_PROFILE</code> (classic, tlsserver o shortlived).</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, los certificados se emiten, instalan y renuevan autom\u00e1ticamente seg\u00fan sea necesario.</li> </ol> <p>Perfiles de Certificado</p> <p>Let's Encrypt proporciona diferentes perfiles de certificado para diferentes casos de uso: - classic: Certificados de prop\u00f3sito general con una validez de 90 d\u00edas (predeterminado) - tlsserver: Optimizado para la autenticaci\u00f3n de servidores TLS con una validez de 90 d\u00edas y una carga \u00fatil m\u00e1s peque\u00f1a - shortlived: Seguridad mejorada con una validez de 7 d\u00edas para entornos automatizados - custom: Si su servidor ACME admite un perfil diferente, config\u00farelo usando <code>LETS_ENCRYPT_CUSTOM_PROFILE</code>.</p> <p>Disponibilidad del Perfil</p> <p>Tenga en cuenta que los perfiles <code>tlsserver</code> y <code>shortlived</code> pueden no estar disponibles en todos los entornos o con todos los clientes ACME en este momento. El perfil <code>classic</code> tiene la compatibilidad m\u00e1s amplia y se recomienda para la mayor\u00eda de los usuarios. Si un perfil seleccionado no est\u00e1 disponible, el sistema volver\u00e1 autom\u00e1ticamente al perfil <code>classic</code>.</p>"},{"location":"es/features/#ajustes-de-configuracion_18","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>AUTO_LETS_ENCRYPT</code> <code>no</code> multisite no Habilitar Let's Encrypt: Establezca en <code>yes</code> para habilitar la emisi\u00f3n y renovaci\u00f3n autom\u00e1tica de certificados. <code>LETS_ENCRYPT_PASSTHROUGH</code> <code>no</code> multisite no Pasar a trav\u00e9s de Let's Encrypt: Establezca en <code>yes</code> para pasar las solicitudes de Let's Encrypt al servidor web. Esto es \u00fatil cuando BunkerWeb est\u00e1 detr\u00e1s de otro proxy inverso que maneja SSL. <code>EMAIL_LETS_ENCRYPT</code> <code>contact@{FIRST_SERVER}</code> multisite no Correo electr\u00f3nico de contacto: Direcci\u00f3n de correo electr\u00f3nico que se utiliza para las notificaciones de Let's Encrypt y se incluye en los certificados. <code>LETS_ENCRYPT_CHALLENGE</code> <code>http</code> multisite no Tipo de desaf\u00edo: M\u00e9todo utilizado para verificar la propiedad del dominio. Opciones: <code>http</code> o <code>dns</code>. <code>LETS_ENCRYPT_DNS_PROVIDER</code> multisite no Proveedor de DNS: Cuando se utilizan desaf\u00edos DNS, el proveedor de DNS a utilizar (por ejemplo, cloudflare, route53, digitalocean). <code>LETS_ENCRYPT_DNS_PROPAGATION</code> <code>default</code> multisite no Propagaci\u00f3n de DNS: El tiempo de espera para la propagaci\u00f3n de DNS en segundos. Si no se proporciona ning\u00fan valor, se utiliza el tiempo de propagaci\u00f3n predeterminado del proveedor. <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> multisite yes Elemento de credencial: Elementos de configuraci\u00f3n para la autenticaci\u00f3n del proveedor de DNS (por ejemplo, <code>cloudflare_api_token 123456</code>). Los valores pueden ser texto sin formato, codificados en base64 o un objeto JSON. <code>USE_LETS_ENCRYPT_WILDCARD</code> <code>no</code> multisite no Certificados comod\u00edn: Cuando se establece en <code>yes</code>, crea certificados comod\u00edn para todos los dominios. Solo disponible con desaf\u00edos DNS. <code>USE_LETS_ENCRYPT_STAGING</code> <code>no</code> multisite no Usar entorno de prueba: Cuando se establece en <code>yes</code>, utiliza el entorno de prueba de Let's Encrypt para realizar pruebas. El entorno de prueba tiene l\u00edmites de velocidad m\u00e1s altos pero produce certificados que no son de confianza para los navegadores. <code>LETS_ENCRYPT_CLEAR_OLD_CERTS</code> <code>no</code> global no Limpiar certificados antiguos: Cuando se establece en <code>yes</code>, elimina los certificados antiguos que ya no son necesarios durante la renovaci\u00f3n. <code>LETS_ENCRYPT_PROFILE</code> <code>classic</code> multisite no Perfil de certificado: Seleccione el perfil de certificado a utilizar. Opciones: <code>classic</code> (prop\u00f3sito general), <code>tlsserver</code> (optimizado para servidores TLS) o <code>shortlived</code> (certificados de 7 d\u00edas). <code>LETS_ENCRYPT_CUSTOM_PROFILE</code> multisite no Perfil de certificado personalizado: Ingrese un perfil de certificado personalizado si su servidor ACME admite perfiles no est\u00e1ndar. Esto anula <code>LETS_ENCRYPT_PROFILE</code> si est\u00e1 configurado. <code>LETS_ENCRYPT_MAX_RETRIES</code> <code>3</code> multisite no M\u00e1ximo de reintentos: N\u00famero de veces que se reintentar\u00e1 la generaci\u00f3n de certificados en caso de fallo. Establezca en <code>0</code> para deshabilitar los reintentos. \u00datil para manejar problemas de red temporales o l\u00edmites de velocidad de la API. <p>!!! info \"Informaci\u00f3n y comportamiento\" - El ajuste <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code> es un ajuste m\u00faltiple y se puede utilizar para establecer varios elementos para el proveedor de DNS. Los elementos se guardar\u00e1n como un archivo de cach\u00e9, y Certbot leer\u00e1 las credenciales de \u00e9l. - Si no se proporciona ning\u00fan ajuste <code>LETS_ENCRYPT_DNS_PROPAGATION</code>, se utiliza el tiempo de propagaci\u00f3n predeterminado del proveedor. - La automatizaci\u00f3n completa de Let's Encrypt utilizando el desaf\u00edo <code>http</code> funciona en modo de flujo (stream) siempre que abra el puerto <code>80/tcp</code> desde el exterior. Utilice el ajuste <code>LISTEN_STREAM_PORT_SSL</code> para elegir su puerto de escucha SSL/TLS. - Si <code>LETS_ENCRYPT_PASSTHROUGH</code> se establece en <code>yes</code>, BunkerWeb no manejar\u00e1 las solicitudes de desaf\u00edo ACME por s\u00ed mismo, sino que las pasar\u00e1 al servidor web de backend. Esto es \u00fatil en escenarios donde BunkerWeb act\u00faa como un proxy inverso frente a otro servidor que est\u00e1 configurado para manejar los desaf\u00edos de Let's Encrypt.</p> <p>Desaf\u00edos HTTP vs. DNS</p> <p>Los desaf\u00edos HTTP son m\u00e1s f\u00e1ciles de configurar y funcionan bien para la mayor\u00eda de los sitios web:</p> <pre><code>- Requiere que su sitio web sea accesible p\u00fablicamente en el puerto 80\n- Configurado autom\u00e1ticamente por BunkerWeb\n- No se puede utilizar para certificados comod\u00edn\n\n**Los desaf\u00edos DNS** ofrecen m\u00e1s flexibilidad y son necesarios para los certificados comod\u00edn:\n\n- Funciona incluso cuando su sitio web no es accesible p\u00fablicamente\n- Requiere credenciales de la API del proveedor de DNS\n- Requerido para certificados comod\u00edn (por ejemplo, *.example.com)\n- \u00datil cuando el puerto 80 est\u00e1 bloqueado o no est\u00e1 disponible\n</code></pre> <p>Certificados comod\u00edn</p> <p>Los certificados comod\u00edn solo est\u00e1n disponibles con desaf\u00edos DNS. Si desea utilizarlos, debe establecer el ajuste <code>USE_LETS_ENCRYPT_WILDCARD</code> en <code>yes</code> y configurar correctamente las credenciales de su proveedor de DNS.</p> <p>L\u00edmites de velocidad</p> <p>Let's Encrypt impone l\u00edmites de velocidad en la emisi\u00f3n de certificados. Al probar las configuraciones, utilice el entorno de prueba estableciendo <code>USE_LETS_ENCRYPT_STAGING</code> en <code>yes</code> para evitar alcanzar los l\u00edmites de velocidad de producci\u00f3n. Los certificados de prueba no son de confianza para los navegadores, pero son \u00fatiles para validar su configuraci\u00f3n.</p>"},{"location":"es/features/#proveedores-de-dns-compatibles","title":"Proveedores de DNS compatibles","text":"<p>El complemento de Let's Encrypt admite una amplia gama de proveedores de DNS para los desaf\u00edos de DNS. Cada proveedor requiere credenciales espec\u00edficas que deben proporcionarse utilizando el ajuste <code>LETS_ENCRYPT_DNS_CREDENTIAL_ITEM</code>.</p> Proveedor Descripci\u00f3n Ajustes obligatorios Ajustes opcionales Documentaci\u00f3n <code>bunny</code> bunny.net <code>api_key</code> Documentaci\u00f3n <code>cloudflare</code> Cloudflare ya sea <code>api_token</code>o <code>email</code> y <code>api_key</code> Documentaci\u00f3n <code>desec</code> deSEC <code>token</code> Documentaci\u00f3n <code>digitalocean</code> DigitalOcean <code>token</code> Documentaci\u00f3n <code>domainoffensive</code> Domain-Offensive <code>api_token</code> Documentaci\u00f3n <code>dnsimple</code> DNSimple <code>token</code> Documentaci\u00f3n <code>dnsmadeeasy</code> DNS Made Easy <code>api_key</code><code>secret_key</code> Documentaci\u00f3n <code>dynu</code> Dynu <code>auth_token</code> Documentaci\u00f3n <code>gehirn</code> Gehirn DNS <code>api_token</code><code>api_secret</code> Documentaci\u00f3n <code>google</code> Google Cloud <code>project_id</code><code>private_key_id</code><code>private_key</code><code>client_email</code><code>client_id</code><code>client_x509_cert_url</code> <code>type</code> (predeterminado: <code>service_account</code>)<code>auth_uri</code> (predeterminado: <code>https://accounts.google.com/o/oauth2/auth</code>)<code>token_uri</code> (predeterminado: <code>https://accounts.google.com/o/oauth2/token</code>)<code>auth_provider_x509_cert_url</code> (predeterminado: <code>https://www.googleapis.com/oauth2/v1/certs</code>) Documentaci\u00f3n <code>infomaniak</code> Infomaniak <code>token</code> Documentaci\u00f3n <code>ionos</code> IONOS <code>prefix</code><code>secret</code> <code>endpoint</code> (predeterminado: <code>https://api.hosting.ionos.com</code>) Documentaci\u00f3n <code>linode</code> Linode <code>key</code> Documentaci\u00f3n <code>luadns</code> LuaDNS <code>email</code><code>token</code> Documentaci\u00f3n <code>njalla</code> Njalla <code>token</code> Documentaci\u00f3n <code>nsone</code> NS1 <code>api_key</code> Documentaci\u00f3n <code>ovh</code> OVH <code>application_key</code><code>application_secret</code><code>consumer_key</code> <code>endpoint</code> (predeterminado: <code>ovh-eu</code>) Documentaci\u00f3n <code>rfc2136</code> RFC 2136 <code>server</code><code>name</code><code>secret</code> <code>port</code> (predeterminado: <code>53</code>)<code>algorithm</code> (predeterminado: <code>HMAC-SHA512</code>)<code>sign_query</code> (predeterminado: <code>false</code>) Documentaci\u00f3n <code>route53</code> Amazon Route 53 <code>access_key_id</code><code>secret_access_key</code> Documentaci\u00f3n <code>sakuracloud</code> Sakura Cloud <code>api_token</code><code>api_secret</code> Documentaci\u00f3n <code>scaleway</code> Scaleway <code>application_token</code> Documentaci\u00f3n"},{"location":"es/features/#configuraciones-de-ejemplo_19","title":"Configuraciones de Ejemplo","text":"Desaf\u00edo HTTP B\u00e1sicoDNS de Cloudflare con Comod\u00ednConfiguraci\u00f3n de AWS Route53Pruebas con el Entorno de Prueba y ReintentosDigitalOcean con Tiempo de Propagaci\u00f3n PersonalizadoDNS de Google Cloud <p>Configuraci\u00f3n simple que utiliza desaf\u00edos HTTP para un solo dominio:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\n</code></pre> <p>Configuraci\u00f3n para certificados comod\u00edn utilizando el DNS de Cloudflare:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"cloudflare\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"api_token SU_TOKEN_DE_API\"\nUSE_LETS_ENCRYPT_WILDCARD: \"yes\"\n</code></pre> <p>Configuraci\u00f3n que utiliza Amazon Route53 para los desaf\u00edos de DNS:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"route53\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"aws_access_key_id SU_CLAVE_DE_ACCESO\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"aws_secret_access_key SU_CLAVE_SECRETA\"\n</code></pre> <p>Configuraci\u00f3n para probar la configuraci\u00f3n con el entorno de prueba y ajustes de reintento mejorados:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"http\"\nUSE_LETS_ENCRYPT_STAGING: \"yes\"\nLETS_ENCRYPT_MAX_RETRIES: \"5\"\n</code></pre> <p>Configuraci\u00f3n que utiliza el DNS de DigitalOcean con un tiempo de espera de propagaci\u00f3n m\u00e1s largo:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"digitalocean\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"token SU_TOKEN_DE_API\"\nLETS_ENCRYPT_DNS_PROPAGATION: \"120\"\n</code></pre> <p>Configuraci\u00f3n que utiliza el DNS de Google Cloud con credenciales de cuenta de servicio:</p> <pre><code>AUTO_LETS_ENCRYPT: \"yes\"\nEMAIL_LETS_ENCRYPT: \"admin@example.com\"\nLETS_ENCRYPT_CHALLENGE: \"dns\"\nLETS_ENCRYPT_DNS_PROVIDER: \"google\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM: \"project_id su-id-de-proyecto\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_2: \"private_key_id su-id-de-clave-privada\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_3: \"private_key su-clave-privada\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_4: \"client_email su-correo-de-cuenta-de-servicio\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_5: \"client_id su-id-de-cliente\"\nLETS_ENCRYPT_DNS_CREDENTIAL_ITEM_6: \"client_x509_cert_url su-url-de-certificado\"\n</code></pre>"},{"location":"es/features/#limit","title":"Limit","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de L\u00edmite en BunkerWeb proporciona capacidades robustas para aplicar pol\u00edticas de limitaci\u00f3n en su sitio web, asegurando un uso justo y protegiendo sus recursos del abuso, ataques de denegaci\u00f3n de servicio y consumo excesivo de recursos. Estas pol\u00edticas incluyen:</p> <ul> <li>N\u00famero de conexiones por direcci\u00f3n IP (soporte para STREAM )</li> <li>N\u00famero de solicitudes por direcci\u00f3n IP y URL dentro de un per\u00edodo de tiempo espec\u00edfico (soporte para STREAM )</li> </ul>"},{"location":"es/features/#como-funciona_1","title":"C\u00f3mo funciona","text":"<ol> <li>Limitaci\u00f3n de Tasa de Solicitudes: Rastrea el n\u00famero de solicitudes de cada direcci\u00f3n IP del cliente a URL espec\u00edficas. Si un cliente excede el l\u00edmite de tasa configurado, las solicitudes posteriores son denegadas temporalmente.</li> <li>Limitaci\u00f3n de Conexiones: Monitorea y restringe el n\u00famero de conexiones concurrentes de cada direcci\u00f3n IP del cliente. Se pueden aplicar diferentes l\u00edmites de conexi\u00f3n seg\u00fan el protocolo utilizado (HTTP/1, HTTP/2, HTTP/3 o stream).</li> <li>En ambos casos, los clientes que exceden los l\u00edmites definidos reciben un c\u00f3digo de estado HTTP \"429 - Demasiadas Solicitudes\", lo que ayuda a prevenir la sobrecarga del servidor.</li> </ol>"},{"location":"es/features/#pasos-para-usar","title":"Pasos para usar","text":"<ol> <li>Habilitar la Limitaci\u00f3n de Tasa de Solicitudes: Use <code>USE_LIMIT_REQ</code> para habilitar la limitaci\u00f3n de tasa de solicitudes y defina patrones de URL junto con sus correspondientes l\u00edmites de tasa.</li> <li>Habilitar la Limitaci\u00f3n de Conexiones: Use <code>USE_LIMIT_CONN</code> para habilitar la limitaci\u00f3n de conexiones y establezca el n\u00famero m\u00e1ximo de conexiones concurrentes para diferentes protocolos.</li> <li>Aplicar Control Granular: Cree m\u00faltiples reglas de l\u00edmite de tasa para diferentes URL para proporcionar diferentes niveles de protecci\u00f3n en su sitio.</li> <li>Monitorear la Efectividad: Use la interfaz de usuario web para ver estad\u00edsticas sobre las solicitudes y conexiones limitadas.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_19","title":"Ajustes de Configuraci\u00f3n","text":"Limitaci\u00f3n de Tasa de SolicitudesLimitaci\u00f3n de Conexiones Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_LIMIT_REQ</code> <code>yes</code> multisite no Habilitar Limitaci\u00f3n de Solicitudes: Establezca en <code>yes</code> para habilitar la funci\u00f3n de limitaci\u00f3n de tasa de solicitudes. <code>LIMIT_REQ_URL</code> <code>/</code> multisite yes Patr\u00f3n de URL: Patr\u00f3n de URL (expresi\u00f3n regular PCRE) al que se aplicar\u00e1 el l\u00edmite de tasa; use <code>/</code> para aplicar a todas las solicitudes. <code>LIMIT_REQ_RATE</code> <code>2r/s</code> multisite yes L\u00edmite de Tasa: Tasa m\u00e1xima de solicitudes en el formato <code>Nr/t</code>, donde N es el n\u00famero de solicitudes y t es la unidad de tiempo: s (segundo), m (minuto), h (hora) o d (d\u00eda). <p>Formato de Limitaci\u00f3n de Tasa</p> <p>El formato del l\u00edmite de tasa se especifica como <code>Nr/t</code> donde:</p> <ul> <li><code>N</code> es el n\u00famero de solicitudes permitidas</li> <li><code>r</code> es una 'r' literal (para 'solicitudes')</li> <li><code>/</code> es una barra literal</li> <li><code>t</code> es la unidad de tiempo: <code>s</code> (segundo), <code>m</code> (minuto), <code>h</code> (hora) o <code>d</code> (d\u00eda)</li> </ul> <p>Por ejemplo, <code>5r/m</code> significa que se permiten 5 solicitudes por minuto desde cada direcci\u00f3n IP.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_LIMIT_CONN</code> <code>yes</code> multisite no Habilitar Limitaci\u00f3n de Conexiones: Establezca en <code>yes</code> para habilitar la funci\u00f3n de limitaci\u00f3n de conexiones. <code>LIMIT_CONN_MAX_HTTP1</code> <code>10</code> multisite no Conexiones HTTP/1.X: N\u00famero m\u00e1ximo de conexiones HTTP/1.X concurrentes por direcci\u00f3n IP. <code>LIMIT_CONN_MAX_HTTP2</code> <code>100</code> multisite no Flujos HTTP/2: N\u00famero m\u00e1ximo de flujos HTTP/2 concurrentes por direcci\u00f3n IP. <code>LIMIT_CONN_MAX_HTTP3</code> <code>100</code> multisite no Flujos HTTP/3: N\u00famero m\u00e1ximo de flujos HTTP/3 concurrentes por direcci\u00f3n IP. <code>LIMIT_CONN_MAX_STREAM</code> <code>10</code> multisite no Conexiones de Flujo: N\u00famero m\u00e1ximo de conexiones de flujo concurrentes por direcci\u00f3n IP. <p>!!! info \"Limitaci\u00f3n de Conexiones vs. Solicitudes\" - La limitaci\u00f3n de conexiones restringe el n\u00famero de conexiones simult\u00e1neas que una sola direcci\u00f3n IP puede mantener. - La limitaci\u00f3n de tasa de solicitudes restringe el n\u00famero de solicitudes que una direcci\u00f3n IP puede hacer dentro de un per\u00edodo de tiempo definido.</p> <pre><code>El uso de ambos m\u00e9todos proporciona una protecci\u00f3n completa contra varios tipos de abuso.\n</code></pre> <p>Estableciendo L\u00edmites Apropiados</p> <p>Establecer l\u00edmites demasiado restrictivos puede afectar a los usuarios leg\u00edtimos, especialmente para HTTP/2 y HTTP/3, donde los navegadores a menudo usan m\u00faltiples flujos. Los valores predeterminados est\u00e1n equilibrados para la mayor\u00eda de los casos de uso, pero considere ajustarlos seg\u00fan las necesidades de su aplicaci\u00f3n y el comportamiento del usuario.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_20","title":"Configuraciones de Ejemplo","text":"Protecci\u00f3n B\u00e1sicaProtegiendo Puntos Finales Espec\u00edficosConfiguraci\u00f3n para un Sitio de Alto Tr\u00e1ficoConfiguraci\u00f3n para un Servidor API <p>Una configuraci\u00f3n simple que utiliza los ajustes predeterminados para proteger todo su sitio:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"2r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Configuraci\u00f3n con diferentes l\u00edmites de tasa para varios puntos finales:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Regla predeterminada para todas las solicitudes\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"10r/s\"\n\n# L\u00edmite m\u00e1s estricto para la p\u00e1gina de inicio de sesi\u00f3n\nLIMIT_REQ_URL_2: \"^/login\"\nLIMIT_REQ_RATE_2: \"1r/s\"\n\n# L\u00edmite m\u00e1s estricto para la API\nLIMIT_REQ_URL_3: \"^/api/\"\nLIMIT_REQ_RATE_3: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"10\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"10\"\n</code></pre> <p>Configuraci\u00f3n ajustada para sitios de alto tr\u00e1fico con l\u00edmites m\u00e1s permisivos:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# L\u00edmite general\nLIMIT_REQ_URL: \"/\"\nLIMIT_REQ_RATE: \"30r/s\"\n\n# Protecci\u00f3n del \u00e1rea de administraci\u00f3n\nLIMIT_REQ_URL_2: \"^/admin/\"\nLIMIT_REQ_RATE_2: \"5r/s\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"50\"\nLIMIT_CONN_MAX_HTTP2: \"200\"\nLIMIT_CONN_MAX_HTTP3: \"200\"\nLIMIT_CONN_MAX_STREAM: \"30\"\n</code></pre> <p>Configuraci\u00f3n optimizada para un servidor API con l\u00edmites de tasa expresados en solicitudes por minuto:</p> <pre><code>USE_LIMIT_REQ: \"yes\"\n\n# Puntos finales de la API p\u00fablica\nLIMIT_REQ_URL: \"^/api/public/\"\nLIMIT_REQ_RATE: \"120r/m\"\n\n# Puntos finales de la API privada\nLIMIT_REQ_URL_2: \"^/api/private/\"\nLIMIT_REQ_RATE_2: \"300r/m\"\n\n# Punto final de autenticaci\u00f3n\nLIMIT_REQ_URL_3: \"^/api/auth\"\nLIMIT_REQ_RATE_3: \"10r/m\"\n\nUSE_LIMIT_CONN: \"yes\"\nLIMIT_CONN_MAX_HTTP1: \"20\"\nLIMIT_CONN_MAX_HTTP2: \"100\"\nLIMIT_CONN_MAX_HTTP3: \"100\"\nLIMIT_CONN_MAX_STREAM: \"20\"\n</code></pre>"},{"location":"es/features/#load-balancer-pro","title":"Load Balancer  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Provides load balancing feature to group of upstreams with optional healthchecks.</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>LOADBALANCER_HEALTHCHECK_DICT_SIZE</code> <code>10m</code> global no Shared dict size (datastore for all healthchecks). <code>LOADBALANCER_UPSTREAM_NAME</code> global s\u00ed Name of the upstream (used in REVERSE_PROXY_HOST). <code>LOADBALANCER_UPSTREAM_SERVERS</code> global s\u00ed List of servers/IPs in the server group. <code>LOADBALANCER_UPSTREAM_MODE</code> <code>round-robin</code> global s\u00ed Load balancing mode (round-robin or sticky). <code>LOADBALANCER_UPSTREAM_STICKY_METHOD</code> <code>ip</code> global s\u00ed Sticky session method (ip or cookie). <code>LOADBALANCER_UPSTREAM_RESOLVE</code> <code>no</code> global s\u00ed Dynamically resolve upstream hostnames. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIMEOUT</code> <code>60s</code> global s\u00ed Keepalive timeout for upstream connections. <code>LOADBALANCER_UPSTREAM_KEEPALIVE_TIME</code> <code>1h</code> global s\u00ed Keepalive time for upstream connections. <code>LOADBALANCER_HEALTHCHECK_URL</code> <code>/status</code> global s\u00ed The healthcheck URL. <code>LOADBALANCER_HEALTHCHECK_INTERVAL</code> <code>2000</code> global s\u00ed Healthcheck interval in milliseconds. <code>LOADBALANCER_HEALTHCHECK_TIMEOUT</code> <code>1000</code> global s\u00ed Healthcheck timeout in milliseconds. <code>LOADBALANCER_HEALTHCHECK_FALL</code> <code>3</code> global s\u00ed Number of failed healthchecks before marking the server as down. <code>LOADBALANCER_HEALTHCHECK_RISE</code> <code>1</code> global s\u00ed Number of successful healthchecks before marking the server as up. <code>LOADBALANCER_HEALTHCHECK_VALID_STATUSES</code> <code>200</code> global s\u00ed HTTP status considered valid in healthchecks. <code>LOADBALANCER_HEALTHCHECK_CONCURRENCY</code> <code>10</code> global s\u00ed Maximum number of concurrent healthchecks. <code>LOADBALANCER_HEALTHCHECK_TYPE</code> <code>http</code> global s\u00ed Type of healthcheck (http or https). <code>LOADBALANCER_HEALTHCHECK_SSL_VERIFY</code> <code>yes</code> global s\u00ed Verify SSL certificate in healthchecks. <code>LOADBALANCER_HEALTHCHECK_HOST</code> global s\u00ed Host header for healthchecks (useful for HTTPS)."},{"location":"es/features/#metrics","title":"Metrics","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de M\u00e9tricas proporciona capacidades completas de monitoreo y recolecci\u00f3n de datos para su instancia de BunkerWeb. Esta funci\u00f3n le permite rastrear varios indicadores de rendimiento, eventos de seguridad y estad\u00edsticas del sistema, brind\u00e1ndole informaci\u00f3n valiosa sobre el comportamiento y la salud de sus sitios web y servicios protegidos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>BunkerWeb recopila m\u00e9tricas clave durante el procesamiento de solicitudes y respuestas.</li> <li>Estas m\u00e9tricas incluyen contadores de solicitudes bloqueadas, mediciones de rendimiento y varias estad\u00edsticas relacionadas con la seguridad.</li> <li>Los datos se almacenan de manera eficiente en la memoria, con l\u00edmites configurables para evitar el uso excesivo de recursos.</li> <li>Para configuraciones de m\u00faltiples instancias, se puede usar Redis para centralizar y agregar datos de m\u00e9tricas.</li> <li>Las m\u00e9tricas recopiladas se pueden acceder a trav\u00e9s de la API o visualizarse en la interfaz de usuario web.</li> <li>Esta informaci\u00f3n le ayuda a identificar amenazas de seguridad, solucionar problemas y optimizar su configuraci\u00f3n.</li> </ol>"},{"location":"es/features/#implementacion-tecnica","title":"Implementaci\u00f3n T\u00e9cnica","text":"<p>El complemento de m\u00e9tricas funciona mediante:</p> <ul> <li>El uso de diccionarios compartidos en NGINX, donde <code>metrics_datastore</code> se utiliza para HTTP y <code>metrics_datastore_stream</code> para el tr\u00e1fico TCP/UDP</li> <li>El aprovechamiento de una cach\u00e9 LRU para un almacenamiento eficiente en memoria</li> <li>La sincronizaci\u00f3n peri\u00f3dica de datos entre los trabajadores (workers) mediante temporizadores</li> <li>El almacenamiento de informaci\u00f3n detallada sobre las solicitudes bloqueadas, incluida la direcci\u00f3n IP del cliente, el pa\u00eds, la marca de tiempo, los detalles de la solicitud y el motivo del bloqueo</li> <li>El soporte para m\u00e9tricas espec\u00edficas de complementos a trav\u00e9s de una interfaz com\u00fan de recolecci\u00f3n de m\u00e9tricas</li> <li>La provisi\u00f3n de puntos finales de API para consultar las m\u00e9tricas recopiladas</li> </ul>"},{"location":"es/features/#como-usar_19","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de M\u00e9tricas:</p> <ol> <li>Habilite la funci\u00f3n: La recolecci\u00f3n de m\u00e9tricas est\u00e1 habilitada por defecto. Puede controlar esto con el ajuste <code>USE_METRICS</code>.</li> <li>Configure la asignaci\u00f3n de memoria: Establezca la cantidad de memoria a asignar para el almacenamiento de m\u00e9tricas utilizando el ajuste <code>METRICS_MEMORY_SIZE</code>.</li> <li>Establezca los l\u00edmites de almacenamiento: Defina cu\u00e1ntas solicitudes bloqueadas almacenar por trabajador y en Redis con los ajustes respectivos.</li> <li>Acceda a los datos: Vea las m\u00e9tricas recopiladas a trav\u00e9s de la interfaz de usuario web o los puntos finales de la API.</li> <li>Analice la informaci\u00f3n: Use los datos recopilados para identificar patrones, detectar problemas de seguridad y optimizar su configuraci\u00f3n.</li> </ol>"},{"location":"es/features/#metricas-recopiladas","title":"M\u00e9tricas Recopiladas","text":"<p>El complemento de m\u00e9tricas recopila la siguiente informaci\u00f3n:</p> <ol> <li> <p>Solicitudes Bloqueadas: Para cada solicitud bloqueada, se almacenan los siguientes datos:</p> <ul> <li>ID de la solicitud y marca de tiempo</li> <li>Direcci\u00f3n IP del cliente y pa\u00eds (cuando est\u00e9 disponible)</li> <li>M\u00e9todo HTTP y URL</li> <li>C\u00f3digo de estado HTTP</li> <li>Agente de usuario</li> <li>Motivo del bloqueo y modo de seguridad</li> <li>Nombre del servidor</li> <li>Datos adicionales relacionados con el motivo del bloqueo</li> </ul> </li> <li> <p>Contadores de Complementos: Varios contadores espec\u00edficos de complementos que rastrean actividades y eventos.</p> </li> </ol>"},{"location":"es/features/#acceso-a-la-api","title":"Acceso a la API","text":"<p>Se puede acceder a los datos de las m\u00e9tricas a trav\u00e9s de los puntos finales de la API interna de BunkerWeb:</p> <ul> <li>Punto final: <code>/metrics/{filtro}</code></li> <li>M\u00e9todo: GET</li> <li>Descripci\u00f3n: Recupera los datos de las m\u00e9tricas seg\u00fan el filtro especificado</li> <li>Formato de respuesta: Objeto JSON que contiene las m\u00e9tricas solicitadas</li> </ul> <p>Por ejemplo, <code>/metrics/requests</code> devuelve informaci\u00f3n sobre las solicitudes bloqueadas.</p> <p>Configuraci\u00f3n del Acceso a la API</p> <p>Para acceder a las m\u00e9tricas a trav\u00e9s de la API, debe asegurarse de que:</p> <pre><code>1.  La funci\u00f3n de API est\u00e9 habilitada con `USE_API: \"yes\"` (habilitada por defecto)\n2.  Su IP de cliente est\u00e9 incluida en el ajuste `API_WHITELIST_IP` (el valor predeterminado es `127.0.0.0/8`)\n3.  Est\u00e9 accediendo a la API en el puerto configurado (el valor predeterminado es `5000` a trav\u00e9s del ajuste `API_HTTP_PORT`)\n4.  Est\u00e9 utilizando el valor correcto de `API_SERVER_NAME` en el encabezado Host (el valor predeterminado es `bwapi`)\n5.  Si `API_TOKEN` est\u00e1 configurado, incluya `Authorization: Bearer &lt;token&gt;` en los encabezados de la solicitud.\n\nSolicitudes t\u00edpicas:\n\nSin token (cuando `API_TOKEN` no est\u00e1 configurado):\n```bash\ncurl -H \"Host: bwapi\" \\\n     http://su-instancia-de-bunkerweb:5000/metrics/requests\n```\n\nCon token (cuando `API_TOKEN` est\u00e1 configurado):\n```bash\ncurl -H \"Host: bwapi\" \\\n     -H \"Authorization: Bearer $API_TOKEN\" \\\n     http://su-instancia-de-bunkerweb:5000/metrics/requests\n```\n\nSi ha personalizado el `API_SERVER_NAME` a algo diferente del valor predeterminado `bwapi`, use ese valor en el encabezado Host en su lugar.\n\nPara entornos de producci\u00f3n seguros, restrinja el acceso a la API a IPs de confianza y habilite `API_TOKEN`.\n</code></pre>"},{"location":"es/features/#ajustes-de-configuracion_20","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_METRICS</code> <code>yes</code> multisite no Habilitar M\u00e9tricas: Establezca en <code>yes</code> para habilitar la recolecci\u00f3n y recuperaci\u00f3n de m\u00e9tricas. <code>METRICS_MEMORY_SIZE</code> <code>16m</code> global no Tama\u00f1o de la Memoria: Tama\u00f1o del almacenamiento interno para las m\u00e9tricas (p. ej., <code>16m</code>, <code>32m</code>). <code>METRICS_MAX_BLOCKED_REQUESTS</code> <code>1000</code> global no M\u00e1ximo de Solicitudes Bloqueadas: N\u00famero m\u00e1ximo de solicitudes bloqueadas para almacenar por trabajador. <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> <code>100000</code> global no M\u00e1ximo de Solicitudes Bloqueadas en Redis: N\u00famero m\u00e1ximo de solicitudes bloqueadas para almacenar en Redis. <code>METRICS_SAVE_TO_REDIS</code> <code>yes</code> global no Guardar M\u00e9tricas en Redis: Establezca en <code>yes</code> para guardar las m\u00e9tricas (contadores y tablas) en Redis para la agregaci\u00f3n en todo el cl\u00faster. <p>Dimensionamiento de la Asignaci\u00f3n de Memoria</p> <p>El ajuste <code>METRICS_MEMORY_SIZE</code> debe ajustarse en funci\u00f3n de su volumen de tr\u00e1fico y el n\u00famero de instancias. Para sitios de alto tr\u00e1fico, considere aumentar este valor para garantizar que todas las m\u00e9tricas se capturen sin p\u00e9rdida de datos.</p> <p>Integraci\u00f3n con Redis</p> <p>Cuando BunkerWeb est\u00e1 configurado para usar Redis, el complemento de m\u00e9tricas sincronizar\u00e1 autom\u00e1ticamente los datos de las solicitudes bloqueadas con el servidor Redis. Esto proporciona una vista centralizada de los eventos de seguridad en m\u00faltiples instancias de BunkerWeb.</p> <p>Consideraciones de Rendimiento</p> <p>Establecer valores muy altos para <code>METRICS_MAX_BLOCKED_REQUESTS</code> o <code>METRICS_MAX_BLOCKED_REQUESTS_REDIS</code> puede aumentar el uso de la memoria. Supervise los recursos de su sistema y ajuste estos valores seg\u00fan sus necesidades reales y los recursos disponibles.</p> <p>Almacenamiento Espec\u00edfico del Trabajador</p> <p>Cada trabajador de NGINX mantiene sus propias m\u00e9tricas en la memoria. Al acceder a las m\u00e9tricas a trav\u00e9s de la API, los datos de todos los trabajadores se agregan autom\u00e1ticamente para proporcionar una vista completa.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_21","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaEntorno de Bajos RecursosEntorno de Alto Tr\u00e1ficoM\u00e9tricas Deshabilitadas <p>Configuraci\u00f3n predeterminada adecuada para la mayor\u00eda de las implementaciones:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"16m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"1000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"100000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> <p>Configuraci\u00f3n optimizada para entornos con recursos limitados:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"8m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"500\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"10000\"\nMETRICS_SAVE_TO_REDIS: \"no\"\n</code></pre> <p>Configuraci\u00f3n para sitios web de alto tr\u00e1fico que necesitan rastrear m\u00e1s eventos de seguridad:</p> <pre><code>USE_METRICS: \"yes\"\nMETRICS_MEMORY_SIZE: \"64m\"\nMETRICS_MAX_BLOCKED_REQUESTS: \"5000\"\nMETRICS_MAX_BLOCKED_REQUESTS_REDIS: \"500000\"\nMETRICS_SAVE_TO_REDIS: \"yes\"\n</code></pre> <p>Configuraci\u00f3n con la recolecci\u00f3n de m\u00e9tricas deshabilitada:</p> <pre><code>USE_METRICS: \"no\"\n</code></pre>"},{"location":"es/features/#migration-pro","title":"Migration  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Migration of BunkerWeb configuration between instances made easy via the web UI</p>"},{"location":"es/features/#miscellaneous","title":"Miscellaneous","text":"<p>Compatibilidad con STREAM </p> <p>El complemento Varios proporciona ajustes b\u00e1sicos esenciales que ayudan a mantener la seguridad y la funcionalidad de su sitio web. Este componente principal ofrece controles integrales para:</p> <ul> <li>Comportamiento del servidor - Configure c\u00f3mo responde su servidor a diversas solicitudes</li> <li>Ajustes HTTP - Gestione m\u00e9todos, tama\u00f1os de solicitud y opciones de protocolo</li> <li>Gesti\u00f3n de archivos - Controle la entrega de archivos est\u00e1ticos y optimice la entrega</li> <li>Soporte de protocolos - Habilite protocolos HTTP modernos para un mejor rendimiento</li> <li>Configuraciones del sistema - Ampl\u00ede la funcionalidad y mejore la seguridad</li> </ul> <p>Ya sea que necesite restringir los m\u00e9todos HTTP, gestionar los tama\u00f1os de las solicitudes, optimizar el almacenamiento en cach\u00e9 de archivos o controlar c\u00f3mo responde su servidor a diversas solicitudes, este complemento le brinda las herramientas para afinar el comportamiento de su servicio web mientras optimiza tanto el rendimiento como la seguridad.</p>"},{"location":"es/features/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"Categor\u00eda de Caracter\u00edstica Descripci\u00f3n Control de M\u00e9todos HTTP Defina qu\u00e9 m\u00e9todos HTTP son aceptables para su aplicaci\u00f3n Protecci\u00f3n del Servidor Predeterminado Prevenga el acceso no autorizado a trav\u00e9s de discrepancias de nombre de host y exija SNI para conexiones seguras Gesti\u00f3n del Tama\u00f1o de la Solicitud Establezca l\u00edmites para los cuerpos de las solicitudes de los clientes y las cargas de archivos Entrega de Archivos Est\u00e1ticos Configure y optimice la entrega de contenido est\u00e1tico desde carpetas ra\u00edz personalizadas Almacenamiento en Cach\u00e9 de Archivos Mejore el rendimiento a trav\u00e9s de mecanismos avanzados de almacenamiento en cach\u00e9 de descriptores de archivos con ajustes personalizables Soporte de Protocolos Configure opciones de protocolos HTTP modernos (HTTP2/HTTP3) y ajustes de puerto Alt-Svc Informes An\u00f3nimos Informes de estad\u00edsticas de uso opcionales para ayudar a mejorar BunkerWeb Soporte de Complementos Externos Ampl\u00ede la funcionalidad integrando complementos externos a trav\u00e9s de URL Control de Estado HTTP Configure c\u00f3mo responde su servidor al denegar solicitudes (incluida la terminaci\u00f3n de la conexi\u00f3n)"},{"location":"es/features/#guia-de-configuracion_1","title":"Gu\u00eda de Configuraci\u00f3n","text":"Seguridad del Servidor Predeterminado <p>Controles del Servidor Predeterminado</p> <p>En HTTP, el encabezado <code>Host</code> especifica el servidor de destino, pero puede estar ausente o ser desconocido, a menudo debido a que los bots buscan vulnerabilidades.</p> <p>Para bloquear tales solicitudes:</p> <ul> <li>Establezca <code>DISABLE_DEFAULT_SERVER</code> en <code>yes</code> para denegar silenciosamente tales solicitudes utilizando el c\u00f3digo de estado <code>444</code> de NGINX.</li> <li>Para una seguridad m\u00e1s estricta, habilite <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> para rechazar las conexiones SSL/TLS sin un SNI v\u00e1lido.</li> </ul> <p>Beneficios de Seguridad</p> <ul> <li>Bloquea la manipulaci\u00f3n del encabezado Host y el escaneo de hosts virtuales</li> <li>Mitiga los riesgos de contrabando de solicitudes HTTP</li> <li>Elimina el servidor predeterminado como un vector de ataque</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>DISABLE_DEFAULT_SERVER</code> <code>no</code> global no Servidor Predeterminado: Establezca en <code>yes</code> para deshabilitar el servidor predeterminado cuando ning\u00fan nombre de host coincida con la solicitud. <code>DISABLE_DEFAULT_SERVER_STRICT_SNI</code> <code>no</code> global no SNI Estricto: Cuando se establece en <code>yes</code>, requiere SNI para las conexiones HTTPS y rechaza las conexiones sin un SNI v\u00e1lido. <pre><code>!!! warning \"Aplicaci\u00f3n de SNI\"\n    Habilitar la validaci\u00f3n estricta de SNI proporciona una seguridad m\u00e1s fuerte, pero puede causar problemas si BunkerWeb est\u00e1 detr\u00e1s de un proxy inverso que reenv\u00eda las solicitudes HTTPS sin preservar la informaci\u00f3n de SNI. Pruebe a fondo antes de habilitarlo en entornos de producci\u00f3n.\n</code></pre> Estado HTTP de Denegaci\u00f3n <p>Control de Estado HTTP</p> <p>El primer paso para manejar el acceso denegado del cliente es definir la acci\u00f3n apropiada. Esto se puede configurar usando el ajuste <code>DENY_HTTP_STATUS</code>. Cuando BunkerWeb deniega una solicitud, puede controlar su respuesta usando este ajuste. Por defecto, devuelve un estado <code>403 Prohibido</code>, mostrando una p\u00e1gina web o contenido personalizado al cliente.</p> <p>Alternativamente, establecerlo en <code>444</code> cierra la conexi\u00f3n inmediatamente sin enviar ninguna respuesta. Este c\u00f3digo de estado no est\u00e1ndar, espec\u00edfico de NGINX, es \u00fatil para descartar silenciosamente las solicitudes no deseadas.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>DENY_HTTP_STATUS</code> <code>403</code> global no Estado HTTP de Denegaci\u00f3n: C\u00f3digo de estado HTTP a enviar cuando se deniega la solicitud (403 o 444). El c\u00f3digo 444 cierra la conexi\u00f3n. <pre><code>!!! warning \"Consideraciones del C\u00f3digo de Estado 444\"\n    Dado que los clientes no reciben retroalimentaci\u00f3n, la soluci\u00f3n de problemas puede ser m\u00e1s desafiante. Se recomienda establecer `444` solo si ha abordado a fondo los falsos positivos, tiene experiencia con BunkerWeb y requiere un mayor nivel de seguridad.\n\n!!! info \"Modo stream\"\n    En **modo stream**, este ajuste siempre se aplica como `444`, lo que significa que la conexi\u00f3n se cerrar\u00e1, independientemente del valor configurado.\n</code></pre> M\u00e9todos HTTP <p>Control de M\u00e9todos HTTP</p> <p>Restringir los m\u00e9todos HTTP solo a los requeridos por su aplicaci\u00f3n es una medida de seguridad fundamental que se adhiere al principio de privilegio m\u00ednimo. Al definir expl\u00edcitamente los m\u00e9todos HTTP aceptables, puede minimizar el riesgo de explotaci\u00f3n a trav\u00e9s de m\u00e9todos no utilizados o peligrosos.</p> <p>Esta caracter\u00edstica se configura utilizando el ajuste <code>ALLOWED_METHODS</code>, donde los m\u00e9todos se enumeran y se separan por un <code>|</code> (predeterminado: <code>GET|POST|HEAD</code>). Si un cliente intenta utilizar un m\u00e9todo no listado, el servidor responder\u00e1 con un estado 405 - M\u00e9todo No Permitido.</p> <p>Para la mayor\u00eda de los sitios web, el predeterminado <code>GET|POST|HEAD</code> es suficiente. Si su aplicaci\u00f3n utiliza API RESTful, es posible que deba incluir m\u00e9todos como <code>PUT</code> y <code>DELETE</code>.</p> <p>Beneficios de Seguridad</p> <ul> <li>Previene la explotaci\u00f3n de m\u00e9todos HTTP no utilizados o innecesarios</li> <li>Reduce la superficie de ataque al deshabilitar m\u00e9todos potencialmente da\u00f1inos</li> <li>Bloquea las t\u00e9cnicas de enumeraci\u00f3n de m\u00e9todos HTTP utilizadas por los atacantes</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>ALLOWED_METHODS</code> <code>GET              | POST     | HEAD</code> multisite no M\u00e9todos HTTP: Lista de m\u00e9todos HTTP permitidos, separados por caracteres de barra vertical. <pre><code>!!! abstract \"CORS y Solicitudes de Pre-vuelo\"\n    Si su aplicaci\u00f3n admite [Intercambio de Recursos de Origen Cruzado (CORS)](#cors), debe incluir el m\u00e9todo `OPTIONS` en el ajuste `ALLOWED_METHODS` para manejar las solicitudes de pre-vuelo. Esto garantiza la funcionalidad adecuada para los navegadores que realizan solicitudes de origen cruzado.\n\n!!! danger \"Consideraciones de Seguridad\"\n    -   **Evite habilitar `TRACE` o `CONNECT`:** Estos m\u00e9todos rara vez se necesitan y pueden introducir riesgos de seguridad significativos, como habilitar el Rastreo entre Sitios (XST) o ataques de t\u00fanel.\n    -   **Revise regularmente los m\u00e9todos permitidos:** Audite peri\u00f3dicamente el ajuste `ALLOWED_METHODS` para asegurarse de que se alinee con los requisitos actuales de su aplicaci\u00f3n.\n    -   **Pruebe a fondo antes de la implementaci\u00f3n:** Los cambios en las restricciones de los m\u00e9todos HTTP pueden afectar la funcionalidad de la aplicaci\u00f3n. Valide su configuraci\u00f3n en un entorno de preproducci\u00f3n antes de aplicarla a la producci\u00f3n.\n</code></pre> L\u00edmites de Tama\u00f1o de Solicitud <p>L\u00edmites de Tama\u00f1o de Solicitud</p> <p>El tama\u00f1o m\u00e1ximo del cuerpo de la solicitud se puede controlar utilizando el ajuste <code>MAX_CLIENT_SIZE</code> (predeterminado: <code>10m</code>). Los valores aceptados siguen la sintaxis descrita aqu\u00ed.</p> <p>Beneficios de Seguridad</p> <ul> <li>Protege contra ataques de denegaci\u00f3n de servicio causados por tama\u00f1os de carga \u00fatil excesivos</li> <li>Mitiga las vulnerabilidades de desbordamiento de b\u00fafer</li> <li>Previene los ataques de carga de archivos</li> <li>Reduce el riesgo de agotamiento de los recursos del servidor</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>MAX_CLIENT_SIZE</code> <code>10m</code> multisite no Tama\u00f1o M\u00e1ximo de Solicitud: El tama\u00f1o m\u00e1ximo permitido para los cuerpos de las solicitudes de los clientes (por ejemplo, cargas de archivos). <pre><code>!!! tip \"Mejores Pr\u00e1cticas de Configuraci\u00f3n del Tama\u00f1o de la Solicitud\"\n    Si necesita permitir un cuerpo de solicitud de tama\u00f1o ilimitado, puede establecer el valor de `MAX_CLIENT_SIZE` en `0`. Sin embargo, esto **no se recomienda** debido a los posibles riesgos de seguridad y rendimiento.\n\n    **Mejores Pr\u00e1cticas:**\n\n    -   Siempre configure `MAX_CLIENT_SIZE` al valor m\u00e1s peque\u00f1o que cumpla con los requisitos leg\u00edtimos de su aplicaci\u00f3n.\n    -   Revise y ajuste regularmente este ajuste para alinearlo con las necesidades cambiantes de su aplicaci\u00f3n.\n    -   Evite establecer `0` a menos que sea absolutamente necesario, ya que puede exponer su servidor a ataques de denegaci\u00f3n de servicio y agotamiento de recursos.\n\n    Al gestionar cuidadosamente este ajuste, puede garantizar una seguridad y un rendimiento \u00f3ptimos para su aplicaci\u00f3n.\n</code></pre> Soporte de Protocolo <p>Ajustes del Protocolo HTTP</p> <p>Los protocolos HTTP modernos como HTTP/2 y HTTP/3 mejoran el rendimiento y la seguridad. BunkerWeb permite una f\u00e1cil configuraci\u00f3n de estos protocolos.</p> <p>Beneficios de Seguridad y Rendimiento</p> <ul> <li>Ventajas de Seguridad: Los protocolos modernos como HTTP/2 y HTTP/3 imponen TLS/HTTPS por defecto, reducen la susceptibilidad a ciertos ataques y mejoran la privacidad a trav\u00e9s de encabezados cifrados (HTTP/3).</li> <li>Beneficios de Rendimiento: Caracter\u00edsticas como la multiplexaci\u00f3n, la compresi\u00f3n de encabezados, el empuje del servidor y la transferencia de datos binarios mejoran la velocidad y la eficiencia.</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>LISTEN_HTTP</code> <code>yes</code> multisite no Escucha HTTP: Responda a las solicitudes HTTP (inseguras) cuando se establezca en <code>yes</code>. <code>HTTP2</code> <code>yes</code> multisite no HTTP2: Soporte para el protocolo HTTP2 cuando HTTPS est\u00e1 habilitado. <code>HTTP3</code> <code>yes</code> multisite no HTTP3: Soporte para el protocolo HTTP3 cuando HTTPS est\u00e1 habilitado. <code>HTTP3_ALT_SVC_PORT</code> <code>443</code> multisite no Puerto Alt-Svc de HTTP3: Puerto a utilizar en el encabezado Alt-Svc para HTTP3. <pre><code>!!! example \"Sobre HTTP/3\"\n    HTTP/3, la \u00faltima versi\u00f3n del Protocolo de Transferencia de Hipertexto, utiliza QUIC sobre UDP en lugar de TCP, abordando problemas como el bloqueo de cabeza de l\u00ednea para conexiones m\u00e1s r\u00e1pidas y fiables.\n\n    NGINX introdujo soporte experimental para HTTP/3 y QUIC a partir de la versi\u00f3n 1.25.0. Sin embargo, esta caracter\u00edstica todav\u00eda es experimental y se recomienda precauci\u00f3n para su uso en producci\u00f3n. Para m\u00e1s detalles, consulte la [documentaci\u00f3n oficial de NGINX](https://nginx.org/en/docs/quic.html).\n\n    Se recomienda realizar pruebas exhaustivas antes de habilitar HTTP/3 en entornos de producci\u00f3n.\n</code></pre> Entrega de Archivos Est\u00e1ticos <p>Configuraci\u00f3n de Entrega de Archivos</p> <p>BunkerWeb puede servir archivos est\u00e1ticos directamente o actuar como un proxy inverso a un servidor de aplicaciones. Por defecto, los archivos se sirven desde <code>/var/www/html/{server_name}</code>.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>SERVE_FILES</code> <code>yes</code> multisite no Servir Archivos: Cuando se establece en <code>yes</code>, BunkerWeb servir\u00e1 archivos est\u00e1ticos desde la carpeta ra\u00edz configurada. <code>ROOT_FOLDER</code> <code>/var/www/html/{server_name}</code> multisite no Carpeta Ra\u00edz: El directorio desde el cual servir archivos est\u00e1ticos. Vac\u00edo significa usar la ubicaci\u00f3n predeterminada. <pre><code>!!! tip \"Mejores Pr\u00e1cticas para la Entrega de Archivos Est\u00e1ticos\"\n    -   **Servicio Directo:** Habilite el servicio de archivos (`SERVE_FILES=yes`) cuando BunkerWeb sea responsable de servir los archivos est\u00e1ticos directamente.\n    -   **Proxy Inverso:** Si BunkerWeb act\u00faa como un proxy inverso, **desactive el servicio de archivos** (`SERVE_FILES=no`) para reducir la superficie de ataque y evitar exponer directorios innecesarios.\n    -   **Permisos:** Aseg\u00farese de tener los permisos de archivo y las configuraciones de ruta adecuados para evitar el acceso no autorizado.\n    -   **Seguridad:** Evite exponer directorios o archivos sensibles a trav\u00e9s de configuraciones incorrectas.\n\n    Al gestionar cuidadosamente la entrega de archivos est\u00e1ticos, puede optimizar el rendimiento mientras mantiene un entorno seguro.\n</code></pre> Ajustes del Sistema <p>Gesti\u00f3n de Complementos y del Sistema</p> <p>Estos ajustes gestionan la interacci\u00f3n de BunkerWeb con sistemas externos y contribuyen a mejorar el producto a trav\u00e9s de estad\u00edsticas de uso an\u00f3nimas opcionales.</p> <p>Informes An\u00f3nimos</p> <p>Los informes an\u00f3nimos proporcionan al equipo de BunkerWeb informaci\u00f3n sobre c\u00f3mo se est\u00e1 utilizando el software. Esto ayuda a identificar \u00e1reas de mejora y a priorizar el desarrollo de caracter\u00edsticas. Los informes son estrictamente estad\u00edsticos y no incluyen ninguna informaci\u00f3n sensible o de identificaci\u00f3n personal. Cubren:</p> <ul> <li>Caracter\u00edsticas habilitadas</li> <li>Patrones de configuraci\u00f3n generales</li> </ul> <p>Puede deshabilitar esta caracter\u00edstica si lo desea estableciendo <code>SEND_ANONYMOUS_REPORT</code> en <code>no</code>.</p> <p>Complementos Externos</p> <p>Los complementos externos le permiten ampliar la funcionalidad de BunkerWeb integrando m\u00f3dulos de terceros. Esto permite una personalizaci\u00f3n adicional y casos de uso avanzados.</p> <p>Seguridad de los Complementos Externos</p> <p>Los complementos externos pueden introducir riesgos de seguridad si no se examinan adecuadamente. Siga estas mejores pr\u00e1cticas para minimizar las amenazas potenciales:</p> <ul> <li>Solo use complementos de fuentes de confianza.</li> <li>Verifique la integridad del complemento utilizando sumas de verificaci\u00f3n cuando est\u00e9n disponibles.</li> <li>Revise y actualice regularmente los complementos para garantizar la seguridad y la compatibilidad.</li> </ul> <p>Para m\u00e1s detalles, consulte la documentaci\u00f3n de Complementos.</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>SEND_ANONYMOUS_REPORT</code> <code>yes</code> global no Informes An\u00f3nimos: Env\u00ede informes de uso an\u00f3nimos a los mantenedores de BunkerWeb. <code>EXTERNAL_PLUGIN_URLS</code> global no Complementos Externos: URL para descargar complementos externos (separados por espacios). Almacenamiento en Cach\u00e9 de Archivos <p>Optimizaci\u00f3n del Almacenamiento en Cach\u00e9 de Archivos</p> <p>La cach\u00e9 de archivos abiertos mejora el rendimiento al almacenar descriptores de archivos y metadatos en la memoria, reduciendo la necesidad de operaciones repetidas del sistema de archivos.</p> <p>Beneficios del Almacenamiento en Cach\u00e9 de Archivos</p> <ul> <li>Rendimiento: Reduce la E/S del sistema de archivos, disminuye la latencia y reduce el uso de la CPU para las operaciones de archivos.</li> <li>Seguridad: Mitiga los ataques de tiempo al almacenar en cach\u00e9 las respuestas de error y reduce el impacto de los ataques DoS dirigidos al sistema de archivos.</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_OPEN_FILE_CACHE</code> <code>no</code> multisite no Habilitar Cach\u00e9: Habilite el almacenamiento en cach\u00e9 de descriptores de archivos y metadatos para mejorar el rendimiento. <code>OPEN_FILE_CACHE</code> <code>max=1000 inactive=20s</code> multisite no Configuraci\u00f3n de Cach\u00e9: Configure la cach\u00e9 de archivos abiertos (por ejemplo, entradas m\u00e1ximas y tiempo de espera de inactividad). <code>OPEN_FILE_CACHE_ERRORS</code> <code>yes</code> multisite no Errores de Cach\u00e9: Almacene en cach\u00e9 los errores de b\u00fasqueda de descriptores de archivos, as\u00ed como las b\u00fasquedas exitosas. <code>OPEN_FILE_CACHE_MIN_USES</code> <code>2</code> multisite no Usos M\u00ednimos: N\u00famero m\u00ednimo de accesos durante el per\u00edodo de inactividad para que un archivo permanezca en cach\u00e9. <code>OPEN_FILE_CACHE_VALID</code> <code>30s</code> multisite no Validez de la Cach\u00e9: Tiempo despu\u00e9s del cual los elementos en cach\u00e9 se revalidan. <pre><code>**Gu\u00eda de Configuraci\u00f3n**\n\nPara habilitar y configurar el almacenamiento en cach\u00e9 de archivos:\n1.  Establezca `USE_OPEN_FILE_CACHE` en `yes` para activar la caracter\u00edstica.\n2.  Ajuste los par\u00e1metros de `OPEN_FILE_CACHE` para definir el n\u00famero m\u00e1ximo de entradas en cach\u00e9 y su tiempo de espera de inactividad.\n3.  Use `OPEN_FILE_CACHE_ERRORS` para almacenar en cach\u00e9 tanto las b\u00fasquedas exitosas como las fallidas, reduciendo las operaciones repetidas del sistema de archivos.\n4.  Establezca `OPEN_FILE_CACHE_MIN_USES` para especificar el n\u00famero m\u00ednimo de accesos requeridos para que un archivo permanezca en cach\u00e9.\n5.  Defina el per\u00edodo de validez de la cach\u00e9 con `OPEN_FILE_CACHE_VALID` para controlar con qu\u00e9 frecuencia se revalidan los elementos en cach\u00e9.\n\n!!! tip \"Mejores Pr\u00e1cticas\"\n    -   Habilite el almacenamiento en cach\u00e9 de archivos para sitios web con muchos archivos est\u00e1ticos para mejorar el rendimiento.\n    -   Revise y ajuste regularmente la configuraci\u00f3n de la cach\u00e9 para equilibrar el rendimiento y el uso de recursos.\n    -   En entornos din\u00e1micos donde los archivos cambian con frecuencia, considere reducir el per\u00edodo de validez de la cach\u00e9 o deshabilitar la caracter\u00edstica para garantizar la frescura del contenido.\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_22","title":"Configuraciones de Ejemplo","text":"Seguridad del Servidor PredeterminadoEstado HTTP de Denegaci\u00f3nM\u00e9todos HTTPL\u00edmites de Tama\u00f1o de SolicitudSoporte de ProtocoloEntrega de Archivos Est\u00e1ticosAlmacenamiento en Cach\u00e9 de Archivos <p>Configuraci\u00f3n de ejemplo para deshabilitar el servidor predeterminado y aplicar un SNI estricto:</p> <pre><code>DISABLE_DEFAULT_SERVER: \"yes\"\nDISABLE_DEFAULT_SERVER_STRICT_SNI: \"yes\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para descartar silenciosamente las solicitudes no deseadas:</p> <pre><code>DENY_HTTP_STATUS: \"444\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para restringir los m\u00e9todos HTTP solo a los requeridos por una API RESTful:</p> <pre><code>ALLOWED_METHODS: \"GET|POST|PUT|DELETE\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para limitar el tama\u00f1o m\u00e1ximo del cuerpo de la solicitud:</p> <pre><code>MAX_CLIENT_SIZE: \"5m\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar HTTP/2 y HTTP/3 con un puerto Alt-Svc personalizado:</p> <pre><code>HTTP2: \"yes\"\nHTTP3: \"yes\"\nHTTP3_ALT_SVC_PORT: \"443\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para servir archivos est\u00e1ticos desde una carpeta ra\u00edz personalizada:</p> <pre><code>SERVE_FILES: \"yes\"\nROOT_FOLDER: \"/var/www/custom-folder\"\n</code></pre> <p>Configuraci\u00f3n de ejemplo para habilitar y optimizar el almacenamiento en cach\u00e9 de archivos:</p> <pre><code>USE_OPEN_FILE_CACHE: \"yes\"\nOPEN_FILE_CACHE: \"max=2000 inactive=30s\"\nOPEN_FILE_CACHE_ERRORS: \"yes\"\nOPEN_FILE_CACHE_MIN_USES: \"3\"\nOPEN_FILE_CACHE_VALID: \"60s\"\n</code></pre>"},{"location":"es/features/#modsecurity","title":"ModSecurity","text":"<p>Compatibilidad con STREAM </p> <p>El complemento ModSecurity integra el potente Firewall de Aplicaciones Web (WAF) ModSecurity en BunkerWeb. Esta integraci\u00f3n ofrece una protecci\u00f3n robusta contra una amplia gama de ataques web al aprovechar el OWASP Core Rule Set (CRS) para detectar y bloquear amenazas como la inyecci\u00f3n de SQL, el cross-site scripting (XSS), la inclusi\u00f3n de archivos locales y m\u00e1s.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando se recibe una solicitud, ModSecurity la eval\u00faa con el conjunto de reglas activo.</li> <li>El OWASP Core Rule Set inspecciona las cabeceras, las cookies, los par\u00e1metros de la URL y el contenido del cuerpo.</li> <li>Cada violaci\u00f3n detectada contribuye a una puntuaci\u00f3n de anomal\u00eda general.</li> <li>Si esta puntuaci\u00f3n excede el umbral configurado, la solicitud se bloquea.</li> <li>Se crean registros detallados para ayudar a diagnosticar qu\u00e9 reglas se activaron y por qu\u00e9.</li> </ol> <p>Beneficios clave</p> <ol> <li>Protecci\u00f3n est\u00e1ndar de la industria: Utiliza el firewall de c\u00f3digo abierto ModSecurity, ampliamente utilizado.</li> <li>OWASP Core Rule Set: Emplea reglas mantenidas por la comunidad que cubren el OWASP Top Ten y m\u00e1s.</li> <li>Niveles de seguridad configurables: Ajuste los niveles de paranoia para equilibrar la seguridad con los posibles falsos positivos.</li> <li>Registro detallado: Proporciona registros de auditor\u00eda exhaustivos para el an\u00e1lisis de ataques.</li> <li>Soporte de complementos: Ampl\u00ede la protecci\u00f3n con complementos CRS opcionales adaptados a sus aplicaciones.</li> </ol>"},{"location":"es/features/#como-usar_20","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar ModSecurity:</p> <ol> <li>Habilite la funci\u00f3n: ModSecurity est\u00e1 habilitado por defecto. Esto se puede controlar usando el ajuste <code>USE_MODSECURITY</code>.</li> <li>Seleccione una versi\u00f3n de CRS: Elija una versi\u00f3n del OWASP Core Rule Set (v3, v4 o nightly).</li> <li>A\u00f1ada complementos: Opcionalmente, active los complementos de CRS para mejorar la cobertura de las reglas.</li> <li>Supervise y ajuste: Utilice los registros y la interfaz de usuario web para identificar falsos positivos y ajustar la configuraci\u00f3n.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_21","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_MODSECURITY</code> <code>yes</code> multisite no Habilitar ModSecurity: Active la protecci\u00f3n del Firewall de Aplicaciones Web ModSecurity. <code>USE_MODSECURITY_CRS</code> <code>yes</code> multisite no Usar Core Rule Set: Habilite el OWASP Core Rule Set para ModSecurity. <code>MODSECURITY_CRS_VERSION</code> <code>4</code> multisite no Versi\u00f3n de CRS: La versi\u00f3n del OWASP Core Rule Set a utilizar. Opciones: <code>3</code>, <code>4</code> o <code>nightly</code>. <code>MODSECURITY_SEC_RULE_ENGINE</code> <code>On</code> multisite no Motor de Reglas: Controle si se aplican las reglas. Opciones: <code>On</code>, <code>DetectionOnly</code> u <code>Off</code>. <code>MODSECURITY_SEC_AUDIT_ENGINE</code> <code>RelevantOnly</code> multisite no Motor de Auditor\u00eda: Controle c\u00f3mo funciona el registro de auditor\u00eda. Opciones: <code>On</code>, <code>Off</code> o <code>RelevantOnly</code>. <code>MODSECURITY_SEC_AUDIT_LOG_PARTS</code> <code>ABIJDEFHZ</code> multisite no Partes del Registro de Auditor\u00eda: Qu\u00e9 partes de las solicitudes/respuestas incluir en los registros de auditor\u00eda. <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code> <code>131072</code> multisite no L\u00edmite del Cuerpo de la Solicitud (Sin Archivos): Tama\u00f1o m\u00e1ximo para los cuerpos de las solicitudes sin carga de archivos. Acepta bytes simples o sufijos legibles por humanos (<code>k</code>, <code>m</code>, <code>g</code>), por ejemplo, <code>131072</code>, <code>256k</code>, <code>1m</code>, <code>2g</code>. <code>USE_MODSECURITY_CRS_PLUGINS</code> <code>yes</code> multisite no Habilitar Complementos de CRS: Habilite conjuntos de reglas de complementos adicionales para el Core Rule Set. <code>MODSECURITY_CRS_PLUGINS</code> multisite no Lista de Complementos de CRS: Lista de complementos separados por espacios para descargar e instalar (<code>nombre-plugin[/etiqueta]</code> o URL). <code>USE_MODSECURITY_GLOBAL_CRS</code> <code>no</code> global no CRS Global: Cuando est\u00e1 habilitado, aplica las reglas de CRS globalmente a nivel HTTP en lugar de por servidor. <p>ModSecurity y el OWASP Core Rule Set</p> <p>Recomendamos encarecidamente mantener habilitados tanto ModSecurity como el OWASP Core Rule Set (CRS) para proporcionar una protecci\u00f3n robusta contra las vulnerabilidades web comunes. Aunque pueden ocurrir falsos positivos ocasionales, se pueden resolver con un poco de esfuerzo ajustando las reglas o utilizando exclusiones predefinidas.</p> <pre><code>El equipo de CRS mantiene activamente una lista de exclusiones para aplicaciones populares como WordPress, Nextcloud, Drupal y Cpanel, lo que facilita la integraci\u00f3n sin afectar la funcionalidad. Los beneficios de seguridad superan con creces el m\u00ednimo esfuerzo de configuraci\u00f3n necesario para solucionar los falsos positivos.\n</code></pre>"},{"location":"es/features/#versiones-de-crs-disponibles","title":"Versiones de CRS Disponibles","text":"<p>Seleccione una versi\u00f3n de CRS que se ajuste mejor a sus necesidades de seguridad:</p> <ul> <li><code>3</code>: Estable v3.3.7.</li> <li><code>4</code>: Estable v4.18.0 (predeterminada).</li> <li><code>nightly</code>: Compilaci\u00f3n nocturna que ofrece las \u00faltimas actualizaciones de reglas.</li> </ul> <p>Compilaci\u00f3n Nocturna</p> <p>La compilaci\u00f3n nocturna contiene las reglas m\u00e1s actualizadas, ofreciendo las \u00faltimas protecciones contra amenazas emergentes. Sin embargo, dado que se actualiza diariamente y puede incluir cambios experimentales o no probados, se recomienda utilizar primero la compilaci\u00f3n nocturna en un entorno de preproducci\u00f3n antes de implementarla en producci\u00f3n.</p> <p>Niveles de Paranoia</p> <p>El OWASP Core Rule Set utiliza \"niveles de paranoia\" (PL) para controlar la rigurosidad de las reglas:</p> <pre><code>-   **PL1 (predeterminado):** Protecci\u00f3n b\u00e1sica con m\u00ednimos falsos positivos\n-   **PL2:** Seguridad m\u00e1s estricta con una coincidencia de patrones m\u00e1s rigurosa\n-   **PL3:** Seguridad mejorada con una validaci\u00f3n m\u00e1s estricta\n-   **PL4:** M\u00e1xima seguridad con reglas muy estrictas (puede causar muchos falsos positivos)\n\nPuede establecer el nivel de paranoia agregando un archivo de configuraci\u00f3n personalizado en `/etc/bunkerweb/configs/modsec-crs/`.\n</code></pre>"},{"location":"es/features/#configuraciones-personalizadas","title":"Configuraciones Personalizadas","text":"<p>El ajuste de ModSecurity y el OWASP Core Rule Set (CRS) se puede lograr a trav\u00e9s de configuraciones personalizadas. Estas configuraciones le permiten personalizar el comportamiento en etapas espec\u00edficas del procesamiento de las reglas de seguridad:</p> <ul> <li><code>modsec-crs</code>: Se aplica antes de que se cargue el OWASP Core Rule Set.</li> <li><code>modsec</code>: Se aplica despu\u00e9s de que se haya cargado el OWASP Core Rule Set. Tambi\u00e9n se utiliza si el CRS no se carga en absoluto.</li> <li><code>crs-plugins-before</code>: Se aplica antes de que se carguen los complementos de CRS.</li> <li><code>crs-plugins-after</code>: Se aplica despu\u00e9s de que se hayan cargado los complementos de CRS.</li> </ul> <p>Esta estructura proporciona flexibilidad, permiti\u00e9ndole ajustar la configuraci\u00f3n de ModSecurity y CRS para adaptarse a las necesidades espec\u00edficas de su aplicaci\u00f3n mientras mantiene un flujo de configuraci\u00f3n claro.</p>"},{"location":"es/features/#agregar-exclusiones-de-crs-con-modsec-crs","title":"Agregar Exclusiones de CRS con <code>modsec-crs</code>","text":"<p>Puede usar una configuraci\u00f3n personalizada de tipo <code>modsec-crs</code> para agregar exclusiones para casos de uso espec\u00edficos, como habilitar exclusiones predefinidas para WordPress:</p> <pre><code>SecAction \\\n \"id:900130,\\\n  phase:1,\\\n  nolog,\\\n  pass,\\\n  t:none,\\\n  setvar:tx.crs_exclusions_wordpress=1\"\n</code></pre> <p>En este ejemplo:</p> <ul> <li>La acci\u00f3n se ejecuta en la Fase 1 (temprano en el ciclo de vida de la solicitud).</li> <li>Habilita las exclusiones de CRS espec\u00edficas de WordPress estableciendo la variable <code>tx.crs_exclusions_wordpress</code>.</li> </ul>"},{"location":"es/features/#actualizar-las-reglas-de-crs-con-modsec","title":"Actualizar las Reglas de CRS con <code>modsec</code>","text":"<p>Para ajustar las reglas de CRS cargadas, puede usar una configuraci\u00f3n personalizada de tipo <code>modsec</code>. Por ejemplo, puede eliminar reglas o etiquetas espec\u00edficas para ciertas rutas de solicitud:</p> <pre><code>SecRule REQUEST_FILENAME \"/wp-admin/admin-ajax.php\" \"id:1,ctl:ruleRemoveByTag=attack-xss,ctl:ruleRemoveByTag=attack-rce\"\nSecRule REQUEST_FILENAME \"/wp-admin/options.php\" \"id:2,ctl:ruleRemoveByTag=attack-xss\"\nSecRule REQUEST_FILENAME \"^/wp-json/yoast\" \"id:3,ctl:ruleRemoveById=930120\"\n</code></pre> <p>En este ejemplo:</p> <ul> <li>Regla 1: Elimina las reglas etiquetadas como <code>attack-xss</code> y <code>attack-rce</code> para las solicitudes a <code>/wp-admin/admin-ajax.php</code>.</li> <li>Regla 2: Elimina las reglas etiquetadas como <code>attack-xss</code> para las solicitudes a <code>/wp-admin/options.php</code>.</li> <li>Regla 3: Elimina una regla espec\u00edfica (ID <code>930120</code>) para las solicitudes que coinciden con <code>/wp-json/yoast</code>.</li> </ul> <p>Orden de ejecuci\u00f3n</p> <p>El orden de ejecuci\u00f3n de ModSecurity en BunkerWeb es el siguiente, asegurando una progresi\u00f3n clara y l\u00f3gica de la aplicaci\u00f3n de reglas:</p> <pre><code>1.  **Configuraci\u00f3n de OWASP CRS**: Configuraci\u00f3n base para el OWASP Core Rule Set.\n2.  **Configuraci\u00f3n de Complementos Personalizados (`crs-plugins-before`)**: Ajustes espec\u00edficos de los complementos, aplicados antes de cualquier regla de CRS.\n3.  **Reglas de Complementos Personalizados (Antes de las Reglas de CRS) (`crs-plugins-before`)**: Reglas personalizadas para los complementos ejecutadas antes de las reglas de CRS.\n4.  **Configuraci\u00f3n de Complementos Descargados**: Configuraci\u00f3n para los complementos descargados externamente.\n5.  **Reglas de Complementos Descargados (Antes de las Reglas de CRS)**: Reglas para los complementos descargados ejecutadas antes de las reglas de CRS.\n6.  **Reglas de CRS Personalizadas (`modsec-crs`)**: Reglas definidas por el usuario aplicadas antes de cargar las reglas de CRS.\n7.  **Reglas de OWASP CRS**: El conjunto principal de reglas de seguridad proporcionado por OWASP.\n8.  **Reglas de Complementos Personalizados (Despu\u00e9s de las Reglas de CRS) (`crs-plugins-after`)**: Reglas de complementos personalizadas ejecutadas despu\u00e9s de las reglas de CRS.\n9.  **Reglas de Complementos Descargados (Despu\u00e9s de las Reglas de CRS)**: Reglas para los complementos descargados ejecutadas despu\u00e9s de las reglas de CRS.\n10. **Reglas Personalizadas (`modsec`)**: Reglas definidas por el usuario aplicadas despu\u00e9s de todas las reglas de CRS y de los complementos.\n\n**Notas Clave**:\n\n-   Las personalizaciones **pre-CRS** (`crs-plugins-before`, `modsec-crs`) le permiten definir excepciones o reglas preparatorias antes de que se carguen las reglas principales de CRS.\n-   Las personalizaciones **post-CRS** (`crs-plugins-after`, `modsec`) son ideales para anular o ampliar las reglas despu\u00e9s de que se hayan aplicado las reglas de CRS y de los complementos.\n-   Esta estructura proporciona la m\u00e1xima flexibilidad, permitiendo un control preciso sobre la ejecuci\u00f3n y personalizaci\u00f3n de las reglas mientras se mantiene una s\u00f3lida l\u00ednea de base de seguridad.\n</code></pre>"},{"location":"es/features/#complementos-de-owasp-crs","title":"Complementos de OWASP CRS","text":"<p>El OWASP Core Rule Set tambi\u00e9n admite una gama de complementos dise\u00f1ados para ampliar su funcionalidad y mejorar la compatibilidad con aplicaciones o entornos espec\u00edficos. Estos complementos pueden ayudar a ajustar el CRS para su uso con plataformas populares como WordPress, Nextcloud y Drupal, o incluso con configuraciones personalizadas. Para obtener m\u00e1s informaci\u00f3n y una lista de los complementos disponibles, consulte el registro de complementos de OWASP CRS.</p> <p>Descarga de complementos</p> <p>El ajuste <code>MODSECURITY_CRS_PLUGINS</code> le permite descargar e instalar complementos para ampliar la funcionalidad del OWASP Core Rule Set (CRS). Este ajuste acepta una lista de nombres de complementos con etiquetas o URL opcionales, lo que facilita la integraci\u00f3n de funciones de seguridad adicionales adaptadas a sus necesidades espec\u00edficas.</p> <pre><code>Aqu\u00ed hay una lista no exhaustiva de valores aceptados para el ajuste `MODSECURITY_CRS_PLUGINS`:\n\n*   `fake-bot` - Descargar la \u00faltima versi\u00f3n del complemento.\n*   `wordpress-rule-exclusions/v1.0.0` - Descargar la versi\u00f3n 1.0.0 del complemento.\n*   `https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip` - Descargar el complemento directamente desde la URL.\n</code></pre> <p>Falsos Positivos</p> <p>Una configuraci\u00f3n de seguridad m\u00e1s alta puede bloquear el tr\u00e1fico leg\u00edtimo. Comience con la configuraci\u00f3n predeterminada y supervise los registros antes de aumentar los niveles de seguridad. Est\u00e9 preparado para agregar reglas de exclusi\u00f3n para las necesidades espec\u00edficas de su aplicaci\u00f3n.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_23","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaModo de Solo Detecci\u00f3nConfiguraci\u00f3n Avanzada con ComplementosConfiguraci\u00f3n HeredadaModSecurity GlobalCompilaci\u00f3n Nocturna con Complementos Personalizados <p>Una configuraci\u00f3n est\u00e1ndar con ModSecurity y CRS v4 habilitados:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Configuraci\u00f3n para monitorear amenazas potenciales sin bloquear:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"DetectionOnly\"\nMODSECURITY_SEC_AUDIT_ENGINE: \"On\"\nMODSECURITY_SEC_AUDIT_LOG_PARTS: \"ABIJDEFHZ\"\n</code></pre> <p>Configuraci\u00f3n con CRS v4 y complementos habilitados para protecci\u00f3n adicional:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions fake-bot\"\nMODSECURITY_REQ_BODY_NO_FILES_LIMIT: \"262144\"\n</code></pre> <p>Configuraci\u00f3n que utiliza CRS v3 para compatibilidad con configuraciones m\u00e1s antiguas:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"3\"\nMODSECURITY_SEC_RULE_ENGINE: \"On\"\n</code></pre> <p>Configuraci\u00f3n que aplica ModSecurity globalmente a todas las conexiones HTTP:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"4\"\nUSE_MODSECURITY_GLOBAL_CRS: \"yes\"\n</code></pre> <p>Configuraci\u00f3n que utiliza la compilaci\u00f3n nocturna de CRS con complementos personalizados:</p> <pre><code>USE_MODSECURITY: \"yes\"\nUSE_MODSECURITY_CRS: \"yes\"\nMODSECURITY_CRS_VERSION: \"nightly\"\nUSE_MODSECURITY_CRS_PLUGINS: \"yes\"\nMODSECURITY_CRS_PLUGINS: \"wordpress-rule-exclusions/v1.0.0 https://github.com/coreruleset/dos-protection-plugin-modsecurity/archive/refs/heads/main.zip\"\n</code></pre> <p>Valores de tama\u00f1o legibles por humanos</p> <p>Para los ajustes de tama\u00f1o como <code>MODSECURITY_REQ_BODY_NO_FILES_LIMIT</code>, se admiten los sufijos <code>k</code>, <code>m</code> y <code>g</code> (sin distinci\u00f3n entre may\u00fasculas y min\u00fasculas) y representan kibibytes, mebibytes y gibibytes (m\u00faltiplos de 1024). Ejemplos: <code>256k</code> = 262144, <code>1m</code> = 1048576, <code>2g</code> = 2147483648.</p>"},{"location":"es/features/#monitoring-pro","title":"Monitoring  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>BunkerWeb monitoring pro system. This plugin is a prerequisite for some other plugins.</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_MONITORING</code> <code>yes</code> global no Enable monitoring of BunkerWeb. <code>MONITORING_METRICS_DICT_SIZE</code> <code>10M</code> global no Size of the dict to store monitoring metrics. <code>MONITORING_IGNORE_URLS</code> global no List of URLs to ignore when monitoring separated with spaces (e.g. /health)"},{"location":"es/features/#php","title":"PHP","text":"<p>Compatibilidad con STREAM </p> <p>El complemento PHP proporciona una integraci\u00f3n perfecta con PHP-FPM para BunkerWeb, lo que permite el procesamiento din\u00e1mico de PHP para sus sitios web. Esta caracter\u00edstica es compatible tanto con instancias locales de PHP-FPM que se ejecutan en la misma m\u00e1quina como con servidores remotos de PHP-FPM, lo que le brinda flexibilidad en la forma en que configura su entorno PHP.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente solicita un archivo PHP de su sitio web, BunkerWeb enruta la solicitud a la instancia de PHP-FPM configurada.</li> <li>Para PHP-FPM local, BunkerWeb se comunica con el int\u00e9rprete de PHP a trav\u00e9s de un archivo de socket de Unix.</li> <li>Para PHP-FPM remoto, BunkerWeb reenv\u00eda las solicitudes al host y puerto especificados utilizando el protocolo FastCGI.</li> <li>PHP-FPM procesa el script y devuelve el contenido generado a BunkerWeb, que luego lo entrega al cliente.</li> <li>La reescritura de URL se configura autom\u00e1ticamente para admitir los marcos de trabajo y aplicaciones PHP comunes que utilizan \"URL amigables\".</li> </ol>"},{"location":"es/features/#como-usar_21","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n PHP:</p> <ol> <li>Elija su configuraci\u00f3n de PHP-FPM: Decida si utilizar\u00e1 una instancia de PHP-FPM local o remota.</li> <li>Configure la conexi\u00f3n: Para PHP local, especifique la ruta del socket; para PHP remoto, proporcione el nombre de host y el puerto.</li> <li>Establezca la ra\u00edz del documento: Configure la carpeta ra\u00edz que contiene sus archivos PHP utilizando la configuraci\u00f3n de ruta adecuada.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, BunkerWeb enruta autom\u00e1ticamente las solicitudes de PHP a su instancia de PHP-FPM.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_22","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REMOTE_PHP</code> multisite no Host PHP Remoto: Nombre de host de la instancia remota de PHP-FPM. Deje en blanco para usar PHP local. <code>REMOTE_PHP_PATH</code> multisite no Ruta Remota: Carpeta ra\u00edz que contiene los archivos en la instancia remota de PHP-FPM. <code>REMOTE_PHP_PORT</code> <code>9000</code> multisite no Puerto Remoto: Puerto de la instancia remota de PHP-FPM. <code>LOCAL_PHP</code> multisite no Socket PHP Local: Ruta al archivo de socket de PHP-FPM. Deje en blanco para usar una instancia remota de PHP-FPM. <code>LOCAL_PHP_PATH</code> multisite no Ruta Local: Carpeta ra\u00edz que contiene los archivos en la instancia local de PHP-FPM. <p>PHP-FPM Local vs. Remoto</p> <p>Elija la configuraci\u00f3n que mejor se adapte a su infraestructura:</p> <pre><code>-   **PHP-FPM local** ofrece un mejor rendimiento debido a la comunicaci\u00f3n basada en sockets y es ideal cuando PHP se ejecuta en la misma m\u00e1quina que BunkerWeb.\n-   **PHP-FPM remoto** proporciona m\u00e1s flexibilidad y escalabilidad al permitir que el procesamiento de PHP se realice en servidores separados.\n</code></pre> <p>Configuraci\u00f3n de la Ruta</p> <p>La <code>REMOTE_PHP_PATH</code> o <code>LOCAL_PHP_PATH</code> debe coincidir con la ruta real del sistema de archivos donde se almacenan sus archivos PHP; de lo contrario, se producir\u00e1 un error de \"Archivo no encontrado\".</p> <p>Reescritura de URL</p> <p>El complemento PHP configura autom\u00e1ticamente la reescritura de URL para admitir aplicaciones PHP modernas. Las solicitudes de archivos inexistentes se dirigir\u00e1n a <code>index.php</code> con el URI de la solicitud original disponible como par\u00e1metro de consulta.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_24","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n de PHP-FPM LocalConfiguraci\u00f3n de PHP-FPM RemotoConfiguraci\u00f3n de Puerto PersonalizadoConfiguraci\u00f3n de WordPress <p>Configuraci\u00f3n para usar una instancia de PHP-FPM local:</p> <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Configuraci\u00f3n para usar una instancia de PHP-FPM remota:</p> <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9000\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Configuraci\u00f3n para usar PHP-FPM en un puerto no est\u00e1ndar:</p> <pre><code>REMOTE_PHP: \"php-server.example.com\"\nREMOTE_PHP_PORT: \"9001\"\nREMOTE_PHP_PATH: \"/var/www/html\"\n</code></pre> <p>Configuraci\u00f3n optimizada para WordPress:</p> <pre><code>LOCAL_PHP: \"/var/run/php/php8.1-fpm.sock\"\nLOCAL_PHP_PATH: \"/var/www/html/wordpress\"\n</code></pre>"},{"location":"es/features/#pro","title":"Pro","text":"<p>Compatibilidad con STREAM </p> <p>El complemento Pro agrupa caracter\u00edsticas avanzadas y mejoras para implementaciones empresariales de BunkerWeb. Desbloquea capacidades adicionales, complementos premium y funcionalidades extendidas que complementan la plataforma principal de BunkerWeb. Ofrece seguridad, rendimiento y opciones de gesti\u00f3n mejoradas para implementaciones de nivel empresarial.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Con una clave de licencia Pro v\u00e1lida, BunkerWeb se conecta al servidor de la API Pro para validar su suscripci\u00f3n.</li> <li>Una vez autenticado, el complemento descarga e instala autom\u00e1ticamente los complementos y extensiones exclusivos de Pro.</li> <li>Su estado Pro se verifica peri\u00f3dicamente para garantizar el acceso continuo a las funciones premium.</li> <li>Los complementos premium se integran sin problemas con su configuraci\u00f3n existente de BunkerWeb.</li> <li>Todas las funciones Pro funcionan en armon\u00eda con el n\u00facleo de c\u00f3digo abierto, mejorando en lugar de reemplazar la funcionalidad.</li> </ol> <p>Beneficios clave</p> <ol> <li>Extensiones Premium: Acceso a complementos y caracter\u00edsticas exclusivas no disponibles en la edici\u00f3n comunitaria.</li> <li>Rendimiento Mejorado: Configuraciones optimizadas y mecanismos de almacenamiento en cach\u00e9 avanzados.</li> <li>Soporte Empresarial: Asistencia prioritaria y canales de soporte dedicados.</li> <li>Integraci\u00f3n Perfecta: Las caracter\u00edsticas Pro funcionan junto con las caracter\u00edsticas comunitarias sin conflictos de configuraci\u00f3n.</li> <li>Actualizaciones Autom\u00e1ticas: Los complementos premium se descargan y se mantienen actualizados autom\u00e1ticamente.</li> </ol>"},{"location":"es/features/#como-usar_22","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar las caracter\u00edsticas Pro:</p> <ol> <li>Obtenga una clave de licencia: Compre una licencia Pro en el Panel de BunkerWeb.</li> <li>Configure su clave de licencia: Use el ajuste <code>PRO_LICENSE_KEY</code> para configurar su licencia.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado con una licencia v\u00e1lida, los complementos Pro se descargan y activan autom\u00e1ticamente.</li> <li>Supervise su estado Pro: Verifique los indicadores de salud en la interfaz de usuario web para confirmar el estado de su suscripci\u00f3n Pro.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_23","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>PRO_LICENSE_KEY</code> global no Clave de Licencia Pro: Su clave de licencia de BunkerWeb Pro para la autenticaci\u00f3n. <p>Gesti\u00f3n de Licencias</p> <p>Su licencia Pro est\u00e1 vinculada a su entorno de implementaci\u00f3n espec\u00edfico. Si necesita transferir su licencia o tiene preguntas sobre su suscripci\u00f3n, p\u00f3ngase en contacto con el soporte a trav\u00e9s del Panel de BunkerWeb.</p> <p>Caracter\u00edsticas Pro</p> <p>Las caracter\u00edsticas Pro espec\u00edficas disponibles pueden evolucionar con el tiempo a medida que se agregan nuevas capacidades. El complemento Pro se encarga autom\u00e1ticamente de la instalaci\u00f3n y configuraci\u00f3n de todas las caracter\u00edsticas disponibles.</p> <p>Requisitos de Red</p> <p>El complemento Pro requiere acceso a Internet de salida para conectarse a la API de BunkerWeb para la verificaci\u00f3n de la licencia y para descargar los complementos premium. Aseg\u00farese de que su firewall permita conexiones a <code>api.bunkerweb.io</code> en el puerto 443 (HTTPS).</p>"},{"location":"es/features/#preguntas-frecuentes","title":"Preguntas Frecuentes","text":"<p>P: \u00bfQu\u00e9 sucede si mi licencia Pro expira?</p> <p>R: Si su licencia Pro expira, se desactivar\u00e1 el acceso a las caracter\u00edsticas y complementos premium. Sin embargo, su instalaci\u00f3n de BunkerWeb seguir\u00e1 funcionando con todas las caracter\u00edsticas de la edici\u00f3n comunitaria intactas. Para recuperar el acceso a las caracter\u00edsticas Pro, simplemente renueve su licencia.</p> <p>P: \u00bfLas caracter\u00edsticas Pro interrumpir\u00e1n mi configuraci\u00f3n existente?</p> <p>R: No, las caracter\u00edsticas Pro est\u00e1n dise\u00f1adas para integrarse sin problemas con su configuraci\u00f3n actual de BunkerWeb. Mejoran la funcionalidad sin alterar ni interferir con su configuraci\u00f3n existente, garantizando una experiencia fluida y confiable.</p> <p>P: \u00bfPuedo probar las caracter\u00edsticas Pro antes de comprometerme a una compra?</p> <p>R: \u00a1Absolutamente! BunkerWeb ofrece dos planes Pro para satisfacer sus necesidades:</p> <ul> <li>BunkerWeb PRO Standard: Acceso completo a las caracter\u00edsticas Pro sin soporte t\u00e9cnico.</li> <li>BunkerWeb PRO Enterprise: Acceso completo a las caracter\u00edsticas Pro con soporte t\u00e9cnico dedicado.</li> </ul> <p>Puede explorar las caracter\u00edsticas Pro con una prueba gratuita de 1 mes utilizando el c\u00f3digo de promoci\u00f3n <code>freetrial</code>. Visite el Panel de BunkerWeb para activar su prueba y obtener m\u00e1s informaci\u00f3n sobre las opciones de precios flexibles basadas en el n\u00famero de servicios protegidos por BunkerWeb PRO.</p>"},{"location":"es/features/#prometheus-exporter-pro","title":"Prometheus exporter  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Prometheus exporter for BunkerWeb internal metrics.</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_PROMETHEUS_EXPORTER</code> <code>no</code> global no Enable the Prometheus export. <code>PROMETHEUS_EXPORTER_IP</code> <code>0.0.0.0</code> global no Listening IP of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_PORT</code> <code>9113</code> global no Listening port of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_URL</code> <code>/metrics</code> global no HTTP URL of the Prometheus exporter. <code>PROMETHEUS_EXPORTER_ALLOW_IP</code> <code>127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16</code> global no List of IP/networks allowed to contact the Prometheus exporter endpoint."},{"location":"es/features/#real-ip","title":"Real IP","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de IP Real asegura que BunkerWeb identifique correctamente la direcci\u00f3n IP del cliente incluso cuando se encuentra detr\u00e1s de proxies. Esto es esencial para aplicar correctamente las reglas de seguridad, la limitaci\u00f3n de velocidad y el registro; sin \u00e9l, todas las solicitudes parecer\u00edan provenir de la IP de su proxy en lugar de la IP real del cliente.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando est\u00e1 habilitado, BunkerWeb examina las solicitudes entrantes en busca de encabezados espec\u00edficos (como <code>X-Forwarded-For</code>) que contienen la direcci\u00f3n IP original del cliente.</li> <li>BunkerWeb comprueba si la IP entrante est\u00e1 en su lista de proxies de confianza (<code>REAL_IP_FROM</code>), asegurando que solo los proxies leg\u00edtimos puedan pasar las IP de los clientes.</li> <li>La IP original del cliente se extrae del encabezado especificado (<code>REAL_IP_HEADER</code>) y se utiliza para todas las evaluaciones de seguridad y el registro.</li> <li>Para las cadenas de IP recursivas, BunkerWeb puede rastrear a trav\u00e9s de m\u00faltiples saltos de proxy para determinar la IP del cliente de origen.</li> <li>Adem\u00e1s, se puede habilitar el soporte para el protocolo PROXY para recibir las IP de los clientes directamente de proxies compatibles como HAProxy.</li> <li>Las listas de IP de proxies de confianza se pueden descargar y actualizar autom\u00e1ticamente desde fuentes externas a trav\u00e9s de URL.</li> </ol>"},{"location":"es/features/#como-usar_23","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de IP Real:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_REAL_IP</code> en <code>yes</code> para habilitar la detecci\u00f3n de la IP real.</li> <li>Defina los proxies de confianza: Enumere las direcciones IP o redes de sus proxies de confianza utilizando el ajuste <code>REAL_IP_FROM</code>.</li> <li>Especifique el encabezado: Configure qu\u00e9 encabezado contiene la IP real utilizando el ajuste <code>REAL_IP_HEADER</code>.</li> <li>Configure la recursividad: Decida si desea rastrear las cadenas de IP de forma recursiva con el ajuste <code>REAL_IP_RECURSIVE</code>.</li> <li>Fuentes de URL opcionales: Configure las descargas autom\u00e1ticas de listas de proxies de confianza con <code>REAL_IP_FROM_URLS</code>.</li> <li>Protocolo PROXY: Para la comunicaci\u00f3n directa con el proxy, habil\u00edtelo con <code>USE_PROXY_PROTOCOL</code> si su upstream lo admite.</li> </ol> <p>Advertencia sobre el Protocolo PROXY</p> <p>Habilitar <code>USE_PROXY_PROTOCOL</code> sin configurar correctamente su proxy upstream para enviar los encabezados del protocolo PROXY romper\u00e1 su aplicaci\u00f3n. Solo habilite este ajuste si est\u00e1 seguro de que su proxy upstream est\u00e1 configurado correctamente para enviar la informaci\u00f3n del protocolo PROXY. Si su proxy no est\u00e1 enviando los encabezados del protocolo PROXY, todas las conexiones a BunkerWeb fallar\u00e1n con errores de protocolo.</p>"},{"location":"es/features/#ajustes-de-configuracion_24","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_REAL_IP</code> <code>no</code> multisite no Habilitar IP Real: Establezca en <code>yes</code> para habilitar la obtenci\u00f3n de la IP real del cliente desde los encabezados o el protocolo PROXY. <code>REAL_IP_FROM</code> <code>192.168.0.0/16 172.16.0.0/12 10.0.0.0/8</code> multisite no Proxies de Confianza: Lista de direcciones IP o redes de confianza desde donde provienen las solicitudes de proxy, separadas por espacios. <code>REAL_IP_HEADER</code> <code>X-Forwarded-For</code> multisite no Encabezado de IP Real: Encabezado HTTP que contiene la IP real o el valor especial <code>proxy_protocol</code> para el protocolo PROXY. <code>REAL_IP_RECURSIVE</code> <code>yes</code> multisite no B\u00fasqueda Recursiva: Cuando se establece en <code>yes</code>, realiza una b\u00fasqueda recursiva en el encabezado que contiene m\u00faltiples direcciones IP. <code>REAL_IP_FROM_URLS</code> multisite no URL de la Lista de IP: URL que contienen las IP/redes de los proxies de confianza para descargar, separadas por espacios. Admite URL de tipo <code>file://</code>. <code>USE_PROXY_PROTOCOL</code> <code>no</code> global no Protocolo PROXY: Establezca en <code>yes</code> para habilitar el soporte del protocolo PROXY para la comunicaci\u00f3n directa de proxy a BunkerWeb. <p>Redes de Proveedores de la Nube</p> <p>Si est\u00e1 utilizando un proveedor de la nube como AWS, GCP o Azure, considere agregar los rangos de IP de sus balanceadores de carga a su ajuste <code>REAL_IP_FROM</code> para garantizar la correcta identificaci\u00f3n de la IP del cliente.</p> <p>Consideraciones de Seguridad</p> <p>Solo incluya las IP de los proxies de confianza en su configuraci\u00f3n. Agregar fuentes no confiables podr\u00eda permitir ataques de suplantaci\u00f3n de IP, donde los actores maliciosos podr\u00edan falsificar la IP del cliente manipulando los encabezados.</p> <p>M\u00faltiples Direcciones IP</p> <p>Cuando <code>REAL_IP_RECURSIVE</code> est\u00e1 habilitado y un encabezado contiene m\u00faltiples IP (p. ej., <code>X-Forwarded-For: cliente, proxy1, proxy2</code>), BunkerWeb identificar\u00e1 como la IP del cliente la IP m\u00e1s a la izquierda que no est\u00e9 en su lista de proxies de confianza.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_25","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaBalanceador de Carga en la NubeProtocolo PROXYM\u00faltiples Fuentes de Proxy con URLConfiguraci\u00f3n de CDNDetr\u00e1s de Cloudflare <p>Una configuraci\u00f3n simple para un sitio detr\u00e1s de un proxy inverso:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.1.0/24 10.0.0.5\"\nREAL_IP_HEADER: \"X-Forwarded-For\"\nREAL_IP_RECURSIVE: \"yes\"\n</code></pre> <p>Configuraci\u00f3n para un sitio detr\u00e1s de un balanceador de carga en la nube:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.0.0/16 172.16.0.0/12 10.0.0.0/8\"\nREAL_IP_HEADER: \"X-Forwarded-For\"\nREAL_IP_RECURSIVE: \"yes\"\n</code></pre> <p>Configuraci\u00f3n utilizando el protocolo PROXY con un balanceador de carga compatible:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.1.0/24\"\nREAL_IP_HEADER: \"proxy_protocol\"\nUSE_PROXY_PROTOCOL: \"yes\"\n</code></pre> <p>Configuraci\u00f3n avanzada con listas de IP de proxy actualizadas autom\u00e1ticamente:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.0.0/16 172.16.0.0/12 10.0.0.0/8\"\nREAL_IP_HEADER: \"X-Real-IP\"\nREAL_IP_RECURSIVE: \"yes\"\nREAL_IP_FROM_URLS: \"https://example.com/proxy-ips.txt file:///etc/bunkerweb/custom-proxies.txt\"\n</code></pre> <p>Configuraci\u00f3n para un sitio web detr\u00e1s de una CDN:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"192.168.0.0/16 172.16.0.0/12 10.0.0.0/8\"\nREAL_IP_FROM_URLS: \"https://cdn-provider.com/ip-ranges.txt\"\nREAL_IP_HEADER: \"CF-Connecting-IP\"  # Ejemplo para Cloudflare\nREAL_IP_RECURSIVE: \"no\"  # No es necesario con encabezados de una sola IP\n</code></pre> <p>Configuraci\u00f3n para un sitio web detr\u00e1s de Cloudflare:</p> <pre><code>USE_REAL_IP: \"yes\"\nREAL_IP_FROM: \"\" # Solo confiamos en las IPs de Cloudflare\nREAL_IP_FROM_URLS: \"https://www.cloudflare.com/ips-v4/ https://www.cloudflare.com/ips-v6/\" # Descargar las IPs de Cloudflare autom\u00e1ticamente\nREAL_IP_HEADER: \"CF-Connecting-IP\"  # Encabezado de Cloudflare para la IP del cliente\nREAL_IP_RECURSIVE: \"yes\"\n</code></pre>"},{"location":"es/features/#redirect","title":"Redirect","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Redirecci\u00f3n proporciona capacidades de redirecci\u00f3n HTTP simples y eficientes para sus sitios web protegidos por BunkerWeb. Esta funci\u00f3n le permite redirigir f\u00e1cilmente a los visitantes de una URL a otra, admitiendo tanto redirecciones de dominio completo, redirecciones de ruta espec\u00edficas como redirecciones que preservan la ruta.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un visitante accede a su sitio web, BunkerWeb verifica si hay una redirecci\u00f3n configurada.</li> <li>Si est\u00e1 habilitado, BunkerWeb redirige al visitante a la URL de destino especificada.</li> <li>Puede configurar si desea preservar la ruta de la solicitud original (agreg\u00e1ndola autom\u00e1ticamente a la URL de destino) o redirigir a la URL de destino exacta.</li> <li>El c\u00f3digo de estado HTTP utilizado para la redirecci\u00f3n se puede personalizar entre redirecciones permanentes (301) y temporales (302).</li> <li>Esta funcionalidad es ideal para migraciones de dominio, establecer dominios can\u00f3nicos o redirigir URL obsoletas.</li> </ol>"},{"location":"es/features/#como-usar_24","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y utilizar la funci\u00f3n de Redirecci\u00f3n:</p> <ol> <li>Establezca la ruta de origen: Configure la ruta desde la que se redirigir\u00e1 utilizando el ajuste <code>REDIRECT_FROM</code> (por ejemplo, <code>/</code>, <code>/old-page</code>).</li> <li>Establezca la URL de destino: Configure la URL de destino a la que se redirigir\u00e1 a los visitantes utilizando el ajuste <code>REDIRECT_TO</code>.</li> <li>Elija el tipo de redirecci\u00f3n: Decida si desea preservar la ruta de la solicitud original con el ajuste <code>REDIRECT_TO_REQUEST_URI</code>.</li> <li>Seleccione el c\u00f3digo de estado: Establezca el c\u00f3digo de estado HTTP apropiado con el ajuste <code>REDIRECT_TO_STATUS_CODE</code> para indicar una redirecci\u00f3n permanente o temporal.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, todas las solicitudes al sitio se redirigir\u00e1n autom\u00e1ticamente seg\u00fan su configuraci\u00f3n.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_25","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REDIRECT_FROM</code> <code>/</code> multisite yes Ruta desde la que redirigir: La ruta que se redirigir\u00e1. <code>REDIRECT_TO</code> multisite yes URL de destino: La URL de destino a la que se redirigir\u00e1 a los visitantes. Deje en blanco para deshabilitar la redirecci\u00f3n. <code>REDIRECT_TO_REQUEST_URI</code> <code>no</code> multisite yes Preservar ruta: Cuando se establece en <code>yes</code>, agrega el URI de la solicitud original a la URL de destino. <code>REDIRECT_TO_STATUS_CODE</code> <code>301</code> multisite yes C\u00f3digo de estado HTTP: El c\u00f3digo de estado HTTP a utilizar para la redirecci\u00f3n. Opciones: <code>301</code> (permanente) o <code>302</code> (temporal). <p>!!! tip \"Elegir el C\u00f3digo de Estado Correcto\" - Use <code>301</code> (Movido Permanentemente) cuando la redirecci\u00f3n es permanente, como para migraciones de dominio o para establecer URL can\u00f3nicas. Esto ayuda a los motores de b\u00fasqueda a actualizar sus \u00edndices. - Use <code>302</code> (Encontrado/Redirecci\u00f3n Temporal) cuando la redirecci\u00f3n es temporal o si desea reutilizar la URL original en el futuro.</p> <p>Preservaci\u00f3n de la Ruta</p> <p>Cuando <code>REDIRECT_TO_REQUEST_URI</code> se establece en <code>yes</code>, BunkerWeb preserva la ruta de la solicitud original. Por ejemplo, si un usuario visita <code>https://dominio-antiguo.com/blog/post-1</code> y ha configurado una redirecci\u00f3n a <code>https://dominio-nuevo.com</code>, ser\u00e1 redirigido a <code>https://dominio-nuevo.com/blog/post-1</code>.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_26","title":"Configuraciones de Ejemplo","text":"Redirecci\u00f3n de M\u00faltiples RutasRedirecci\u00f3n de Dominio SimpleRedirecci\u00f3n con Preservaci\u00f3n de RutaRedirecci\u00f3n TemporalConsolidaci\u00f3n de Subdominios <p>Una configuraci\u00f3n que redirige m\u00faltiples rutas a diferentes destinos:</p> <pre><code># Redirigir /blog a un nuevo dominio de blog\nREDIRECT_FROM: \"/blog/\"\nREDIRECT_TO: \"https://blog.example.com/\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n\n# Redirigir /shop a otro dominio\nREDIRECT_FROM_2: \"/shop/\"\nREDIRECT_TO_2: \"https://shop.example.com/\"\nREDIRECT_TO_REQUEST_URI_2: \"no\"\nREDIRECT_TO_STATUS_CODE_2: \"301\"\n\n# Redirigir el resto del sitio\nREDIRECT_FROM_3: \"/\"\nREDIRECT_TO_3: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI_3: \"no\"\nREDIRECT_TO_STATUS_CODE_3: \"301\"\n</code></pre> <p>Una configuraci\u00f3n que redirige a todos los visitantes a un nuevo dominio:</p> <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> <p>Una configuraci\u00f3n que redirige a los visitantes a un nuevo dominio mientras preserva la ruta solicitada:</p> <pre><code>REDIRECT_TO: \"https://new-domain.com\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre> <p>Una configuraci\u00f3n para una redirecci\u00f3n temporal a un sitio de mantenimiento:</p> <pre><code>REDIRECT_TO: \"https://maintenance.example.com\"\nREDIRECT_TO_REQUEST_URI: \"no\"\nREDIRECT_TO_STATUS_CODE: \"302\"\n</code></pre> <p>Una configuraci\u00f3n para redirigir un subdominio a una ruta espec\u00edfica en el dominio principal:</p> <pre><code>REDIRECT_TO: \"https://example.com/support\"\nREDIRECT_TO_REQUEST_URI: \"yes\"\nREDIRECT_TO_STATUS_CODE: \"301\"\n</code></pre>"},{"location":"es/features/#redis","title":"Redis","text":"<p>Compatibilidad con STREAM </p> <p>El complemento Redis integra Redis o Valkey en BunkerWeb para el almacenamiento en cach\u00e9 y la recuperaci\u00f3n r\u00e1pida de datos. Esta funci\u00f3n es esencial para implementar BunkerWeb en entornos de alta disponibilidad donde los datos de sesi\u00f3n, las m\u00e9tricas y otra informaci\u00f3n compartida deben ser accesibles a trav\u00e9s de m\u00faltiples nodos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando est\u00e1 habilitado, BunkerWeb establece una conexi\u00f3n con su servidor Redis o Valkey configurado.</li> <li>Los datos cr\u00edticos como la informaci\u00f3n de la sesi\u00f3n, las m\u00e9tricas y los datos relacionados con la seguridad se almacenan en Redis/Valkey.</li> <li>M\u00faltiples instancias de BunkerWeb pueden compartir estos datos, lo que permite la agrupaci\u00f3n en cl\u00faster y el equilibrio de carga sin problemas.</li> <li>El complemento admite varias opciones de implementaci\u00f3n de Redis/Valkey, incluidos servidores independientes, autenticaci\u00f3n con contrase\u00f1a, cifrado SSL/TLS y Redis Sentinel para alta disponibilidad.</li> <li>La reconexi\u00f3n autom\u00e1tica y los tiempos de espera configurables garantizan la solidez en los entornos de producci\u00f3n.</li> </ol>"},{"location":"es/features/#como-usar_25","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar el complemento de Redis:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_REDIS</code> en <code>yes</code> para habilitar la integraci\u00f3n de Redis/Valkey.</li> <li>Configure los detalles de la conexi\u00f3n: Especifique el nombre de host/direcci\u00f3n IP y el puerto de su servidor Redis/Valkey.</li> <li>Establezca las opciones de seguridad: Configure las credenciales de autenticaci\u00f3n si su servidor Redis/Valkey las requiere.</li> <li>Configure las opciones avanzadas: Establezca la selecci\u00f3n de la base de datos, las opciones de SSL y los tiempos de espera seg\u00fan sea necesario.</li> <li>Para alta disponibilidad, configure los ajustes de Sentinel si est\u00e1 utilizando Redis Sentinel.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_26","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_REDIS</code> <code>no</code> global no Habilitar Redis: Establezca en <code>yes</code> para habilitar la integraci\u00f3n de Redis/Valkey para el modo de cl\u00faster. <code>REDIS_HOST</code> global no Servidor Redis/Valkey: Direcci\u00f3n IP o nombre de host del servidor Redis/Valkey. <code>REDIS_PORT</code> <code>6379</code> global no Puerto Redis/Valkey: N\u00famero de puerto del servidor Redis/Valkey. <code>REDIS_DATABASE</code> <code>0</code> global no Base de datos Redis/Valkey: N\u00famero de base de datos a utilizar en el servidor Redis/Valkey (0-15). <code>REDIS_SSL</code> <code>no</code> global no SSL de Redis/Valkey: Establezca en <code>yes</code> para habilitar el cifrado SSL/TLS para la conexi\u00f3n de Redis/Valkey. <code>REDIS_SSL_VERIFY</code> <code>yes</code> global no Verificaci\u00f3n SSL de Redis/Valkey: Establezca en <code>yes</code> para verificar el certificado SSL del servidor Redis/Valkey. <code>REDIS_TIMEOUT</code> <code>5</code> global no Tiempo de espera de Redis/Valkey: Tiempo de espera de la conexi\u00f3n en segundos para las operaciones de Redis/Valkey. <code>REDIS_USERNAME</code> global no Nombre de usuario de Redis/Valkey: Nombre de usuario para la autenticaci\u00f3n de Redis/Valkey (Redis 6.0+). <code>REDIS_PASSWORD</code> global no Contrase\u00f1a de Redis/Valkey: Contrase\u00f1a para la autenticaci\u00f3n de Redis/Valkey. <code>REDIS_SENTINEL_HOSTS</code> global no Hosts de Sentinel: Lista de hosts de Redis Sentinel separados por espacios (nombredehost:puerto). <code>REDIS_SENTINEL_USERNAME</code> global no Nombre de usuario de Sentinel: Nombre de usuario para la autenticaci\u00f3n de Redis Sentinel. <code>REDIS_SENTINEL_PASSWORD</code> global no Contrase\u00f1a de Sentinel: Contrase\u00f1a para la autenticaci\u00f3n de Redis Sentinel. <code>REDIS_SENTINEL_MASTER</code> <code>mymaster</code> global no Maestro de Sentinel: Nombre del maestro en la configuraci\u00f3n de Redis Sentinel. <code>REDIS_KEEPALIVE_IDLE</code> <code>300</code> global no Tiempo de inactividad de keepalive: Tiempo (en segundos) entre las sondas TCP keepalive para conexiones inactivas. <code>REDIS_KEEPALIVE_POOL</code> <code>3</code> global no Grupo de keepalive: N\u00famero m\u00e1ximo de conexiones de Redis/Valkey mantenidas en el grupo. <p>Alta Disponibilidad con Redis Sentinel</p> <p>Para entornos de producci\u00f3n que requieren alta disponibilidad, configure los ajustes de Redis Sentinel. Esto proporciona capacidades de conmutaci\u00f3n por error autom\u00e1tica si el servidor Redis principal deja de estar disponible.</p> <p>Consideraciones de Seguridad</p> <p>Cuando utilice Redis en producci\u00f3n:</p> <pre><code>-   Establezca siempre contrase\u00f1as seguras tanto para la autenticaci\u00f3n de Redis como de Sentinel\n-   Considere habilitar el cifrado SSL/TLS para las conexiones de Redis\n-   Aseg\u00farese de que su servidor Redis no est\u00e9 expuesto a la Internet p\u00fablica\n-   Restrinja el acceso al puerto de Redis mediante cortafuegos o segmentaci\u00f3n de red\n</code></pre> <p>Requisitos del Cl\u00faster</p> <p>Al implementar BunkerWeb en un cl\u00faster:</p> <pre><code>-   Todas las instancias de BunkerWeb deben conectarse al mismo servidor Redis o Valkey o al cl\u00faster de Sentinel\n-   Configure el mismo n\u00famero de base de datos en todas las instancias\n-   Aseg\u00farese de que haya conectividad de red entre todas las instancias de BunkerWeb y los servidores Redis/Valkey\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_27","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaConfiguraci\u00f3n SeguraConfiguraci\u00f3n de Redis SentinelAjuste Avanzado <p>Una configuraci\u00f3n simple para conectarse a un servidor Redis o Valkey en la m\u00e1quina local:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"localhost\"\nREDIS_PORT: \"6379\"\n</code></pre> <p>Configuraci\u00f3n con autenticaci\u00f3n por contrase\u00f1a y SSL habilitado:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_SSL: \"yes\"\nREDIS_SSL_VERIFY: \"yes\"\n</code></pre> <p>Configuraci\u00f3n para alta disponibilidad utilizando Redis Sentinel:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_SENTINEL_HOSTS: \"sentinel1:26379 sentinel2:26379 sentinel3:26379\"\nREDIS_SENTINEL_MASTER: \"mymaster\"\nREDIS_SENTINEL_PASSWORD: \"sentinel-password\"\nREDIS_PASSWORD: \"redis-password\"\n</code></pre> <p>Configuraci\u00f3n con par\u00e1metros de conexi\u00f3n avanzados para la optimizaci\u00f3n del rendimiento:</p> <pre><code>USE_REDIS: \"yes\"\nREDIS_HOST: \"redis.example.com\"\nREDIS_PORT: \"6379\"\nREDIS_PASSWORD: \"your-strong-password\"\nREDIS_DATABASE: \"3\"\nREDIS_TIMEOUT: \"3\"\nREDIS_KEEPALIVE_IDLE: \"60\"\nREDIS_KEEPALIVE_POOL: \"5\"\n</code></pre>"},{"location":"es/features/#mejores-practicas-de-redis","title":"Mejores Pr\u00e1cticas de Redis","text":"<p>Cuando utilice Redis o Valkey con BunkerWeb, considere estas mejores pr\u00e1cticas para garantizar un rendimiento, seguridad y fiabilidad \u00f3ptimos:</p>"},{"location":"es/features/#gestion-de-la-memoria","title":"Gesti\u00f3n de la Memoria","text":"<ul> <li>Supervise el uso de la memoria: Configure Redis con los ajustes <code>maxmemory</code> apropiados para evitar errores de falta de memoria</li> <li>Establezca una pol\u00edtica de desalojo: Utilice <code>maxmemory-policy</code> (p. ej., <code>volatile-lru</code> o <code>allkeys-lru</code>) apropiada para su caso de uso</li> <li>Evite claves grandes: Aseg\u00farese de que las claves individuales de Redis se mantengan en un tama\u00f1o razonable para evitar la degradaci\u00f3n del rendimiento</li> </ul>"},{"location":"es/features/#persistencia-de-datos","title":"Persistencia de Datos","text":"<ul> <li>Habilite las instant\u00e1neas RDB: Configure instant\u00e1neas peri\u00f3dicas para la persistencia de datos sin un impacto significativo en el rendimiento</li> <li>Considere AOF: Para datos cr\u00edticos, habilite la persistencia AOF (Append-Only File) con una pol\u00edtica de <code>fsync</code> apropiada</li> <li>Estrategia de copia de seguridad: Implemente copias de seguridad regulares de Redis como parte de su plan de recuperaci\u00f3n de desastres</li> </ul>"},{"location":"es/features/#optimizacion-del-rendimiento","title":"Optimizaci\u00f3n del Rendimiento","text":"<ul> <li>Agrupaci\u00f3n de conexiones: BunkerWeb ya implementa esto, pero aseg\u00farese de que otras aplicaciones sigan esta pr\u00e1ctica</li> <li>Canalizaci\u00f3n: Cuando sea posible, utilice la canalizaci\u00f3n para operaciones masivas para reducir la sobrecarga de la red</li> <li>Evite operaciones costosas: Tenga cuidado con comandos como <code>KEYS</code> en entornos de producci\u00f3n</li> <li>Compare su carga de trabajo: Utilice <code>redis-benchmark</code> para probar sus patrones de carga de trabajo espec\u00edficos</li> </ul>"},{"location":"es/features/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n de Redis</li> <li>Gu\u00eda de Seguridad de Redis</li> <li>Alta Disponibilidad de Redis</li> <li>Persistencia de Redis</li> </ul>"},{"location":"es/features/#reporting-pro","title":"Reporting  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Regular reporting of important data from BunkerWeb (global, attacks, bans, requests, reasons, AS...). Monitoring pro plugin needed to work.</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_REPORTING_SMTP</code> <code>no</code> global no Enable sending the report via email. <code>USE_REPORTING_WEBHOOK</code> <code>no</code> global no Enable sending the report via webhook. <code>REPORTING_SCHEDULE</code> <code>weekly</code> global no The frequency at which reports are sent. <code>REPORTING_WEBHOOK_URLS</code> global no List of webhook URLs to receive the report in Markdown (separated by spaces). <code>REPORTING_SMTP_EMAILS</code> global no List of email addresses to receive the report in HTML format (separated by spaces). <code>REPORTING_SMTP_HOST</code> global no The host server used for SMTP sending. <code>REPORTING_SMTP_PORT</code> <code>465</code> global no The port used for SMTP. Please note that there are different standards depending on the type of connection (SSL = 465, TLS = 587). <code>REPORTING_SMTP_FROM_EMAIL</code> global no The email address used as the sender. Note that 2FA must be disabled for this email address. <code>REPORTING_SMTP_FROM_USER</code> global no The user authentication value for sending via the from email address. <code>REPORTING_SMTP_FROM_PASSWORD</code> global no The password authentication value for sending via the from email address. <code>REPORTING_SMTP_SSL</code> <code>SSL</code> global no Determine whether or not to use a secure connection for SMTP. <code>REPORTING_SMTP_SUBJECT</code> <code>BunkerWeb Report</code> global no The subject line of the email."},{"location":"es/features/#reverse-proxy","title":"Reverse proxy","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Proxy Inverso proporciona capacidades de proxy sin interrupciones para BunkerWeb, lo que le permite enrutar solicitudes a servidores y servicios de backend. Esta funci\u00f3n permite que BunkerWeb act\u00fae como un frontend seguro para sus aplicaciones al tiempo que proporciona beneficios adicionales como la terminaci\u00f3n de SSL y el filtrado de seguridad.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente env\u00eda una solicitud a BunkerWeb, el complemento de Proxy Inverso reenv\u00eda la solicitud a su servidor de backend configurado.</li> <li>BunkerWeb agrega encabezados de seguridad, aplica reglas de WAF y realiza otras verificaciones de seguridad antes de pasar las solicitudes a su aplicaci\u00f3n.</li> <li>El servidor de backend procesa la solicitud y devuelve una respuesta a BunkerWeb.</li> <li>BunkerWeb aplica medidas de seguridad adicionales a la respuesta antes de enviarla de vuelta al cliente.</li> <li>El complemento admite el proxy de flujo tanto HTTP como TCP/UDP, lo que permite una amplia gama de aplicaciones, incluidos WebSockets y otros protocolos no HTTP.</li> </ol>"},{"location":"es/features/#como-usar_26","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Proxy Inverso:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_REVERSE_PROXY</code> en <code>yes</code> para habilitar la funcionalidad de proxy inverso.</li> <li>Configure sus servidores de backend: Especifique los servidores upstream utilizando el ajuste <code>REVERSE_PROXY_HOST</code>.</li> <li>Ajuste la configuraci\u00f3n del proxy: Afine el comportamiento con ajustes opcionales para tiempos de espera, tama\u00f1os de b\u00fafer y otros par\u00e1metros.</li> <li>Configure las opciones espec\u00edficas del protocolo: Para WebSockets o requisitos HTTP especiales, ajuste la configuraci\u00f3n correspondiente.</li> <li>Configure el almacenamiento en cach\u00e9 (opcional): Habilite y configure el almacenamiento en cach\u00e9 del proxy para mejorar el rendimiento del contenido al que se accede con frecuencia.</li> </ol>"},{"location":"es/features/#guia-de-configuracion_2","title":"Gu\u00eda de Configuraci\u00f3n","text":"Configuraci\u00f3n B\u00e1sica <p>Ajustes Principales</p> <p>Los ajustes de configuraci\u00f3n esenciales habilitan y controlan la funcionalidad b\u00e1sica de la funci\u00f3n de proxy inverso.</p> <p>Beneficios del Proxy Inverso</p> <ul> <li>Mejora de la Seguridad: Todo el tr\u00e1fico pasa a trav\u00e9s de las capas de seguridad de BunkerWeb antes de llegar a sus aplicaciones</li> <li>Terminaci\u00f3n SSL: Administre los certificados SSL/TLS de forma centralizada mientras que los servicios de backend pueden usar conexiones no cifradas</li> <li>Manejo de Protocolos: Soporte para HTTP, HTTPS, WebSockets y otros protocolos</li> <li>Interceptaci\u00f3n de Errores: Personalice las p\u00e1ginas de error para una experiencia de usuario consistente</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_REVERSE_PROXY</code> <code>no</code> multisite no Habilitar Proxy Inverso: Establezca en <code>yes</code> para habilitar la funcionalidad de proxy inverso. <code>REVERSE_PROXY_HOST</code> multisite yes Host de Backend: URL completa del recurso al que se hace proxy (proxy_pass). <code>REVERSE_PROXY_URL</code> <code>/</code> multisite yes URL de Ubicaci\u00f3n: Ruta que se enviar\u00e1 al servidor de backend. <code>REVERSE_PROXY_BUFFERING</code> <code>yes</code> multisite yes Almacenamiento en B\u00fafer de Respuesta: Habilite o deshabilite el almacenamiento en b\u00fafer de las respuestas del recurso al que se hace proxy. <code>REVERSE_PROXY_KEEPALIVE</code> <code>no</code> multisite yes Keep-Alive: Habilite o deshabilite las conexiones keepalive con el recurso al que se hace proxy. <code>REVERSE_PROXY_CUSTOM_HOST</code> multisite no Host Personalizado: Anule el encabezado Host enviado al servidor upstream. <code>REVERSE_PROXY_INTERCEPT_ERRORS</code> <code>yes</code> multisite no Interceptar Errores: Si se deben interceptar y reescribir las respuestas de error del backend. <pre><code>!!! tip \"Mejores Pr\u00e1cticas\"\n    - Siempre especifique la URL completa en `REVERSE_PROXY_HOST`, incluido el protocolo (http:// o https://)\n    - Use `REVERSE_PROXY_INTERCEPT_ERRORS` para proporcionar p\u00e1ginas de error consistentes en todos sus servicios\n    - Al configurar m\u00faltiples backends, use el formato de sufijo numerado (por ejemplo, `REVERSE_PROXY_HOST_2`, `REVERSE_PROXY_URL_2`)\n</code></pre> Ajustes de Conexi\u00f3n <p>Configuraci\u00f3n de Conexi\u00f3n y Tiempo de Espera</p> <p>Estos ajustes controlan el comportamiento de la conexi\u00f3n, el almacenamiento en b\u00fafer y los valores de tiempo de espera para las conexiones con proxy.</p> <p>Beneficios</p> <ul> <li>Rendimiento Optimizado: Ajuste los tama\u00f1os de los b\u00faferes y la configuraci\u00f3n de la conexi\u00f3n seg\u00fan las necesidades de su aplicaci\u00f3n</li> <li>Gesti\u00f3n de Recursos: Controle el uso de la memoria mediante configuraciones de b\u00fafer adecuadas</li> <li>Fiabilidad: Configure los tiempos de espera adecuados para manejar conexiones lentas o problemas de backend</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REVERSE_PROXY_CONNECT_TIMEOUT</code> <code>60s</code> multisite yes Tiempo de Espera de Conexi\u00f3n: Tiempo m\u00e1ximo para establecer una conexi\u00f3n con el servidor de backend. <code>REVERSE_PROXY_READ_TIMEOUT</code> <code>60s</code> multisite yes Tiempo de Espera de Lectura: Tiempo m\u00e1ximo entre las transmisiones de dos paquetes sucesivos desde el servidor de backend. <code>REVERSE_PROXY_SEND_TIMEOUT</code> <code>60s</code> multisite yes Tiempo de Espera de Env\u00edo: Tiempo m\u00e1ximo entre las transmisiones de dos paquetes sucesivos al servidor de backend. <code>PROXY_BUFFERS</code> multisite no B\u00faferes: N\u00famero y tama\u00f1o de los b\u00faferes para leer la respuesta del servidor de backend. <code>PROXY_BUFFER_SIZE</code> multisite no Tama\u00f1o del B\u00fafer: Tama\u00f1o del b\u00fafer para leer la primera parte de la respuesta del servidor de backend. <code>PROXY_BUSY_BUFFERS_SIZE</code> multisite no Tama\u00f1o de los B\u00faferes Ocupados: Tama\u00f1o de los b\u00faferes que pueden estar ocupados enviando la respuesta al cliente. <pre><code>!!! warning \"Consideraciones sobre el Tiempo de Espera\"\n    - Establecer tiempos de espera demasiado bajos puede hacer que se terminen las conexiones leg\u00edtimas pero lentas\n    - Establecer tiempos de espera demasiado altos puede dejar las conexiones abiertas innecesariamente, lo que podr\u00eda agotar los recursos\n    - Para las aplicaciones WebSocket, aumente significativamente los tiempos de espera de lectura y env\u00edo (se recomienda 300s o m\u00e1s)\n</code></pre> Configuraci\u00f3n SSL/TLS <p>Ajustes SSL/TLS para Conexiones de Backend</p> <p>Estos ajustes controlan c\u00f3mo BunkerWeb establece conexiones seguras con los servidores de backend.</p> <p>Beneficios</p> <ul> <li>Cifrado de Extremo a Extremo: Mantenga las conexiones cifradas desde el cliente hasta el backend</li> <li>Validaci\u00f3n de Certificados: Controle c\u00f3mo se validan los certificados del servidor de backend</li> <li>Soporte SNI: Especifique la Indicaci\u00f3n del Nombre del Servidor para los backends que alojan m\u00faltiples sitios</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REVERSE_PROXY_SSL_SNI</code> <code>no</code> multisite no SSL SNI: Habilite o deshabilite el env\u00edo de SNI (Indicaci\u00f3n del Nombre del Servidor) al upstream. <code>REVERSE_PROXY_SSL_SNI_NAME</code> multisite no Nombre de SSL SNI: Establece el nombre de host de SNI que se enviar\u00e1 al upstream cuando SSL SNI est\u00e9 habilitado. <pre><code>!!! info \"SNI Explicado\"\n    La Indicaci\u00f3n del Nombre del Servidor (SNI) es una extensi\u00f3n de TLS que permite a un cliente especificar el nombre de host al que intenta conectarse durante el proceso de handshake. Esto permite a los servidores presentar m\u00faltiples certificados en la misma direcci\u00f3n IP y puerto, lo que permite que m\u00faltiples sitios web seguros (HTTPS) se sirvan desde una \u00fanica direcci\u00f3n IP sin requerir que todos esos sitios usen el mismo certificado.\n</code></pre> Soporte de Protocolo <p>Configuraci\u00f3n Espec\u00edfica del Protocolo</p> <p>Configure el manejo especial de protocolos, particularmente para WebSockets y otros protocolos no HTTP.</p> <p>Beneficios</p> <ul> <li>Flexibilidad de Protocolo: El soporte para WebSockets permite aplicaciones en tiempo real</li> <li>Aplicaciones Web Modernas: Habilite caracter\u00edsticas interactivas que requieren comunicaci\u00f3n bidireccional</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REVERSE_PROXY_WS</code> <code>no</code> multisite yes Soporte de WebSocket: Habilite el protocolo WebSocket en el recurso. <pre><code>!!! tip \"Configuraci\u00f3n de WebSocket\"\n    - Al habilitar WebSockets con `REVERSE_PROXY_WS: \"yes\"`, considere aumentar los valores de tiempo de espera\n    - Las conexiones WebSocket permanecen abiertas m\u00e1s tiempo que las conexiones HTTP t\u00edpicas\n    - Para las aplicaciones WebSocket, una configuraci\u00f3n recomendada es:\n      ```yaml\n      REVERSE_PROXY_WS: \"yes\"\n      REVERSE_PROXY_READ_TIMEOUT: \"300s\"\n      REVERSE_PROXY_SEND_TIMEOUT: \"300s\"\n      ```\n</code></pre> Gesti\u00f3n de Encabezados <p>Configuraci\u00f3n de Encabezados HTTP</p> <p>Controle qu\u00e9 encabezados se env\u00edan a los servidores de backend y a los clientes, lo que le permite agregar, modificar o preservar los encabezados HTTP.</p> <p>Beneficios</p> <ul> <li>Control de la Informaci\u00f3n: Administre con precisi\u00f3n qu\u00e9 informaci\u00f3n se comparte entre los clientes y los backends</li> <li>Mejora de la Seguridad: Agregue encabezados relacionados con la seguridad o elimine los encabezados que podr\u00edan filtrar informaci\u00f3n sensible</li> <li>Soporte de Integraci\u00f3n: Proporcione los encabezados necesarios para la autenticaci\u00f3n y el correcto funcionamiento del backend</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REVERSE_PROXY_HEADERS</code> multisite yes Encabezados Personalizados: Encabezados HTTP para enviar al backend separados por punto y coma. <code>REVERSE_PROXY_HIDE_HEADERS</code> <code>Upgrade</code> multisite yes Ocultar Encabezados: Encabezados HTTP para ocultar a los clientes cuando se reciben del backend. <code>REVERSE_PROXY_HEADERS_CLIENT</code> multisite yes Encabezados del Cliente: Encabezados HTTP para enviar al cliente separados por punto y coma. <code>REVERSE_PROXY_UNDERSCORES_IN_HEADERS</code> <code>no</code> multisite no Guiones Bajos en los Encabezados: Habilite o deshabilite la directiva <code>underscores_in_headers</code>. <pre><code>!!! warning \"Consideraciones de Seguridad\"\n    Al usar la funci\u00f3n de proxy inverso, tenga cuidado con los encabezados que reenv\u00eda a sus aplicaciones de backend. Ciertos encabezados pueden exponer informaci\u00f3n sensible sobre su infraestructura o eludir los controles de seguridad.\n\n!!! example \"Ejemplos de Formato de Encabezado\"\n    Encabezados personalizados para los servidores de backend:\n    ```\n    REVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n    ```\n\n    Encabezados personalizados para los clientes:\n    ```\n    REVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n    ```\n</code></pre> Autenticaci\u00f3n <p>Configuraci\u00f3n de Autenticaci\u00f3n Externa</p> <p>Integre con sistemas de autenticaci\u00f3n externos para centralizar la l\u00f3gica de autorizaci\u00f3n en sus aplicaciones.</p> <p>Beneficios</p> <ul> <li>Autenticaci\u00f3n Centralizada: Implemente un \u00fanico punto de autenticaci\u00f3n para m\u00faltiples aplicaciones</li> <li>Seguridad Consistente: Aplique pol\u00edticas de autenticaci\u00f3n uniformes en diferentes servicios</li> <li>Control Mejorado: Reenv\u00ede los detalles de la autenticaci\u00f3n a las aplicaciones de backend a trav\u00e9s de encabezados o variables</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REVERSE_PROXY_AUTH_REQUEST</code> multisite yes Solicitud de Autenticaci\u00f3n: Habilite la autenticaci\u00f3n mediante un proveedor externo. <code>REVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL</code> multisite yes URL de Inicio de Sesi\u00f3n: Redirija a los clientes a la URL de inicio de sesi\u00f3n cuando falle la autenticaci\u00f3n. <code>REVERSE_PROXY_AUTH_REQUEST_SET</code> multisite yes Conjunto de Solicitudes de Autenticaci\u00f3n: Variables a establecer desde el proveedor de autenticaci\u00f3n. <pre><code>!!! tip \"Integraci\u00f3n de Autenticaci\u00f3n\"\n    - La funci\u00f3n de solicitud de autenticaci\u00f3n permite la implementaci\u00f3n de microservicios de autenticaci\u00f3n centralizados\n    - Su servicio de autenticaci\u00f3n debe devolver un c\u00f3digo de estado 200 para una autenticaci\u00f3n exitosa o 401/403 para fallas\n    - Use la directiva `auth_request_set` para extraer y reenviar informaci\u00f3n del servicio de autenticaci\u00f3n\n</code></pre> Configuraci\u00f3n Avanzada <p>Opciones de Configuraci\u00f3n Adicionales</p> <p>Estos ajustes proporcionan una mayor personalizaci\u00f3n del comportamiento del proxy inverso para escenarios especializados.</p> <p>Beneficios</p> <ul> <li>Personalizaci\u00f3n: Incluya fragmentos de configuraci\u00f3n adicionales para requisitos complejos</li> <li>Optimizaci\u00f3n del Rendimiento: Afine el manejo de solicitudes para casos de uso espec\u00edficos</li> <li>Flexibilidad: Ad\u00e1ptese a los requisitos \u00fanicos de la aplicaci\u00f3n con configuraciones especializadas</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REVERSE_PROXY_INCLUDES</code> multisite yes Configuraciones Adicionales: Incluya configuraciones adicionales en el bloque de ubicaci\u00f3n. <code>REVERSE_PROXY_PASS_REQUEST_BODY</code> <code>yes</code> multisite yes Pasar el Cuerpo de la Solicitud: Habilite o deshabilite el paso del cuerpo de la solicitud. <pre><code>!!! warning \"Consideraciones de Seguridad\"\n    Tenga cuidado al incluir fragmentos de configuraci\u00f3n personalizados, ya que pueden anular la configuraci\u00f3n de seguridad de BunkerWeb o introducir vulnerabilidades si no se configuran correctamente.\n</code></pre> Configuraci\u00f3n de Cach\u00e9 <p>Ajustes de Almacenamiento en Cach\u00e9 de Respuestas</p> <p>Mejore el rendimiento almacenando en cach\u00e9 las respuestas de los servidores de backend, reduciendo la carga y mejorando los tiempos de respuesta.</p> <p>Beneficios</p> <ul> <li>Rendimiento: Reduzca la carga en los servidores de backend sirviendo contenido en cach\u00e9</li> <li>Latencia Reducida: Tiempos de respuesta m\u00e1s r\u00e1pidos para el contenido solicitado con frecuencia</li> <li>Ahorro de Ancho de Banda: Minimice el tr\u00e1fico de la red interna almacenando en cach\u00e9 las respuestas</li> <li>Personalizaci\u00f3n: Configure exactamente qu\u00e9, cu\u00e1ndo y c\u00f3mo se almacena en cach\u00e9 el contenido</li> </ul> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_PROXY_CACHE</code> <code>no</code> multisite no Habilitar Cach\u00e9: Establezca en <code>yes</code> para habilitar el almacenamiento en cach\u00e9 de las respuestas del backend. <code>PROXY_CACHE_PATH_LEVELS</code> <code>1:2</code> global no Niveles de Ruta de Cach\u00e9: C\u00f3mo estructurar la jerarqu\u00eda del directorio de cach\u00e9. <code>PROXY_CACHE_PATH_ZONE_SIZE</code> <code>10m</code> global no Tama\u00f1o de la Zona de Cach\u00e9: Tama\u00f1o de la zona de memoria compartida utilizada para los metadatos de la cach\u00e9. <code>PROXY_CACHE_PATH_PARAMS</code> <code>max_size=100m</code> global no Par\u00e1metros de la Ruta de Cach\u00e9: Par\u00e1metros adicionales para la ruta de la cach\u00e9. <code>PROXY_CACHE_METHODS</code> <code>GET HEAD</code> multisite no M\u00e9todos de Cach\u00e9: M\u00e9todos HTTP que se pueden almacenar en cach\u00e9. <code>PROXY_CACHE_MIN_USES</code> <code>2</code> multisite no Usos M\u00ednimos de Cach\u00e9: N\u00famero m\u00ednimo de solicitudes antes de que una respuesta se almacene en cach\u00e9. <code>PROXY_CACHE_KEY</code> <code>$scheme$host$request_uri</code> multisite no Clave de Cach\u00e9: La clave utilizada para identificar de forma \u00fanica una respuesta en cach\u00e9. <code>PROXY_CACHE_VALID</code> <code>200=24h 301=1h 302=24h</code> multisite no Validez de la Cach\u00e9: Cu\u00e1nto tiempo almacenar en cach\u00e9 los c\u00f3digos de respuesta espec\u00edficos. <code>PROXY_NO_CACHE</code> <code>$http_pragma $http_authorization</code> multisite no Sin Cach\u00e9: Condiciones para no almacenar en cach\u00e9 las respuestas aunque normalmente sean almacenables en cach\u00e9. <code>PROXY_CACHE_BYPASS</code> <code>0</code> multisite no Omitir Cach\u00e9: Condiciones bajo las cuales omitir la cach\u00e9. <pre><code>!!! tip \"Mejores Pr\u00e1cticas de Almacenamiento en Cach\u00e9\"\n    - Almacene en cach\u00e9 solo el contenido que no cambia con frecuencia o no es personalizado\n    - Use duraciones de cach\u00e9 apropiadas seg\u00fan el tipo de contenido (los activos est\u00e1ticos se pueden almacenar en cach\u00e9 por m\u00e1s tiempo)\n    - Configure `PROXY_NO_CACHE` para evitar almacenar en cach\u00e9 contenido sensible o personalizado\n    - Supervise las tasas de aciertos de la cach\u00e9 y ajuste la configuraci\u00f3n en consecuencia\n</code></pre> <p>Usuarios de Docker Compose - Variables de NGINX</p> <p>Al usar Docker Compose con variables de NGINX en sus configuraciones, debe escapar el signo de d\u00f3lar (<code>$</code>) usando signos de d\u00f3lar dobles (<code>$$</code>). Esto se aplica a todos los ajustes que contienen variables de NGINX como <code>$remote_addr</code>, <code>$proxy_add_x_forwarded_for</code>, etc.</p> <pre><code>Sin este escape, Docker Compose intentar\u00e1 sustituir estas variables por variables de entorno, que normalmente no existen, lo que dar\u00e1 como resultado valores vac\u00edos en su configuraci\u00f3n de NGINX.\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_28","title":"Configuraciones de Ejemplo","text":"Proxy HTTP B\u00e1sicoAplicaci\u00f3n WebSocketM\u00faltiples UbicacionesConfiguraci\u00f3n de Cach\u00e9Gesti\u00f3n Avanzada de EncabezadosIntegraci\u00f3n de Autenticaci\u00f3n <p>Una configuraci\u00f3n simple para hacer proxy de las solicitudes HTTP a un servidor de aplicaciones de backend:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"60s\"\nREVERSE_PROXY_READ_TIMEOUT: \"60s\"\n</code></pre> <p>Configuraci\u00f3n optimizada para una aplicaci\u00f3n WebSocket con tiempos de espera m\u00e1s largos:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://websocket-app:8080\"\nREVERSE_PROXY_URL: \"/\"\nREVERSE_PROXY_WS: \"yes\"\nREVERSE_PROXY_CONNECT_TIMEOUT: \"10s\"\nREVERSE_PROXY_SEND_TIMEOUT: \"300s\"\nREVERSE_PROXY_READ_TIMEOUT: \"300s\"\n</code></pre> <p>Configuraci\u00f3n para enrutar diferentes rutas a diferentes servicios de backend:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\n\n# Backend de la API\nREVERSE_PROXY_HOST: \"http://api-server:8080\"\nREVERSE_PROXY_URL: \"/api/\"\n\n# Backend de Administraci\u00f3n\nREVERSE_PROXY_HOST_2: \"http://admin-server:8080\"\nREVERSE_PROXY_URL_2: \"/admin/\"\n\n# Aplicaci\u00f3n Frontend\nREVERSE_PROXY_HOST_3: \"http://frontend:3000\"\nREVERSE_PROXY_URL_3: \"/\"\n</code></pre> <p>Configuraci\u00f3n con el almacenamiento en cach\u00e9 del proxy habilitado para un mejor rendimiento:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\nUSE_PROXY_CACHE: \"yes\"\nPROXY_CACHE_VALID: \"200=24h 301=1h 302=24h\"\nPROXY_CACHE_METHODS: \"GET HEAD\"\nPROXY_NO_CACHE: \"$http_authorization\"\n</code></pre> <p>Configuraci\u00f3n con manipulaci\u00f3n de encabezados personalizados:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Encabezados personalizados para el backend\nREVERSE_PROXY_HEADERS: \"X-Real-IP $remote_addr;X-Forwarded-For $proxy_add_x_forwarded_for;X-Forwarded-Proto $scheme\"\n\n# Encabezados personalizados para el cliente\nREVERSE_PROXY_HEADERS_CLIENT: \"X-Powered-By BunkerWeb;X-Frame-Options SAMEORIGIN\"\n</code></pre> <p>Configuraci\u00f3n con autenticaci\u00f3n externa:</p> <pre><code>USE_REVERSE_PROXY: \"yes\"\nREVERSE_PROXY_HOST: \"http://application:8080\"\nREVERSE_PROXY_URL: \"/\"\n\n# Configuraci\u00f3n de autenticaci\u00f3n\nREVERSE_PROXY_AUTH_REQUEST: \"/auth\"\nREVERSE_PROXY_AUTH_REQUEST_SIGNIN_URL: \"https://login.example.com\"\nREVERSE_PROXY_AUTH_REQUEST_SET: \"$auth_user $upstream_http_x_user;$auth_role $upstream_http_x_role\"\n\n# Backend del servicio de autenticaci\u00f3n\nREVERSE_PROXY_HOST_2: \"http://auth-service:8080\"\nREVERSE_PROXY_URL_2: \"/auth\"\n</code></pre>"},{"location":"es/features/#reverse-scan","title":"Reverse scan","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Escaneo Inverso protege de manera robusta contra los intentos de evasi\u00f3n de proxy al escanear los puertos de los clientes para detectar si est\u00e1n ejecutando servidores proxy u otros servicios de red. Esta funci\u00f3n ayuda a identificar y bloquear posibles amenazas de clientes que puedan estar intentando ocultar su verdadera identidad u origen, mejorando as\u00ed la postura de seguridad de su sitio web.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente se conecta a su servidor, BunkerWeb intenta escanear puertos espec\u00edficos en la direcci\u00f3n IP del cliente.</li> <li>El complemento comprueba si alguno de los puertos de proxy comunes (como 80, 443, 8080, etc.) est\u00e1 abierto en el lado del cliente.</li> <li>Si se detectan puertos abiertos, lo que indica que el cliente puede estar ejecutando un servidor proxy, se deniega la conexi\u00f3n.</li> <li>Esto agrega una capa adicional de seguridad contra herramientas automatizadas, bots y usuarios maliciosos que intentan enmascarar su identidad.</li> </ol> <p>Beneficios clave</p> <ol> <li>Seguridad Mejorada: Identifica a los clientes que potencialmente ejecutan servidores proxy que podr\u00edan ser utilizados con fines maliciosos.</li> <li>Detecci\u00f3n de Proxy: Ayuda a detectar y bloquear a los clientes que intentan ocultar su verdadera identidad.</li> <li>Ajustes Configurables: Personalice qu\u00e9 puertos escanear seg\u00fan sus requisitos de seguridad espec\u00edficos.</li> <li>Optimizado para el Rendimiento: Escaneo inteligente con tiempos de espera configurables para minimizar el impacto en los usuarios leg\u00edtimos.</li> <li>Integraci\u00f3n Perfecta: Funciona de forma transparente con sus capas de seguridad existentes.</li> </ol>"},{"location":"es/features/#como-usar_27","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Escaneo Inverso:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_REVERSE_SCAN</code> en <code>yes</code> para habilitar el escaneo de puertos del cliente.</li> <li>Configure los puertos a escanear: Personalice el ajuste <code>REVERSE_SCAN_PORTS</code> para especificar qu\u00e9 puertos del cliente deben ser verificados.</li> <li>Establezca el tiempo de espera del escaneo: Ajuste el <code>REVERSE_SCAN_TIMEOUT</code> para equilibrar un escaneo exhaustivo con el rendimiento.</li> <li>Supervise la actividad de escaneo: Verifique los registros y la interfaz de usuario web para revisar los resultados del escaneo y los posibles incidentes de seguridad.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_27","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_REVERSE_SCAN</code> <code>no</code> multisite no Habilitar Escaneo Inverso: Establezca en <code>yes</code> para habilitar el escaneo de los puertos de los clientes. <code>REVERSE_SCAN_PORTS</code> <code>22 80 443 3128 8000 8080</code> multisite no Puertos a Escanear: Lista de puertos separados por espacios para verificar en el lado del cliente. <code>REVERSE_SCAN_TIMEOUT</code> <code>500</code> multisite no Tiempo de Espera del Escaneo: Tiempo m\u00e1ximo en milisegundos permitido para escanear un puerto. <p>Consideraciones de Rendimiento</p> <p>Escanear m\u00faltiples puertos puede agregar latencia a las conexiones de los clientes. Use un valor de tiempo de espera apropiado y limite el n\u00famero de puertos escaneados para mantener un buen rendimiento.</p> <p>Puertos de Proxy Comunes</p> <p>La configuraci\u00f3n predeterminada incluye puertos comunes utilizados por los servidores proxy (80, 443, 8080, 3128) y SSH (22). Es posible que desee personalizar esta lista seg\u00fan su modelo de amenaza.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_29","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaEscaneo ExhaustivoConfiguraci\u00f3n Optimizada para el RendimientoConfiguraci\u00f3n de Alta Seguridad <p>Una configuraci\u00f3n simple para habilitar el escaneo de puertos del cliente:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"500\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> <p>Una configuraci\u00f3n m\u00e1s completa que verifica puertos adicionales:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1000\"\nREVERSE_SCAN_PORTS: \"22 80 443 3128 8080 8000 8888 1080 3333 8081\"\n</code></pre> <p>Configuraci\u00f3n ajustada para un mejor rendimiento al verificar menos puertos con un tiempo de espera m\u00e1s bajo:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"250\"\nREVERSE_SCAN_PORTS: \"80 443 8080\"\n</code></pre> <p>Configuraci\u00f3n enfocada en la m\u00e1xima seguridad con un escaneo extendido:</p> <pre><code>USE_REVERSE_SCAN: \"yes\"\nREVERSE_SCAN_TIMEOUT: \"1500\"\nREVERSE_SCAN_PORTS: \"22 25 80 443 1080 3128 3333 4444 5555 6588 6666 7777 8000 8080 8081 8800 8888 9999\"\n</code></pre>"},{"location":"es/features/#robotstxt","title":"Robots.txt","text":"<p>Compatibilidad con STREAM </p> <p>El complemento Robots.txt gestiona el archivo robots.txt para su sitio web. Este archivo indica a los rastreadores web y robots qu\u00e9 partes de su sitio pueden o no pueden acceder.</p> <p>C\u00f3mo funciona:</p> <p>Cuando est\u00e1 habilitado, BunkerWeb genera din\u00e1micamente el archivo <code>/robots.txt</code> en la ra\u00edz de su sitio web. Las reglas dentro de este archivo se agregan de m\u00faltiples fuentes en el siguiente orden:</p> <ol> <li>API de DarkVisitors: Si se proporciona <code>ROBOTSTXT_DARKVISITORS_TOKEN</code>, las reglas se obtienen de la API de DarkVisitors, lo que permite el bloqueo din\u00e1mico de bots maliciosos y rastreadores de IA seg\u00fan los tipos de agentes configurados y los agentes de usuario no permitidos.</li> <li>Listas de la Comunidad: Se incluyen reglas de listas <code>robots.txt</code> predefinidas y mantenidas por la comunidad (especificadas por <code>ROBOTSTXT_COMMUNITY_LISTS</code>).</li> <li>URL personalizadas: Las reglas se obtienen de las URL proporcionadas por el usuario (especificadas por <code>ROBOTSTXT_URLS</code>).</li> <li>Reglas manuales: Se agregan las reglas definidas directamente a trav\u00e9s de las variables de entorno <code>ROBOTSTXT_RULE</code>.</li> </ol> <p>Todas las reglas de estas fuentes se combinan. Despu\u00e9s de la agregaci\u00f3n, se aplican <code>ROBOTSTXT_IGNORE_RULE</code> para filtrar cualquier regla no deseada utilizando patrones de expresiones regulares PCRE. Finalmente, si no queda ninguna regla despu\u00e9s de todo este proceso, se aplica autom\u00e1ticamente una regla predeterminada <code>User-agent: *</code> y <code>Disallow: /</code> para garantizar un nivel b\u00e1sico de protecci\u00f3n. Las URL de mapa de sitio opcionales (especificadas por <code>ROBOTSTXT_SITEMAP</code>) tambi\u00e9n se incluyen en la salida final de <code>robots.txt</code>.</p>"},{"location":"es/features/#evasion-dinamica-de-bots-con-la-api-de-darkvisitors","title":"Evasi\u00f3n Din\u00e1mica de Bots con la API de DarkVisitors","text":"<p>DarkVisitors es un servicio que proporciona un archivo <code>robots.txt</code> din\u00e1mico para ayudar a bloquear bots maliciosos conocidos y rastreadores de IA. Al integrarse con DarkVisitors, BunkerWeb puede obtener y servir autom\u00e1ticamente un <code>robots.txt</code> actualizado que ayuda a proteger su sitio del tr\u00e1fico automatizado no deseado.</p> <p>Para habilitar esto, debe registrarse en darkvisitors.com y obtener un token de portador (bearer token).</p>"},{"location":"es/features/#como-usar_28","title":"C\u00f3mo usar","text":"<ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_ROBOTSTXT</code> en <code>yes</code>.</li> <li>Configure las reglas: Elija uno o m\u00e1s m\u00e9todos para definir sus reglas de <code>robots.txt</code>:<ul> <li>API de DarkVisitors: Proporcione <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> y, opcionalmente, <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> y <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code>.</li> <li>Listas de la Comunidad: Especifique <code>ROBOTSTXT_COMMUNITY_LISTS</code> (IDs separados por espacios).</li> <li>URL personalizadas: Proporcione <code>ROBOTSTXT_URLS</code> (URLs separadas por espacios).</li> <li>Reglas manuales: Use <code>ROBOTSTXT_RULE</code> para reglas individuales (se pueden especificar m\u00faltiples reglas con <code>ROBOTSTXT_RULE_N</code>).</li> </ul> </li> <li>Filtre las reglas (opcional): Use <code>ROBOTSTXT_IGNORE_RULE_N</code> para excluir reglas espec\u00edficas por patr\u00f3n de expresi\u00f3n regular.</li> <li>Agregue mapas de sitio (opcional): Use <code>ROBOTSTXT_SITEMAP_N</code> para las URL de los mapas de sitio.</li> <li>Obtenga el archivo robots.txt generado: Una vez que BunkerWeb est\u00e9 funcionando con los ajustes anteriores, puede acceder al archivo <code>robots.txt</code> generado din\u00e1micamente haciendo una solicitud HTTP GET a <code>http(s)://su-dominio.com/robots.txt</code>.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_28","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_ROBOTSTXT</code> <code>no</code> multisite No Habilita o deshabilita la funci\u00f3n <code>robots.txt</code>. <code>ROBOTSTXT_DARKVISITORS_TOKEN</code> multisite No Token de portador para la API de DarkVisitors. <code>ROBOTSTXT_DARKVISITORS_AGENT_TYPES</code> multisite No Lista de tipos de agentes separados por comas (por ejemplo, <code>AI Data Scraper</code>) para incluir desde DarkVisitors. <code>ROBOTSTXT_DARKVISITORS_DISALLOW</code> <code>/</code> multisite No Una cadena que especifica qu\u00e9 URL no est\u00e1n permitidas. Este valor se enviar\u00e1 como el campo de no permitir al contactar con la API de DarkVisitors. <code>ROBOTSTXT_COMMUNITY_LISTS</code> multisite No Lista separada por espacios de IDs de conjuntos de reglas mantenidos por la comunidad para incluir. <code>ROBOTSTXT_URLS</code> multisite No Lista separada por espacios de URL para obtener reglas adicionales de <code>robots.txt</code>. Admite <code>file://</code> y autenticaci\u00f3n b\u00e1sica (<code>http://user:pass@url</code>). <code>ROBOTSTXT_RULE</code> multisite S\u00ed Una sola regla para <code>robots.txt</code>. <code>ROBOTSTXT_HEADER</code> multisite S\u00ed Encabezado para el archivo <code>robots.txt</code> (antes de las reglas). Puede estar codificado en Base64. <code>ROBOTSTXT_FOOTER</code> multisite S\u00ed Pie de p\u00e1gina para el archivo <code>robots.txt</code> (despu\u00e9s de las reglas). Puede estar codificado en Base64. <code>ROBOTSTXT_IGNORE_RULE</code> multisite S\u00ed Un \u00fanico patr\u00f3n de expresi\u00f3n regular PCRE para ignorar reglas. <code>ROBOTSTXT_SITEMAP</code> multisite S\u00ed Una \u00fanica URL de mapa de sitio."},{"location":"es/features/#configuraciones-de-ejemplo_30","title":"Configuraciones de Ejemplo","text":"<p>Reglas Manuales B\u00e1sicas</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Usando Fuentes Din\u00e1micas (DarkVisitors y Lista de la Comunidad)</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"su-token-de-darkvisitors-aqui\"\nROBOTSTXT_DARKVISITORS_AGENT_TYPES: \"AI Data Scraper\"\nROBOTSTXT_COMMUNITY_LISTS: \"robots-disallowed\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\n</code></pre> <p>Configuraci\u00f3n Combinada</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_DARKVISITORS_TOKEN: \"su-token-de-darkvisitors-aqui\"\nROBOTSTXT_COMMUNITY_LISTS: \"ai-robots-txt\"\nROBOTSTXT_URLS: \"https://example.com/my-custom-rules.txt\"\nROBOTSTXT_RULE: \"User-agent: MyOwnBot\"\nROBOTSTXT_RULE_1: \"Disallow: /admin\"\nROBOTSTXT_IGNORE_RULE: \"User-agent: Googlebot-Image\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Con Encabezado y Pie de P\u00e1gina</p> <pre><code>USE_ROBOTSTXT: \"yes\"\nROBOTSTXT_HEADER: \"# Este es un encabezado personalizado\"\nROBOTSTXT_RULE: \"User-agent: *\"\nROBOTSTXT_RULE_1: \"Disallow: /private\"\nROBOTSTXT_FOOTER: \"# Este es un pie de p\u00e1gina personalizado\"\nROBOTSTXT_SITEMAP: \"https://example.com/sitemap.xml\"\n</code></pre> <p>Para m\u00e1s informaci\u00f3n, consulte la documentaci\u00f3n de robots.txt.</p>"},{"location":"es/features/#ssl","title":"SSL","text":"<p>Compatibilidad con STREAM </p> <p>El complemento SSL proporciona capacidades robustas de cifrado SSL/TLS para sus sitios web protegidos por BunkerWeb. Este componente principal permite conexiones HTTPS seguras al configurar y optimizar protocolos criptogr\u00e1ficos, cifrados y ajustes de seguridad relacionados para proteger los datos en tr\u00e1nsito entre los clientes y sus servicios web.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un cliente inicia una conexi\u00f3n HTTPS a su sitio web, BunkerWeb gestiona el handshake SSL/TLS utilizando su configuraci\u00f3n.</li> <li>El complemento impone protocolos de cifrado modernos y conjuntos de cifrado s\u00f3lidos, al tiempo que deshabilita las opciones vulnerables conocidas.</li> <li>Los par\u00e1metros de sesi\u00f3n SSL optimizados mejoran el rendimiento de la conexi\u00f3n sin sacrificar la seguridad.</li> <li>La presentaci\u00f3n de certificados se configura de acuerdo con las mejores pr\u00e1cticas para garantizar la compatibilidad y la seguridad.</li> </ol> <p>!!! success \"Beneficios de Seguridad\" - Protecci\u00f3n de Datos: Cifra los datos en tr\u00e1nsito, previniendo la interceptaci\u00f3n y los ataques de intermediario (man-in-the-middle). - Autenticaci\u00f3n: Verifica la identidad de su servidor a los clientes. - Integridad: Asegura que los datos no han sido manipulados durante la transmisi\u00f3n. - Est\u00e1ndares Modernos: Configurado para cumplir con las mejores pr\u00e1cticas y los est\u00e1ndares de seguridad de la industria.</p>"},{"location":"es/features/#como-usar_29","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n SSL:</p> <ol> <li>Configure los protocolos: Elija qu\u00e9 versiones de protocolo SSL/TLS admitir utilizando el ajuste <code>SSL_PROTOCOLS</code>.</li> <li>Seleccione los conjuntos de cifrado: Especifique la fuerza del cifrado utilizando el ajuste <code>SSL_CIPHERS_LEVEL</code> o proporcione cifrados personalizados con <code>SSL_CIPHERS_CUSTOM</code>.</li> <li>Configure la redirecci\u00f3n de HTTP a HTTPS: Configure la redirecci\u00f3n autom\u00e1tica utilizando los ajustes <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> o <code>REDIRECT_HTTP_TO_HTTPS</code>.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_29","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>REDIRECT_HTTP_TO_HTTPS</code> <code>no</code> multisite no Redirigir HTTP a HTTPS: Cuando se establece en <code>yes</code>, todas las solicitudes HTTP se redirigen a HTTPS. <code>AUTO_REDIRECT_HTTP_TO_HTTPS</code> <code>yes</code> multisite no Redirecci\u00f3n Autom\u00e1tica de HTTP a HTTPS: Cuando se establece en <code>yes</code>, redirige autom\u00e1ticamente de HTTP a HTTPS si se detecta HTTPS. <code>SSL_PROTOCOLS</code> <code>TLSv1.2 TLSv1.3</code> multisite no Protocolos SSL: Lista de protocolos SSL/TLS a admitir, separados por espacios. <code>SSL_CIPHERS_LEVEL</code> <code>modern</code> multisite no Nivel de Cifrados SSL: Nivel de seguridad preestablecido para los conjuntos de cifrado (<code>modern</code>, <code>intermediate</code> o <code>old</code>). <code>SSL_CIPHERS_CUSTOM</code> multisite no Cifrados SSL Personalizados: Lista de conjuntos de cifrado separados por dos puntos para usar en las conexiones SSL/TLS (sobrescribe el nivel). <p>Pruebas de SSL Labs</p> <p>Despu\u00e9s de configurar sus ajustes de SSL, utilice la Prueba de Servidor de SSL Labs de Qualys para verificar su configuraci\u00f3n y buscar posibles problemas de seguridad. Una configuraci\u00f3n de SSL adecuada de BunkerWeb deber\u00eda obtener una calificaci\u00f3n A+.</p> <p>Selecci\u00f3n de Protocolo</p> <p>El soporte para protocolos m\u00e1s antiguos como SSLv3, TLSv1.0 y TLSv1.1 est\u00e1 deshabilitado intencionadamente por defecto debido a vulnerabilidades conocidas. Solo habilite estos protocolos si es absolutamente necesario para admitir clientes heredados y comprende las implicaciones de seguridad de hacerlo.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_31","title":"Configuraciones de Ejemplo","text":"Seguridad Moderna (Predeterminada)M\u00e1xima SeguridadCompatibilidad HeredadaCifrados Personalizados <p>La configuraci\u00f3n predeterminada que proporciona una seguridad s\u00f3lida mientras mantiene la compatibilidad con los navegadores modernos:</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> <p>Configuraci\u00f3n enfocada en la m\u00e1xima seguridad, potencialmente con compatibilidad reducida para clientes m\u00e1s antiguos:</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"modern\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\nREDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre> <p>Configuraci\u00f3n con mayor compatibilidad para clientes m\u00e1s antiguos (\u00fasela solo si es necesario):</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_LEVEL: \"old\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"no\"\n</code></pre> <p>Configuraci\u00f3n que utiliza una especificaci\u00f3n de cifrado personalizada:</p> <pre><code>LISTEN_HTTPS: \"yes\"\nSSL_PROTOCOLS: \"TLSv1.2 TLSv1.3\"\nSSL_CIPHERS_CUSTOM: \"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305\"\nAUTO_REDIRECT_HTTP_TO_HTTPS: \"yes\"\n</code></pre>"},{"location":"es/features/#securitytxt","title":"Security.txt","text":"<p>Compatibilidad con STREAM </p> <p>El complemento Security.txt implementa el est\u00e1ndar Security.txt (RFC 9116) para su sitio web. Esta funci\u00f3n ayuda a los investigadores de seguridad a acceder a sus pol\u00edticas de seguridad y proporciona una forma estandarizada para que informen sobre las vulnerabilidades de seguridad que descubran en sus sistemas.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando est\u00e1 habilitado, BunkerWeb crea un archivo <code>/.well-known/security.txt</code> en la ra\u00edz de su sitio web.</li> <li>Este archivo contiene informaci\u00f3n sobre sus pol\u00edticas de seguridad, contactos y otros detalles relevantes.</li> <li>Los investigadores de seguridad y las herramientas automatizadas pueden encontrar f\u00e1cilmente este archivo en la ubicaci\u00f3n est\u00e1ndar.</li> <li>El contenido se configura mediante ajustes simples que le permiten especificar informaci\u00f3n de contacto, claves de cifrado, pol\u00edticas y agradecimientos.</li> <li>BunkerWeb formatea autom\u00e1ticamente el archivo de acuerdo con la RFC 9116.</li> </ol>"},{"location":"es/features/#como-usar_30","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n Security.txt:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>USE_SECURITYTXT</code> en <code>yes</code> para habilitar el archivo security.txt.</li> <li>Configure la informaci\u00f3n de contacto: Especifique al menos un m\u00e9todo de contacto utilizando el ajuste <code>SECURITYTXT_CONTACT</code>.</li> <li>Establezca informaci\u00f3n adicional: Configure campos opcionales como la fecha de vencimiento, el cifrado, los agradecimientos y las URL de las pol\u00edticas.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, BunkerWeb crear\u00e1 y servir\u00e1 autom\u00e1ticamente el archivo security.txt en la ubicaci\u00f3n est\u00e1ndar.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_30","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_SECURITYTXT</code> <code>no</code> multisite no Habilitar Security.txt: Establezca en <code>yes</code> para habilitar el archivo security.txt. <code>SECURITYTXT_URI</code> <code>/.well-known/security.txt</code> multisite no URI de Security.txt: Indica la URI donde estar\u00e1 accesible el archivo security.txt. <code>SECURITYTXT_CONTACT</code> multisite s\u00ed Informaci\u00f3n de contacto: C\u00f3mo pueden contactarlo los investigadores de seguridad (p. ej., <code>mailto:security@example.com</code>). <code>SECURITYTXT_EXPIRES</code> multisite no Fecha de vencimiento: Cu\u00e1ndo debe considerarse que este archivo security.txt ha expirado (formato ISO 8601). <code>SECURITYTXT_ENCRYPTION</code> multisite s\u00ed Cifrado: URL que apunta a las claves de cifrado que se utilizar\u00e1n para la comunicaci\u00f3n segura. <code>SECURITYTXT_ACKNOWLEDGEMENTS</code> multisite s\u00ed Agradecimientos: URL donde se reconoce a los investigadores de seguridad por sus informes. <code>SECURITYTXT_POLICY</code> multisite s\u00ed Pol\u00edtica de seguridad: URL que apunta a la pol\u00edtica de seguridad que describe c\u00f3mo informar vulnerabilidades. <code>SECURITYTXT_HIRING</code> multisite s\u00ed Empleos de seguridad: URL que apunta a las ofertas de trabajo relacionadas con la seguridad. <code>SECURITYTXT_CANONICAL</code> multisite s\u00ed URL can\u00f3nica: La(s) URI(s) can\u00f3nica(s) para este archivo security.txt. <code>SECURITYTXT_PREFERRED_LANG</code> <code>en</code> multisite no Idioma(s) preferido(s): El(los) idioma(s) utilizado(s) en las comunicaciones. Especificado como un c\u00f3digo de idioma ISO 639-1. <code>SECURITYTXT_CSAF</code> multisite s\u00ed CSAF: Enlace al <code>provider-metadata.json</code> de su proveedor de Common Security Advisory Framework. <p>Se requiere fecha de vencimiento</p> <p>Seg\u00fan la RFC 9116, el campo <code>Expires</code> es obligatorio. Si no proporciona un valor para <code>SECURITYTXT_EXPIRES</code>, BunkerWeb establece autom\u00e1ticamente la fecha de vencimiento en un a\u00f1o a partir de la fecha actual.</p> <p>La informaci\u00f3n de contacto es esencial</p> <p>El campo <code>Contact</code> es la parte m\u00e1s importante del archivo security.txt. Debe proporcionar al menos una forma para que los investigadores de seguridad se pongan en contacto con usted. Puede ser una direcci\u00f3n de correo electr\u00f3nico, un formulario web, un n\u00famero de tel\u00e9fono o cualquier otro m\u00e9todo que funcione para su organizaci\u00f3n.</p> <p>Las URL deben usar HTTPS</p> <p>Seg\u00fan la RFC 9116, todas las URL del archivo security.txt (excepto los enlaces <code>mailto:</code> y <code>tel:</code>) DEBEN usar HTTPS. BunkerWeb convertir\u00e1 autom\u00e1ticamente las URL que no sean HTTPS a HTTPS para garantizar el cumplimiento de la norma.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_32","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaConfiguraci\u00f3n CompletaConfiguraci\u00f3n de M\u00faltiples Contactos <p>Una configuraci\u00f3n m\u00ednima con solo informaci\u00f3n de contacto:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\n</code></pre> <p>Una configuraci\u00f3n m\u00e1s completa con todos los campos:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"https://example.com/security-contact-form\"\nSECURITYTXT_EXPIRES: \"2023-12-31T23:59:59+00:00\"\nSECURITYTXT_ENCRYPTION: \"https://example.com/pgp-key.txt\"\nSECURITYTXT_ACKNOWLEDGEMENTS: \"https://example.com/hall-of-fame\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_HIRING: \"https://example.com/jobs/security\"\nSECURITYTXT_CANONICAL: \"https://example.com/.well-known/security.txt\"\nSECURITYTXT_PREFERRED_LANG: \"en\"\nSECURITYTXT_CSAF: \"https://example.com/provider-metadata.json\"\n</code></pre> <p>Configuraci\u00f3n con m\u00faltiples m\u00e9todos de contacto:</p> <pre><code>USE_SECURITYTXT: \"yes\"\nSECURITYTXT_CONTACT: \"mailto:security@example.com\"\nSECURITYTXT_CONTACT_2: \"tel:+1-201-555-0123\"\nSECURITYTXT_CONTACT_3: \"https://example.com/security-form\"\nSECURITYTXT_POLICY: \"https://example.com/security-policy\"\nSECURITYTXT_EXPIRES: \"2024-06-30T23:59:59+00:00\"\n</code></pre>"},{"location":"es/features/#self-signed-certificate","title":"Self-signed certificate","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Certificado Autofirmado genera y gestiona autom\u00e1ticamente certificados SSL/TLS directamente dentro de BunkerWeb, lo que permite conexiones HTTPS seguras sin necesidad de una autoridad de certificaci\u00f3n externa. Esta funci\u00f3n es particularmente \u00fatil en entornos de desarrollo, redes internas o siempre que necesite implementar HTTPS r\u00e1pidamente sin configurar certificados externos.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando est\u00e1 habilitado, BunkerWeb genera autom\u00e1ticamente un certificado SSL/TLS autofirmado para sus dominios configurados.</li> <li>El certificado incluye todos los nombres de servidor definidos en su configuraci\u00f3n, lo que garantiza una validaci\u00f3n SSL adecuada para cada dominio.</li> <li>Los certificados se almacenan de forma segura y se utilizan para cifrar todo el tr\u00e1fico HTTPS a sus sitios web.</li> <li>El certificado se renueva autom\u00e1ticamente antes de su vencimiento, lo que garantiza la disponibilidad continua de HTTPS.</li> </ol> <p>Advertencias de Seguridad del Navegador</p> <p>Los navegadores mostrar\u00e1n advertencias de seguridad cuando los usuarios visiten sitios que utilizan certificados autofirmados, ya que estos certificados no est\u00e1n validados por una autoridad de certificaci\u00f3n de confianza. Para entornos de producci\u00f3n, considere usar Let's Encrypt en su lugar.</p>"},{"location":"es/features/#como-usar_31","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Certificado Autofirmado:</p> <ol> <li>Habilite la funci\u00f3n: Establezca el ajuste <code>GENERATE_SELF_SIGNED_SSL</code> en <code>yes</code> para habilitar la generaci\u00f3n de certificados autofirmados.</li> <li>Elija el algoritmo criptogr\u00e1fico: Seleccione su algoritmo preferido utilizando el ajuste <code>SELF_SIGNED_SSL_ALGORITHM</code>.</li> <li>Configure el per\u00edodo de validez: Opcionalmente, establezca cu\u00e1nto tiempo debe ser v\u00e1lido el certificado utilizando el ajuste <code>SELF_SIGNED_SSL_EXPIRY</code>.</li> <li>Establezca el sujeto del certificado: Configure el sujeto del certificado utilizando el ajuste <code>SELF_SIGNED_SSL_SUBJ</code>.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, los certificados se generan y aplican autom\u00e1ticamente a sus dominios.</li> </ol> <p>Configuraci\u00f3n en Modo Stream</p> <p>Para el modo stream, configure el ajuste <code>LISTEN_STREAM_PORT_SSL</code> para especificar el puerto de escucha SSL/TLS. Este paso es esencial para el correcto funcionamiento en modo stream.</p>"},{"location":"es/features/#ajustes-de-configuracion_31","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>GENERATE_SELF_SIGNED_SSL</code> <code>no</code> multisite no Habilitar autofirmado: Establezca en <code>yes</code> para habilitar la generaci\u00f3n autom\u00e1tica de certificados autofirmados. <code>SELF_SIGNED_SSL_ALGORITHM</code> <code>ec-prime256v1</code> multisite no Algoritmo del certificado: Algoritmo utilizado para la generaci\u00f3n de certificados: <code>ec-prime256v1</code>, <code>ec-secp384r1</code>, <code>rsa-2048</code> o <code>rsa-4096</code>. <code>SELF_SIGNED_SSL_EXPIRY</code> <code>365</code> multisite no Validez del certificado: N\u00famero de d\u00edas que el certificado autofirmado debe ser v\u00e1lido (predeterminado: 1 a\u00f1o). <code>SELF_SIGNED_SSL_SUBJ</code> <code>/CN=www.example.com/</code> multisite no Sujeto del certificado: Campo de sujeto para el certificado que identifica el dominio. <p>Entornos de Desarrollo</p> <p>Los certificados autofirmados son ideales para entornos de desarrollo y prueba donde se necesita HTTPS pero no se requieren certificados de confianza para los navegadores p\u00fablicos.</p> <p>Informaci\u00f3n del Certificado</p> <p>Los certificados autofirmados generados utilizan el algoritmo especificado (por defecto, criptograf\u00eda de curva el\u00edptica con la curva prime256v1) e incluyen el sujeto configurado, lo que garantiza la funcionalidad adecuada para sus dominios.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_33","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaCertificados de Corta Duraci\u00f3nPruebas con Certificados RSA <p>Una configuraci\u00f3n simple que utiliza certificados autofirmados con los ajustes predeterminados:</p> <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=mysite.local/\"\n</code></pre> <p>Configuraci\u00f3n con certificados que expiran con m\u00e1s frecuencia (\u00fatil para probar regularmente los procesos de renovaci\u00f3n de certificados):</p> <pre><code>GENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"ec-prime256v1\"\nSELF_SIGNED_SSL_EXPIRY: \"90\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=dev.example.com/\"\n</code></pre> <p>Configuraci\u00f3n para un entorno de prueba donde un dominio utiliza certificados RSA autofirmados:</p> <pre><code>SERVER_NAME: \"test.example.com\"\nGENERATE_SELF_SIGNED_SSL: \"yes\"\nSELF_SIGNED_SSL_ALGORITHM: \"rsa-4096\"\nSELF_SIGNED_SSL_EXPIRY: \"365\"\nSELF_SIGNED_SSL_SUBJ: \"/CN=test.example.com/\"\n</code></pre>"},{"location":"es/features/#sessions","title":"Sessions","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Sesiones proporciona una gesti\u00f3n robusta de sesiones HTTP para BunkerWeb, lo que permite un seguimiento seguro y confiable de las sesiones de usuario entre solicitudes. Esta caracter\u00edstica principal es esencial para mantener el estado del usuario, la persistencia de la autenticaci\u00f3n y admitir otras funciones que requieren continuidad de la identidad, como la protecci\u00f3n anti-bot y los sistemas de autenticaci\u00f3n de usuarios.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Cuando un usuario interact\u00faa por primera vez con su sitio web, BunkerWeb crea un identificador de sesi\u00f3n \u00fanico.</li> <li>Este identificador se almacena de forma segura en una cookie en el navegador del usuario.</li> <li>En solicitudes posteriores, BunkerWeb recupera el identificador de sesi\u00f3n de la cookie y lo utiliza para acceder a los datos de la sesi\u00f3n del usuario.</li> <li>Los datos de la sesi\u00f3n se pueden almacenar localmente o en Redis para entornos distribuidos con m\u00faltiples instancias de BunkerWeb.</li> <li>Las sesiones se gestionan autom\u00e1ticamente con tiempos de espera configurables, lo que garantiza la seguridad y la facilidad de uso.</li> <li>La seguridad criptogr\u00e1fica de las sesiones se garantiza mediante una clave secreta que se utiliza para firmar las cookies de sesi\u00f3n.</li> </ol>"},{"location":"es/features/#como-usar_32","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Sesiones:</p> <ol> <li>Configure la seguridad de la sesi\u00f3n: Establezca un <code>SESSIONS_SECRET</code> fuerte y \u00fanico para garantizar que las cookies de sesi\u00f3n no puedan ser falsificadas. (El valor predeterminado es \"random\", lo que hace que BunkerWeb genere una clave secreta aleatoria).</li> <li>Elija un nombre de sesi\u00f3n: Opcionalmente, personalice el <code>SESSIONS_NAME</code> para definir c\u00f3mo se llamar\u00e1 su cookie de sesi\u00f3n en el navegador. (El valor predeterminado es \"random\", lo que hace que BunkerWeb genere un nombre aleatorio).</li> <li>Establezca los tiempos de espera de la sesi\u00f3n: Configure cu\u00e1nto tiempo permanecen v\u00e1lidas las sesiones con los ajustes de tiempo de espera (<code>SESSIONS_IDLING_TIMEOUT</code>, <code>SESSIONS_ROLLING_TIMEOUT</code>, <code>SESSIONS_ABSOLUTE_TIMEOUT</code>).</li> <li>Configure la integraci\u00f3n con Redis: Para entornos distribuidos, establezca <code>USE_REDIS</code> en \"yes\" y configure su conexi\u00f3n Redis para compartir los datos de la sesi\u00f3n entre m\u00faltiples nodos de BunkerWeb.</li> <li>Deje que BunkerWeb se encargue del resto: Una vez configurado, la gesti\u00f3n de sesiones se realiza autom\u00e1ticamente para su sitio web.</li> </ol>"},{"location":"es/features/#ajustes-de-configuracion_32","title":"Ajustes de Configuraci\u00f3n","text":"Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>SESSIONS_SECRET</code> <code>random</code> global no Secreto de sesi\u00f3n: Clave criptogr\u00e1fica utilizada para firmar las cookies de sesi\u00f3n. Debe ser una cadena fuerte y aleatoria \u00fanica para su sitio. <code>SESSIONS_NAME</code> <code>random</code> global no Nombre de la cookie: El nombre de la cookie que almacenar\u00e1 el identificador de sesi\u00f3n. <code>SESSIONS_IDLING_TIMEOUT</code> <code>1800</code> global no Tiempo de espera por inactividad: Tiempo m\u00e1ximo (en segundos) de inactividad antes de que la sesi\u00f3n se invalide. <code>SESSIONS_ROLLING_TIMEOUT</code> <code>3600</code> global no Tiempo de espera renovable: Tiempo m\u00e1ximo (en segundos) antes de que una sesi\u00f3n deba renovarse. <code>SESSIONS_ABSOLUTE_TIMEOUT</code> <code>86400</code> global no Tiempo de espera absoluto: Tiempo m\u00e1ximo (en segundos) antes de que una sesi\u00f3n se destruya independientemente de la actividad. <code>SESSIONS_CHECK_IP</code> <code>yes</code> global no Comprobar IP: Cuando se establece en <code>yes</code>, destruye la sesi\u00f3n si la direcci\u00f3n IP del cliente cambia. <code>SESSIONS_CHECK_USER_AGENT</code> <code>yes</code> global no Comprobar User-Agent: Cuando se establece en <code>yes</code>, destruye la sesi\u00f3n si el User-Agent del cliente cambia. <p>Consideraciones de Seguridad</p> <p>El ajuste <code>SESSIONS_SECRET</code> es fundamental para la seguridad. En entornos de producci\u00f3n:</p> <pre><code>1. Use un valor fuerte y aleatorio (al menos 32 caracteres)\n2. Mantenga este valor confidencial\n3. Use el mismo valor en todas las instancias de BunkerWeb en un cl\u00faster\n4. Considere usar variables de entorno o gesti\u00f3n de secretos para evitar almacenar esto en texto plano\n</code></pre> <p>Entornos en Cl\u00faster</p> <p>Si est\u00e1 ejecutando m\u00faltiples instancias de BunkerWeb detr\u00e1s de un balanceador de carga:</p> <pre><code>1. Establezca `USE_REDIS` en `yes` y configure su conexi\u00f3n Redis\n2. Aseg\u00farese de que todas las instancias usen exactamente el mismo `SESSIONS_SECRET` y `SESSIONS_NAME`\n3. Esto garantiza que los usuarios mantengan su sesi\u00f3n independientemente de qu\u00e9 instancia de BunkerWeb maneje sus solicitudes\n</code></pre>"},{"location":"es/features/#configuraciones-de-ejemplo_34","title":"Configuraciones de Ejemplo","text":"Configuraci\u00f3n B\u00e1sicaSeguridad MejoradaEntorno en Cl\u00faster con RedisSesiones de Larga Duraci\u00f3n <p>Una configuraci\u00f3n simple para una \u00fanica instancia de BunkerWeb:</p> <pre><code>SESSIONS_SECRET: \"su-clave-secreta-fuerte-y-aleatoria-aqui\"\nSESSIONS_NAME: \"sesiondemicliente\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\n</code></pre> <p>Configuraci\u00f3n con ajustes de seguridad aumentados:</p> <pre><code>SESSIONS_SECRET: \"su-clave-secreta-muy-fuerte-y-aleatoria-aqui\"\nSESSIONS_NAME: \"sesionsegura\"\nSESSIONS_IDLING_TIMEOUT: \"900\"  # 15 minutos\nSESSIONS_ROLLING_TIMEOUT: \"1800\"  # 30 minutos\nSESSIONS_ABSOLUTE_TIMEOUT: \"43200\"  # 12 horas\nSESSIONS_CHECK_IP: \"yes\"\nSESSIONS_CHECK_USER_AGENT: \"yes\"\n</code></pre> <p>Configuraci\u00f3n para m\u00faltiples instancias de BunkerWeb que comparten datos de sesi\u00f3n:</p> <pre><code>SESSIONS_SECRET: \"su-clave-secreta-fuerte-y-aleatoria-aqui\"\nSESSIONS_NAME: \"sesiondelcluster\"\nSESSIONS_IDLING_TIMEOUT: \"1800\"\nSESSIONS_ROLLING_TIMEOUT: \"3600\"\nSESSIONS_ABSOLUTE_TIMEOUT: \"86400\"\nUSE_REDIS: \"yes\"\n# Aseg\u00farese de que la conexi\u00f3n a Redis est\u00e9 configurada correctamente\n</code></pre> <p>Configuraci\u00f3n para aplicaciones que requieren persistencia de sesi\u00f3n extendida:</p> <pre><code>SESSIONS_SECRET: \"su-clave-secreta-fuerte-y-aleatoria-aqui\"\nSESSIONS_NAME: \"sesionpersistente\"\nSESSIONS_IDLING_TIMEOUT: \"86400\"  # 1 d\u00eda\nSESSIONS_ROLLING_TIMEOUT: \"172800\"  # 2 d\u00edas\nSESSIONS_ABSOLUTE_TIMEOUT: \"604800\"  # 7 d\u00edas\n</code></pre>"},{"location":"es/features/#ui","title":"UI","text":"<p>Compatibilidad con STREAM </p> <p>Integrate easily the BunkerWeb UI.</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USE_UI</code> <code>no</code> multisite no Use UI <code>UI_HOST</code> global no Address of the web UI used for initial setup"},{"location":"es/features/#user-manager-pro","title":"User Manager  (PRO)","text":"<p>Compatibilidad con STREAM </p> <p>Add the possibility to manage users on the web interface</p> Par\u00e1metro Valor predeterminado Contexto M\u00faltiple Descripci\u00f3n <code>USERS_REQUIRE_2FA</code> <code>no</code> global no Require two-factor authentication for all users"},{"location":"es/features/#whitelist","title":"Whitelist","text":"<p>Compatibilidad con STREAM </p> <p>El complemento de Lista Blanca le permite definir una lista de direcciones IP de confianza que omiten otros filtros de seguridad. Para bloquear clientes no deseados, consulte el complemento de Lista Negra.</p> <p>El complemento de Lista Blanca proporciona un enfoque integral para permitir expl\u00edcitamente el acceso a su sitio web bas\u00e1ndose en diversos atributos del cliente. Esta caracter\u00edstica proporciona un mecanismo de seguridad: a los visitantes que coinciden con criterios espec\u00edficos se les concede acceso inmediato, mientras que todos los dem\u00e1s deben pasar por los controles de seguridad habituales.</p> <p>C\u00f3mo funciona:</p> <ol> <li>Usted define los criterios para los visitantes que deben estar en la \"lista blanca\" (direcciones IP, redes, DNS inverso, ASN, User-Agent o patrones de URI).</li> <li>Cuando un visitante intenta acceder a su sitio, BunkerWeb comprueba si coincide con alguno de estos criterios de la lista blanca.</li> <li>Si un visitante coincide con alguna regla de la lista blanca (y no coincide con ninguna regla de omisi\u00f3n), se le concede acceso a su sitio y omite todos los dem\u00e1s controles de seguridad.</li> <li>Si un visitante no coincide con ning\u00fan criterio de la lista blanca, procede a trav\u00e9s de todos los controles de seguridad normales como de costumbre.</li> <li>Las listas blancas se pueden actualizar autom\u00e1ticamente desde fuentes externas de forma programada.</li> </ol>"},{"location":"es/features/#como-usar_33","title":"C\u00f3mo usar","text":"<p>Siga estos pasos para configurar y usar la funci\u00f3n de Lista Blanca:</p> <ol> <li>Habilite la funci\u00f3n: La funci\u00f3n de Lista Blanca est\u00e1 deshabilitada por defecto. Establezca el ajuste <code>USE_WHITELIST</code> en <code>yes</code> para habilitarla.</li> <li>Configure las reglas de permiso: Defina qu\u00e9 IP, redes, patrones de DNS inverso, ASN, User-Agents o URI deben estar en la lista blanca.</li> <li>Configure las reglas de omisi\u00f3n: Especifique cualquier excepci\u00f3n que deba omitir las comprobaciones de la lista blanca.</li> <li>A\u00f1ada fuentes externas: Configure URL para descargar y actualizar autom\u00e1ticamente los datos de la lista blanca.</li> <li>Supervise el acceso: Consulte la interfaz de usuario web para ver qu\u00e9 visitantes est\u00e1n siendo permitidos o denegados.</li> </ol> <p>modo stream</p> <p>Cuando se utiliza el modo stream, solo se realizan las comprobaciones de IP, DNS inverso y ASN.</p>"},{"location":"es/features/#ajustes-de-configuracion_33","title":"Ajustes de Configuraci\u00f3n","text":"<p>General</p> Ajuste Valor por defecto Contexto M\u00faltiple Descripci\u00f3n <code>USE_WHITELIST</code> <code>no</code> multisite no Habilitar Lista Blanca: Establezca en <code>yes</code> para habilitar la funci\u00f3n de lista blanca. Direcci\u00f3n IP <p>Qu\u00e9 hace esto: Pone en la lista blanca a los visitantes seg\u00fan su direcci\u00f3n IP o red. Estos visitantes omitir\u00e1n todos los controles de seguridad.</p> <pre><code>| Ajuste                     | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                               |\n| -------------------------- | ----------------- | --------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_IP`             |                   | multisite | no       | **Lista Blanca de IP:** Lista de direcciones IP o redes (notaci\u00f3n CIDR) para permitir, separadas por espacios.                            |\n| `WHITELIST_IGNORE_IP`      |                   | multisite | no       | **Lista de Omisi\u00f3n de IP:** Lista de direcciones IP o redes que deben omitir las comprobaciones de la lista blanca de IP.                 |\n| `WHITELIST_IP_URLS`        |                   | multisite | no       | **URL de Lista Blanca de IP:** Lista de URL que contienen direcciones IP o redes para incluir en la lista blanca, separadas por espacios. |\n| `WHITELIST_IGNORE_IP_URLS` |                   | multisite | no       | **URL de Lista de Omisi\u00f3n de IP:** Lista de URL que contienen direcciones IP o redes para ignorar.                                        |\n</code></pre> DNS Inverso <p>Qu\u00e9 hace esto: Pone en la lista blanca a los visitantes seg\u00fan su nombre de dominio (en inverso). Esto es \u00fatil para permitir el acceso a visitantes de organizaciones o redes espec\u00edficas por su dominio.</p> <pre><code>| Ajuste                       | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                                 |\n| ---------------------------- | ----------------- | --------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_RDNS`             |                   | multisite | no       | **Lista Blanca de rDNS:** Lista de sufijos de DNS inverso para permitir, separados por espacios.                                            |\n| `WHITELIST_RDNS_GLOBAL`      | `yes`             | multisite | no       | **Solo rDNS Global:** Realiza comprobaciones de la lista blanca de rDNS solo en direcciones IP globales cuando se establece en `yes`.       |\n| `WHITELIST_IGNORE_RDNS`      |                   | multisite | no       | **Lista de Omisi\u00f3n de rDNS:** Lista de sufijos de DNS inverso que deben omitir las comprobaciones de la lista blanca de rDNS.               |\n| `WHITELIST_RDNS_URLS`        |                   | multisite | no       | **URL de Lista Blanca de rDNS:** Lista de URL que contienen sufijos de DNS inverso para incluir en la lista blanca, separadas por espacios. |\n| `WHITELIST_IGNORE_RDNS_URLS` |                   | multisite | no       | **URL de Lista de Omisi\u00f3n de rDNS:** Lista de URL que contienen sufijos de DNS inverso para ignorar.                                        |\n</code></pre> ASN <p>Qu\u00e9 hace esto: Pone en la lista blanca a los visitantes de proveedores de red espec\u00edficos utilizando N\u00fameros de Sistema Aut\u00f3nomo. Los ASN identifican a qu\u00e9 proveedor u organizaci\u00f3n pertenece una IP.</p> <pre><code>| Ajuste                      | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                             |\n| --------------------------- | ----------------- | --------- | -------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_ASN`             |                   | multisite | no       | **Lista Blanca de ASN:** Lista de N\u00fameros de Sistema Aut\u00f3nomo para permitir, separados por espacios.                    |\n| `WHITELIST_IGNORE_ASN`      |                   | multisite | no       | **Lista de Omisi\u00f3n de ASN:** Lista de ASN que deben omitir las comprobaciones de la lista blanca de ASN.                |\n| `WHITELIST_ASN_URLS`        |                   | multisite | no       | **URL de Lista Blanca de ASN:** Lista de URL que contienen ASN para incluir en la lista blanca, separados por espacios. |\n| `WHITELIST_IGNORE_ASN_URLS` |                   | multisite | no       | **URL de Lista de Omisi\u00f3n de ASN:** Lista de URL que contienen ASN para ignorar.                                        |\n</code></pre> User Agent <p>Qu\u00e9 hace esto: Pone en la lista blanca a los visitantes seg\u00fan el navegador o la herramienta que dicen estar usando. Esto es efectivo para permitir el acceso a herramientas o servicios conocidos espec\u00edficos.</p> <pre><code>| Ajuste                             | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                               |\n| ---------------------------------- | ----------------- | --------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_USER_AGENT`             |                   | multisite | no       | **Lista Blanca de User-Agent:** Lista de patrones de User-Agent (expresi\u00f3n regular PCRE) para permitir, separados por espacios.           |\n| `WHITELIST_IGNORE_USER_AGENT`      |                   | multisite | no       | **Lista de Omisi\u00f3n de User-Agent:** Lista de patrones de User-Agent que deben omitir las comprobaciones de la lista blanca de User-Agent. |\n| `WHITELIST_USER_AGENT_URLS`        |                   | multisite | no       | **URL de Lista Blanca de User-Agent:** Lista de URL que contienen patrones de User-Agent para incluir en la lista blanca.                 |\n| `WHITELIST_IGNORE_USER_AGENT_URLS` |                   | multisite | no       | **URL de Lista de Omisi\u00f3n de User-Agent:** Lista de URL que contienen patrones de User-Agent para ignorar.                                |\n</code></pre> URI <p>Qu\u00e9 hace esto: Pone en la lista blanca las solicitudes a URL espec\u00edficas de su sitio. Esto es \u00fatil para permitir el acceso a puntos finales espec\u00edficos independientemente de otros factores.</p> <pre><code>| Ajuste                      | Valor por defecto | Contexto  | M\u00faltiple | Descripci\u00f3n                                                                                                                         |\n| --------------------------- | ----------------- | --------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `WHITELIST_URI`             |                   | multisite | no       | **Lista Blanca de URI:** Lista de patrones de URI (expresi\u00f3n regular PCRE) para permitir, separados por espacios.                   |\n| `WHITELIST_IGNORE_URI`      |                   | multisite | no       | **Lista de Omisi\u00f3n de URI:** Lista de patrones de URI que deben omitir las comprobaciones de la lista blanca de URI.                |\n| `WHITELIST_URI_URLS`        |                   | multisite | no       | **URL de Lista Blanca de URI:** Lista de URL que contienen patrones de URI para incluir en la lista blanca, separados por espacios. |\n| `WHITELIST_IGNORE_URI_URLS` |                   | multisite | no       | **URL de Lista de Omisi\u00f3n de URI:** Lista de URL que contienen patrones de URI para ignorar.                                        |\n</code></pre> <p>Soporte de Formato de URL</p> <p>Todos los ajustes <code>*_URLS</code> admiten URL HTTP/HTTPS as\u00ed como rutas de archivos locales usando el prefijo <code>file:///</code>. Se admite la autenticaci\u00f3n b\u00e1sica usando el formato <code>http://usuario:contrase\u00f1a@url</code>.</p> <p>Actualizaciones Regulares</p> <p>Las listas blancas de las URL se descargan y actualizan autom\u00e1ticamente cada hora para asegurar que su protecci\u00f3n se mantenga actualizada con las \u00faltimas fuentes de confianza.</p> <p>Omisi\u00f3n de Seguridad</p> <p>Los visitantes en la lista blanca omitir\u00e1n por completo todos los dem\u00e1s controles de seguridad en BunkerWeb, incluidas las reglas del WAF, la limitaci\u00f3n de velocidad, la detecci\u00f3n de bots maliciosos y cualquier otro mecanismo de seguridad. Use la lista blanca solo para fuentes de confianza en las que est\u00e9 absolutamente seguro.</p>"},{"location":"es/features/#configuraciones-de-ejemplo_35","title":"Configuraciones de Ejemplo","text":"Acceso B\u00e1sico de la Organizaci\u00f3nConfiguraci\u00f3n AvanzadaUsando Archivos LocalesPatr\u00f3n de Acceso a la APIRastreadores Conocidos <p>Una configuraci\u00f3n simple que pone en la lista blanca las IP de la oficina de la empresa:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_IP: \"192.168.1.0/24 10.0.0.0/8 203.0.113.42\"\n</code></pre> <p>Una configuraci\u00f3n m\u00e1s completa con m\u00faltiples criterios de lista blanca:</p> <pre><code>USE_WHITELIST: \"yes\"\n\n# Activos de la empresa y de socios de confianza\nWHITELIST_IP: \"192.168.1.0/24 203.0.113.0/24\"\nWHITELIST_RDNS: \".company.com .partner-company.org\"\nWHITELIST_ASN: \"12345 67890\"  # ASN de la empresa y del socio\nWHITELIST_USER_AGENT: \"(?:\\b)CompanyBot(?:\\b) (?:\\b)PartnerCrawler(?:\\b)\"\n\n# Fuentes externas de confianza\nWHITELIST_IP_URLS: \"https://example.com/trusted-networks.txt\"\nWHITELIST_USER_AGENT_URLS: \"https://example.com/trusted-crawlers.txt\"\n</code></pre> <p>Configuraci\u00f3n usando archivos locales para las listas blancas:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_IP_URLS: \"file:///ruta/a/ip-whitelist.txt\"\nWHITELIST_RDNS_URLS: \"file:///ruta/a/rdns-whitelist.txt\"\nWHITELIST_ASN_URLS: \"file:///ruta/a/asn-whitelist.txt\"\nWHITELIST_USER_AGENT_URLS: \"file:///ruta/a/user-agent-whitelist.txt\"\nWHITELIST_URI_URLS: \"file:///ruta/a/uri-whitelist.txt\"\n</code></pre> <p>Una configuraci\u00f3n enfocada en permitir el acceso solo a puntos finales espec\u00edficos de la API:</p> <pre><code>USE_WHITELIST: \"yes\"\nWHITELIST_URI: \"^/api/v1/public/ ^/api/v1/status\"\nWHITELIST_IP: \"192.168.1.0/24\"  # Red interna para todos los puntos finales\n</code></pre> <p>Una configuraci\u00f3n que pone en la lista blanca a los rastreadores comunes de motores de b\u00fasqueda y redes sociales:</p> <pre><code>USE_WHITELIST: \"yes\"\n\n# Verificaci\u00f3n con DNS inverso para mayor seguridad\nWHITELIST_RDNS: \".googlebot.com .search.msn.com .crawl.yahoo.net .yandex.com .baidu.com .facebook.com\"\nWHITELIST_RDNS_GLOBAL: \"yes\"  # Solo verificar IP globales\n</code></pre> <p>Esta configuraci\u00f3n permite que los rastreadores leg\u00edtimos indexen su sitio sin estar sujetos a la limitaci\u00f3n de velocidad u otras medidas de seguridad que podr\u00edan bloquearlos. Las comprobaciones de DNS inverso ayudan a verificar que los rastreadores provienen realmente de las empresas que dicen ser.</p>"},{"location":"es/integrations/","title":"Integraciones","text":""},{"location":"es/integrations/#bunkerweb-cloud","title":"BunkerWeb Cloud","text":"BunkerWeb Cloud <p>BunkerWeb Cloud ser\u00e1 la forma m\u00e1s f\u00e1cil de empezar con BunkerWeb. Te ofrece un servicio de BunkerWeb totalmente gestionado sin complicaciones. \u00a1Pi\u00e9nsalo como un BunkerWeb-como-un-Servicio!</p> <p>Prueba nuestra oferta de BunkerWeb Cloud y obt\u00e9n acceso a:</p> <ul> <li>Una instancia de BunkerWeb totalmente gestionada alojada en nuestra nube</li> <li>Todas las caracter\u00edsticas de BunkerWeb, incluidas las PRO</li> <li>Una plataforma de monitorizaci\u00f3n con paneles y alertas</li> <li>Soporte t\u00e9cnico para ayudarte con la configuraci\u00f3n</li> </ul> <p>Si est\u00e1s interesado en la oferta de BunkerWeb Cloud, no dudes en contactarnos para que podamos discutir tus necesidades.</p>"},{"location":"es/integrations/#imagen-todo-en-uno-aio","title":"Imagen Todo en Uno (AIO)","text":"Arquitectura Todo en Uno de BunkerWeb (AIO)"},{"location":"es/integrations/#despliegue","title":"Despliegue","text":"<p>Para desplegar el contenedor todo en uno, todo lo que tienes que hacer es ejecutar el siguiente comando:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Por defecto, el contenedor expone:</p> <ul> <li>8080/tcp para HTTP</li> <li>8443/tcp para HTTPS</li> <li>8443/udp para QUIC</li> <li>7000/tcp para el acceso a la interfaz de usuario web sin BunkerWeb delante (no recomendado para producci\u00f3n)</li> <li>8888/tcp para la API cuando <code>SERVICE_API=yes</code> (uso interno; prefiere exponerla a trav\u00e9s de BunkerWeb como un proxy inverso en lugar de publicarla directamente)</li> </ul> <p>La imagen Todo en Uno viene con varios servicios integrados, que se pueden controlar mediante variables de entorno:</p> <ul> <li><code>SERVICE_UI=yes</code> (predeterminado) - Habilita el servicio de la interfaz de usuario web</li> <li><code>SERVICE_SCHEDULER=yes</code> (predeterminado) - Habilita el servicio del Programador</li> <li><code>SERVICE_API=no</code> (predeterminado) - Habilita el servicio de la API (plano de control de FastAPI)</li> <li><code>AUTOCONF_MODE=no</code> (predeterminado) - Habilita el servicio de autoconfiguraci\u00f3n</li> <li><code>USE_REDIS=yes</code> (predeterminado) - Habilita la instancia de Redis integrada</li> <li><code>USE_CROWDSEC=no</code> (predeterminado) - La integraci\u00f3n con CrowdSec est\u00e1 deshabilitada por defecto</li> </ul>"},{"location":"es/integrations/#integracion-de-la-api","title":"Integraci\u00f3n de la API","text":"<p>La imagen Todo en Uno incorpora la API de BunkerWeb. Est\u00e1 deshabilitada por defecto y se puede habilitar estableciendo <code>SERVICE_API=yes</code>.</p> <p>Seguridad</p> <p>La API es un plano de control privilegiado. No la expongas directamente a Internet. Mantenla en una red interna, restringe las IP de origen con <code>API_WHITELIST_IPS</code>, requiere autenticaci\u00f3n (<code>API_TOKEN</code> o usuarios de API + Biscuit), y preferiblemente accede a ella a trav\u00e9s de BunkerWeb como un proxy inverso en una ruta dif\u00edcil de adivinar.</p> <p>Habilitaci\u00f3n r\u00e1pida (independiente) \u2014 publica el puerto de la API; solo para pruebas:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e SERVICE_API=yes \\\n  -e API_WHITELIST_IPS=\"127.0.0.0/8\" \\\n  -e API_TOKEN=\"changeme\" \\\n  -p 80:8080/tcp -p 443:8443/tcp -p 443:8443/udp \\\n  -p 8888:8888/tcp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Recomendado (detr\u00e1s de BunkerWeb) \u2014 no publiques el <code>8888</code>; en su lugar, haz un proxy inverso:</p> <pre><code>services:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\"\n    environment:\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_REVERSE_PROXY: \"yes\"\n      REVERSE_PROXY_URL: \"/api-&lt;unguessable&gt;\"\n      REVERSE_PROXY_HOST: \"http://bunkerweb-aio:8888\"\n\n  bunkerweb-aio:\n    image: bunkerity/bunkerweb-all-in-one:testing\n    environment:\n      SERVICE_API: \"yes\"\n      API_WHITELIST_IPS: \"127.0.0.0/8 10.20.30.0/24\"\n      # Opcionalmente, establece un token de anulaci\u00f3n de administrador\n      # API_TOKEN: \"changeme\"\n    networks:\n      - bw-universe\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n</code></pre> <p>Los detalles sobre la autenticaci\u00f3n, los permisos (ACL), la limitaci\u00f3n de velocidad, TLS y las opciones de configuraci\u00f3n est\u00e1n disponibles en la documentaci\u00f3n de la API.</p>"},{"location":"es/integrations/#accediendo-al-asistente-de-configuracion","title":"Accediendo al asistente de configuraci\u00f3n","text":"<p>Por defecto, el asistente de configuraci\u00f3n se inicia autom\u00e1ticamente cuando ejecutas el contenedor AIO por primera vez. Para acceder a \u00e9l, sigue estos pasos:</p> <ol> <li>Inicia el contenedor AIO como se indic\u00f3 anteriormente, asegur\u00e1ndote de que <code>SERVICE_UI=yes</code> (predeterminado).</li> <li>Accede a la UI a trav\u00e9s de tu punto de acceso principal de BunkerWeb, p. ej., <code>https://tu-dominio</code>.</li> </ol> <p>Sigue los siguientes pasos en la Gu\u00eda de inicio r\u00e1pido para configurar la Interfaz de Usuario Web.</p>"},{"location":"es/integrations/#integracion-con-redis","title":"Integraci\u00f3n con Redis","text":"<p>La imagen Todo en Uno de BunkerWeb incluye Redis listo para usar para la persistencia de baneos e informes. Para gestionar Redis:</p> <ul> <li>Para deshabilitar Redis, establece <code>USE_REDIS=no</code> o apunta <code>REDIS_HOST</code> a un host externo.</li> <li>Los registros de Redis aparecen con el prefijo <code>[REDIS]</code> en los registros de Docker y en <code>/var/log/bunkerweb/redis.log</code>.</li> </ul>"},{"location":"es/integrations/#integracion-con-crowdsec","title":"Integraci\u00f3n con CrowdSec","text":"<p>La imagen Docker Todo en Uno de BunkerWeb viene con CrowdSec totalmente integrado, sin necesidad de contenedores adicionales ni configuraci\u00f3n manual. Sigue los pasos a continuaci\u00f3n para habilitar, configurar y ampliar CrowdSec en tu despliegue.</p> <p>Por defecto, CrowdSec est\u00e1 deshabilitado. Para activarlo, simplemente a\u00f1ade la variable de entorno <code>USE_CROWDSEC</code>:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <ul> <li> <p>Cuando <code>USE_CROWDSEC=yes</code>, el punto de entrada har\u00e1 lo siguiente:</p> <ol> <li>Registrar\u00e1 e iniciar\u00e1 el agente local de CrowdSec (a trav\u00e9s de <code>cscli</code>).</li> <li>Instalar\u00e1 o actualizar\u00e1 las colecciones y analizadores predeterminados.</li> <li>Configurar\u00e1 el bouncer <code>crowdsec-bunkerweb-bouncer/v1.6</code>.</li> </ol> </li> </ul>"},{"location":"es/integrations/#colecciones-y-analizadores-predeterminados","title":"Colecciones y Analizadores Predeterminados","text":"<p>En el primer inicio (o despu\u00e9s de una actualizaci\u00f3n), estos activos se instalan y mantienen actualizados autom\u00e1ticamente:</p> Tipo Nombre Prop\u00f3sito Colecci\u00f3n <code>crowdsecurity/nginx</code> Defiende los servidores Nginx contra una amplia gama de ataques basados en HTTP, desde fuerza bruta hasta intentos de inyecci\u00f3n. Colecci\u00f3n <code>crowdsecurity/appsec-virtual-patching</code> Ofrece un conjunto de reglas de estilo WAF actualizado din\u00e1micamente que apunta a CVEs conocidos, parcheado autom\u00e1ticamente a diario para proteger las aplicaciones web de vulnerabilidades reci\u00e9n descubiertas. Colecci\u00f3n <code>crowdsecurity/appsec-generic-rules</code> Complementa <code>crowdsecurity/appsec-virtual-patching</code> con heur\u00edsticas para patrones de ataque gen\u00e9ricos a nivel de aplicaci\u00f3n, como enumeraci\u00f3n, recorrido de rutas y sondeos automatizados, llenando los vac\u00edos donde las reglas espec\u00edficas de CVE a\u00fan no existen. Analizador <code>crowdsecurity/geoip-enrich</code> Enriquece los eventos con contexto de GeoIP. C\u00f3mo funciona internamente  El script de punto de entrada invoca:  <pre><code>cscli install collection crowdsecurity/nginx\ncscli install collection crowdsecurity/appsec-virtual-patching\ncscli install collection crowdsecurity/appsec-generic-rules\ncscli install parser     crowdsecurity/geoip-enrich\n</code></pre>"},{"location":"es/integrations/#anadir-colecciones-adicionales","title":"A\u00f1adir Colecciones Adicionales","text":"<p>\u00bfNecesitas m\u00e1s cobertura? Define <code>CROWDSEC_EXTRA_COLLECTIONS</code> con una lista de colecciones del Hub separadas por espacios:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_EXTRA_COLLECTIONS=\"crowdsecurity/apache2 crowdsecurity/mysql\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>C\u00f3mo funciona internamente</p> <p>El script recorre cada nombre e instala o actualiza seg\u00fan sea necesario, sin necesidad de pasos manuales.</p>"},{"location":"es/integrations/#deshabilitar-analizadores-especificos","title":"Deshabilitar Analizadores Espec\u00edficos","text":"<p>Si quieres mantener la configuraci\u00f3n predeterminada pero deshabilitar expl\u00edcitamente uno o m\u00e1s analizadores, proporciona una lista separada por espacios a trav\u00e9s de <code>CROWDSEC_DISABLED_PARSERS</code>:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_DISABLED_PARSERS=\"crowdsecurity/geoip-enrich foo/bar-parser\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Notas: - La lista se aplica despu\u00e9s de que se instalen/actualicen los elementos requeridos; solo se eliminan los analizadores que listas. - Usa los slugs del hub como se muestra en <code>cscli parsers list</code> (p. ej., <code>crowdsecurity/geoip-enrich</code>).</p>"},{"location":"es/integrations/#conmutador-de-appsec","title":"Conmutador de AppSec","text":"<p>Las caracter\u00edsticas de AppSec de CrowdSec \u2014impulsadas por las colecciones <code>appsec-virtual-patching</code> y <code>appsec-generic-rules</code>\u2014 est\u00e1n habilitadas por defecto.</p> <p>Para deshabilitar toda la funcionalidad de AppSec (WAF/parches virtuales), establece:</p> <pre><code>-e CROWDSEC_APPSEC_URL=\"\"\n</code></pre> <p>Esto desactiva efectivamente el punto final de AppSec para que no se apliquen reglas.</p>"},{"location":"es/integrations/#api-externa-de-crowdsec","title":"API Externa de CrowdSec","text":"<p>Si operas una instancia remota de CrowdSec, apunta el contenedor a tu API:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -e USE_CROWDSEC=yes \\\n  -e CROWDSEC_API=\"https://crowdsec.example.com:8000\" \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing```\n\n*   El **registro local** se omite cuando `CROWDSEC_API` no es `127.0.0.1` o `localhost`.\n*   **AppSec** se deshabilita por defecto cuando se usa una API externa. Para habilitarlo, establece `CROWDSEC_APPSEC_URL` en tu punto final deseado.\n*   El registro del bouncer todav\u00eda se realiza contra la API remota.\n*   Para reutilizar una clave de bouncer existente, proporciona `CROWDSEC_API_KEY` con tu token pregenerado.\n\n---\n\n!!! tip \"M\u00e1s opciones\"\n    Para una cobertura completa de todas las opciones de CrowdSec (escenarios personalizados, registros, soluci\u00f3n de problemas y m\u00e1s), consulta la [documentaci\u00f3n del plugin de BunkerWeb CrowdSec](features.md#crowdsec) o visita el [sitio web oficial de CrowdSec](https://www.crowdsec.net/?utm_source=external-docs&amp;utm_medium=cta&amp;utm_campaign=bunker-web-docs).\n\n## Docker\n\n&lt;figure markdown&gt;\n  ![Descripci\u00f3n general](assets/img/integration-docker.svg){ align=center, width=\"600\" }\n  &lt;figcaption&gt;Integraci\u00f3n con Docker&lt;/figcaption&gt;\n&lt;/figure&gt;\n\nUsar BunkerWeb como un contenedor de [Docker](https://www.docker.com/) ofrece un enfoque conveniente y sencillo para probar y utilizar la soluci\u00f3n, especialmente si ya est\u00e1s familiarizado con la tecnolog\u00eda Docker.\n\nPara facilitar tu despliegue en Docker, proporcionamos im\u00e1genes preconstruidas listas para usar en [Docker Hub](https://hub.docker.com/r/bunkerity/bunkerweb), compatibles con m\u00faltiples arquitecturas. Estas im\u00e1genes preconstruidas est\u00e1n optimizadas y preparadas para su uso en las siguientes arquitecturas:\n\n- x64 (64 bits)\n- x86\n- armv8 (ARM 64 bits)\n- armv7 (ARM 32 bits)\n\nAl acceder a estas im\u00e1genes preconstruidas desde Docker Hub, puedes obtener y ejecutar r\u00e1pidamente BunkerWeb dentro de tu entorno Docker, eliminando la necesidad de extensos procesos de configuraci\u00f3n. Este enfoque simplificado te permite concentrarte en aprovechar las capacidades de BunkerWeb sin complejidades innecesarias.\n\nYa sea que est\u00e9s realizando pruebas, desarrollando aplicaciones o desplegando BunkerWeb en producci\u00f3n, la opci\u00f3n de contenedorizaci\u00f3n de Docker proporciona flexibilidad y facilidad de uso. Adoptar este m\u00e9todo te permite aprovechar al m\u00e1ximo las caracter\u00edsticas de BunkerWeb mientras te beneficias de las ventajas de la tecnolog\u00eda Docker.\n\n```shell\ndocker pull bunkerity/bunkerweb:testing\n</code></pre> <p>Las im\u00e1genes de Docker tambi\u00e9n est\u00e1n disponibles en GitHub packages y se pueden descargar usando la direcci\u00f3n del repositorio <code>ghcr.io</code>:</p> <pre><code>docker pull ghcr.io/bunkerity/bunkerweb:testing\n</code></pre> <p>Los conceptos clave para la integraci\u00f3n con Docker incluyen:</p> <ul> <li>Variables de entorno: Configura BunkerWeb f\u00e1cilmente usando variables de entorno. Estas variables te permiten personalizar varios aspectos del comportamiento de BunkerWeb, como la configuraci\u00f3n de red, las opciones de seguridad y otros par\u00e1metros.</li> <li>Contenedor del programador: Gestiona la configuraci\u00f3n y ejecuta trabajos usando un contenedor dedicado llamado el programador.</li> <li>Redes: Las redes de Docker desempe\u00f1an un papel vital en la integraci\u00f3n de BunkerWeb. Estas redes tienen dos prop\u00f3sitos principales: exponer puertos a los clientes y conectarse a los servicios web ascendentes. Al exponer los puertos, BunkerWeb puede aceptar solicitudes entrantes de los clientes, permiti\u00e9ndoles acceder a los servicios web protegidos. Adem\u00e1s, al conectarse a los servicios web ascendentes, BunkerWeb puede enrutar y gestionar el tr\u00e1fico de manera eficiente, proporcionando una mayor seguridad y rendimiento.</li> </ul> <p>Backend de la base de datos</p> <p>Ten en cuenta que nuestras instrucciones asumen que est\u00e1s utilizando SQLite como el backend de base de datos predeterminado, seg\u00fan lo configurado por el ajuste <code>DATABASE_URI</code>. Sin embargo, tambi\u00e9n se admiten otros backends de bases de datos. Consulta los archivos docker-compose en la carpeta misc/integrations del repositorio para obtener m\u00e1s informaci\u00f3n.</p>"},{"location":"es/integrations/#variables-de-entorno","title":"Variables de entorno","text":"<p>Las configuraciones se pasan al Programador usando las variables de entorno de Docker:</p> <pre><code>...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      - MY_SETTING=value\n      - ANOTHER_SETTING=another value\n    volumes:\n      - bw-storage:/data # Esto se usa para persistir la cach\u00e9 y otros datos como las copias de seguridad\n...\n</code></pre> <p>Lista completa</p> <p>Para la lista completa de variables de entorno, consulta la secci\u00f3n de configuraciones de la documentaci\u00f3n.</p>"},{"location":"es/integrations/#usando-secretos-de-docker","title":"Usando secretos de Docker","text":"<p>En lugar de pasar configuraciones sensibles a trav\u00e9s de variables de entorno, puedes almacenarlas como secretos de Docker. Para cada configuraci\u00f3n que quieras asegurar, crea un secreto de Docker con el nombre que coincida con la clave de la configuraci\u00f3n (en may\u00fasculas). Los scripts de punto de entrada de BunkerWeb cargan autom\u00e1ticamente los secretos desde <code>/run/secrets</code> y los exportan como variables de entorno.</p> <p>Ejemplo: <pre><code># Crear un secreto de Docker para ADMIN_PASSWORD\necho \"S3cr3tP@ssw0rd\" | docker secret create ADMIN_PASSWORD -```\n\nMonta los secretos al desplegar:\n```yaml\nservices:\n  bw-ui:\n    secrets:\n      - ADMIN_PASSWORD\n...\nsecrets:\n  ADMIN_PASSWORD:\n    external: true```\n\nEsto asegura que las configuraciones sensibles se mantengan fuera del entorno y de los registros.\n\n### Programador\n\nEl [programador](concepts.md#scheduler) se ejecuta en su propio contenedor, que tambi\u00e9n est\u00e1 disponible en Docker Hub:\n\n```shell\ndocker pull bunkerity/bunkerweb-scheduler:testing```\n\n!!! info \"Configuraciones de BunkerWeb\"\n\n    Desde la versi\u00f3n `1.6.0`, el contenedor del Programador es donde defines las configuraciones para BunkerWeb. El Programador luego env\u00eda la configuraci\u00f3n al contenedor de BunkerWeb.\n\n    \u26a0 **Importante**: Todas las configuraciones relacionadas con la API (como `API_HTTP_PORT`, `API_LISTEN_IP`, `API_SERVER_NAME`, `API_WHITELIST_IP`, y `API_TOKEN` si lo usas) **tambi\u00e9n deben definirse en el contenedor de BunkerWeb**. Las configuraciones deben ser id\u00e9nticas en ambos contenedores; de lo contrario, el contenedor de BunkerWeb no aceptar\u00e1 las solicitudes de la API del Programador.\n\n    ```yaml\n    x-bw-api-env: &amp;bw-api-env\n      # Usamos un ancla para evitar repetir las mismas configuraciones en ambos contenedores\n      API_HTTP_PORT: \"5000\" # Valor predeterminado\n      API_LISTEN_IP: \"0.0.0.0\" # Valor predeterminado\n      API_SERVER_NAME: \"bwapi\" # Valor predeterminado\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\" # Configura esto seg\u00fan tu red\n      # Token opcional; si se establece, el Programador env\u00eda Authorization: Bearer &lt;token&gt;\n      API_TOKEN: \"\"\n\n    services:\n      bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        environment:\n          # Esto establecer\u00e1 las configuraciones de la API para el contenedor de BunkerWeb\n          &lt;&lt;: *bw-api-env\n        restart: \"unless-stopped\"\n        networks:\n          - bw-universe\n\n      bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        environment:\n          # Esto establecer\u00e1 las configuraciones de la API para el contenedor del Programador\n          &lt;&lt;: *bw-api-env\n        volumes:\n          - bw-storage:/data # Esto se usa para persistir la cach\u00e9 y otros datos como las copias de seguridad\n        restart: \"unless-stopped\"\n        networks:\n          - bw-universe\n    ...\n    ```\n\nSe necesita un volumen para almacenar la base de datos SQLite y las copias de seguridad utilizadas por el programador:\n\n```yaml\n...\nservices:\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - bw-storage:/data\n...\nvolumes:\n  bw-storage:\n</code></pre></p> <p>Usar una carpeta local para datos persistentes</p> <p>El programador se ejecuta como un usuario sin privilegios con UID 101 y GID 101 dentro del contenedor. Esto mejora la seguridad: en caso de que se explote una vulnerabilidad, el atacante no tendr\u00e1 privilegios completos de root (UID/GID 0).</p> <p>Sin embargo, si usas una carpeta local para datos persistentes, debes establecer los permisos correctos para que el usuario sin privilegios pueda escribir datos en ella. Por ejemplo:</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternativamente, si la carpeta ya existe:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Si est\u00e1s utilizando Docker en modo sin ra\u00edz o Podman, los UID y GID en el contenedor se mapear\u00e1n a diferentes en el host. Primero necesitar\u00e1s verificar tu subuid y subgid iniciales:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Por ejemplo, si tienes un valor de 100000, el UID/GID mapeado ser\u00e1 100100 (100000 + 100):</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>O si la carpeta ya existe:</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nsudo chmod -R 770 bw-data\n</code></pre>"},{"location":"es/integrations/#redes","title":"Redes","text":"<p>Por defecto, el contenedor de BunkerWeb escucha (dentro del contenedor) en 8080/tcp para HTTP, 8443/tcp para HTTPS, y 8443/udp para QUIC.</p> <p>Puertos privilegiados en modo sin ra\u00edz o al usar Podman</p> <p>Si est\u00e1s usando Docker en modo sin ra\u00edz y quieres redirigir puertos privilegiados (&lt; 1024) como el 80 y 443 a BunkerWeb, por favor consulta los prerrequisitos aqu\u00ed.</p> <p>Si est\u00e1s usando Podman, puedes reducir el n\u00famero m\u00ednimo para puertos no privilegiados: <pre><code>sudo sysctl net.ipv4.ip_unprivileged_port_start=1\n</code></pre></p> <p>La pila t\u00edpica de BunkerWeb cuando se usa la integraci\u00f3n con Docker contiene los siguientes contenedores:</p> <ul> <li>BunkerWeb</li> <li>Programador</li> <li>Tus servicios</li> </ul> <p>Para fines de defensa en profundidad, recomendamos encarecidamente crear al menos tres redes Docker diferentes:</p> <ul> <li><code>bw-services</code>: para BunkerWeb y tus servicios web</li> <li><code>bw-universe</code>: para BunkerWeb y el programador</li> <li><code>bw-db</code>: para la base de datos (si est\u00e1s usando una)</li> </ul> <p>Para asegurar la comunicaci\u00f3n entre el programador y la API de BunkerWeb, autoriza las llamadas a la API. Usa la configuraci\u00f3n <code>API_WHITELIST_IP</code> para especificar las direcciones IP y subredes permitidas. Para una protecci\u00f3n m\u00e1s fuerte, establece <code>API_TOKEN</code> en ambos contenedores; el programador incluir\u00e1 autom\u00e1ticamente <code>Authorization: Bearer &lt;token&gt;</code>.</p> <p>Se recomienda encarecidamente usar una subred est\u00e1tica para la red <code>bw-universe</code> para mejorar la seguridad. Al implementar estas medidas, puedes asegurar que solo las fuentes autorizadas puedan acceder a la API de BunkerWeb, reduciendo el riesgo de acceso no autorizado o actividades maliciosas:</p> <pre><code>x-bw-api-env: &amp;bw-api-env\n  # Usamos un ancla para evitar repetir las mismas configuraciones en ambos contenedores\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  API_TOKEN: \"\" # Token de API opcional\n  # Token de API opcional para acceso autenticado a la API\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-services\n      - bw-universe\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Esta configuraci\u00f3n es obligatoria para especificar la instancia de BunkerWeb\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n...\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Subred est\u00e1tica para que solo las fuentes autorizadas puedan acceder a la API de BunkerWeb\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"es/integrations/#archivo-compose-completo","title":"Archivo compose completo","text":"<pre><code>x-bw-api-env: &amp;bw-api-env\n  # Usamos un ancla para evitar repetir las mismas configuraciones para ambos contenedores\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-api-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    depends_on:\n      - bunkerweb\n    environment:\n      &lt;&lt;: *bw-api-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Esta configuraci\u00f3n es obligatoria para especificar la instancia de BunkerWeb\n      SERVER_NAME: \"www.example.com\"\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Subred est\u00e1tica para que solo las fuentes autorizadas puedan acceder a la API de BunkerWeb\n  bw-services:\n    name: bw-services\n</code></pre>"},{"location":"es/integrations/#compilar-desde-el-codigo-fuente","title":"Compilar desde el c\u00f3digo fuente","text":"<p>Alternativamente, si prefieres un enfoque m\u00e1s pr\u00e1ctico, tienes la opci\u00f3n de compilar la imagen de Docker directamente desde el c\u00f3digo fuente. Compilar la imagen desde el c\u00f3digo fuente te da un mayor control y personalizaci\u00f3n sobre el proceso de despliegue. Sin embargo, ten en cuenta que este m\u00e9todo puede tardar un tiempo en completarse, dependiendo de la configuraci\u00f3n de tu hardware (puedes tomarte un caf\u00e9 \u2615 si es necesario).</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t bw -f src/bw/Dockerfile . &amp;&amp; \\\ndocker build -t bw-scheduler -f src/scheduler/Dockerfile . &amp;&amp; \\\ndocker build -t bw-autoconf -f src/autoconf/Dockerfile . &amp;&amp; \\\ndocker build -t bw-ui -f src/ui/Dockerfile .\n</code></pre>"},{"location":"es/integrations/#linux","title":"Linux","text":"Integraci\u00f3n con Linux <p>Las distribuciones de Linux compatibles con BunkerWeb (arquitecturas amd64/x86_64 y arm64/aarch64) incluyen:</p> <ul> <li>Debian 12 \"Bookworm\"</li> <li>Debian 13 \"Trixie\"</li> <li>Ubuntu 22.04 \"Jammy\"</li> <li>Ubuntu 24.04 \"Noble\"</li> <li>Fedora 41 y 42</li> <li>Red Hat Enterprise Linux (RHEL) 8, 9 y 10</li> </ul>"},{"location":"es/integrations/#script-de-instalacion-facil","title":"Script de instalaci\u00f3n f\u00e1cil","text":"<p>Para una experiencia de instalaci\u00f3n simplificada, BunkerWeb proporciona un script de instalaci\u00f3n f\u00e1cil que maneja autom\u00e1ticamente todo el proceso de configuraci\u00f3n, incluida la instalaci\u00f3n de NGINX, la configuraci\u00f3n del repositorio y la configuraci\u00f3n del servicio.</p>"},{"location":"es/integrations/#inicio-rapido","title":"Inicio r\u00e1pido","text":"<p>Para empezar, descarga el script de instalaci\u00f3n y su suma de verificaci\u00f3n, luego verifica la integridad del script antes de ejecutarlo.</p> <pre><code># Descargar el script y su suma de verificaci\u00f3n\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Verificar la suma de verificaci\u00f3n\nsha256sum -c install-bunkerweb.sh.sha256\n\n# Si la verificaci\u00f3n es exitosa, ejecuta el script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Aviso de seguridad</p> <p>Siempre verifica la integridad del script de instalaci\u00f3n antes de ejecutarlo.</p> <p>Descarga el archivo de suma de verificaci\u00f3n y utiliza una herramienta como <code>sha256sum</code> para confirmar que el script no ha sido alterado o manipulado.</p> <p>Si la verificaci\u00f3n de la suma de verificaci\u00f3n falla, no ejecutes el script\u2014puede que no sea seguro.</p>"},{"location":"es/integrations/#como-funciona","title":"C\u00f3mo funciona","text":"<p>El script de instalaci\u00f3n f\u00e1cil es una herramienta poderosa dise\u00f1ada para simplificar la configuraci\u00f3n de BunkerWeb en un sistema Linux nuevo. Automatiza los siguientes pasos clave:</p> <ol> <li>An\u00e1lisis del sistema: Detecta tu sistema operativo y lo verifica contra la lista de distribuciones compatibles.</li> <li>Personalizaci\u00f3n de la instalaci\u00f3n: En modo interactivo, te pide que elijas un tipo de instalaci\u00f3n (Todo en uno, Gestor, Trabajador, etc.) y decidas si habilitar el asistente de configuraci\u00f3n basado en la web.</li> <li>Integraciones opcionales: Ofrece instalar y configurar autom\u00e1ticamente el Motor de Seguridad CrowdSec.</li> <li>Gesti\u00f3n de dependencias: Instala la versi\u00f3n correcta de NGINX requerida por BunkerWeb desde fuentes oficiales y bloquea la versi\u00f3n para evitar actualizaciones no deseadas.</li> <li>Instalaci\u00f3n de BunkerWeb: A\u00f1ade el repositorio de paquetes de BunkerWeb, instala los paquetes necesarios y bloquea la versi\u00f3n.</li> <li>Configuraci\u00f3n del servicio: Configura y habilita los servicios <code>systemd</code> correspondientes a tu tipo de instalaci\u00f3n elegido.</li> <li>Gu\u00eda post-instalaci\u00f3n: Proporciona los siguientes pasos claros para ayudarte a empezar con tu nueva instancia de BunkerWeb.</li> </ol>"},{"location":"es/integrations/#instalacion-interactiva","title":"Instalaci\u00f3n interactiva","text":"<p>Cuando se ejecuta sin ninguna opci\u00f3n, el script entra en un modo interactivo que te gu\u00eda a trav\u00e9s del proceso de configuraci\u00f3n. Se te pedir\u00e1 que tomes las siguientes decisiones:</p> <ol> <li>Tipo de instalaci\u00f3n: Selecciona los componentes que quieres instalar.<ul> <li>Pila completa (predeterminado): Una instalaci\u00f3n todo en uno que incluye BunkerWeb, el Programador y la Interfaz de Usuario Web.</li> <li>Gestor: Instala el Programador y la Interfaz de Usuario Web, destinado a gestionar uno o m\u00e1s trabajadores remotos de BunkerWeb.</li> <li>Trabajador: Instala solo la instancia de BunkerWeb, que puede ser gestionada por un Gestor remoto.</li> <li>Solo Programador: Instala solo el componente del Programador.</li> <li>Solo Interfaz de Usuario Web: Instala solo el componente de la Interfaz de Usuario Web.</li> </ul> </li> <li>Asistente de configuraci\u00f3n: Elige si habilitar el asistente de configuraci\u00f3n basado en la web. Esto es muy recomendable para los usuarios primerizos.</li> <li>Integraci\u00f3n con CrowdSec: Opta por instalar el motor de seguridad CrowdSec para una protecci\u00f3n avanzada contra amenazas en tiempo real.</li> <li>CrowdSec AppSec: Si eliges instalar CrowdSec, tambi\u00e9n puedes habilitar el componente de Seguridad de Aplicaciones (AppSec), que a\u00f1ade capacidades de WAF.</li> <li>Servicio de API: Elige si habilitar el servicio opcional de la API de BunkerWeb. Est\u00e1 deshabilitado por defecto en las instalaciones de Linux.</li> </ol> <p>Instalaciones de Gestor y Programador</p> <p>Si eliges el tipo de instalaci\u00f3n Gestor o Solo Programador, tambi\u00e9n se te pedir\u00e1 que proporciones las direcciones IP o los nombres de host de tus instancias de trabajador de BunkerWeb.</p>"},{"location":"es/integrations/#opciones-de-linea-de-comandos","title":"Opciones de l\u00ednea de comandos","text":"<p>Para configuraciones no interactivas o automatizadas, el script se puede controlar con indicadores de l\u00ednea de comandos:</p> <p>Opciones generales:</p> Opci\u00f3n Descripci\u00f3n <code>-v, --version VERSION</code> Especifica la versi\u00f3n de BunkerWeb a instalar (p. ej., <code>testing</code>). <code>-w, --enable-wizard</code> Habilita el asistente de configuraci\u00f3n. <code>-n, --no-wizard</code> Deshabilita el asistente de configuraci\u00f3n. <code>-y, --yes</code> Se ejecuta en modo no interactivo usando las respuestas predeterminadas para todas las preguntas. <code>-f, --force</code> Fuerza a que la instalaci\u00f3n contin\u00fae incluso en una versi\u00f3n de SO no compatible. <code>-q, --quiet</code> Instalaci\u00f3n silenciosa (suprime la salida). <code>--api</code>, <code>--enable-api</code> Habilita el servicio systemd de la API (FastAPI) (deshabilitado por defecto). <code>--no-api</code> Deshabilita expl\u00edcitamente el servicio de la API. <code>-h, --help</code> Muestra el mensaje de ayuda con todas las opciones disponibles. <code>--dry-run</code> Muestra lo que se instalar\u00eda sin hacerlo. <p>Tipos de instalaci\u00f3n:</p> Opci\u00f3n Descripci\u00f3n <code>--full</code> Instalaci\u00f3n de pila completa (BunkerWeb, Programador, UI). Este es el predeterminado. <code>--manager</code> Instala el Programador y la UI para gestionar trabajadores remotos. <code>--worker</code> Instala solo la instancia de BunkerWeb. <code>--scheduler-only</code> Instala solo el componente del Programador. <code>--ui-only</code> Instala solo el componente de la Interfaz de Usuario Web. <p>Integraciones de seguridad:</p> Opci\u00f3n Descripci\u00f3n <code>--crowdsec</code> Instala y configura el motor de seguridad CrowdSec. <code>--no-crowdsec</code> Omite la instalaci\u00f3n de CrowdSec. <code>--crowdsec-appsec</code> Instala CrowdSec con el componente AppSec (incluye capacidades de WAF). <p>Opciones avanzadas:</p> Opci\u00f3n Descripci\u00f3n <code>--instances \"IP1 IP2\"</code> Lista de instancias de BunkerWeb separadas por espacios (requerido para los modos manager/scheduler). <p>Ejemplo de uso:</p> <pre><code># Ejecutar en modo interactivo (recomendado para la mayor\u00eda de los usuarios)\nsudo ./install-bunkerweb.sh\n\n# Instalaci\u00f3n no interactiva con valores predeterminados (pila completa, asistente habilitado)\nsudo ./install-bunkerweb.sh --yes\n\n# Instalar un nodo Trabajador sin el asistente de configuraci\u00f3n\nsudo ./install-bunkerweb.sh --worker --no-wizard\n\n# Instalar una versi\u00f3n espec\u00edfica\nsudo ./install-bunkerweb.sh --version testing\n\n# Configuraci\u00f3n del Gestor con instancias de trabajador remotas (se requieren instancias)\nsudo ./install-bunkerweb.sh --manager --instances \"192.168.1.10 192.168.1.11\"\n\n# Instalaci\u00f3n completa con CrowdSec y AppSec\nsudo ./install-bunkerweb.sh --crowdsec-appsec\n\n# Instalaci\u00f3n silenciosa no interactiva\nsudo ./install-bunkerweb.sh --quiet --yes\n\n# Vista previa de la instalaci\u00f3n sin ejecutarla\nsudo ./install-bunkerweb.sh --dry-run\n\n# Habilitar la API durante la instalaci\u00f3n f\u00e1cil (no interactiva)\nsudo ./install-bunkerweb.sh --yes --api\n\n# Error: CrowdSec no se puede usar con instalaciones de trabajador\n# sudo ./install-bunkerweb.sh --worker --crowdsec  # Esto fallar\u00e1\n\n# Error: Se requieren instancias para el gestor en modo no interactivo\n# sudo ./install-bunkerweb.sh --manager --yes  # Esto fallar\u00e1 sin --instances\n</code></pre> <p>Notas importantes sobre la compatibilidad de las opciones</p> <p>Limitaciones de CrowdSec: - Las opciones de CrowdSec (<code>--crowdsec</code>, <code>--crowdsec-appsec</code>) solo son compatibles con los tipos de instalaci\u00f3n <code>--full</code> (predeterminado) y <code>--manager</code> - No se pueden usar con instalaciones <code>--worker</code>, <code>--scheduler-only</code> o <code>--ui-only</code></p> <p>Requisitos de las instancias: - La opci\u00f3n <code>--instances</code> solo es v\u00e1lida con los tipos de instalaci\u00f3n <code>--manager</code> y <code>--scheduler-only</code> - Cuando se usan <code>--manager</code> o <code>--scheduler-only</code> con <code>--yes</code> (modo no interactivo), la opci\u00f3n <code>--instances</code> es obligatoria - Formato: <code>--instances \"192.168.1.10 192.168.1.11 192.168.1.12\"</code></p> <p>Interactivo vs No interactivo: - El modo interactivo (predeterminado) pedir\u00e1 los valores requeridos que falten - El modo no interactivo (<code>--yes</code>) requiere que todas las opciones necesarias se proporcionen a trav\u00e9s de la l\u00ednea de comandos</p>"},{"location":"es/integrations/#integracion-de-crowdsec-con-el-script","title":"Integraci\u00f3n de CrowdSec con el script","text":"<p>Si optas por instalar CrowdSec durante la configuraci\u00f3n interactiva, el script automatiza completamente su integraci\u00f3n con BunkerWeb:</p> <ul> <li>A\u00f1ade el repositorio oficial de CrowdSec e instala el agente.</li> <li>Crea un nuevo archivo de adquisici\u00f3n para que CrowdSec analice los registros de BunkerWeb (<code>access.log</code>, <code>error.log</code> y <code>modsec_audit.log</code>).</li> <li>Instala colecciones esenciales (<code>crowdsecurity/nginx</code>) y analizadores (<code>crowdsecurity/geoip-enrich</code>).</li> <li>Registra un bouncer para BunkerWeb y configura autom\u00e1ticamente la clave de la API en <code>/etc/bunkerweb/variables.env</code>.</li> <li>Si tambi\u00e9n seleccionas el Componente AppSec, instala las colecciones <code>appsec-virtual-patching</code> y <code>appsec-generic-rules</code> y configura el punto final de AppSec para BunkerWeb.</li> </ul> <p>Esto proporciona una integraci\u00f3n perfecta y lista para usar para una potente prevenci\u00f3n de intrusiones.</p>"},{"location":"es/integrations/#consideraciones-sobre-rhel","title":"Consideraciones sobre RHEL","text":"<p>Soporte de base de datos externa en sistemas basados en RHEL</p> <p>Si planeas usar una base de datos externa (recomendado para producci\u00f3n), debes instalar el paquete de cliente de base de datos apropiado:</p> <pre><code># Para MariaDB\nsudo dnf install mariadb\n\n# Para MySQL\nsudo dnf install mysql\n\n# Para PostgreSQL\nsudo dnf install postgresql\n</code></pre> <p>Esto es necesario para que el Programador de BunkerWeb se conecte a tu base de datos externa.</p>"},{"location":"es/integrations/#despues-de-la-instalacion","title":"Despu\u00e9s de la instalaci\u00f3n","text":"<p>Dependiendo de tus elecciones durante la instalaci\u00f3n:</p> <p>Con el asistente de configuraci\u00f3n habilitado:</p> <ol> <li>Accede al asistente de configuraci\u00f3n en: <code>https://tu-ip-de-servidor/setup</code></li> <li>Sigue la configuraci\u00f3n guiada para configurar tu primer servicio protegido</li> <li>Configura los certificados SSL/TLS y otras configuraciones de seguridad</li> </ol> <p>Sin el asistente de configuraci\u00f3n:</p> <ol> <li>Edita <code>/etc/bunkerweb/variables.env</code> para configurar BunkerWeb manualmente</li> <li>A\u00f1ade la configuraci\u00f3n de tu servidor y los servicios protegidos</li> <li>Reinicia el programador: <code>sudo systemctl restart bunkerweb-scheduler</code></li> </ol>"},{"location":"es/integrations/#instalacion-usando-el-gestor-de-paquetes","title":"Instalaci\u00f3n usando el gestor de paquetes","text":"<p>Aseg\u00farate de tener NGINX 1.28.0 instalado antes de instalar BunkerWeb. Para todas las distribuciones, excepto Fedora, es obligatorio usar los paquetes precompilados del repositorio oficial de NGINX. Compilar NGINX desde el c\u00f3digo fuente o usar paquetes de diferentes repositorios no funcionar\u00e1 con los paquetes precompilados oficiales de BunkerWeb. Sin embargo, tienes la opci\u00f3n de compilar BunkerWeb desde el c\u00f3digo fuente.</p> Debian Bookworm/TrixieUbuntuFedoraRedHat <p>El primer paso es a\u00f1adir el repositorio oficial de NGINX:</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/debian `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>Ahora deber\u00edas poder instalar NGINX 1.28.0:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Versi\u00f3n de prueba/desarrollo</p> <p>Si usas la versi\u00f3n <code>testing</code> o <code>dev</code>, necesitar\u00e1s a\u00f1adir la directiva <code>force-bad-version</code> a tu archivo <code>/etc/dpkg/dpkg.cfg</code> antes de instalar BunkerWeb.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>Deshabilitar el asistente de configuraci\u00f3n</p> <p>Si no quieres usar el asistente de configuraci\u00f3n de la interfaz de usuario web cuando se instale BunkerWeb, exporta la siguiente variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Y finalmente instala BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Para evitar la actualizaci\u00f3n de los paquetes de NGINX y/o BunkerWeb al ejecutar <code>apt upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>El primer paso es a\u00f1adir el repositorio oficial de NGINX:</p> <pre><code>sudo apt install -y curl gnupg2 ca-certificates lsb-release ubuntu-keyring &amp;&amp; \\\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n| sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null &amp;&amp; \\\necho \"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/ubuntu `lsb_release -cs` nginx\" \\\n| sudo tee /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>Ahora deber\u00edas poder instalar NGINX 1.28.0:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades nginx=1.28.0-1~$(lsb_release -cs)\n</code></pre> <p>Versi\u00f3n de prueba/desarrollo</p> <p>Si usas la versi\u00f3n <code>testing</code> o <code>dev</code>, necesitar\u00e1s a\u00f1adir la directiva <code>force-bad-version</code> a tu archivo <code>/etc/dpkg/dpkg.cfg</code> antes de instalar BunkerWeb.</p> <pre><code>echo \"force-bad-version\" | sudo tee -a /etc/dpkg/dpkg.cfg\n</code></pre> <p>Deshabilitar el asistente de configuraci\u00f3n</p> <p>Si no quieres usar el asistente de configuraci\u00f3n de la interfaz de usuario web cuando se instale BunkerWeb, exporta la siguiente variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Y finalmente instala BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.deb.sh | sudo bash &amp;&amp; \\\nsudo apt update &amp;&amp; \\\nsudo -E apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Para evitar la actualizaci\u00f3n de los paquetes de NGINX y/o BunkerWeb al ejecutar <code>apt upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo apt-mark hold nginx bunkerweb\n</code></pre> <p>Pruebas de actualizaci\u00f3n de Fedora</p> <p>Si no encuentras la versi\u00f3n de NGINX listada en el repositorio estable, puedes habilitar el repositorio <code>updates-testing</code>:</p> <pre><code>sudo dnf config-manager setopt updates-testing.enabled=1\n</code></pre> <p>Fedora ya proporciona NGINX 1.28.0 que nosotros soportamos</p> <pre><code>sudo dnf install -y --allowerasing nginx-1.28.0\n</code></pre> <p>Deshabilitar el asistente de configuraci\u00f3n</p> <p>Si no quieres usar el asistente de configuraci\u00f3n de la interfaz de usuario web cuando se instale BunkerWeb, exporta la siguiente variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Y finalmente instala BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf makecache &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Para evitar la actualizaci\u00f3n de los paquetes de NGINX y/o BunkerWeb al ejecutar <code>dnf upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre> <p>El primer paso es a\u00f1adir el repositorio oficial de NGINX. Crea el siguiente archivo en <code>/etc/yum.repos.d/nginx.repo</code>:</p> <pre><code>[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n</code></pre> <p>Ahora deber\u00edas poder instalar NGINX 1.28.0:</p> <pre><code>sudo dnf install --allowerasing nginx-1.28.0\n</code></pre> <p>Deshabilitar el asistente de configuraci\u00f3n</p> <p>Si no quieres usar el asistente de configuraci\u00f3n de la interfaz de usuario web cuando se instale BunkerWeb, exporta la siguiente variable:</p> <pre><code>export UI_WIZARD=no\n</code></pre> <p>Y finalmente instala BunkerWeb testing:</p> <pre><code>curl -s https://repo.bunkerweb.io/install/script.rpm.sh | sudo bash &amp;&amp; \\\nsudo dnf check-update &amp;&amp; \\\nsudo -E dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Para evitar la actualizaci\u00f3n de los paquetes de NGINX y/o BunkerWeb al ejecutar <code>dnf upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo dnf versionlock add nginx &amp;&amp; \\\nsudo dnf versionlock add bunkerweb\n</code></pre>"},{"location":"es/integrations/#configuracion-y-servicio","title":"Configuraci\u00f3n y servicio","text":"<p>La configuraci\u00f3n manual de BunkerWeb se realiza editando el archivo <code>/etc/bunkerweb/variables.env</code>:</p> <pre><code>MY_SETTING_1=value1\nMY_SETTING_2=value2\n...\n</code></pre> <p>Cuando se instala, BunkerWeb viene con tres servicios <code>bunkerweb</code>, <code>bunkerweb-scheduler</code> y <code>bunkerweb-ui</code> que puedes gestionar usando <code>systemctl</code>.</p> <p>Si editas manualmente la configuraci\u00f3n de BunkerWeb usando <code>/etc/bunkerweb/variables.env</code>, un reinicio del servicio <code>bunkerweb-scheduler</code> ser\u00e1 suficiente para generar y recargar la configuraci\u00f3n sin ning\u00fan tiempo de inactividad. Pero dependiendo del caso (como cambiar los puertos de escucha) es posible que necesites reiniciar el servicio <code>bunkerweb</code>.</p>"},{"location":"es/integrations/#alta-disponibilidad","title":"Alta disponibilidad","text":"<p>El programador puede separarse de la instancia de BunkerWeb para proporcionar alta disponibilidad. En este caso, el programador se instalar\u00e1 en un servidor separado y podr\u00e1 gestionar m\u00faltiples instancias de BunkerWeb.</p>"},{"location":"es/integrations/#gestor","title":"Gestor","text":"<p>Para instalar solo el programador en un servidor, puedes exportar las siguientes variables antes de ejecutar la instalaci\u00f3n de BunkerWeb:</p> <pre><code>export MANAGER_MODE=yes\nexport UI_WIZARD=no\n</code></pre> <p>Alternativamente, tambi\u00e9n puedes exportar las siguientes variables para habilitar solo el programador:</p> <pre><code>export SERVICE_SCHEDULER=yes\nexport SERVICE_BUNKERWEB=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"es/integrations/#trabajador","title":"Trabajador","text":"<p>En otro servidor, para instalar solo BunkerWeb, puedes exportar las siguientes variables antes de ejecutar la instalaci\u00f3n de BunkerWeb:</p> <pre><code>export WORKER_MODE=yes\n</code></pre> <p>Alternativamente, tambi\u00e9n puedes exportar las siguientes variables para habilitar solo BunkerWeb:</p> <pre><code>export SERVICE_BUNKERWEB=yes\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=no\n</code></pre>"},{"location":"es/integrations/#interfaz-de-usuario-web","title":"Interfaz de usuario web","text":"<p>La interfaz de usuario web se puede instalar en un servidor separado para proporcionar una interfaz dedicada para gestionar las instancias de BunkerWeb. Para instalar solo la interfaz de usuario web, puedes exportar las siguientes variables antes de ejecutar la instalaci\u00f3n de BunkerWeb:</p> <pre><code>export SERVICE_BUNKERWEB=no\nexport SERVICE_SCHEDULER=no\nexport SERVICE_UI=yes\n</code></pre>"},{"location":"es/integrations/#autoconfiguracion-de-docker","title":"Autoconfiguraci\u00f3n de Docker","text":"Integraci\u00f3n de autoconfiguraci\u00f3n de Docker <p>Integraci\u00f3n con Docker</p> <p>La integraci\u00f3n de autoconfiguraci\u00f3n de Docker es una \"evoluci\u00f3n\" de la de Docker. Por favor, lee primero la secci\u00f3n de integraci\u00f3n con Docker si es necesario.</p> <p>Hay disponible un enfoque alternativo para solucionar el inconveniente de tener que recrear el contenedor cada vez que hay una actualizaci\u00f3n. Utilizando otra imagen llamada autoconf, puedes automatizar la reconfiguraci\u00f3n en tiempo real de BunkerWeb sin necesidad de recrear el contenedor.</p> <p>Para aprovechar esta funcionalidad, en lugar de definir variables de entorno para el contenedor de BunkerWeb, puedes a\u00f1adir etiquetas a tus contenedores de aplicaciones web. La imagen autoconf escuchar\u00e1 entonces los eventos de Docker y gestionar\u00e1 sin problemas las actualizaciones de configuraci\u00f3n para BunkerWeb.</p> <p>Este proceso \"autom\u00e1gico\" simplifica la gesti\u00f3n de las configuraciones de BunkerWeb. Al a\u00f1adir etiquetas a tus contenedores de aplicaciones web, puedes delegar las tareas de reconfiguraci\u00f3n a autoconf sin la intervenci\u00f3n manual de tener que recrear el contenedor. Esto agiliza el proceso de actualizaci\u00f3n y mejora la comodidad.</p> <p>Al adoptar este enfoque, puedes disfrutar de la reconfiguraci\u00f3n en tiempo real de BunkerWeb sin la molestia de tener que recrear el contenedor, lo que lo hace m\u00e1s eficiente y f\u00e1cil de usar.</p> <p>Modo multisitio</p> <p>La integraci\u00f3n de autoconfiguraci\u00f3n de Docker implica el uso del modo multisitio. Por favor, consulta la secci\u00f3n de multisitio de la documentaci\u00f3n para obtener m\u00e1s informaci\u00f3n.</p> <p>Backend de la base de datos</p> <p>Ten en cuenta que nuestras instrucciones asumen que est\u00e1s utilizando MariaDB como el backend de base de datos predeterminado, seg\u00fan lo configurado por el ajuste <code>DATABASE_URI</code>. Sin embargo, entendemos que puedes preferir utilizar backends alternativos para tu integraci\u00f3n con Docker. Si ese es el caso, ten la seguridad de que otros backends de bases de datos tambi\u00e9n son posibles. Consulta los archivos docker-compose en la carpeta misc/integrations del repositorio para obtener m\u00e1s informaci\u00f3n.</p> <p>Para habilitar las actualizaciones de configuraci\u00f3n automatizadas, incluye un contenedor adicional llamado <code>bw-autoconf</code> en la pila. Este contenedor aloja el servicio de autoconfiguraci\u00f3n, que gestiona los cambios de configuraci\u00f3n din\u00e1micos para BunkerWeb.</p> <p>Para admitir esta funcionalidad, utiliza un backend de base de datos \"real\" dedicado (p. ej., MariaDB, MySQL o PostgreSQL) para el almacenamiento de configuraci\u00f3n sincronizado. Al integrar <code>bw-autoconf</code> y un backend de base de datos adecuado, estableces la infraestructura para una gesti\u00f3n de configuraci\u00f3n automatizada y sin problemas en BunkerWeb.</p> <pre><code>x-bw-env: &amp;bw-env\n  # Usamos un ancla para evitar repetir las mismas configuraciones para ambos contenedores\n  AUTOCONF_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Etiqueta obligatoria para que el servicio de autoconfiguraci\u00f3n identifique la instancia de BunkerWeb\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # No necesitamos especificar la instancia de BunkerWeb aqu\u00ed, ya que son detectadas autom\u00e1ticamente por el servicio de autoconfiguraci\u00f3n\n      SERVER_NAME: \"\" # El nombre del servidor se rellenar\u00e1 con las etiquetas de los servicios\n      MULTISITE: \"yes\" # Configuraci\u00f3n obligatoria para la autoconfiguraci\u00f3n\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # El socket de Docker\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>Base de datos en la red <code>bw-db</code></p> <p>El contenedor de la base de datos no est\u00e1 incluido intencionadamente en la red <code>bw-universe</code>. Es utilizado por los contenedores <code>bw-autoconf</code> y <code>bw-scheduler</code> en lugar de directamente por BunkerWeb. Por lo tanto, el contenedor de la base de datos forma parte de la red <code>bw-db</code>, lo que mejora la seguridad al dificultar el acceso externo a la base de datos. Esta elecci\u00f3n de dise\u00f1o deliberada ayuda a proteger la base de datos y refuerza la perspectiva de seguridad general del sistema.</p> <p>Uso de Docker en modo sin ra\u00edz</p> <p>Si est\u00e1s utilizando Docker en modo sin ra\u00edz, necesitar\u00e1s reemplazar el montaje del socket de docker con el siguiente valor: <code>$XDG_RUNTIME_DIR/docker.sock:/var/run/docker.sock:ro</code>.</p>"},{"location":"es/integrations/#servicios-de-autoconfiguracion","title":"Servicios de Autoconfiguraci\u00f3n","text":"<p>Una vez que la pila est\u00e9 configurada, podr\u00e1s crear el contenedor de la aplicaci\u00f3n web y a\u00f1adir las configuraciones como etiquetas usando el prefijo \"bunkerweb.\" para configurar autom\u00e1ticamente BunkerWeb:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"es/integrations/#espacios-de-nombres","title":"Espacios de nombres","text":"<p>A partir de la versi\u00f3n <code>1.6.0</code>, las pilas de Autoconfiguraci\u00f3n de BunkerWeb ahora admiten espacios de nombres. Esta caracter\u00edstica te permite gestionar m\u00faltiples \"cl\u00fasteres\" de instancias y servicios de BunkerWeb en el mismo host de Docker. Para aprovechar los espacios de nombres, simplemente establece la etiqueta <code>NAMESPACE</code> en tus servicios. Aqu\u00ed tienes un ejemplo:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    labels:\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Establece el espacio de nombres para el servicio\n      - \"bunkerweb.MY_SETTING_1=value1\"\n      - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Comportamiento del espacio de nombres</p> <p>Por defecto, todas las pilas de Autoconfiguraci\u00f3n escuchan a todos los espacios de nombres. Si quieres restringir una pila a espacios de nombres espec\u00edficos, puedes establecer la variable de entorno <code>NAMESPACES</code> en el servicio <code>bw-autoconf</code>:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    labels:\n      - \"bunkerweb.INSTANCE=yes\"\n      - \"bunkerweb.NAMESPACE=my-namespace\" # Establece el espacio de nombres para la instancia de BunkerWeb para que el servicio de autoconfiguraci\u00f3n pueda detectarla\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      ...\n      NAMESPACES: \"my-namespace my-other-namespace\" # Solo escucha a estos espacios de nombres\n...\n</code></pre> <p>Ten en cuenta que la variable de entorno <code>NAMESPACES</code> es una lista de espacios de nombres separados por espacios.</p> <p>Especificaciones del espacio de nombres</p> <p>Solo puede haber una base de datos y un Programador por espacio de nombres. Si intentas crear m\u00faltiples bases de datos o Programadores en el mismo espacio de nombres, las configuraciones terminar\u00e1n en conflicto entre s\u00ed.</p> <p>El Programador no necesita la etiqueta <code>NAMESPACE</code> para funcionar correctamente. Solo necesitar\u00e1 que la configuraci\u00f3n <code>DATABASE_URI</code> est\u00e9 correctamente configurada para que pueda acceder a la misma base de datos que el servicio de autoconfiguraci\u00f3n.</p>"},{"location":"es/integrations/#kubernetes","title":"Kubernetes","text":"Integraci\u00f3n con Kubernetes <p>Para automatizar la configuraci\u00f3n de las instancias de BunkerWeb en un entorno de Kubernetes, el servicio de autoconfiguraci\u00f3n sirve como un controlador de Ingress. Configura las instancias de BunkerWeb bas\u00e1ndose en los recursos de Ingress y tambi\u00e9n supervisa otros objetos de Kubernetes, como ConfigMap, para configuraciones personalizadas.</p> <p>Para una configuraci\u00f3n \u00f3ptima, se recomienda definir BunkerWeb como un DaemonSet, lo que asegura que se cree un pod en todos los nodos, mientras que la autoconfiguraci\u00f3n y el programador se definen como un \u00fanico Deployment replicado.</p> <p>Dada la presencia de m\u00faltiples instancias de BunkerWeb, es necesario establecer un almac\u00e9n de datos compartido implementado como un servicio de Redis o Valkey. Este servicio ser\u00e1 utilizado por las instancias para almacenar en cach\u00e9 y compartir datos entre ellas. Se puede encontrar m\u00e1s informaci\u00f3n sobre la configuraci\u00f3n de Redis/Valkey aqu\u00ed.</p> <p>Backend de la base de datos</p> <p>Ten en cuenta que nuestras instrucciones asumen que est\u00e1s utilizando MariaDB como el backend de base de datos predeterminado, seg\u00fan lo configurado por el ajuste <code>DATABASE_URI</code>. Sin embargo, entendemos que puedes preferir utilizar backends alternativos para tu integraci\u00f3n con Docker. Si ese es el caso, ten la seguridad de que otros backends de bases de datos tambi\u00e9n son posibles. Consulta los archivos docker-compose en la carpeta misc/integrations del repositorio para obtener m\u00e1s informaci\u00f3n.</p> <p>La configuraci\u00f3n de backends de bases de datos en cl\u00faster est\u00e1 fuera del alcance de esta documentaci\u00f3n.</p> <p>Aseg\u00farate de que los servicios de autoconfiguraci\u00f3n tengan acceso a la API de Kubernetes. Se recomienda utilizar la autorizaci\u00f3n RBAC para este prop\u00f3sito.</p> <p>CA personalizada para la API de Kubernetes</p> <p>Si usas una CA personalizada para tu API de Kubernetes, puedes montar un archivo de paquete que contenga tus certificados intermedios y ra\u00edz en el controlador de ingress y establecer el valor del entorno <code>KUBERNETES_SSL_CA_CERT</code> en la ruta del paquete dentro del contenedor. Alternativamente, aunque no se recomienda, puedes deshabilitar la verificaci\u00f3n de certificados estableciendo la variable de entorno <code>KUBERNETES_SSL_VERIFY</code> del controlador de ingress en <code>no</code> (el valor predeterminado es <code>yes</code>).</p> <p>Adem\u00e1s, es crucial establecer la variable de entorno <code>KUBERNETES_MODE</code> en <code>yes</code> cuando se utiliza la integraci\u00f3n con Kubernetes. Esta variable es obligatoria para un funcionamiento correcto.</p>"},{"location":"es/integrations/#metodos-de-instalacion","title":"M\u00e9todos de instalaci\u00f3n","text":""},{"location":"es/integrations/#usando-el-chart-de-helm-recomendado","title":"Usando el chart de Helm (recomendado)","text":"<p>La forma recomendada de instalar Kubernetes es usar el chart de Helm disponible en <code>https://repo.bunkerweb.io/charts</code>:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>Luego puedes usar el chart de Helm de bunkerweb de ese repositorio:</p> <pre><code>helm install -f myvalues.yaml mybunkerweb bunkerweb/bunkerweb\n</code></pre> <p>La lista completa de valores se encuentra en el archivo charts/bunkerweb/values.yaml del repositorio bunkerity/bunkerweb-helm.</p>"},{"location":"es/integrations/#archivos-yaml-completos","title":"Archivos YAML completos","text":"<p>En lugar de usar el chart de Helm, tambi\u00e9n puedes usar las plantillas YAML dentro de la carpeta misc/integrations del repositorio de GitHub. Ten en cuenta que recomendamos encarecidamente usar el chart de Helm en su lugar.</p>"},{"location":"es/integrations/#recursos-de-ingress","title":"Recursos de Ingress","text":"<p>Una vez que la pila de BunkerWeb para Kubernetes est\u00e9 configurada y operativa con \u00e9xito (consulta los registros de autoconfiguraci\u00f3n para obtener informaci\u00f3n detallada), puedes proceder a desplegar aplicaciones web dentro del cl\u00faster y declarar tu recurso de Ingress.</p> <p>Es importante tener en cuenta que las configuraciones de BunkerWeb deben especificarse como anotaciones para el recurso de Ingress. Para la parte del dominio, utiliza el valor especial <code>bunkerweb.io</code>. Al incluir las anotaciones apropiadas, puedes configurar BunkerWeb en consecuencia para el recurso de Ingress.</p> <p>Soporte TLS</p> <p>El controlador de ingress de BunkerWeb es totalmente compatible con certificados HTTPS personalizados utilizando la especificaci\u00f3n tls como se muestra en el ejemplo. La configuraci\u00f3n de soluciones como <code>cert-manager</code> para generar autom\u00e1ticamente secretos tls est\u00e1 fuera del alcance de esta documentaci\u00f3n.</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    # Se aplicar\u00e1 a todos los hosts en este ingress\n    bunkerweb.io/MY_SETTING: \"value\"\n    # Solo se aplicar\u00e1 al host www.example.com\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  # TLS es opcional, tambi\u00e9n puedes usar Let's Encrypt integrado, por ejemplo\n  # tls:\n  #   - hosts:\n  #       - www.example.com\n  #     secretName: secret-example-tls\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n...\n</code></pre>"},{"location":"es/integrations/#espacios-de-nombres_1","title":"Espacios de nombres","text":"<p>A partir de la versi\u00f3n <code>1.6.0</code>, las pilas de autoconfiguraci\u00f3n de BunkerWeb ahora admiten espacios de nombres. Esta caracter\u00edstica te permite gestionar m\u00faltiples cl\u00fasteres de instancias y servicios de BunkerWeb en el mismo cl\u00faster de Kubernetes. Para aprovechar los espacios de nombres, simplemente establece el campo de metadatos <code>namespace</code> en tus instancias y servicios de BunkerWeb. Aqu\u00ed tienes un ejemplo:</p> <pre><code>apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: bunkerweb\n  namespace: my-namespace # Establece el espacio de nombres para la instancia de BunkerWeb\n...\n</code></pre> <p>Comportamiento del espacio de nombres</p> <p>Por defecto, todas las pilas de Autoconfiguraci\u00f3n escuchan a todos los espacios de nombres. Si quieres restringir una pila a espacios de nombres espec\u00edficos, puedes establecer la variable de entorno <code>NAMESPACES</code> en el despliegue de <code>bunkerweb-controller</code>:</p> <pre><code>...\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-controller\n  namespace: my-namespace # Establece el espacio de nombres para el Controlador\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-controller\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-controller\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-controller\n          image: bunkerity/bunkerweb-autoconf:testing\n          imagePullPolicy: Always\n          env:\n            - name: NAMESPACES\n              value: \"my-namespace my-other-namespace\" # Solo escucha a estos espacios de nombres\n            ...\n...\n</code></pre> <p>Ten en cuenta que la variable de entorno <code>NAMESPACES</code> es una lista de espacios de nombres separados por espacios.</p> <p>Especificaciones del espacio de nombres</p> <p>Solo puede haber una base de datos y un Programador por espacio de nombres. Si intentas crear m\u00faltiples bases de datos o Programadores en el mismo espacio de nombres, las configuraciones terminar\u00e1n en conflicto entre s\u00ed.</p> <p>El Programador no necesita la anotaci\u00f3n <code>NAMESPACE</code> para funcionar correctamente. Solo necesitar\u00e1 que la configuraci\u00f3n <code>DATABASE_URI</code> est\u00e9 correctamente configurada para que pueda acceder a la misma base de datos que el servicio de autoconfiguraci\u00f3n.</p>"},{"location":"es/integrations/#clase-de-ingress","title":"Clase de Ingress","text":"<p>Cuando se instala usando los m\u00e9todos oficiales de la documentaci\u00f3n, BunkerWeb viene con la siguiente definici\u00f3n de <code>IngressClass</code>:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  name: bunkerweb\nspec:\n  controller: bunkerweb.io/ingress-controller\n</code></pre> <p>Para restringir los recursos <code>Ingress</code> monitoreados por el controlador de ingress, puedes establecer la variable de entorno <code>KUBERNETES_INGRESS_CLASS</code> con el valor <code>bunkerweb</code>. Luego, puedes aprovechar la directiva <code>ingressClassName</code> en tus definiciones de <code>Ingress</code>:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\n  annotations:\n    bunkerweb.io/MY_SETTING: \"value\"\n    bunkerweb.io/www.example.com_MY_SETTING: \"value\"\nspec:\n  ingressClassName: bunkerweb\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: svc-my-app\n                port:\n                  number: 8000\n</code></pre>"},{"location":"es/integrations/#nombre-de-dominio-personalizado","title":"Nombre de dominio personalizado","text":"<p>Si usas un nombre de dominio personalizado para tu cl\u00faster de Kubernetes diferente al predeterminado <code>kubernetes.local</code>, puedes establecer el valor usando la variable de entorno <code>KUBERNETES_DOMAIN_NAME</code> en el contenedor del programador.</p>"},{"location":"es/integrations/#usar-con-un-controlador-de-ingress-existente","title":"Usar con un controlador de ingress existente","text":"<p>Mantener tanto el controlador de ingress existente como BunkerWeb</p> <p>Este es un caso de uso en el que quieres mantener un controlador de ingress existente como el de nginx. El flujo de tr\u00e1fico t\u00edpico ser\u00e1: Balanceador de Carga =&gt; Controlador de Ingress =&gt; BunkerWeb =&gt; Aplicaci\u00f3n.</p>"},{"location":"es/integrations/#instalacion-del-controlador-de-ingress-de-nginx","title":"Instalaci\u00f3n del controlador de ingress de nginx","text":"<p>Instala el repositorio de helm de ingress nginx:</p> <pre><code>helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\n</code></pre> <p>Instala el controlador de ingress de nginx con los valores predeterminados (puede que no funcione en tu propio cl\u00faster sin modificaciones, por favor consulta la documentaci\u00f3n):</p> <pre><code>helm install --namespace nginx --create-namespace nginx ingress-nginx/ingress-nginx\n</code></pre> <p>Extrae la direcci\u00f3n IP del LB:</p> <pre><code>kubectl get svc nginx-ingress-nginx-controller -n nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Configura las entradas DNS a la IP del LB (p. ej., subdominio <code>bunkerweb</code> para la UI de BW y <code>myapp</code> para la aplicaci\u00f3n):</p> <pre><code>$ nslookup bunkerweb.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   bunkerweb.example.com\nAddress: 1.2.3.4\n$ nslookup myapp.example.com\nServer:         172.26.112.1\nAddress:        172.26.112.1#53\n\nNon-authoritative answer:\nName:   myapp.example.com\nAddress: 1.2.3.4```\n\n**Instalaci\u00f3n de BunkerWeb**\n\nInstala el repositorio de helm de BunkerWeb:\n\n```bash\nhelm repo add bunkerweb https://repo.bunkerweb.io/charts\nhelm repo update\n</code></pre> <p>Crea el archivo <code>values.yaml</code>:</p> <pre><code># Aqu\u00ed configuraremos los valores necesarios para configurar BunkerWeb detr\u00e1s de un controlador de ingress existente\n# Flujo de tr\u00e1fico con BW: LB =&gt; Controlador de Ingress existente =&gt; BunkerWeb =&gt; Servicio\n# Flujo de tr\u00e1fico sin BW: LB =&gt; Controlador de Ingress existente =&gt; Servicio\n\n# Configuraciones globales\nsettings:\n  misc:\n    # Reemplaza con tu resolvedor de DNS\n    # para obtenerlo: kubectl exec en un pod aleatorio y luego cat /etc/resolv.conf\n    # si tienes una IP como servidor de nombres, haz una b\u00fasqueda de DNS inversa: nslookup &lt;IP&gt;\n    # la mayor\u00eda de las veces es coredns.kube-system.svc.cluster.local o kube-dns.kube-system.svc.cluster.local\n    dnsResolvers: \"kube-dns.kube-system.svc.cluster.local\"\n  kubernetes:\n    # Solo consideramos los recursos de Ingress con ingressClass bunkerweb para evitar conflictos con el controlador de ingress existente\n    ingressClass: \"bunkerweb\"\n    # Opcional: puedes elegir el(los) espacio(s) de nombres donde BunkerWeb escuchar\u00e1 los cambios de Ingress/ConfigMap\n    # El valor predeterminado (en blanco) es todos los espacios de nombres\n    namespaces: \"\"\n\n# Sobrescribe el tipo de servicio bunkerweb-external a ClusterIP\n# Ya que no necesitamos exponerlo al mundo exterior\n# Usaremos el controlador de ingress existente para enrutar el tr\u00e1fico a BunkerWeb\nservice:\n  type: ClusterIP\n\n# Configuraciones de BunkerWeb\nbunkerweb:\n  tag: testing\n\n# Configuraciones del programador\nscheduler:\n  tag: testing\n  extraEnvs:\n    # Habilita el m\u00f3dulo de IP real para obtener la IP real de los clientes\n    - name: USE_REAL_IP\n      value: \"yes\"\n\n# Configuraciones del controlador\ncontroller:\n  tag: testing\n\n# Configuraciones de la UI\nui:\n  tag: testing\n</code></pre> <p>Instala BunkerWeb con valores personalizados:</p> <pre><code>helm install --namespace bunkerweb --create-namespace -f values.yaml bunkerweb bunkerweb/bunkerweb\n</code></pre> <p>Revisa los registros y espera hasta que todo est\u00e9 listo.</p> <p>Instalaci\u00f3n de la Interfaz de Usuario Web</p> <p>Configura el siguiente ingress (asumiendo que el controlador de nginx est\u00e1 instalado):</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ui-bunkerweb\n  # Reemplaza con tu espacio de nombres de BW si es necesario\n  namespace: bunkerweb\n  annotations:\n    # HTTPS es obligatorio para la interfaz de usuario web, incluso si el tr\u00e1fico es interno\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\n    # Debemos establecer SNI para que BW pueda servir el vhost correcto\n    # Reemplaza con tu dominio\n    nginx.ingress.kubernetes.io/proxy-ssl-name: \"bunkerweb.example.com\"\n    nginx.ingress.kubernetes.io/proxy-ssl-server-name: \"on\"\nspec:\n  # Solo servido por el controlador de nginx y no por BW\n  ingressClassName: nginx\n  # Descomenta y edita si quieres usar tu propio certificado\n  # tls:\n  # - hosts:\n  #   - bunkerweb.example.com\n  #   secretName: tls-secret\n  rules:\n  # Reemplaza con tu dominio\n  - host: bunkerweb.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Creado por el chart de Helm\n            name: bunkerweb-external\n            port:\n              # Usar el puerto HTTPS es obligatorio para la UI\n              number: 443\n</code></pre> <p>Y ahora puedes proceder al asistente de configuraci\u00f3n navegando a <code>https://bunkerweb.example.com/setup</code>.</p> <p>Protegiendo una aplicaci\u00f3n existente</p> <p>En primer lugar, deber\u00e1s ir a Configuraci\u00f3n Global, seleccionar el plugin SSL y luego deshabilitar la redirecci\u00f3n autom\u00e1tica de HTTP a HTTPS. Ten en cuenta que solo necesitas hacerlo una vez.</p> <p>Supongamos que tienes una aplicaci\u00f3n en el espacio de nombres <code>myapp</code> que es accesible a trav\u00e9s del servicio <code>myapp-service</code> en el puerto <code>5000</code>.</p> <p>Necesitar\u00e1s a\u00f1adir un nuevo servicio en la interfaz de usuario web y rellenar la informaci\u00f3n requerida:</p> <ul> <li>Nombre del servidor: el dominio p\u00fablico de tu aplicaci\u00f3n (p. ej., <code>myapp.example.com</code>)</li> <li>SSL/TLS: tu controlador de ingress se encarga de esa parte, as\u00ed que no lo habilites en BunkerWeb ya que el tr\u00e1fico es interno dentro del cl\u00faster</li> <li>Host del proxy inverso: la URL completa de tu aplicaci\u00f3n dentro del cl\u00faster (p. ej., <code>http://myapp-service.myapp.svc.cluster.local:5000</code>)</li> </ul> <p>Una vez que se haya a\u00f1adido el nuevo servicio, ahora puedes declarar un recurso de Ingress para ese servicio y enrutarlo al servicio de BunkerWeb en el puerto HTTP:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: myapp\n  # Reemplaza con tu espacio de nombres de BW si es necesario\n  namespace: bunkerweb\nspec:\n  # Solo servido por el controlador de nginx y no por BW\n  ingressClassName: nginx\n  # Descomenta y edita si quieres usar tu propio certificado\n  # tls:\n  # - hosts:\n  #   - myapp.example.com\n  #   secretName: tls-secret\n  rules:\n  # Reemplaza con tu dominio\n  - host: myapp.example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            # Creado por el chart de Helm\n            name: bunkerweb-external\n            port:\n              number: 80\n</code></pre> <p>Puedes visitar <code>http(s)://myapp.example.com</code>, que ahora est\u00e1 protegido con BunkerWeb \ud83d\udee1\ufe0f</p>"},{"location":"es/integrations/#swarm","title":"Swarm","text":"Integraci\u00f3n con Docker Swarm <p>Obsoleto</p> <p>La integraci\u00f3n con Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n con Kubernetes en su lugar.</p> <p>Soporte PRO</p> <p>Si necesitas soporte para Swarm, por favor cont\u00e1ctanos en contact@bunkerity.com o a trav\u00e9s del formulario de contacto.</p> <p>Autoconfiguraci\u00f3n de Docker</p> <p>La integraci\u00f3n con Swarm es similar a la de autoconfiguraci\u00f3n de Docker (pero con servicios en lugar de contenedores). Por favor, lee primero la secci\u00f3n de integraci\u00f3n de autoconfiguraci\u00f3n de Docker si es necesario.</p> <p>Para permitir la configuraci\u00f3n autom\u00e1tica de las instancias de BunkerWeb, el servicio autoconf requiere acceso a la API de Docker. Este servicio escucha los eventos de Docker Swarm, como la creaci\u00f3n o eliminaci\u00f3n de servicios, y configura sin problemas las instancias de BunkerWeb en tiempo real sin ning\u00fan tiempo de inactividad. Tambi\u00e9n supervisa otros objetos de Swarm, como los configs, para configuraciones personalizadas.</p> <p>Al igual que en la integraci\u00f3n de autoconfiguraci\u00f3n de Docker, la configuraci\u00f3n de los servicios web se define mediante etiquetas que comienzan con el prefijo bunkerweb.</p> <p>Para una configuraci\u00f3n \u00f3ptima, se recomienda programar el servicio BunkerWeb como un servicio global en todos los nodos, mientras que los servicios de autoconf, programador y proxy de la API de Docker deben programarse como servicios replicados \u00fanicos. Ten en cuenta que el servicio de proxy de la API de Docker debe programarse en un nodo gestor, a menos que lo configures para usar una API remota (lo que no se cubre en la documentaci\u00f3n).</p> <p>Dado que se est\u00e1n ejecutando m\u00faltiples instancias de BunkerWeb, se debe crear un almac\u00e9n de datos compartido implementado como un servicio de Redis o Valkey. Estas instancias utilizar\u00e1n el servicio Redis/Valkey para almacenar en cach\u00e9 y compartir datos. Se pueden encontrar m\u00e1s detalles sobre la configuraci\u00f3n de Redis/Valkey aqu\u00ed.</p> <p>En cuanto al volumen de la base de datos, la documentaci\u00f3n no especifica un enfoque concreto. La elecci\u00f3n de una carpeta compartida o un controlador espec\u00edfico para el volumen de la base de datos depende de tu caso de uso particular y se deja como ejercicio para el lector.</p> <p>Backend de la base de datos</p> <p>Ten en cuenta que nuestras instrucciones asumen que est\u00e1s utilizando MariaDB como el backend de base de datos predeterminado, seg\u00fan lo configurado por el ajuste <code>DATABASE_URI</code>. Sin embargo, entendemos que puedes preferir utilizar backends alternativos para tu integraci\u00f3n con Docker. Si ese es el caso, ten la seguridad de que otros backends de bases de datos tambi\u00e9n son posibles. Consulta los archivos docker-compose en la carpeta misc/integrations del repositorio para obtener m\u00e1s informaci\u00f3n.</p> <p>La configuraci\u00f3n de backends de bases de datos en cl\u00faster est\u00e1 fuera del alcance de esta documentaci\u00f3n.</p> <p>Aqu\u00ed est\u00e1 la plantilla de la pila que puedes desplegar usando <code>docker stack deploy</code>:</p> <pre><code>x-bw-env: &amp;bw-env\n  # Usamos un ancla para evitar repetir las mismas configuraciones para ambos servicios\n  SWARM_MODE: \"yes\"\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\" # Etiqueta obligatoria para que el servicio de autoconfiguraci\u00f3n identifique la instancia de BunkerWeb\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"\" # No necesitamos especificar la instancia de BunkerWeb aqu\u00ed, ya que son detectadas autom\u00e1ticamente por el servicio de autoconfiguraci\u00f3n\n      SERVER_NAME: \"\" # El nombre del servidor se rellenar\u00e1 con las etiquetas de los servicios\n      MULTISITE: \"yes\" # Configuraci\u00f3n obligatoria para la autoconfiguraci\u00f3n\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      SWARM_MODE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # El socket de Docker\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\n  bw-redis:\n    image: redis:7-alpine\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre> <p>Configuraci\u00f3n obligatoria de Swarm</p> <p>Ten en cuenta que la variable de entorno <code>SWARM_MODE: \"yes\"</code> es obligatoria cuando se utiliza la integraci\u00f3n con Swarm.</p>"},{"location":"es/integrations/#servicios-de-swarm","title":"Servicios de Swarm","text":"<p>Una vez que la pila de BunkerWeb Swarm est\u00e9 configurada y en funcionamiento (consulta los registros de autoconfiguraci\u00f3n y del programador para obtener m\u00e1s informaci\u00f3n), podr\u00e1s desplegar aplicaciones web en el cl\u00faster y usar etiquetas para configurar din\u00e1micamente BunkerWeb:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"es/integrations/#espacios-de-nombres_2","title":"Espacios de nombres","text":"<p>A partir de la versi\u00f3n <code>1.6.0</code>, las pilas de Autoconfiguraci\u00f3n de BunkerWeb ahora admiten espacios de nombres. Esta caracter\u00edstica te permite gestionar m\u00faltiples \"cl\u00fasteres\" de instancias y servicios de BunkerWeb en el mismo host de Docker. Para aprovechar los espacios de nombres, simplemente establece la etiqueta <code>NAMESPACE</code> en tus servicios. Aqu\u00ed tienes un ejemplo:</p> <pre><code>services:\n  myapp:\n    image: mywebapp:4.2\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Establece el espacio de nombres para el servicio\n        - \"bunkerweb.MY_SETTING_1=value1\"\n        - \"bunkerweb.MY_SETTING_2=value2\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Comportamiento del espacio de nombres</p> <p>Por defecto, todas las pilas de Autoconfiguraci\u00f3n escuchan a todos los espacios de nombres. Si quieres restringir una pila a espacios de nombres espec\u00edficos, puedes establecer la variable de entorno <code>NAMESPACES</code> en el servicio <code>bw-autoconf</code>:</p> <pre><code>...\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ...\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n        - \"bunkerweb.NAMESPACE=my-namespace\" # Establece el espacio de nombres para la instancia de BunkerWeb\n  ...\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      NAMESPACES: \"my-namespace my-other-namespace\" # Solo escucha a estos espacios de nombres\n      ...\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == worker\"\n...\n</code></pre> <p>Ten en cuenta que la variable de entorno <code>NAMESPACES</code> es una lista de espacios de nombres separados por espacios.</p> <p>Especificaciones del espacio de nombres</p> <p>Solo puede haber una base de datos y un Programador por espacio de nombres. Si intentas crear m\u00faltiples bases de datos o Programadores en el mismo espacio de nombres, las configuraciones terminar\u00e1n en conflicto entre s\u00ed.</p> <p>El Programador no necesita la etiqueta <code>NAMESPACE</code> para funcionar correctamente. Solo necesitar\u00e1 que la configuraci\u00f3n <code>DATABASE_URI</code> est\u00e9 correctamente configurada para que pueda acceder a la misma base de datos que el servicio de autoconfiguraci\u00f3n.</p>"},{"location":"es/integrations/#microsoft-azure","title":"Microsoft Azure","text":"Integraci\u00f3n con Azure <p>Tama\u00f1o de VM recomendado</p> <p>Ten en cuenta al elegir el SKU de la VM. Debes seleccionar un SKU compatible con VM de Gen2 y recomendamos empezar con la serie B2s o Ds2 para un uso \u00f3ptimo.</p> <p>Puedes desplegar f\u00e1cilmente BunkerWeb en tu suscripci\u00f3n de Azure de varias maneras:</p> <ul> <li>Azure CLI en Cloud Shell</li> <li>Plantilla ARM de Azure</li> <li>Portal de Azure a trav\u00e9s del Marketplace</li> </ul> Cloud ShellPlantilla ARMMarketplace <p>Crea un grupo de recursos. Reemplaza el valor <code>RG_NAME</code></p> <pre><code>az group create --name \"RG_NAME\" --location \"LOCATION\"\n</code></pre> <p>Crea una VM con el SKU <code>Standard_B2s</code> en la ubicaci\u00f3n del grupo de recursos. Reemplaza los valores <code>RG_NAME</code>, <code>VM_NAME</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --vnet-name \"VNET_NAME\" --size Standard_B2s --subnet \"SUBNET_NAME\"\n</code></pre> <p>Comando completo. Reemplaza los valores <code>RG_NAME</code>, <code>VM_NAME</code>, <code>LOCATION</code>, <code>HOSTNAME</code>, <code>USERNAME</code>, <code>PUBLIC_IP</code>, <code>VNET_NAME</code>, <code>SUBNET_NAME</code>, <code>NSG_NAME</code></p> <pre><code>az vm create --resource-group \"RG_NAME\" --name \"VM_NAME\" --location \"LOCATION\" --image bunkerity:bunkerweb:bunkerweb:latest --accept-term --generate-ssh-keys --computer-name \"HOSTNAME\" --admin-username \"USERNAME\" --public-ip-address \"PUBLIC_IP\" --public-ip-address-allocation Static --size Standard_B2s --public-ip-sku Standard --os-disk-delete-option Delete --nic-delete-option Delete --vnet-name \"VNET_NAME\" --subnet \"SUBNET_NAME\" --nsg \"NSG_NAME\"\n</code></pre> <p>Requisito de permisos</p> <p>Para desplegar una plantilla ARM, necesitas acceso de escritura en los recursos que est\u00e1s desplegando y acceso a todas las operaciones en el tipo de recurso Microsoft.Resources/deployments. Para desplegar una m\u00e1quina virtual, necesitas los permisos Microsoft.Compute/virtualMachines/write y Microsoft.Resources/deployments/*. La operaci\u00f3n what-if tiene los mismos requisitos de permisos.</p> <p>Despliega la plantilla ARM:</p> <p></p> <p>Inicia sesi\u00f3n en el portal de Azure.</p> <p>Obt\u00e9n BunkerWeb desde el men\u00fa Crear un recurso.</p> <p>Tambi\u00e9n puedes ir a trav\u00e9s del Marketplace.</p> <p>Puedes acceder al asistente de configuraci\u00f3n navegando a la URI <code>https://your-ip-address/setup</code> de tu m\u00e1quina virtual.</p>"},{"location":"es/plugins/","title":"Plugins","text":"<p>BunkerWeb viene con un sistema de plugins que permite a\u00f1adir f\u00e1cilmente nuevas caracter\u00edsticas. Una vez que un plugin est\u00e1 instalado, puedes gestionarlo usando configuraciones adicionales definidas por el plugin.</p>"},{"location":"es/plugins/#plugins-oficiales","title":"Plugins oficiales","text":"<p>Aqu\u00ed est\u00e1 la lista de plugins \"oficiales\" que mantenemos (consulta el repositorio bunkerweb-plugins para m\u00e1s informaci\u00f3n):</p> Nombre Versi\u00f3n Descripci\u00f3n Enlace ClamAV 1.9 Escanea autom\u00e1ticamente los archivos subidos con el motor antivirus ClamAV y deniega la solicitud cuando un archivo es detectado como malicioso. bunkerweb-plugins/clamav Coraza 1.9 Inspecciona las solicitudes usando el WAF de Coraza (alternativa a ModSecurity). bunkerweb-plugins/coraza Discord 1.9 Env\u00eda notificaciones de seguridad a un canal de Discord usando un Webhook. bunkerweb-plugins/discord Slack 1.9 Env\u00eda notificaciones de seguridad a un canal de Slack usando un Webhook. bunkerweb-plugins/slack VirusTotal 1.9 Escanea autom\u00e1ticamente los archivos subidos con la API de VirusTotal y deniega la solicitud cuando un archivo es detectado como malicioso. bunkerweb-plugins/virustotal WebHook 1.9 Env\u00eda notificaciones de seguridad a un punto final HTTP personalizado usando un Webhook. bunkerweb-plugins/webhook"},{"location":"es/plugins/#como-usar-un-plugin","title":"C\u00f3mo usar un plugin","text":""},{"location":"es/plugins/#automatico","title":"Autom\u00e1tico","text":"<p>Si quieres instalar r\u00e1pidamente plugins externos, puedes usar la configuraci\u00f3n <code>EXTERNAL_PLUGIN_URLS</code>. Acepta una lista de URLs separadas por espacios, cada una apuntando a un archivo comprimido (formato zip) que contiene uno o m\u00e1s plugins.</p> <p>Puedes usar el siguiente valor si quieres instalar autom\u00e1ticamente los plugins oficiales: <code>EXTERNAL_PLUGIN_URLS=https://github.com/bunkerity/bunkerweb-plugins/archive/refs/tags/v1.9.zip</code></p>"},{"location":"es/plugins/#manual","title":"Manual","text":"<p>El primer paso es instalar el plugin colocando sus archivos dentro de la carpeta de datos <code>plugins</code> correspondiente. El procedimiento depende de tu integraci\u00f3n:</p> DockerDocker autoconfSwarmKubernetesLinux <p>Cuando se utiliza la integraci\u00f3n de Docker, los plugins deben colocarse en el volumen montado en <code>/data/plugins</code> en el contenedor del programador.</p> <p>Lo primero que hay que hacer es crear la carpeta de plugins:</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Luego, puedes colocar los plugins de tu elecci\u00f3n en esa carpeta:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> Usar una carpeta local para datos persistentes <p>El programador se ejecuta como un usuario sin privilegios con UID 101 y GID 101 dentro del contenedor. La raz\u00f3n detr\u00e1s de esto es la seguridad: en caso de que se explote una vulnerabilidad, el atacante no tendr\u00e1 privilegios completos de root (UID/GID 0). Pero hay una desventaja: si usas una carpeta local para los datos persistentes, necesitar\u00e1s establecer los permisos correctos para que el usuario sin privilegios pueda escribir datos en ella. Algo como esto deber\u00eda funcionar:</p> <pre><code>mkdir bw-data &amp;&amp; \\\nchown root:101 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>Alternativamente, si la carpeta ya existe:</p> <pre><code>chown -R root:101 bw-data &amp;&amp; \\\nchmod -R 770 bw-data\n</code></pre> <p>Si est\u00e1s utilizando Docker en modo sin ra\u00edz o podman, los UID y GID en el contenedor se mapear\u00e1n a diferentes en el host. Primero necesitar\u00e1s verificar tu subuid y subgid iniciales:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Por ejemplo, si tienes un valor de 100000, el UID/GID mapeado ser\u00e1 100100 (100000 + 100):</p> <pre><code>mkdir bw-data &amp;&amp; \\\nsudo chgrp 100100 bw-data &amp;&amp; \\\nchmod 770 bw-data\n</code></pre> <p>O si la carpeta ya existe:</p> <pre><code>sudo chgrp -R 100100 bw-data &amp;&amp; \\\nsudo chmod -R 770 bw-data\n</code></pre> <p>Luego puedes montar el volumen al iniciar tu pila de Docker:</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>Cuando se utiliza la integraci\u00f3n de Docker autoconf, los plugins deben colocarse en el volumen montado en <code>/data/plugins</code> en el contenedor del programador.</p> <p>Lo primero que hay que hacer es crear la carpeta de plugins:</p> <pre><code>mkdir -p ./bw-data/plugins\n</code></pre> <p>Luego, puedes colocar los plugins de tu elecci\u00f3n en esa carpeta:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* ./bw-data/plugins\n</code></pre> <p>Debido a que el programador se ejecuta como un usuario sin privilegios con UID y GID 101, necesitar\u00e1s editar los permisos:</p> <pre><code>chown -R 101:101 ./bw-data\n</code></pre> <p>Luego puedes montar el volumen al iniciar tu pila de Docker:</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - ./bw-data:/data\n...\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Cuando se utiliza la integraci\u00f3n de Swarm, los plugins deben colocarse en el volumen montado en <code>/data/plugins</code> en el contenedor del programador.</p> <p>Volumen de Swarm</p> <p>La configuraci\u00f3n de un volumen de Swarm que persistir\u00e1 cuando el servicio del programador se ejecute en diferentes nodos no se cubre en esta documentaci\u00f3n. Asumiremos que tienes una carpeta compartida montada en <code>/shared</code> en todos los nodos.</p> <p>Lo primero que hay que hacer es crear la carpeta de plugins:</p> <pre><code>mkdir -p /shared/bw-plugins\n</code></pre> <p>Luego, puedes colocar los plugins de tu elecci\u00f3n en esa carpeta:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /shared/bw-plugins\n</code></pre> <p>Debido a que el programador se ejecuta como un usuario sin privilegios con UID y GID 101, necesitar\u00e1s editar los permisos:</p> <pre><code>chown -R 101:101 /shared/bw-plugins\n</code></pre> <p>Luego puedes montar el volumen al iniciar tu pila de Swarm:</p> <pre><code>services:\n...\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    volumes:\n      - /shared/bw-plugins:/data/plugins\n...\n</code></pre> <p>Cuando se utiliza la integraci\u00f3n de Kubernetes, los plugins deben colocarse en el volumen montado en <code>/data/plugins</code> en el contenedor del programador.</p> <p>Lo primero que hay que hacer es declarar una PersistentVolumeClaim que contendr\u00e1 los datos de nuestros plugins:</p> <pre><code>apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: pvc-bunkerweb-plugins\nspec:\n  accessModes:\n    - ReadWriteOnce\nresources:\n  requests:\n    storage: 5Gi\n</code></pre> <p>Ahora puedes a\u00f1adir el montaje del volumen y un contenedor de inicializaci\u00f3n para aprovisionar autom\u00e1ticamente el volumen:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: bunkerweb-scheduler\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app: bunkerweb-scheduler\n  template:\n    metadata:\n      labels:\n        app: bunkerweb-scheduler\n    spec:\n      serviceAccountName: sa-bunkerweb\n      containers:\n        - name: bunkerweb-scheduler\n          image: bunkerity/bunkerweb-scheduler:testing\n          imagePullPolicy: Always\n          env:\n            - name: KUBERNETES_MODE\n              value: \"yes\"\n            - name: \"DATABASE_URI\"\n              value: \"mariadb+pymysql://bunkerweb:changeme@svc-bunkerweb-db:3306/db\"\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      initContainers:\n        - name: bunkerweb-scheduler-init\n          image: alpine/git\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"git clone https://github.com/bunkerity/bunkerweb-plugins /data/plugins &amp;&amp; chown -R 101:101 /data/plugins\"]\n          volumeMounts:\n            - mountPath: \"/data/plugins\"\n              name: vol-plugins\n      volumes:\n        - name: vol-plugins\n          persistentVolumeClaim:\n            claimName: pvc-bunkerweb-plugins\n</code></pre> <p>Cuando se utiliza la integraci\u00f3n de Linux, los plugins deben escribirse en la carpeta <code>/etc/bunkerweb/plugins</code>:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb-plugins &amp;&amp; \\\ncp -rp ./bunkerweb-plugins/* /etc/bunkerweb/plugins &amp;&amp; \\\nchown -R nginx:nginx /etc/bunkerweb/plugins\n</code></pre>"},{"location":"es/plugins/#escribir-un-plugin","title":"Escribir un plugin","text":""},{"location":"es/plugins/#estructura","title":"Estructura","text":"<p>Plugins existentes</p> <p>Si la documentaci\u00f3n no es suficiente, puedes echar un vistazo al c\u00f3digo fuente existente de los plugins oficiales y los plugins del n\u00facleo (ya incluidos en BunkerWeb, pero t\u00e9cnicamente son plugins).</p> <p>As\u00ed es como se ve la estructura de un plugin: <pre><code>plugin /\n    confs / tipo_conf / nombre_conf.conf\n    ui / actions.py\n         hooks.py\n         template.html\n         blueprints / &lt;archivo(s)_blueprint&gt;\n              templates / &lt;plantilla(s)_blueprint&gt;\n    jobs / mi-trabajo.py\n    templates / mi-plantilla.json\n          mi-plantilla / configs / tipo_conf / nombre_conf.conf\n    plugin.lua\n    plugin.json\n</code></pre></p> <ul> <li> <p>nombre_conf.conf: A\u00f1ade configuraciones personalizadas de NGINX (como plantillas de Jinja2).</p> </li> <li> <p>actions.py: Script para ejecutar en el servidor Flask. Este script se ejecuta en un contexto de Flask, d\u00e1ndote acceso a librer\u00edas y utilidades como <code>jinja2</code> y <code>requests</code>.</p> </li> <li> <p>hooks.py: Archivo Python personalizado que contiene los hooks de Flask y que se ejecutar\u00e1 cuando se cargue el plugin.</p> </li> <li> <p>template.html: P\u00e1gina del plugin personalizada a la que se accede a trav\u00e9s de la UI.</p> </li> <li> <p>carpeta blueprints (dentro de ui):   Esta carpeta se utiliza para sobrescribir los blueprints de Flask existentes o crear nuevos. Dentro, puedes incluir archivos de blueprint y una subcarpeta opcional templates para las plantillas espec\u00edficas del blueprint.</p> </li> <li> <p>archivo py de trabajos: Archivos Python personalizados ejecutados como trabajos por el programador.</p> </li> <li> <p>mi-plantilla.json: A\u00f1ade plantillas personalizadas para sobrescribir los valores predeterminados de las configuraciones y aplicar configuraciones personalizadas f\u00e1cilmente.</p> </li> <li> <p>plugin.lua: C\u00f3digo ejecutado en NGINX usando el m\u00f3dulo LUA de NGINX.</p> </li> <li> <p>plugin.json: Metadatos, configuraciones y definiciones de trabajos para tu plugin.</p> </li> </ul>"},{"location":"es/plugins/#empezando","title":"Empezando","text":"<p>El primer paso es crear una carpeta que contendr\u00e1 el plugin:</p> <pre><code>mkdir miplugin &amp;&amp; \\\ncd miplugin\n</code></pre>"},{"location":"es/plugins/#metadatos","title":"Metadatos","text":"<p>Un archivo llamado plugin.json y escrito en la ra\u00edz de la carpeta del plugin debe contener metadatos sobre el plugin. Aqu\u00ed hay un ejemplo:</p> <pre><code>{\n  \"id\": \"miplugin\",\n  \"name\": \"Mi Plugin\",\n  \"description\": \"Solo un plugin de ejemplo.\",\n  \"version\": \"1.0\",\n  \"stream\": \"parcial\",\n  \"settings\": {\n    \"DUMMY_SETTING\": {\n      \"context\": \"multisite\",\n      \"default\": \"1234\",\n      \"help\": \"Aqu\u00ed est\u00e1 la ayuda de la configuraci\u00f3n.\",\n      \"id\": \"dummy-id\",\n      \"label\": \"Configuraci\u00f3n de ejemplo\",\n      \"regex\": \"^.*$\",\n      \"type\": \"text\"\n    }\n  },\n  \"jobs\": [\n    {\n      \"name\": \"mi-trabajo\",\n      \"file\": \"mi-trabajo.py\",\n      \"every\": \"hour\"\n    }\n  ]\n}\n</code></pre> <p>Aqu\u00ed est\u00e1n los detalles de los campos:</p> Campo Obligatorio Tipo Descripci\u00f3n <code>id</code> s\u00ed cadena ID interno para el plugin: debe ser \u00fanico entre otros plugins (incluidos los del \"n\u00facleo\") y contener solo caracteres en min\u00fascula. <code>name</code> s\u00ed cadena Nombre de tu plugin. <code>description</code> s\u00ed cadena Descripci\u00f3n de tu plugin. <code>version</code> s\u00ed cadena Versi\u00f3n de tu plugin. <code>stream</code> s\u00ed cadena Informaci\u00f3n sobre el soporte de stream: <code>no</code>, <code>yes</code> o <code>partial</code>. <code>settings</code> s\u00ed dict Lista de las configuraciones de tu plugin. <code>jobs</code> no lista Lista de los trabajos de tu plugin. <p>Cada configuraci\u00f3n tiene los siguientes campos (la clave es el ID de las configuraciones utilizadas en una configuraci\u00f3n):</p> Campo Obligatorio Tipo Descripci\u00f3n <code>context</code> s\u00ed cadena Contexto de la configuraci\u00f3n: <code>multisite</code> o <code>global</code>. <code>default</code> s\u00ed cadena El valor predeterminado de la configuraci\u00f3n. <code>help</code> s\u00ed cadena Texto de ayuda sobre el plugin (mostrado en la interfaz de usuario web). <code>id</code> s\u00ed cadena ID interno utilizado por la interfaz de usuario web para los elementos HTML. <code>label</code> s\u00ed cadena Etiqueta mostrada por la interfaz de usuario web. <code>regex</code> s\u00ed cadena La expresi\u00f3n regular utilizada para validar el valor proporcionado por el usuario. <code>type</code> s\u00ed cadena El tipo del campo: <code>text</code>, <code>check</code>, <code>select</code> o <code>password</code>. <code>multiple</code> no cadena ID \u00fanico para agrupar m\u00faltiples configuraciones con n\u00fameros como sufijo. <code>select</code> no lista Lista de posibles valores de cadena cuando <code>type</code> es <code>select</code>. <p>Cada trabajo tiene los siguientes campos:</p> Campo Obligatorio Tipo Descripci\u00f3n <code>name</code> s\u00ed cadena Nombre del trabajo. <code>file</code> s\u00ed cadena Nombre del archivo dentro de la carpeta de trabajos. <code>every</code> s\u00ed cadena Frecuencia de programaci\u00f3n del trabajo: <code>minute</code>, <code>hour</code>, <code>day</code>, <code>week</code> u <code>once</code> (sin frecuencia, solo una vez antes de (re)generar la configuraci\u00f3n)."},{"location":"es/plugins/#configuraciones","title":"Configuraciones","text":"<p>Puedes a\u00f1adir configuraciones personalizadas de NGINX a\u00f1adiendo una carpeta llamada confs con contenido similar a las configuraciones personalizadas. Cada subcarpeta dentro de confs contendr\u00e1 plantillas de jinja2 que se generar\u00e1n y cargar\u00e1n en el contexto correspondiente (<code>http</code>, <code>server-http</code>, <code>default-server-http</code>, <code>stream</code>, <code>server-stream</code>, <code>modsec</code>, <code>modsec-crs</code>, <code>crs-plugins-before</code> y <code>crs-plugins-after</code>).</p> <p>Aqu\u00ed hay un ejemplo para un archivo de plantilla de configuraci\u00f3n dentro de la carpeta confs/server-http llamado example.conf:</p> <pre><code>location /setting {\n  default_type 'text/plain';\n    content_by_lua_block {\n        ngx.say('{{ DUMMY_SETTING }}')\n    }\n}\n</code></pre> <p><code>{{ DUMMY_SETTING }}</code> ser\u00e1 reemplazado por el valor de <code>DUMMY_SETTING</code> elegido por el usuario del plugin.</p>"},{"location":"es/plugins/#plantillas","title":"Plantillas","text":"<p>Consulta la documentaci\u00f3n de plantillas para obtener m\u00e1s informaci\u00f3n.</p>"},{"location":"es/plugins/#script-principal","title":"Script principal","text":"<p>Internamente, BunkerWeb utiliza el m\u00f3dulo LUA de NGINX para ejecutar c\u00f3digo dentro de NGINX. Los plugins que necesiten ejecutar c\u00f3digo deben proporcionar un archivo lua en el directorio ra\u00edz de la carpeta del plugin utilizando el valor <code>id</code> de plugin.json como su nombre. Aqu\u00ed hay un ejemplo llamado miplugin.lua:</p> <pre><code>local class     = require \"middleclass\"\nlocal plugin    = require \"bunkerweb.plugin\"\nlocal utils     = require \"bunkerweb.utils\"\n\n\nlocal myplugin = class(\"myplugin\", plugin)\n\n\nfunction myplugin:initialize(ctx)\n    plugin.initialize(self, \"myplugin\", ctx)\n    self.dummy = \"dummy\"\nend\n\nfunction myplugin:init()\n    self.logger:log(ngx.NOTICE, \"init called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:set()\n    self.logger:log(ngx.NOTICE, \"set called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:access()\n    self.logger:log(ngx.NOTICE, \"access called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log()\n    self.logger:log(ngx.NOTICE, \"log called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_default()\n    self.logger:log(ngx.NOTICE, \"log_default called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:preread()\n    self.logger:log(ngx.NOTICE, \"preread called\")\n    return self:ret(true, \"success\")\nend\n\nfunction myplugin:log_stream()\n    self.logger:log(ngx.NOTICE, \"log_stream called\")\n    return self:ret(true, \"success\")\nend\n\nreturn myplugin\n</code></pre> <p>Las funciones declaradas se llaman autom\u00e1ticamente durante contextos espec\u00edficos. Aqu\u00ed est\u00e1n los detalles de cada funci\u00f3n:</p> Funci\u00f3n Contexto Descripci\u00f3n Valor de retorno <code>init</code> init_by_lua Se llama cuando NGINX acaba de iniciarse o recibi\u00f3 una orden de recarga. El caso de uso t\u00edpico es preparar cualquier dato que ser\u00e1 utilizado por tu plugin. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li></ul> <code>set</code> set_by_lua Se llama antes de cada solicitud recibida por el servidor. El caso de uso t\u00edpico es para computar antes de la fase de acceso. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li></ul> <code>access</code> access_by_lua Se llama en cada solicitud recibida por el servidor. El caso de uso t\u00edpico es hacer las comprobaciones de seguridad aqu\u00ed y denegar la solicitud si es necesario. <code>ret</code>, <code>msg</code>,<code>status</code>,<code>redirect</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li><li><code>status</code> (n\u00famero): interrumpe el proceso actual y devuelve el estado HTTP</li><li><code>redirect</code> (URL): si se establece, redirigir\u00e1 a la URL dada</li></ul> <code>log</code> log_by_lua Se llama cuando una solicitud ha terminado (y antes de que se registre en los registros de acceso). El caso de uso t\u00edpico es hacer estad\u00edsticas o calcular contadores, por ejemplo. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li></ul> <code>log_default</code> log_by_lua Igual que <code>log</code> pero solo se llama en el servidor predeterminado. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li></ul> <code>preread</code> preread_by_lua Similar a la funci\u00f3n <code>access</code> pero para el modo stream. <code>ret</code>, <code>msg</code>,<code>status</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li><li><code>status</code> (n\u00famero): interrumpe el proceso actual y devuelve el estado</li></ul> <code>log_stream</code> log_by_lua Similar a la funci\u00f3n <code>log</code> pero para el modo stream. <code>ret</code>, <code>msg</code><ul><li><code>ret</code> (booleano): true si no hay error, de lo contrario false</li><li><code>msg</code> (cadena): mensaje de \u00e9xito o error</li></ul>"},{"location":"es/plugins/#librerias","title":"Librer\u00edas","text":"<p>Todas las directivas del m\u00f3dulo LUA de NGINX y del m\u00f3dulo LUA de stream de NGINX est\u00e1n disponibles. Adem\u00e1s de eso, puedes usar las librer\u00edas LUA incluidas en BunkerWeb: consulta este script para la lista completa.</p> <p>Si necesitas librer\u00edas adicionales, puedes ponerlas en la carpeta ra\u00edz del plugin y acceder a ellas prefij\u00e1ndolas con el ID de tu plugin. Aqu\u00ed hay un ejemplo de archivo llamado mialibreria.lua:</p> <pre><code>local _M = {}\n\n_M.dummy = function ()\n    return \"dummy\"\nend\n\nreturn _M\n</code></pre> <p>Y aqu\u00ed est\u00e1 c\u00f3mo puedes usarla desde el archivo miplugin.lua:</p> <pre><code>local mialibreria = require \"miplugin.mialibreria\"\n\n...\n\nmialibreria.dummy()\n\n...\n</code></pre>"},{"location":"es/plugins/#ayudantes","title":"Ayudantes","text":"<p>Algunos m\u00f3dulos de ayudantes proporcionan ayudantes comunes y \u00fatiles:</p> <ul> <li><code>self.variables</code>: permite acceder y almacenar los atributos de los plugins</li> <li><code>self.logger</code>: imprime registros</li> <li><code>bunkerweb.utils</code>: varias funciones \u00fatiles</li> <li><code>bunkerweb.datastore</code>: accede a los datos compartidos globales en una instancia (almac\u00e9n de clave/valor)</li> <li><code>bunkerweb.clusterstore</code>: accede a un almac\u00e9n de datos Redis compartido entre las instancias de BunkerWeb (almac\u00e9n de clave/valor)</li> </ul> <p>Para acceder a las funciones, primero necesitas requerir los m\u00f3dulos:</p> <pre><code>local utils       = require \"bunkerweb.utils\"\nlocal datastore   = require \"bunkerweb.datastore\"\nlocal clustestore = require \"bunkerweb.clustertore\"\n</code></pre> <p>Recuperar el valor de una configuraci\u00f3n:</p> <pre><code>local myvar = self.variables[\"DUMMY_SETTING\"]\nif not myvar then\n    self.logger:log(ngx.ERR, \"no se puede recuperar la configuraci\u00f3n DUMMY_SETTING\")\nelse\n    self.logger:log(ngx.NOTICE, \"DUMMY_SETTING = \" .. value)\nend\n</code></pre> <p>Almacenar algo en la cach\u00e9 local:</p> <pre><code>local ok, err = self.datastore:set(\"plugin_myplugin_something\", \"somevalue\")\nif not ok then\n    self.logger:log(ngx.ERR, \"no se puede guardar plugin_myplugin_something en el datastore: \" .. err)\nelse\n    self.logger:log(ngx.NOTICE, \"se guard\u00f3 correctamente plugin_myplugin_something en el datastore\")\nend\n</code></pre> <p>Comprobar si una direcci\u00f3n IP es global:</p> <pre><code>local ret, err = utils.ip_is_global(ngx.ctx.bw.remote_addr)\nif ret == nil then\n    self.logger:log(ngx.ERR, \"error al comprobar si la IP \" .. ngx.ctx.bw.remote_addr .. \" es global o no: \" .. err)\nelseif not ret then\n    self.logger:log(ngx.NOTICE, \"la IP \" .. ngx.ctx.bw.remote_addr .. \" no es global\")\nelse\n    self.logger:log(ngx.NOTICE, \"la IP \" .. ngx.ctx.bw.remote_addr .. \" es global\")\nend\n</code></pre> <p>M\u00e1s ejemplos</p> <p>Si quieres ver la lista completa de funciones disponibles, puedes echar un vistazo a los archivos presentes en el directorio lua del repositorio.</p>"},{"location":"es/plugins/#trabajos","title":"Trabajos","text":"<p>BunkerWeb utiliza un programador de trabajos interno para tareas peri\u00f3dicas como renovar certificados con certbot, descargar listas negras, descargar archivos MMDB, ... Puedes a\u00f1adir tareas de tu elecci\u00f3n coloc\u00e1ndolas dentro de una subcarpeta llamada jobs y list\u00e1ndolas en el archivo de metadatos plugin.json. No olvides a\u00f1adir los permisos de ejecuci\u00f3n para todos para evitar cualquier problema cuando un usuario clone e instale tu plugin.</p>"},{"location":"es/plugins/#pagina-del-plugin","title":"P\u00e1gina del plugin","text":"<p>Todo lo relacionado con la interfaz de usuario web se encuentra dentro de la subcarpeta ui, como vimos en la secci\u00f3n de estructura anterior..</p>"},{"location":"es/plugins/#requisitos-previos","title":"Requisitos previos","text":"<p>Cuando quieras crear una p\u00e1gina de plugin, necesitas dos archivos:</p> <ul> <li> <p>template.html que ser\u00e1 accesible con un GET /plugins/&lt;id_plugin&gt;.</p> </li> <li> <p>actions.py donde puedes a\u00f1adir algo de scripting y l\u00f3gica con un POST /plugins/&lt;id_plugin&gt;. Ten en cuenta que este archivo necesita una funci\u00f3n con el mismo nombre que el plugin para funcionar. Este archivo es necesario incluso si la funci\u00f3n est\u00e1 vac\u00eda.</p> </li> </ul>"},{"location":"es/plugins/#ejemplo-basico","title":"Ejemplo b\u00e1sico","text":"<p>Plantilla de Jinja 2</p> <p>El archivo template.html es una plantilla de Jinja2, por favor consulta la documentaci\u00f3n de Jinja2 si es necesario.</p> <p>Podemos dejar de lado el archivo actions.py y empezar a usar solo la plantilla en una situaci\u00f3n GET. La plantilla puede acceder al contexto y las librer\u00edas de la aplicaci\u00f3n, por lo que puedes usar Jinja, request o las utilidades de Flask.</p> <p>Por ejemplo, puedes obtener los argumentos de la solicitud en tu plantilla de esta manera:</p> <pre><code>&lt;p&gt;argumentos de la solicitud: {{ request.args.get() }}.&lt;/p&gt;\n</code></pre>"},{"location":"es/plugins/#actionspy","title":"Actions.py","text":"<p>Token CSRF</p> <p>Ten en cuenta que cada env\u00edo de formulario est\u00e1 protegido mediante un token CSRF, necesitar\u00e1s incluir el siguiente fragmento en tus formularios: <pre><code>&lt;input type=\"hidden\" name=\"csrf_token\" value=\"{{ csrf_token() }}\" /&gt;\n</code></pre></p> <p>Puedes potenciar tu p\u00e1gina de plugin con scripting adicional con el archivo actions.py al enviar un POST /plugins/&lt;id_plugin&gt;.</p> <p>Tienes dos funciones por defecto en actions.py:</p> <p>Funci\u00f3n pre_render</p> <p>Esto te permite recuperar datos cuando haces un GET de la plantilla, y usar los datos con la variable pre_render disponible en Jinja para mostrar contenido de forma m\u00e1s din\u00e1mica.</p> <pre><code>def pre_render(**kwargs)\n  return &lt;datos_pre_render&gt;\n</code></pre> <p>BunkerWeb te enviar\u00e1 este tipo de respuesta:</p> <pre><code>return jsonify({\"status\": \"ok|ko\", \"code\" : XXX, \"data\": &lt;datos_pre_render&gt;}), 200\n</code></pre> <p>Funci\u00f3n &lt;id_plugin&gt;</p> <p>Esto te permite recuperar datos cuando haces un POST desde el punto final de la plantilla, que debe usarse en AJAX.</p> <pre><code>def miplugin(**kwargs)\n  return &lt;datos_id_plugin&gt;\n</code></pre> <p>BunkerWeb te enviar\u00e1 este tipo de respuesta:</p> <pre><code>return jsonify({\"message\": \"ok\", \"data\": &lt;datos_id_plugin&gt;}), 200```\n\n**A qu\u00e9 puedes acceder desde action.py**\n\nAqu\u00ed est\u00e1n los argumentos que se pasan y a los que se accede en las funciones de action.py:\n\n```python\nfuncion(app=app, args=request.args.to_dict() or request.json or None)\n</code></pre> <p>Librer\u00edas de Python disponibles</p> <p>La interfaz de usuario web de BunkerWeb incluye un conjunto de librer\u00edas de Python preinstaladas que puedes usar en el archivo <code>actions.py</code> de tu plugin u otros scripts relacionados con la interfaz de usuario. Estas est\u00e1n disponibles de serie sin necesidad de instalaciones adicionales.</p> <p>Aqu\u00ed est\u00e1 la lista completa de librer\u00edas incluidas:</p> <ul> <li>bcrypt - Librer\u00eda para el hashing de contrase\u00f1as</li> <li>biscuit-python - Tokens de autenticaci\u00f3n Biscuit</li> <li>certbot - Cliente ACME para Let's Encrypt</li> <li>Flask - Framework web</li> <li>Flask-Login - Gesti\u00f3n de sesiones de usuario</li> <li>Flask-Session[cachelib] - Almacenamiento de sesiones del lado del servidor</li> <li>Flask-WTF - Manejo de formularios y protecci\u00f3n CSRF</li> <li>gunicorn[gthread] - Servidor HTTP WSGI</li> <li>pillow - Procesamiento de im\u00e1genes</li> <li>psutil - Utilidades del sistema y de procesos</li> <li>python_dateutil - Utilidades de fecha y hora</li> <li>qrcode - Generaci\u00f3n de c\u00f3digos QR</li> <li>regex - Expresiones regulares avanzadas</li> <li>urllib3 - Cliente HTTP</li> <li>user_agents - An\u00e1lisis de agentes de usuario</li> </ul> <p>Uso de librer\u00edas en tu plugin</p> <p>Para importar y usar estas librer\u00edas en tu archivo <code>actions.py</code>, simplemente usa la declaraci\u00f3n est\u00e1ndar de <code>import</code> de Python. Por ejemplo:</p> <pre><code>from flask import request\nimport bcrypt\n</code></pre> Librer\u00edas externas <p>Si necesitas librer\u00edas que no est\u00e1n en la lista anterior, inst\u00e1lalas dentro de la carpeta <code>ui</code> de tu plugin e imp\u00f3rtalas usando la directiva cl\u00e1sica de <code>import</code>. Aseg\u00farate de la compatibilidad con el entorno existente para evitar conflictos.</p> <p>Algunos ejemplos</p> <ul> <li>Recuperar datos enviados de un formulario</li> </ul> <pre><code>from flask import request\n\ndef miplugin(**kwargs) :\n    mi_valor_formulario = request.form[\"mi_entrada_formulario\"]\n  return mi_valor_formulario\n</code></pre> <ul> <li>Acceder a la configuraci\u00f3n de la aplicaci\u00f3n</li> </ul> <p>action.py <pre><code>from flask import request\n\ndef pre_render(**kwargs) :\n    config = kwargs['app'].config[\"CONFIG\"].get_config(methods=False)\n  return config```\n\n**plantilla**\n```html\n&lt;!-- metadatos + configuraci\u00f3n --&gt;\n&lt;div&gt;{{ pre_render }}&lt;/div&gt;```\n\n### Hooks.py\n\nEsta documentaci\u00f3n describe los ganchos de ciclo de vida utilizados para gestionar diferentes etapas de una solicitud dentro de la aplicaci\u00f3n. Cada gancho est\u00e1 asociado a una fase espec\u00edfica.\n\n=== \"before_request\"\n    Estos ganchos se ejecutan **antes** de procesar una solicitud entrante. Se utilizan normalmente para tareas de preprocesamiento como autenticaci\u00f3n, validaci\u00f3n o registro.\n\n    Si el gancho devuelve un objeto de respuesta, Flask omitir\u00e1 el manejo de la solicitud y devolver\u00e1 la respuesta directamente. Esto puede ser \u00fatil para cortocircuitar el pipeline de procesamiento de la solicitud.\n\n    **Ejemplo:**\n\n    ```python\n    from flask import request, Response\n\n    def before_request():\n        print(\"Antes de la solicitud: validando la solicitud...\", flush=True)\n        # Realizar autenticaci\u00f3n, validaci\u00f3n o registro aqu\u00ed\n        if not is_valid_request(request): # Estamos en el contexto de la aplicaci\u00f3n\n            return Response(\"\u00a1Solicitud inv\u00e1lida!\", status=400)\n\n    def is_valid_request(request):\n        # L\u00f3gica de validaci\u00f3n ficticia\n        return \"user\" in request\n    ```\n=== \"after_request\"\n    Estos ganchos se ejecutan **despu\u00e9s** de que la solicitud ha sido procesada. Son ideales para tareas de postprocesamiento como limpieza, registro adicional o modificaci\u00f3n de la respuesta antes de que se env\u00ede de vuelta.\n\n    Reciben el objeto de respuesta como argumento y pueden modificarlo antes de devolverlo. El primer gancho after_request que devuelva una respuesta se utilizar\u00e1 como la respuesta final.\n\n    **Ejemplo:**\n\n    ```python\n    from flask import request\n\n    def after_request(response):\n        print(\"Despu\u00e9s de la solicitud: registrando la respuesta...\", flush=True)\n        # Realizar registro, limpieza o modificaciones de la respuesta aqu\u00ed\n        log_response(response)\n        return response\n\n    def log_response(response):\n        # L\u00f3gica de registro ficticia\n        print(\"Respuesta registrada:\", response, flush=True)\n    ```\n=== \"teardown_request\"\n    Estos ganchos se invocan cuando el contexto de la solicitud se est\u00e1 desmontando. Estos ganchos se utilizan para liberar recursos o manejar errores que ocurrieron durante el ciclo de vida de la solicitud.\n\n    **Ejemplo:**\n\n    ```python\n    def teardown_request(error=None):\n        print(\"Desmontaje de la solicitud: limpiando recursos...\", flush=True)\n        # Realizar limpieza, liberar recursos o manejar errores aqu\u00ed\n        if error:\n            handle_error(error)\n        cleanup_resources()\n\n    def handle_error(error):\n        # L\u00f3gica de manejo de errores ficticia\n        print(\"Error encontrado:\", error, flush=True)\n\n    def cleanup_resources():\n        # L\u00f3gica de limpieza de recursos ficticia\n        print(\"Los recursos han sido limpiados.\", flush=True)\n    ```\n=== \"context_processor\"\n    Estos ganchos se utilizan para inyectar contexto adicional en las plantillas o vistas. Enriquecen el contexto de tiempo de ejecuci\u00f3n pasando datos comunes (como informaci\u00f3n del usuario o configuraciones) a las plantillas.\n\n    Si un procesador de contexto devuelve un diccionario, las claves y los valores se a\u00f1adir\u00e1n al contexto para todas las plantillas. Esto te permite compartir datos entre m\u00faltiples vistas o plantillas.\n\n    **Ejemplo:**\n\n    ```python\n    def context_processor() -&gt; dict:\n        print(\"Procesador de contexto: inyectando datos de contexto...\", flush=True)\n        # Devolver un diccionario que contenga datos de contexto para las plantillas/vistas\n        return {\n            \"current_user\": \"John Doe\",\n            \"app_version\": \"1.0.0\",\n            \"feature_flags\": {\"new_ui\": True}\n        }\n    ```\n\nEste dise\u00f1o de ganchos de ciclo de vida proporciona un enfoque modular y sistem\u00e1tico para gestionar diversos aspectos del ciclo de vida de una solicitud:\n\n- **Modularidad:** Cada gancho es responsable de una fase distinta, asegurando que las responsabilidades est\u00e9n separadas.\n- **Mantenibilidad:** Los desarrolladores pueden a\u00f1adir, modificar o eliminar f\u00e1cilmente implementaciones de ganchos sin afectar otras partes del ciclo de vida de la solicitud.\n- **Extensibilidad:** El marco es flexible, lo que permite a\u00f1adir ganchos adicionales o mejoras a medida que evolucionan los requisitos de la aplicaci\u00f3n.\n\nAl definir claramente las responsabilidades de cada gancho y sus prefijos de registro asociados, el sistema asegura que cada etapa del procesamiento de la solicitud sea transparente y manejable.\n\n### Blueprints\n\nEn Flask, los **blueprints** sirven como una forma modular de organizar componentes relacionados \u2014como vistas, plantillas y archivos est\u00e1ticos\u2014 dentro de tu aplicaci\u00f3n. Te permiten agrupar la funcionalidad de manera l\u00f3gica y se pueden usar para crear nuevas secciones de tu aplicaci\u00f3n o sobrescribir las existentes.\n\n#### Crear un Blueprint\n\nPara definir un blueprint, creas una instancia de la clase `Blueprint`, especificando su nombre y la ruta de importaci\u00f3n. Luego, defines las rutas y vistas asociadas a este blueprint.\n\n**Ejemplo: Definir un nuevo Blueprint**\n\n```python\nfrom os.path import dirname\nfrom flask import Blueprint, render_template\n\n# Definir el blueprint\nmi_blueprint = Blueprint('mi_blueprint', __name__, template_folder=dirname(__file__) + '/templates') # La carpeta de plantillas se establece para evitar conflictos con el blueprint original\n\n# Definir una ruta dentro del blueprint\n@mi_blueprint.route('/mi_blueprint')\ndef mi_pagina_blueprint():\n    return render_template('mi_blueprint.html')\n</code></pre></p> <p>En este ejemplo, se crea un blueprint llamado <code>mi_blueprint</code> y se define una ruta <code>/mi_blueprint</code> dentro de \u00e9l.</p>"},{"location":"es/plugins/#sobrescribir-un-blueprint-existente","title":"Sobrescribir un Blueprint existente","text":"<p>Los blueprints tambi\u00e9n pueden sobrescribir los existentes para modificar o ampliar la funcionalidad. Para hacer esto, aseg\u00farate de que el nuevo blueprint tenga el mismo nombre que el que est\u00e1s sobrescribiendo y reg\u00edstralo despu\u00e9s del original.</p> <p>Ejemplo: Sobrescribir un Blueprint existente</p> <pre><code>from os.path import dirname\nfrom flask import Flask, Blueprint\n\n# Blueprint original\ninstances = Blueprint('instances', __name__, template_folder=dirname(__file__) + '/templates') # La carpeta de plantillas se establece para evitar conflictos con el blueprint original\n\n@instances.route('/instances')\ndef override_instances():\n    return \"Mi nueva p\u00e1gina de instancias\"\n</code></pre> <p>En este escenario, al acceder a la URL <code>/instances</code> se mostrar\u00e1 \"Mi nueva p\u00e1gina de instancias\" porque el blueprint <code>instances</code>, registrado en \u00faltimo lugar, sobrescribe el blueprint <code>instances</code> original.</p> <p>Sobre la sobrescritura</p> <p>Ten cuidado al sobrescribir los blueprints existentes, ya que puede afectar el comportamiento de la aplicaci\u00f3n. Aseg\u00farate de que los cambios se alineen con los requisitos de la aplicaci\u00f3n y no introduzcan efectos secundarios inesperados.</p> <p>Todas las rutas existentes se eliminar\u00e1n del blueprint original, por lo que necesitar\u00e1s volver a implementarlas si es necesario.</p>"},{"location":"es/plugins/#convenciones-de-nomenclatura","title":"Convenciones de nomenclatura","text":"<p>Importante</p> <p>Aseg\u00farate de que el nombre del blueprint coincida con el nombre de la variable del blueprint, de lo contrario no se considerar\u00e1 un blueprint v\u00e1lido y no se registrar\u00e1.</p> <p>Para la coherencia y la claridad, es aconsejable seguir estas convenciones de nomenclatura:</p> <ul> <li> <p>Nombres de Blueprint: Usa nombres cortos, todo en min\u00fasculas. Se pueden usar guiones bajos para mejorar la legibilidad, por ejemplo, <code>user_auth</code>.</p> </li> <li> <p>Nombres de archivo: Haz que el nombre del archivo coincida con el nombre del blueprint, asegur\u00e1ndote de que est\u00e9 todo en min\u00fasculas con guiones bajos seg\u00fan sea necesario, por ejemplo, <code>user_auth.py</code>.</p> </li> </ul> <p>Esta pr\u00e1ctica se alinea con las convenciones de nomenclatura de m\u00f3dulos de Python y ayuda a mantener una estructura de proyecto clara.</p> <p>Ejemplo: Nomenclatura de Blueprint y archivo</p> <pre><code>plugin /\n    ui / blueprints / user_auth.py\n                      templates / user_auth.html\n</code></pre> <p>En esta estructura, <code>user_auth.py</code> contiene el blueprint <code>user_auth</code>, y <code>user_auth.html</code> es la plantilla asociada, cumpliendo con las convenciones de nomenclatura recomendadas.</p>"},{"location":"es/professional-services/","title":"Servicios profesionales","text":""},{"location":"es/professional-services/#por-que-deberia-contratar-servicios-profesionales","title":"\u00bfPor qu\u00e9 deber\u00eda contratar servicios profesionales?","text":"<p>Dado que BunkerWeb es un software libre (como en libertad), tienes derecho a usarlo libremente siempre que respetes la licencia AGPLv3.</p> <p>Tambi\u00e9n puedes actualizar BunkerWeb a la versi\u00f3n PRO en cualquier momento. Al hacerlo, obtendr\u00e1s una experiencia mejorada para ayudarte en la seguridad de tus servicios web. Nuestro objetivo es ayudarte a centrarte en las necesidades de tu negocio. La versi\u00f3n PRO se actualiza regularmente y hacemos todo lo posible para recopilar los comentarios de las empresas para incluir las caracter\u00edsticas necesarias.</p> <p>Pero dedicar tiempo a una tecnolog\u00eda espec\u00edfica puede no ser f\u00e1cil dependiendo de las prioridades de tu negocio. Sin mencionar que la ciberseguridad es un dominio complejo donde no se recomienda ser juez y parte.</p> <p>Obtener servicios profesionales adem\u00e1s de la versi\u00f3n de c\u00f3digo abierto o PRO es la soluci\u00f3n ideal para cubrir las necesidades de tu negocio. Puedes centrarte en tus principales prioridades y confiar en un socio de confianza cuando se trata de seguridad web.</p> <p>Ten en cuenta que los servicios profesionales son ofrecidos directamente por Bunkerity, la empresa que mantiene el proyecto BunkerWeb, a trav\u00e9s de nuestra plataforma en l\u00ednea Panel de BunkerWeb.</p>"},{"location":"es/professional-services/#que-servicios-profesionales-ofreceis","title":"\u00bfQu\u00e9 servicios profesionales ofrec\u00e9is?","text":"<p>Ofrecemos soporte t\u00e9cnico y consultor\u00eda en torno a la soluci\u00f3n BunkerWeb. Al utilizar este servicio, te ayudaremos con los problemas t\u00e9cnicos (instalaci\u00f3n, configuraci\u00f3n, falsos positivos, ...). Tambi\u00e9n podemos ofrecer un SLA personalizado seg\u00fan tus necesidades.</p> <p>Seg\u00fan tus necesidades, tienes la opci\u00f3n de elegir entre ofertas \"puntuales\" y de suscripci\u00f3n.</p>"},{"location":"es/professional-services/#como-puedo-obtener-mas-informacion","title":"\u00bfC\u00f3mo puedo obtener m\u00e1s informaci\u00f3n?","text":"<p>Encontrar\u00e1s m\u00e1s informaci\u00f3n visitando el Panel de BunkerWeb, nuestra plataforma dedicada a los servicios profesionales.</p> <p>No dudes en contactarnos si tienes alguna pregunta, estaremos encantados de responder a tus necesidades.</p>"},{"location":"es/quickstart-guide/","title":"Gu\u00eda de inicio r\u00e1pido","text":"<p>Requisitos previos</p> <p>Esperamos que ya est\u00e9s familiarizado con los conceptos b\u00e1sicos y que hayas seguido las instrucciones de integraci\u00f3n para tu entorno.</p> <p>Esta gu\u00eda de inicio r\u00e1pido asume que BunkerWeb es accesible desde Internet y que has configurado al menos dos dominios: uno para la interfaz de usuario web y otro para tu servicio web.</p> <p>Requisitos del sistema</p> <p>Las especificaciones m\u00ednimas recomendadas para BunkerWeb son una m\u00e1quina con 2 (v)CPUs y 8 GB de RAM. Ten en cuenta que esto deber\u00eda ser suficiente para entornos de prueba o configuraciones con muy pocos servicios.</p> <p>Para entornos de producci\u00f3n con muchos servicios que proteger, recomendamos al menos 4 (v)CPUs y 16 GB de RAM. Los recursos deben ajustarse en funci\u00f3n de tu caso de uso, el tr\u00e1fico de red y los posibles ataques DDoS que puedas enfrentar.</p> <p>Se recomienda encarecidamente habilitar la carga global de las reglas CRS (estableciendo el par\u00e1metro <code>USE_MODSECURITY_GLOBAL_CRS</code> en <code>yes</code>) si te encuentras en entornos con RAM limitada o en producci\u00f3n con muchos servicios. Puedes encontrar m\u00e1s detalles en la secci\u00f3n de usos avanzados de la documentaci\u00f3n.</p> <p>Esta gu\u00eda de inicio r\u00e1pido te ayudar\u00e1 a instalar r\u00e1pidamente BunkerWeb y a proteger un servicio web utilizando la interfaz de usuario web.</p> <p>Proteger las aplicaciones web existentes que ya son accesibles con el protocolo HTTP(S) es el objetivo principal de BunkerWeb: actuar\u00e1 como un proxy inverso cl\u00e1sico con caracter\u00edsticas de seguridad adicionales.</p> <p>Consulta la carpeta de ejemplos del repositorio para obtener ejemplos del mundo real.</p>"},{"location":"es/quickstart-guide/#configuracion-basica","title":"Configuraci\u00f3n b\u00e1sica","text":"Todo en unoLinuxDockerDocker autoconfKubernetesSwarm <p>Para desplegar el contenedor todo en uno, ejecuta el siguiente comando:</p> <pre><code>docker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Por defecto, el contenedor expone:</p> <ul> <li>8080/tcp para HTTP</li> <li>8443/tcp para HTTPS</li> <li>8443/udp para QUIC</li> <li>7000/tcp para el acceso a la interfaz de usuario web sin BunkerWeb delante (no recomendado para producci\u00f3n)</li> </ul> <p>La imagen Todo en Uno viene con varios servicios integrados, que se pueden controlar mediante variables de entorno. Consulta la secci\u00f3n de la imagen Todo en Uno (AIO) de la p\u00e1gina de integraciones para m\u00e1s detalles.</p> <p>Usa el script de instalaci\u00f3n f\u00e1cil para configurar BunkerWeb en las distribuciones de Linux compatibles. Instala y configura autom\u00e1ticamente NGINX, a\u00f1ade el repositorio de BunkerWeb y configura los servicios necesarios.</p> <pre><code># Descargar el script y su suma de comprobaci\u00f3n\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/vtesting/install-bunkerweb.sh.sha256\n\n# Verificar la suma de comprobaci\u00f3n\nsha256sum -c install-bunkerweb.sh.sha256\n\n# Si la comprobaci\u00f3n es exitosa, ejecuta el script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Aviso de seguridad</p> <p>Verifica siempre la integridad del script con la suma de comprobaci\u00f3n proporcionada antes de ejecutarlo.</p> <p>Para m\u00e9todos de instalaci\u00f3n avanzados (gestor de paquetes, tipos de instalaci\u00f3n, indicadores no interactivos, integraci\u00f3n con CrowdSec, etc.), consulta la Integraci\u00f3n con Linux.</p> <p>Aqu\u00ed est\u00e1 el archivo docker compose completo que puedes usar; ten en cuenta que m\u00e1s adelante conectaremos el servicio web a la red <code>bw-services</code>:</p> <pre><code>x-bw-env: &amp;bw-env\n  # Usamos un ancla para evitar repetir las mismas configuraciones para ambos servicios\n  API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Aseg\u00farate de establecer el rango de IP correcto para que el programador pueda enviar la configuraci\u00f3n a la instancia\n  # Opcional: establece un token de API y refl\u00e9jalo en ambos contenedores\n  API_TOKEN: \"\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    # Este es el nombre que se usar\u00e1 para identificar la instancia en el Programador\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # Para soporte de QUIC / HTTP3\n    environment:\n      &lt;&lt;: *bw-env # Usamos el ancla para evitar repetir las mismas configuraciones para todos los servicios\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Aseg\u00farate de establecer el nombre de instancia correcto\n      SERVER_NAME: \"\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # C\u00e1mbialo si es necesario\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # Se usa para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Servicio de Redis para la persistencia de informes/baneos/estad\u00edsticas\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24 # Aseg\u00farate de establecer el rango de IP correcto para que el programador pueda enviar la configuraci\u00f3n a la instancia\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Aqu\u00ed est\u00e1 el archivo docker compose completo que puedes usar; ten en cuenta que m\u00e1s adelante conectaremos el servicio web a la red <code>bw-services</code>:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # Para soporte de QUIC / HTTP3\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Establecemos la etiqueta de la instancia para permitir que la autoconfiguraci\u00f3n detecte la instancia\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      UI_HOST: \"http://bw-ui:7000\" # C\u00e1mbialo si es necesario\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"redis\"\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  redis: # Servicio de Redis para la persistencia de informes/baneos/estad\u00edsticas\n    image: redis:7-alpine\n    command: &gt;\n      redis-server\n      --maxmemory 256mb\n      --maxmemory-policy allkeys-lru\n      --save 60 1000\n      --appendonly yes\n    volumes:\n      - redis-data:/data\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n  redis-data:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>La forma recomendada de instalar Kubernetes es usar el chart de Helm disponible en <code>https://repo.bunkerweb.io/charts</code>:</p> <pre><code>helm repo add bunkerweb https://repo.bunkerweb.io/charts\n</code></pre> <p>Luego puedes usar el chart de helm <code>bunkerweb</code> de ese repositorio:</p> <pre><code>helm install mybw bunkerweb/bunkerweb --namespace bunkerweb --create-namespace\n</code></pre> <p>Una vez instalado, puedes obtener la direcci\u00f3n IP del <code>LoadBalancer</code> para configurar tus dominios:</p> <pre><code>kubectl -n bunkerweb get svc mybw-external -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Se puede encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Aqu\u00ed est\u00e1 el archivo de la pila de docker compose completo que puedes usar; ten en cuenta que m\u00e1s adelante conectaremos el servicio web a la red <code>bw-services</code>:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # Para soporte de QUIC / HTTP3\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n      UI_HOST: \"http://bw-ui:7000\" # C\u00e1mbialo si es necesario\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"es/quickstart-guide/#completa-el-asistente-de-configuracion","title":"Completa el asistente de configuraci\u00f3n","text":"<p>Accediendo al asistente de configuraci\u00f3n</p> <p>Puedes acceder al asistente de configuraci\u00f3n navegando a la URI <code>https://tu-fqdn-o-direccion-ip/setup</code> de tu servidor.</p>"},{"location":"es/quickstart-guide/#crea-una-cuenta-de-administrador","title":"Crea una cuenta de administrador","text":"<p>Deber\u00edas ver una p\u00e1gina de configuraci\u00f3n como esta:</p> <p> </p> P\u00e1gina de inicio del Asistente de configuraci\u00f3n <p>Una vez en la p\u00e1gina de configuraci\u00f3n, puedes introducir el nombre de usuario, correo electr\u00f3nico y contrase\u00f1a del administrador y hacer clic en el bot\u00f3n \"Siguiente\".</p>"},{"location":"es/quickstart-guide/#configura-el-proxy-inverso-https-y-otros-ajustes-avanzados","title":"Configura el Proxy Inverso, HTTPS y otros ajustes avanzados","text":"Configuraci\u00f3n b\u00e1sicaConfiguraci\u00f3n avanzada <p>El siguiente paso te pedir\u00e1 que introduzcas el nombre del servidor (dominio/FQDN) que utilizar\u00e1 la interfaz de usuario web.</p> <p>Tambi\u00e9n puedes optar por habilitar Let's Encrypt</p> <p> Asistente de configuraci\u00f3n paso 2 </p> <p>El siguiente paso te pedir\u00e1 que introduzcas el nombre del servidor (dominio/FQDN) que utilizar\u00e1 la interfaz de usuario web.</p> <p>Tambi\u00e9n puedes optar por habilitar Let's Encrypt.</p> <p>Si expandes la secci\u00f3n <code>Ajustes avanzados</code>, tambi\u00e9n puedes configurar las siguientes opciones:</p> <ul> <li>Proxy Inverso: Ajusta la configuraci\u00f3n del Proxy Inverso para tu interfaz de administrador (p. ej., si quieres usar una ruta).</li> <li>IP Real: Configura los ajustes de IP Real para identificar correctamente la direcci\u00f3n IP del cliente (p. ej., si est\u00e1s detr\u00e1s de un balanceador de carga o un CDN).</li> <li>Certificado Personalizado: Sube un certificado TLS personalizado si no quieres usar Let's Encrypt.</li> </ul> <p> Asistente de configuraci\u00f3n paso 2 (avanzado) </p>"},{"location":"es/quickstart-guide/#activacion-pro","title":"Activaci\u00f3n PRO","text":"<p>Si tienes una licencia PRO, puedes activarla introduciendo tu clave de licencia en la secci\u00f3n <code>Actualizar a PRO</code>. Esto habilitar\u00e1 las caracter\u00edsticas PRO de BunkerWeb.</p> <p> </p> Paso PRO del Asistente de configuraci\u00f3n"},{"location":"es/quickstart-guide/#resumen-de-tu-configuracion","title":"Resumen de tu configuraci\u00f3n","text":"<p>El \u00faltimo paso te dar\u00e1 un resumen de la configuraci\u00f3n que has introducido. Puedes hacer clic en el bot\u00f3n \"Configurar\" para completar la configuraci\u00f3n.</p> <p> </p> Paso final del Asistente de configuraci\u00f3n"},{"location":"es/quickstart-guide/#accediendo-a-la-interfaz-web","title":"Accediendo a la interfaz web","text":"<p>Ahora puedes acceder a la interfaz web navegando al dominio que configuraste en el paso anterior y a la URI si la cambiaste (el valor predeterminado es <code>https://tu-dominio/</code>).</p> <p> </p> P\u00e1gina de inicio de sesi\u00f3n de la interfaz web <p>Ahora puedes iniciar sesi\u00f3n con la cuenta de administrador que creaste durante el asistente de configuraci\u00f3n.</p> <p> </p> Inicio de la interfaz web"},{"location":"es/quickstart-guide/#creando-un-nuevo-servicio","title":"Creando un nuevo servicio","text":"Interfaz de usuario webTodo en unoArchivo variables.env de LinuxDockerEtiquetas de Docker autoconfAnotaciones de KubernetesEtiquetas de Swarm <p>Puedes crear un nuevo servicio navegando a la secci\u00f3n <code>Servicios</code> de la interfaz web y haciendo clic en el bot\u00f3n <code>\u2795 Crear nuevo servicio</code>.</p> <p>Hay m\u00faltiples formas de crear un servicio usando la interfaz web:</p> <ul> <li>El Modo f\u00e1cil te guiar\u00e1 a trav\u00e9s del proceso de creaci\u00f3n de un nuevo servicio.</li> <li>El Modo avanzado te permitir\u00e1 configurar el servicio con m\u00e1s opciones.</li> <li>El Modo sin formato te permitir\u00e1 introducir la configuraci\u00f3n directamente como si editaras el archivo <code>variables.env</code>.</li> </ul> <p>Servicio en borrador</p> <p>Puedes crear un servicio en borrador para guardar tu progreso y volver a \u00e9l m\u00e1s tarde. Simplemente haz clic en el bot\u00f3n <code>\ud83c\udf10 En l\u00ednea</code> para cambiar el servicio al modo borrador.</p> Modo f\u00e1cilModo avanzadoModo sin formato <p>En este modo, puedes elegir entre las plantillas disponibles y rellenar los campos obligatorios.</p> <p> Creaci\u00f3n de servicio en modo f\u00e1cil en la interfaz web </p> <ul> <li>Una vez que hayas seleccionado la plantilla, puedes rellenar los campos obligatorios y seguir las instrucciones para crear el servicio.</li> <li>Una vez que hayas terminado de configurar el servicio, puedes hacer clic en el bot\u00f3n <code>\ud83d\udcbe Guardar</code> para guardar la configuraci\u00f3n.</li> </ul> <p>En este modo, puedes configurar el servicio con m\u00e1s opciones mientras ves todas las configuraciones disponibles de todos los diferentes plugins.</p> <p> Creaci\u00f3n de servicio en modo avanzado en la interfaz web </p> <ul> <li>Para navegar entre los diferentes plugins, puedes usar el men\u00fa de navegaci\u00f3n en el lado izquierdo de la p\u00e1gina.</li> <li>Cada configuraci\u00f3n tiene una peque\u00f1a pieza de informaci\u00f3n que te ayudar\u00e1 a entender lo que hace.</li> <li>Una vez que hayas terminado de configurar el servicio, puedes hacer clic en el bot\u00f3n <code>\ud83d\udcbe Guardar</code> para guardar la configuraci\u00f3n.</li> </ul> <p>En este modo, puedes introducir la configuraci\u00f3n directamente como si editaras el archivo <code>variables.env</code>.</p> <p> Creaci\u00f3n de servicio en modo SIN FORMATO en la interfaz web </p> <ul> <li>Una vez que hayas terminado de configurar el servicio, puedes hacer clic en el bot\u00f3n <code>\ud83d\udcbe Guardar</code> para guardar la configuraci\u00f3n.</li> </ul> <p>\ud83d\ude80 Una vez que hayas guardado la configuraci\u00f3n, deber\u00edas ver tu nuevo servicio en la lista de servicios.</p> <p> P\u00e1gina de servicios de la interfaz web </p> <p>Si deseas editar el servicio, puedes hacer clic en el nombre del servicio o en el bot\u00f3n <code>\ud83d\udcdd Editar</code>.</p> <p>Cuando se utiliza la imagen Todo en Uno, los nuevos servicios se configuran a\u00f1adiendo variables de entorno al comando <code>docker run</code> para el contenedor <code>bunkerweb-aio</code>. Si el contenedor ya est\u00e1 en ejecuci\u00f3n, debes detenerlo y eliminarlo, y luego volver a ejecutarlo con las variables de entorno actualizadas.</p> <p>Supongamos que quieres proteger una aplicaci\u00f3n <code>myapp</code> (que se ejecuta en otro contenedor y es accesible como <code>http://myapp:8080</code> desde BunkerWeb) y hacerla disponible en <code>www.example.com</code>. A\u00f1adir\u00edas o modificar\u00edas las siguientes variables de entorno en tu comando <code>docker run</code>:</p> <pre><code># Primero, det\u00e9n y elimina el contenedor existente si est\u00e1 en ejecuci\u00f3n:\n# docker stop bunkerweb-aio\n# docker rm bunkerweb-aio\n\n# Luego, vuelve a ejecutar el contenedor bunkerweb-aio con variables de entorno adicionales/actualizadas:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n  # --- A\u00f1ade/modifica estas variables de entorno para tu nuevo servicio ---\n  -e MULTISITE=yes \\\n  -e SERVER_NAME=\"www.example.com\" \\\n  -e \"www.example.com_USE_REVERSE_PROXY=yes\" \\\n  -e \"www.example.com_REVERSE_PROXY_HOST=http://myapp:8080\" \\\n  -e \"www.example.com_REVERSE_PROXY_URL=/\" \\\n  # --- Incluye cualquier otra variable de entorno existente para la UI, Redis, CrowdSec, etc. ---\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre> <p>Tu contenedor de aplicaci\u00f3n (<code>myapp</code>) y el contenedor <code>bunkerweb-aio</code> deben estar en la misma red de Docker para que BunkerWeb pueda alcanzarlo usando el nombre de host <code>myapp</code>.</p> <p>Ejemplo de configuraci\u00f3n de red: <pre><code># 1. Crea una red de Docker personalizada (si a\u00fan no lo has hecho):\ndocker network create my-app-network\n\n# 2. Ejecuta tu contenedor de aplicaci\u00f3n en esta red:\ndocker run -d --name myapp --network my-app-network tu-imagen-de-aplicacion\n\n# 3. A\u00f1ade --network my-app-network al comando docker run de bunkerweb-aio:\ndocker run -d \\\n  --name bunkerweb-aio \\\n  --network my-app-network \\\n  -v bw-storage:/data \\\n  -p 80:8080/tcp \\\n  -p 443:8443/tcp \\\n  -p 443:8443/udp \\\n#   ... (todas las dem\u00e1s variables de entorno relevantes como se muestra en el ejemplo principal anterior) ...\n  bunkerity/bunkerweb-all-in-one:testing\n</code></pre></p> <p>Aseg\u00farate de reemplazar <code>myapp</code> con el nombre o IP real de tu contenedor de aplicaci\u00f3n y <code>http://myapp:8080</code> con su direcci\u00f3n y puerto correctos.</p> <p>Asumimos que has seguido la Configuraci\u00f3n b\u00e1sica y que la integraci\u00f3n con Linux est\u00e1 funcionando en tu m\u00e1quina.</p> <p>Puedes crear un nuevo servicio editando el archivo <code>variables.env</code> ubicado en el directorio <code>/etc/bunkerweb/</code>.</p> <pre><code>nano /etc/bunkerweb/variables.env\n</code></pre> <p>Luego puedes a\u00f1adir la siguiente configuraci\u00f3n:</p> <pre><code>SERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/\nwww.example.com_REVERSE_PROXY_HOST=http://myapp:8080\n</code></pre> <p>Luego puedes recargar el servicio <code>bunkerweb-scheduler</code> para aplicar los cambios.</p> <pre><code>systemctl reload bunkerweb-scheduler\n</code></pre> <p>Asumimos que has seguido la Configuraci\u00f3n b\u00e1sica y que la integraci\u00f3n con Docker est\u00e1 funcionando en tu m\u00e1quina.</p> <p>Debes tener una red llamada <code>bw-services</code> para que puedas conectar tu aplicaci\u00f3n existente y configurar BunkerWeb:</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Despu\u00e9s de eso, puedes a\u00f1adir manualmente el servicio en el archivo docker compose que creaste en el paso anterior:</p> <pre><code>...\n\nservices:\n  ...\n  bw-scheduler:\n    ...\n    environment:\n      ...\n      SERVER_NAME: \"www.example.com\" # Cuando usas la integraci\u00f3n con Docker, puedes establecer la configuraci\u00f3n directamente en el programador, aseg\u00farate de establecer el nombre de dominio correcto\n      MULTISITE: \"yes\" # Habilita el modo multisitio para que puedas a\u00f1adir m\u00faltiples servicios\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/\"\n      www.example.com_REVERSE_PROXY_HOST: \"http://myapp:8080\"\n      ...\n</code></pre> <p>Luego puedes reiniciar el servicio <code>bw-scheduler</code> para aplicar los cambios.</p> <pre><code>docker compose down bw-scheduler &amp;&amp; docker compose up -d bw-scheduler\n</code></pre> <p>Asumimos que has seguido la Configuraci\u00f3n b\u00e1sica y que la integraci\u00f3n de autoconfiguraci\u00f3n de Docker est\u00e1 funcionando en tu m\u00e1quina.</p> <p>Debes tener una red llamada <code>bw-services</code> para que puedas conectar tu aplicaci\u00f3n existente y configurar BunkerWeb con etiquetas:</p> <pre><code>services:\n  myapp:\n      image: nginxdemos/nginx-hello\n      networks:\n        - bw-services\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre> <p>Hacer esto crear\u00e1 autom\u00e1ticamente un nuevo servicio con las etiquetas proporcionadas como configuraci\u00f3n.</p> <p>Asumimos que has seguido la Configuraci\u00f3n b\u00e1sica y que la pila de Kubernetes est\u00e1 funcionando en tu cl\u00faster.</p> <p>Supongamos que tienes un Despliegue t\u00edpico con un Servicio para acceder a la aplicaci\u00f3n web desde dentro del cl\u00faster:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app\n  labels:\n    app: app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: app\n  template:\n    metadata:\n      labels:\n        app: app\n    spec:\n      containers:\n      - name: app\n        image: nginxdemos/nginx-hello\n        ports:\n        - containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: svc-app\nspec:\n  selector:\n    app: app\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n</code></pre> <p>Aqu\u00ed est\u00e1 la definici\u00f3n de Ingress correspondiente para servir y proteger la aplicaci\u00f3n web:</p> <pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  annotations:\n    bunkerweb.io/DUMMY_SETTING: \"value\"\nspec:\n  rules:\n    - host: www.example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n              name: svc-app\n              port:\n                number: 80\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Se puede encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Asumimos que has seguido la Configuraci\u00f3n b\u00e1sica y que la pila de Swarm est\u00e1 funcionando en tu cl\u00faster y conectada a una red llamada <code>bw-services</code> para que puedas conectar tu aplicaci\u00f3n existente y configurar BunkerWeb con etiquetas:</p> <pre><code>services:\n  myapp:\n    image: nginxdemos/nginx-hello\n    networks:\n      - bw-services\n    deploy:\n      placement:\n        constraints:\n          - \"node.role==worker\"\n      labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://myapp:8080\"\n\nnetworks:\n  bw-services:\n    external: true\n    name: bw-services\n</code></pre>"},{"location":"es/quickstart-guide/#para-saber-mas","title":"Para saber m\u00e1s","text":"<p>\u00a1Felicidades! Acabas de instalar BunkerWeb y de asegurar tu primer servicio web. Ten en cuenta que BunkerWeb ofrece mucho m\u00e1s, tanto en t\u00e9rminos de seguridad como de integraciones con otros sistemas y soluciones. Aqu\u00ed tienes una lista de recursos y acciones que pueden ayudarte a seguir profundizando en el conocimiento de la soluci\u00f3n:</p> <ul> <li>\u00danete a la comunidad de Bunker: Discord, LinkedIn, GitHub, X (Anteriormente Twitter)</li> <li>Echa un vistazo al blog oficial</li> <li>Explora casos de uso avanzados en la documentaci\u00f3n</li> <li>Ponte en contacto con nosotros para discutir las necesidades de tu organizaci\u00f3n</li> </ul>"},{"location":"es/troubleshooting/","title":"Soluci\u00f3n de problemas","text":"<p>Panel de BunkerWeb</p> <p>Si no puedes resolver tu problema, puedes contactarnos directamente a trav\u00e9s de nuestro panel. Esto centraliza todas las solicitudes relacionadas con la soluci\u00f3n BunkerWeb.</p>"},{"location":"es/troubleshooting/#registros","title":"Registros","text":"<p>Al solucionar problemas, los registros son tus mejores amigos. Hacemos nuestro mejor esfuerzo para proporcionar registros f\u00e1ciles de usar para ayudarte a entender lo que est\u00e1 sucediendo.</p> <p>Ten en cuenta que puedes establecer el <code>LOG_LEVEL</code> en <code>info</code> (predeterminado: <code>notice</code>) para aumentar la verbosidad de BunkerWeb.</p> <p>Aqu\u00ed te mostramos c\u00f3mo puedes acceder a los registros, dependiendo de tu integraci\u00f3n:</p> DockerDocker autoconfTodo en unoSwarmKubernetesLinux <p>Listar contenedores</p> <p>Para listar los contenedores en ejecuci\u00f3n, puedes usar el siguiente comando: <pre><code>docker ps\n</code></pre></p> <p>Puedes usar el comando <code>docker logs</code> (reemplaza <code>bunkerweb</code> con el nombre de tu contenedor): <pre><code>docker logs bunkerweb\n</code></pre></p> <p>Aqu\u00ed est\u00e1 el equivalente de docker-compose (reemplaza <code>bunkerweb</code> con el nombre de los servicios declarados en el archivo docker-compose.yml): <pre><code>docker-compose logs bunkerweb\n</code></pre></p> <p>Listar contenedores</p> <p>Para listar los contenedores en ejecuci\u00f3n, puedes usar el siguiente comando: <pre><code>docker ps\n</code></pre></p> <p>Puedes usar el comando <code>docker logs</code> (reemplaza <code>bunkerweb</code> y <code>bw-autoconf</code> con el nombre de tus contenedores): <pre><code>docker logs bunkerweb\ndocker logs bw-autoconf\n</code></pre></p> <p>Aqu\u00ed est\u00e1 el equivalente de docker-compose (reemplaza <code>bunkerweb</code> y <code>bw-autoconf</code> con el nombre de los servicios declarados en el archivo docker-compose.yml): <pre><code>docker-compose logs bunkerweb\ndocker-compose logs bw-autoconf\n</code></pre></p> <p>Nombre del contenedor</p> <p>El nombre del contenedor predeterminado para la imagen Todo en uno es <code>bunkerweb-aio</code>. Si has usado un nombre diferente, por favor ajusta el comando en consecuencia.</p> <p>Puedes usar el comando <code>docker logs</code>: <pre><code>docker logs bunkerweb-aio\n</code></pre></p> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Listar servicios</p> <p>Para listar los servicios, puedes usar el siguiente comando: <pre><code>docker service ls\n</code></pre></p> <p>Puedes usar el comando <code>docker service logs</code> (reemplaza <code>bunkerweb</code> y <code>bw-autoconf</code> con el nombre de tus servicios): <pre><code>docker service logs bunkerweb\ndocker service logs bw-autoconf\n</code></pre></p> <p>Listar pods</p> <p>Para listar los pods, puedes usar el siguiente comando: <pre><code>kubectl get pods\n</code></pre></p> <p>Puedes usar el comando <code>kubectl logs</code> (reemplaza <code>bunkerweb</code> y <code>bunkerweb-controler</code> con el nombre de tus pods): <pre><code>kubectl logs bunkerweb\nkubectl logs bunkerweb-controler\n</code></pre></p> <p>Para errores relacionados con los servicios de BunkerWeb (p. ej., que no se inician), puedes usar <code>journalctl</code>: <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre></p> <p>Los registros comunes se encuentran dentro del directorio <code>/var/log/bunkerweb</code>: <pre><code>cat /var/log/bunkerweb/error.log\ncat /var/log/bunkerweb/access.log\n</code></pre></p>"},{"location":"es/troubleshooting/#permisos","title":"Permisos","text":"<p>No olvides que BunkerWeb se ejecuta como un usuario sin privilegios por razones de seguridad obvias. Verifica dos veces los permisos de los archivos y carpetas utilizados por BunkerWeb, especialmente si usas configuraciones personalizadas (m\u00e1s informaci\u00f3n aqu\u00ed). Necesitar\u00e1s establecer al menos derechos RW en los archivos y RWX en las carpetas.</p>"},{"location":"es/troubleshooting/#desbloqueo-de-ip","title":"Desbloqueo de IP","text":"<p>Puedes desbloquear manualmente una IP, lo cual es \u00fatil al realizar pruebas para que puedas contactar la API interna de BunkerWeb (reemplaza <code>1.2.3.4</code> con la direcci\u00f3n IP a desbloquear):</p> Docker / Docker AutoconfTodo en unoSwarmKubernetesLinux <p>Puedes usar el comando <code>docker exec</code> (reemplaza <code>bw-scheduler</code> con el nombre de tu contenedor): <pre><code>docker exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Aqu\u00ed est\u00e1 el equivalente de docker-compose (reemplaza <code>bw-scheduler</code> con el nombre de los servicios declarados en el archivo docker-compose.yml): <pre><code>docker-compose exec bw-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Nombre del contenedor</p> <p>El nombre del contenedor predeterminado para la imagen Todo en uno es <code>bunkerweb-aio</code>. Si has usado un nombre diferente, por favor ajusta el comando en consecuencia.</p> <p>Puedes usar el comando <code>docker exec</code>: <pre><code>docker exec bunkerweb-aio bwcli unban 1.2.3.4\n</code></pre></p> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Puedes encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>Puedes usar el comando <code>docker exec</code> (reemplaza <code>bw-scheduler</code> con el nombre de tu servicio): <pre><code>docker exec $(docker ps -q -f name=bw-scheduler) bwcli unban 1.2.3.4\n</code></pre></p> <p>Puedes usar el comando <code>kubectl exec</code> (reemplaza <code>bunkerweb-scheduler</code> con el nombre de tu pod): <pre><code>kubectl exec bunkerweb-scheduler bwcli unban 1.2.3.4\n</code></pre></p> <p>Puedes usar el comando <code>bwcli</code> (como root): <pre><code>sudo bwcli unban 1.2.3.4\n</code></pre></p>"},{"location":"es/troubleshooting/#falsos-positivos","title":"Falsos positivos","text":""},{"location":"es/troubleshooting/#modo-de-solo-deteccion","title":"Modo de solo detecci\u00f3n","text":"<p>Para fines de depuraci\u00f3n/prueba, puedes configurar BunkerWeb en modo de solo detecci\u00f3n para que no bloquee las solicitudes y act\u00fae como un proxy inverso cl\u00e1sico.</p>"},{"location":"es/troubleshooting/#modsecurity","title":"ModSecurity","text":"<p>La configuraci\u00f3n predeterminada de ModSecurity de BunkerWeb es cargar el Core Rule Set en modo de puntuaci\u00f3n de anomal\u00edas con un nivel de paranoia (PL) de 1:</p> <ul> <li>Cada regla que coincida aumentar\u00e1 una puntuaci\u00f3n de anomal\u00eda (por lo que muchas reglas pueden coincidir con una sola solicitud)</li> <li>PL1 incluye reglas con menos posibilidades de falsos positivos (pero menos seguridad que PL4)</li> <li>el umbral predeterminado para la puntuaci\u00f3n de anomal\u00eda es 5 para las solicitudes y 4 para las respuestas</li> </ul> <p>Tomemos los siguientes registros como ejemplo de una detecci\u00f3n de ModSecurity usando la configuraci\u00f3n predeterminada (formateado para una mejor legibilidad):</p> <pre><code>2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `lfi-os-files.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf\"]\n    [line \"78\"]\n    [id \"930120\"]\n    [rev \"\"]\n    [msg \"OS File Access Attempt\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-lfi\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/255/153/126\"]\n    [tag \"PCI/6.5.4\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [warn] 85#85: *11 ModSecurity: Warning. Matched \"Operator `PmFromFile' with parameter `unix-shell.data' against variable `ARGS:id' (Value: `/etc/passwd' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf\"]\n    [line \"480\"]\n    [id \"932160\"]\n    [rev \"\"]\n    [msg \"Remote Command Execution: Unix Shell Code Found\"]\n    [data \"Matched Data: etc/passwd found within ARGS:id: /etc/passwd\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-shell\"]\n    [tag \"platform-unix\"]\n    [tag \"attack-rce\"]\n    [tag \"paranoia-level/1\"]\n    [tag \"OWASP_CRS\"]\n    [tag \"capec/1000/152/248/88\"]\n    [tag \"PCI/6.5.2\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"o1,10v9,11t:urlDecodeUni,t:cmdLine,t:normalizePath,t:lowercase\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n2022/04/26 12:01:10 [error] 85#85: *11 [client 172.17.0.1] ModSecurity: Access denied with code 403 (phase 2). Matched \"Operator `Ge' with parameter `5' against variable `TX:ANOMALY_SCORE' (Value: `10' )\n    [file \"/usr/share/bunkerweb/core/modsecurity/files/coreruleset/rules/REQUEST-949-BLOCKING-EVALUATION.conf\"]\n    [line \"80\"]\n    [id \"949110\"]\n    [rev \"\"]\n    [msg \"Inbound Anomaly Score Exceeded (Total Score: 10)\"]\n    [data \"\"]\n    [severity \"2\"]\n    [ver \"OWASP_CRS/3.3.2\"]\n    [maturity \"0\"]\n    [accuracy \"0\"]\n    [tag \"application-multi\"]\n    [tag \"language-multi\"]\n    [tag \"platform-multi\"]\n    [tag \"attack-generic\"]\n    [hostname \"172.17.0.2\"]\n    [uri \"/\"]\n    [unique_id \"165097447014.179282\"]\n    [ref \"\"],\n    client: 172.17.0.1, server: localhost, request: \"GET /?id=/etc/passwd HTTP/1.1\", host: \"localhost\"\n</code></pre> <p>Como podemos ver, hay 3 registros diferentes:</p> <ol> <li>La regla 930120 coincidi\u00f3</li> <li>La regla 932160 coincidi\u00f3</li> <li>Acceso denegado (regla 949110)</li> </ol> <p>Una cosa importante a entender es que la regla 949110 no es una regla \"real\": es la que denegar\u00e1 la solicitud porque se alcanza el umbral de anomal\u00eda (que es 10 en este ejemplo). \u00a1Nunca deber\u00edas eliminar la regla 949110!</p> <p>Si se trata de un falso positivo, deber\u00edas centrarte en las reglas 930120 y 932160. El ajuste de ModSecurity y/o CRS est\u00e1 fuera del alcance de esta documentaci\u00f3n, pero no olvides que puedes aplicar configuraciones personalizadas antes y despu\u00e9s de que se cargue el CRS (m\u00e1s informaci\u00f3n aqu\u00ed).</p>"},{"location":"es/troubleshooting/#mal-comportamiento","title":"Mal comportamiento","text":"<p>Un caso com\u00fan de falso positivo es cuando el cliente es baneado debido a la caracter\u00edstica de \"mal comportamiento\", lo que significa que se generaron demasiados c\u00f3digos de estado HTTP sospechosos en un per\u00edodo de tiempo (m\u00e1s informaci\u00f3n aqu\u00ed). Deber\u00edas empezar por revisar la configuraci\u00f3n y luego editarla de acuerdo a tu(s) aplicaci\u00f3n(es) web, como eliminar un c\u00f3digo HTTP sospechoso, disminuir el tiempo de conteo, aumentar el umbral, ...</p>"},{"location":"es/troubleshooting/#lista-blanca","title":"Lista blanca","text":"<p>Si tienes bots (o administradores) que necesitan acceder a tu sitio web, la forma recomendada de evitar cualquier falso positivo es incluirlos en la lista blanca usando la caracter\u00edstica de lista blanca. No recomendamos usar las configuraciones <code>WHITELIST_URI*</code> o <code>WHITELIST_USER_AGENT*</code> a menos que se establezcan en valores secretos e impredecibles. Los casos de uso comunes son:</p> <ul> <li>Bot de comprobaci\u00f3n de estado / estado</li> <li>Devoluci\u00f3n de llamada como IPN o webhook</li> <li>Rastreador de redes sociales</li> </ul>"},{"location":"es/troubleshooting/#errores-comunes","title":"Errores comunes","text":""},{"location":"es/troubleshooting/#el-upstream-envio-una-cabecera-demasiado-grande","title":"El upstream envi\u00f3 una cabecera demasiado grande","text":"<p>Si ves el siguiente error <code>upstream sent too big header while reading response header from upstream</code> en los registros, necesitar\u00e1s ajustar los diversos tama\u00f1os de los b\u00faferes del proxy usando las siguientes configuraciones:</p> <ul> <li><code>PROXY_BUFFERS</code></li> <li><code>PROXY_BUFFER_SIZE</code></li> <li><code>PROXY_BUSY_BUFFERS_SIZE</code></li> </ul>"},{"location":"es/troubleshooting/#no-se-pudo-construir-el-hash-de-server_names","title":"No se pudo construir el hash de server_names","text":"<p>Si ves el siguiente error <code>could not build server_names_hash, you should increase server_names_hash_bucket_size</code> en los registros, necesitar\u00e1s ajustar la configuraci\u00f3n <code>SERVER_NAMES_HASH_BUCKET_SIZE</code>.</p>"},{"location":"es/troubleshooting/#zona-horaria","title":"Zona horaria","text":"<p>Cuando se utilizan integraciones basadas en contenedores, la zona horaria del contenedor puede no coincidir con la de la m\u00e1quina anfitriona. Para resolver esto, puedes establecer la variable de entorno <code>TZ</code> a la zona horaria de tu elecci\u00f3n en tus contenedores (p. ej., <code>TZ=Europe/Paris</code>). Encontrar\u00e1s la lista de identificadores de zona horaria aqu\u00ed.</p>"},{"location":"es/troubleshooting/#interfaz-de-usuario-web","title":"Interfaz de usuario web","text":"<p>En caso de que hayas olvidado tus credenciales de la interfaz de usuario o est\u00e9s experimentando problemas con la 2FA, puedes conectarte a la base de datos para recuperar el acceso.</p>"},{"location":"es/troubleshooting/#acceder-a-la-base-de-datos","title":"Acceder a la base de datos","text":"SQLiteMariaDB / MySQLPostgreSQL LinuxDockerTodo en uno <p>Instalar SQLite (Debian/Ubuntu):</p> <pre><code>sudo apt install sqlite3\n</code></pre> <p>Instalar SQLite (Fedora/RedHat):</p> <pre><code>sudo dnf install sqlite\n</code></pre> <p>Obt\u00e9n un shell en tu contenedor del programador:</p> <p>Argumentos de Docker</p> <ul> <li>la opci\u00f3n <code>-u 0</code> es para ejecutar el comando como root (obligatorio)</li> <li>las opciones <code>-it</code> son para ejecutar el comando interactivamente (obligatorio)</li> <li><code>&lt;bunkerweb_scheduler_container&gt;</code>: el nombre o ID de tu contenedor del programador</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_scheduler_container&gt; bash\n</code></pre> <p>Instala SQLite:</p> <pre><code>apk add sqlite\n</code></pre> <p>Obt\u00e9n un shell en tu contenedor Todo en uno:</p> <p>Argumentos de Docker</p> <ul> <li>la opci\u00f3n <code>-u 0</code> es para ejecutar el comando como root (obligatorio).</li> <li>las opciones <code>-it</code> son para ejecutar el comando interactivamente (obligatorio).</li> <li><code>bunkerweb-aio</code> es el nombre del contenedor predeterminado; aj\u00fastalo si has usado un nombre personalizado.</li> </ul> <pre><code>docker exec -u 0 -it bunkerweb-aio bash\n</code></pre> <p>Accede a tu base de datos:</p> <p>Ruta de la base de datos</p> <p>Asumimos que est\u00e1s utilizando la ruta de la base de datos predeterminada. Si est\u00e1s utilizando una ruta personalizada, necesitar\u00e1s adaptar el comando. Para Todo en uno, asumimos que la base de datos es <code>db.sqlite3</code> ubicada en el volumen persistente <code>/data</code> (<code>/data/db.sqlite3</code>).</p> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <p>Deber\u00edas ver algo como esto:</p> <pre><code>SQLite version &lt;VER&gt; &lt;DATE&gt;\nEnter \".help\" for usage hints.\nsqlite&gt;\n</code></pre> <p>Solo MariaDB / MySQL</p> <p>Los siguientes pasos solo son v\u00e1lidos para bases de datos MariaDB / MySQL. Si est\u00e1s utilizando otra base de datos, por favor consulta la documentaci\u00f3n de tu base de datos.</p> <p>Credenciales y nombre de la base de datos</p> <p>Necesitar\u00e1s usar las mismas credenciales y el nombre de la base de datos utilizados en la configuraci\u00f3n <code>DATABASE_URI</code>.</p> LinuxDockerTodo en uno <p>Accede a tu base de datos local:</p> <pre><code>mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Luego introduce la contrase\u00f1a del usuario de la base de datos y deber\u00edas poder acceder a tu base de datos.</p> <p>Accede a tu contenedor de base de datos:</p> <p>Argumentos de Docker</p> <ul> <li>la opci\u00f3n <code>-u 0</code> es para ejecutar el comando como root (obligatorio)</li> <li>las opciones <code>-it</code> son para ejecutar el comando interactivamente (obligatorio)</li> <li><code>&lt;bunkerweb_db_container&gt;</code>: el nombre o ID de tu contenedor de base de datos</li> <li><code>&lt;user&gt;</code>: el usuario de la base de datos</li> <li><code>&lt;database&gt;</code>: el nombre de la base de datos</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; mysql -u &lt;user&gt; -p &lt;database&gt;\n</code></pre> <p>Luego introduce la contrase\u00f1a del usuario de la base de datos y deber\u00edas poder acceder a tu base de datos.</p> <p>La imagen Todo en uno no incluye un servidor MariaDB/MySQL. Si has configurado la AIO para usar una base de datos externa MariaDB/MySQL (estableciendo la variable de entorno <code>DATABASE_URI</code>), deber\u00edas conectarte a esa base de datos directamente usando las herramientas de cliente de MySQL est\u00e1ndar.</p> <p>El m\u00e9todo de conexi\u00f3n ser\u00eda similar a la pesta\u00f1a \"Linux\" (si te conectas desde el host donde se ejecuta la AIO u otra m\u00e1quina) o ejecutando un cliente de MySQL en un contenedor de Docker separado si se prefiere, apuntando al host y las credenciales de tu base de datos externa.</p> <p>Solo PostgreSQL</p> <p>Los siguientes pasos solo son v\u00e1lidos para bases de datos PostgreSQL. Si est\u00e1s utilizando otra base de datos, por favor consulta la documentaci\u00f3n de tu base de datos.</p> <p>Credenciales, host y nombre de la base de datos</p> <p>Necesitar\u00e1s usar las mismas credenciales (usuario/contrase\u00f1a), host y nombre de la base de datos utilizados en la configuraci\u00f3n <code>DATABASE_URI</code>.</p> LinuxDockerTodo en uno <p>Accede a tu base de datos local:</p> <pre><code>psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Si tu base de datos est\u00e1 en otro host, incluye el nombre de host/IP y el puerto:</p> <pre><code>psql -h &lt;host&gt; -p 5432 -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Luego introduce la contrase\u00f1a del usuario de la base de datos y deber\u00edas poder acceder a tu base de datos.</p> <p>Accede a tu contenedor de base de datos:</p> <p>Argumentos de Docker</p> <ul> <li>la opci\u00f3n <code>-u 0</code> es para ejecutar el comando como root (obligatorio)</li> <li>las opciones <code>-it</code> son para ejecutar el comando interactivamente (obligatorio)</li> <li><code>&lt;bunkerweb_db_container&gt;</code>: el nombre o ID de tu contenedor de base de datos</li> <li><code>&lt;user&gt;</code>: el usuario de la base de datos</li> <li><code>&lt;database&gt;</code>: el nombre de la base de datos</li> </ul> <pre><code>docker exec -u 0 -it &lt;bunkerweb_db_container&gt; psql -U &lt;user&gt; -d &lt;database&gt;\n</code></pre> <p>Si la base de datos est\u00e1 alojada en otro lugar, a\u00f1ade las opciones <code>-h &lt;host&gt;</code> y <code>-p 5432</code> en consecuencia.</p> <p>La imagen Todo en uno no incluye un servidor PostgreSQL. Si has configurado la AIO para usar una base de datos externa PostgreSQL (estableciendo la variable de entorno <code>DATABASE_URI</code>), deber\u00edas conectarte a esa base de datos directamente usando las herramientas de cliente de PostgreSQL est\u00e1ndar.</p> <p>El m\u00e9todo de conexi\u00f3n ser\u00eda similar a la pesta\u00f1a \"Linux\" (si te conectas desde el host donde se ejecuta la AIO u otra m\u00e1quina) o ejecutando un cliente de PostgreSQL en un contenedor de Docker separado si se prefiere, apuntando al host y las credenciales de tu base de datos externa.</p>"},{"location":"es/troubleshooting/#acciones-de-solucion-de-problemas","title":"Acciones de soluci\u00f3n de problemas","text":"<p>Esquema de las tablas</p> <p>El esquema de la tabla <code>bw_ui_users</code> es el siguiente:</p> Campo Tipo Nulo Clave Predeterminado Extra username varchar(256) NO PRI NULL email varchar(256) YES UNI NULL password varchar(60) NO NULL method enum('ui','scheduler','autoconf','manual','wizard') NO NULL admin tinyint(1) NO NULL theme enum('light','dark') NO NULL language varchar(2) NO NULL totp_secret varchar(256) YES NULL creation_date datetime NO NULL update_date datetime NO NULL Recuperar nombre de usuarioActualizar la contrase\u00f1a del usuario administradorDesactivar la autenticaci\u00f3n 2FA para el usuario administradorActualizar los c\u00f3digos de recuperaci\u00f3n 2FAExportar configuraci\u00f3n y registros anonimizados <p>Ejecuta el siguiente comando para extraer datos de la tabla <code>bw_ui_users</code>:</p> <pre><code>SELECT * FROM bw_ui_users;\n</code></pre> <p>Deber\u00edas ver algo como esto:</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>Primero necesitas hashear la nueva contrase\u00f1a usando el algoritmo bcrypt.</p> <p>Instala la librer\u00eda de Python bcrypt:</p> <pre><code>pip install bcrypt\n</code></pre> <p>Genera tu hash (reemplaza <code>mypassword</code> con tu propia contrase\u00f1a):</p> <pre><code>python3 -c 'from bcrypt import hashpw, gensalt ; print(hashpw(b\"\"\"mypassword\"\"\", gensalt(rounds=10)).decode(\"utf-8\"))'\n</code></pre> <p>Puedes actualizar tu nombre de usuario / contrase\u00f1a ejecutando este comando:</p> <pre><code>UPDATE bw_ui_users SET password = '&lt;password_hash&gt;' WHERE admin = 1;\n</code></pre> <p>Si vuelves a comprobar tu tabla <code>bw_ui_users</code> despu\u00e9s de este comando:</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>Deber\u00edas ver algo como esto:</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light *** *** *** <p>Ahora deber\u00edas poder usar las nuevas credenciales para iniciar sesi\u00f3n en la interfaz de usuario web.</p> <p>Puedes desactivar la 2FA ejecutando este comando:</p> <pre><code>UPDATE bw_ui_users SET totp_secret = NULL WHERE admin = 1;\n</code></pre> <p>Si vuelves a comprobar tu tabla <code>bw_ui_users</code> siguiendo este comando:</p> <pre><code>SELECT * FROM bw_ui_users WHERE admin = 1;\n</code></pre> <p>Deber\u00edas ver algo como esto:</p> username email password method admin theme totp_secret creation_date update_date *** *** *** manual 1 light NULL *** *** <p>Ahora deber\u00edas poder iniciar sesi\u00f3n en la interfaz de usuario web solo con tu nombre de usuario y contrase\u00f1a sin 2FA.</p> <p>Los c\u00f3digos de recuperaci\u00f3n se pueden actualizar en tu p\u00e1gina de perfil de la interfaz de usuario web en la pesta\u00f1a <code>Seguridad</code>.</p> <p>Usa la p\u00e1gina de Soporte en la Interfaz de Usuario Web para recopilar r\u00e1pidamente la configuraci\u00f3n y los registros para la soluci\u00f3n de problemas.</p> <ul> <li>Abre la Interfaz de Usuario Web y ve a la p\u00e1gina de Soporte.</li> <li>Elige el alcance: exporta la configuraci\u00f3n Global o selecciona un Servicio espec\u00edfico.</li> <li>Haz clic para descargar el archivo de configuraci\u00f3n para el alcance elegido.</li> <li>Opcionalmente descarga los registros: los registros exportados se anonimizan autom\u00e1ticamente (todas las direcciones IP y dominios est\u00e1n enmascarados).</li> </ul>"},{"location":"es/troubleshooting/#cargar-plugin","title":"Cargar plugin","text":"<p>Puede que no sea posible cargar un plugin desde la interfaz de usuario en ciertas situaciones:</p> <ul> <li>Falta de un paquete para gestionar archivos comprimidos en tu integraci\u00f3n, en cuyo caso necesitar\u00e1s a\u00f1adir los paquetes necesarios</li> <li>Navegador Safari: el 'modo seguro' puede impedirte a\u00f1adir un plugin. Necesitar\u00e1s hacer los cambios necesarios en tu m\u00e1quina</li> </ul>"},{"location":"es/upgrading/","title":"Actualizaci\u00f3n","text":""},{"location":"es/upgrading/#actualizacion-desde-16x","title":"Actualizaci\u00f3n desde 1.6.X","text":""},{"location":"es/upgrading/#procedimiento","title":"Procedimiento","text":""},{"location":"es/upgrading/#docker","title":"Docker","text":"<ol> <li> <p>Hacer copia de seguridad de la base de datos:</p> <ul> <li>Antes de proceder con la actualizaci\u00f3n de la base de datos, aseg\u00farate de realizar una copia de seguridad completa del estado actual de la base de datos.</li> <li>Utiliza las herramientas adecuadas para hacer una copia de seguridad de toda la base de datos, incluyendo datos, esquemas y configuraciones.</li> </ul> <pre><code>docker exec -it -e BACKUP_DIRECTORY=/path/to/backup/directory &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/backup/directory /path/to/backup/directory\n</code></pre> </li> <li> <p>Actualizar BunkerWeb:</p> <ul> <li> <p>Actualiza BunkerWeb a la \u00faltima versi\u00f3n.</p> <ol> <li> <p>Actualiza el archivo Docker Compose: Actualiza el archivo Docker Compose para usar la nueva versi\u00f3n de la imagen de BunkerWeb.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Reinicia los contenedores: Reinicia los contenedores para aplicar los cambios.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>Revisa los registros: Revisa los registros del servicio del programador para asegurarte de que la migraci\u00f3n fue exitosa.</p> <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> </li> <li> <p>Verifica la base de datos: Verifica que la actualizaci\u00f3n de la base de datos fue exitosa revisando los datos y las configuraciones en el nuevo contenedor de la base de datos.</p> </li> </ol>"},{"location":"es/upgrading/#linux","title":"Linux","text":"Actualizaci\u00f3n f\u00e1cil usando el script de instalaci\u00f3nManual <ul> <li> <p>Inicio r\u00e1pido:</p> <p>Para empezar, descarga el script de instalaci\u00f3n y su suma de verificaci\u00f3n, luego verifica la integridad del script antes de ejecutarlo.</p> <pre><code>LATEST_VERSION=$(curl -s https://api.github.com/repos/bunkerity/bunkerweb/releases/latest | jq -r .tag_name)\n\n# Descargar el script y su suma de verificaci\u00f3n\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh\nwget https://github.com/bunkerity/bunkerweb/releases/download/${LATEST_VERSION}/install-bunkerweb.sh.sha256\n\n# Verificar la suma de verificaci\u00f3n\nsha256sum -c install-bunkerweb.sh.sha256\n\n# Si la verificaci\u00f3n es exitosa, ejecuta el script\nchmod +x install-bunkerweb.sh\nsudo ./install-bunkerweb.sh\n</code></pre> <p>Aviso de seguridad</p> <p>Siempre verifica la integridad del script de instalaci\u00f3n antes de ejecutarlo.</p> <p>Descarga el archivo de suma de verificaci\u00f3n y usa una herramienta como <code>sha256sum</code> para confirmar que el script no ha sido alterado o manipulado.</p> <p>Si la verificaci\u00f3n de la suma de verificaci\u00f3n falla, no ejecutes el script\u2014puede no ser seguro.</p> </li> <li> <p>C\u00f3mo funciona:</p> <p>El mismo script de instalaci\u00f3n multiprop\u00f3sito utilizado para instalaciones nuevas tambi\u00e9n puede realizar una actualizaci\u00f3n in situ. Cuando detecta una instalaci\u00f3n existente y una versi\u00f3n de destino diferente, cambia al modo de actualizaci\u00f3n y aplica el siguiente flujo de trabajo:</p> <ol> <li>Detecci\u00f3n y validaci\u00f3n<ul> <li>Detecta el SO/versi\u00f3n y confirma la matriz de soporte.</li> <li>Lee la versi\u00f3n de BunkerWeb actualmente instalada desde <code>/usr/share/bunkerweb/VERSION</code>.</li> </ul> </li> <li>Decisi\u00f3n del escenario de actualizaci\u00f3n<ul> <li>Si la versi\u00f3n solicitada es igual a la instalada, se aborta (a menos que lo vuelvas a ejecutar expl\u00edcitamente para ver el estado).</li> <li>Si las versiones difieren, marca una actualizaci\u00f3n.</li> </ul> </li> <li>(Opcional) Copia de seguridad autom\u00e1tica previa a la actualizaci\u00f3n<ul> <li>Si <code>bwcli</code> y el programador est\u00e1n disponibles y la copia de seguridad autom\u00e1tica est\u00e1 habilitada, crea una copia de seguridad a trav\u00e9s del plugin de copia de seguridad incorporado.</li> <li>Destino: ya sea el directorio que proporcionaste con <code>--backup-dir</code> o una ruta generada como <code>/var/tmp/bunkerweb-backup-YYYYmmdd-HHMMSS</code>.</li> <li>Puedes deshabilitar esto con <code>--no-auto-backup</code> (la copia de seguridad manual entonces se convierte en tu responsabilidad).</li> </ul> </li> <li>Detenci\u00f3n de servicios<ul> <li>Detiene <code>bunkerweb</code>, <code>bunkerweb-ui</code> y <code>bunkerweb-scheduler</code> para garantizar una actualizaci\u00f3n consistente (coincide con las recomendaciones del procedimiento manual).</li> </ul> </li> <li>Eliminaci\u00f3n de bloqueos de paquetes<ul> <li>Elimina temporalmente <code>apt-mark hold</code> / <code>dnf versionlock</code> en <code>bunkerweb</code> y <code>nginx</code> para que se pueda instalar la versi\u00f3n de destino.</li> </ul> </li> <li>Ejecuci\u00f3n de la actualizaci\u00f3n<ul> <li>Instala solo la nueva versi\u00f3n del paquete de BunkerWeb (NGINX no se reinstala en modo de actualizaci\u00f3n a menos que falte, esto evita tocar un NGINX correctamente anclado).</li> <li>Vuelve a aplicar los bloqueos/versionlocks para congelar las versiones actualizadas.</li> </ul> </li> <li>Finalizaci\u00f3n y estado<ul> <li>Muestra el estado de systemd para los servicios principales y los pr\u00f3ximos pasos.</li> <li>Deja tu configuraci\u00f3n y base de datos intactas: solo se actualiza el c\u00f3digo de la aplicaci\u00f3n y los archivos gestionados.</li> </ul> </li> </ol> <p>Comportamientos clave / notas:</p> <ul> <li>El script NO modifica tu <code>/etc/bunkerweb/variables.env</code> ni el contenido de la base de datos.</li> <li>Si la copia de seguridad autom\u00e1tica fall\u00f3 (o se deshabilit\u00f3), a\u00fan puedes hacer una restauraci\u00f3n manual usando la secci\u00f3n de Reversi\u00f3n a continuaci\u00f3n.</li> <li>El modo de actualizaci\u00f3n evita intencionadamente reinstalar o degradar NGINX fuera de la versi\u00f3n anclada compatible ya presente.</li> <li>Los registros para la soluci\u00f3n de problemas permanecen en <code>/var/log/bunkerweb/</code>.</li> </ul> <p>Resumen de la reversi\u00f3n:</p> <ul> <li>Usa el directorio de copia de seguridad generado (o tu copia de seguridad manual) + los pasos en la secci\u00f3n de Reversi\u00f3n para restaurar la base de datos, luego reinstala la versi\u00f3n anterior de la imagen/paquete y vuelve a bloquear los paquetes.</li> </ul> </li> <li> <p>Opciones de l\u00ednea de comandos:</p> <p>Puedes realizar actualizaciones desatendidas con los mismos indicadores utilizados para la instalaci\u00f3n. Los m\u00e1s relevantes para las actualizaciones:</p> Opci\u00f3n Prop\u00f3sito <code>-v, --version &lt;X.Y.Z&gt;</code> Versi\u00f3n de BunkerWeb de destino a la que actualizar. <code>-y, --yes</code> No interactivo (asume la confirmaci\u00f3n de la actualizaci\u00f3n y habilita la copia de seguridad autom\u00e1tica a menos que se use <code>--no-auto-backup</code>). <code>--backup-dir &lt;RUTA&gt;</code> Destino para la copia de seguridad autom\u00e1tica previa a la actualizaci\u00f3n. Se crea si no existe. <code>--no-auto-backup</code> Omitir la copia de seguridad autom\u00e1tica (NO recomendado). Debes tener una copia de seguridad manual. <code>-q, --quiet</code> Suprimir la salida (combinar con registro / monitoreo). <code>-f, --force</code> Continuar en una versi\u00f3n de SO no compatible. <code>--dry-run</code> Mostrar el entorno detectado, las acciones previstas y luego salir sin cambiar nada. <p>Ejemplos:</p> <pre><code># Actualizar a testing interactivamente (pedir\u00e1 confirmaci\u00f3n para la copia de seguridad)\nsudo ./install-bunkerweb.sh --version testing\n\n# Actualizaci\u00f3n no interactiva con copia de seguridad autom\u00e1tica a un directorio personalizado\nsudo ./install-bunkerweb.sh -v testing --backup-dir /var/backups/bw-2025-01 -y\n\n# Actualizaci\u00f3n desatendida silenciosa (salida suprimida) \u2013 depende de la copia de seguridad autom\u00e1tica predeterminada\nsudo ./install-bunkerweb.sh -v testing -y -q\n\n# Realizar una ejecuci\u00f3n de prueba (plan) sin aplicar cambios\nsudo ./install-bunkerweb.sh -v testing --dry-run\n\n# Actualizar omitiendo la copia de seguridad autom\u00e1tica (NO recomendado)\nsudo ./install-bunkerweb.sh -v testing --no-auto-backup -y\n</code></pre> <p>Omitir copias de seguridad</p> <p>Usar <code>--no-auto-backup</code> sin tener una copia de seguridad manual verificada puede resultar en una p\u00e9rdida de datos irreversible si la actualizaci\u00f3n encuentra problemas. Siempre mant\u00e9n al menos una copia de seguridad reciente y probada.</p> </li> </ul> <ol> <li> <p>Hacer copia de seguridad de la base de datos:</p> <ul> <li>Antes de proceder con la actualizaci\u00f3n de la base de datos, aseg\u00farate de realizar una copia de seguridad completa del estado actual de la base de datos.</li> <li>Utiliza las herramientas adecuadas para hacer una copia de seguridad de toda la base de datos, incluyendo datos, esquemas y configuraciones.</li> </ul> Informaci\u00f3n para usuarios de Red Hat Enterprise Linux (RHEL) 8.10 <p>Si est\u00e1s usando RHEL 8.10 y planeas usar una base de datos externa, necesitar\u00e1s instalar el paquete <code>mysql-community-client</code> para asegurar que el comando <code>mysqldump</code> est\u00e9 disponible. Puedes instalar el paquete ejecutando los siguientes comandos:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Instalar el paquete de configuraci\u00f3n del repositorio de MySQL</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Habilitar el repositorio de MySQL</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Instalar el cliente de MySQL</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Instalar el paquete de configuraci\u00f3n del repositorio de PostgreSQL</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Instalar el cliente de PostgreSQL</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/path/to/backup/directory bwcli plugin backup save\n</code></pre> </li> <li> <p>Actualizar BunkerWeb:</p> <ul> <li> <p>Actualiza BunkerWeb a la \u00faltima versi\u00f3n.</p> <ol> <li> <p>Detener los servicios:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Actualizar BunkerWeb:</p> Debian/UbuntuFedora/RedHat <p>Primero, si has mantenido previamente el paquete de BunkerWeb, desm\u00e1rcalo:</p> <p>Puedes imprimir una lista de paquetes mantenidos con <code>apt-mark showhold</code></p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Luego, puedes actualizar el paquete de BunkerWeb:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Para evitar que el paquete de BunkerWeb se actualice al ejecutar <code>apt upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>M\u00e1s detalles en la p\u00e1gina de integraci\u00f3n con Linux.</p> <p>Primero, si has mantenido previamente el paquete de BunkerWeb, desm\u00e1rcalo:</p> <p>Puedes imprimir una lista de paquetes mantenidos con <code>dnf versionlock list</code></p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Luego, puedes actualizar el paquete de BunkerWeb:</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Para evitar que el paquete de BunkerWeb se actualice al ejecutar <code>dnf upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>M\u00e1s detalles en la p\u00e1gina de integraci\u00f3n con Linux.</p> </li> <li> <p>Iniciar los servicios:         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         O reinicia el sistema:         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>Revisa los registros: Revisa los registros del servicio del programador para asegurarte de que la migraci\u00f3n fue exitosa.</p> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>Verifica la base de datos: Verifica que la actualizaci\u00f3n de la base de datos fue exitosa revisando los datos y las configuraciones en el nuevo contenedor de la base de datos.</p> </li> </ol>"},{"location":"es/upgrading/#reversion","title":"Reversi\u00f3n","text":"<p>En caso de problemas</p> <p>Si encuentras alg\u00fan problema durante la actualizaci\u00f3n, puedes volver a la versi\u00f3n anterior de la base de datos restaurando la copia de seguridad tomada en el paso 1.</p> <p>Obt\u00e9n soporte y m\u00e1s informaci\u00f3n:</p> <ul> <li>Solicitar soporte profesional</li> <li>Crear un issue en GitHub</li> <li>Unirse al servidor de Discord de BunkerWeb</li> </ul> DockerLinux <ol> <li> <p>Extrae la copia de seguridad si est\u00e1 comprimida.</p> <p>Primero extrae el archivo zip de la copia de seguridad:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Elimina el archivo de la base de datos existente.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Corrige los permisos.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Det\u00e9n la pila.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Restaura la copia de seguridad.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;your_password&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Det\u00e9n la pila.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Elimina la base de datos existente.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Vuelve a crear la base de datos.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Det\u00e9n la pila.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>Retrocede la versi\u00f3n de BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;old_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;old_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;old_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;old_version&gt;\n        ...\n</code></pre> </li> <li> <p>Inicia los contenedores.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Extrae la copia de seguridad si est\u00e1 comprimida.</p> <p>Primero extrae el archivo zip de la copia de seguridad:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Det\u00e9n los servicios.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> <ol> <li> <p>Elimina la base de datos existente.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Vuelve a crear la base de datos.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>Inicia los servicios.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Retrocede la versi\u00f3n de BunkerWeb.</p> <ul> <li>Retrocede BunkerWeb a la versi\u00f3n anterior siguiendo los mismos pasos que al actualizar BunkerWeb en la p\u00e1gina de integraci\u00f3n con Linux</li> </ul> </li> </ol>"},{"location":"es/upgrading/#actualizacion-desde-15x","title":"Actualizaci\u00f3n desde 1.5.X","text":""},{"location":"es/upgrading/#que-ha-cambiado","title":"\u00bfQu\u00e9 ha cambiado?","text":""},{"location":"es/upgrading/#programador","title":"Programador","text":"<p>A diferencia de las versiones 1.5.X, el servicio del Programador ya no utiliza el proxy del socket de Docker para obtener las instancias de BunkerWeb. En su lugar, utiliza la nueva variable de entorno <code>BUNKERWEB_INSTANCES</code>.</p> <p>Sobre la variable de entorno <code>BUNKERWEB_INSTANCES</code></p> <p>Esta nueva variable es una lista de instancias de BunkerWeb separadas por espacios en este formato: <code>http://bunkerweb:5000 bunkerweb1:5000 bunkerweb2:5000 ...</code>. El programador utilizar\u00e1 entonces esta lista para obtener la configuraci\u00f3n de las instancias y enviarles la configuraci\u00f3n.</p> <ul> <li>El prefijo <code>http://</code> es opcional.</li> <li>El puerto es opcional y por defecto es el valor de la variable de entorno <code>API_HTTP_PORT</code>.</li> <li>El valor predeterminado de la variable de entorno <code>BUNKERWEB_INSTANCES</code> es <code>127.0.0.1</code>.</li> </ul> <p>En otras palabras, el nuevo sistema es totalmente agn\u00f3stico y gen\u00e9rico: el programador se encarga de gestionar una lista de instancias de BunkerWeb y no necesita preocuparse por el entorno.</p> <p>Integraciones Autoconf/Kubernetes/Swarm</p> <p>Si est\u00e1s utilizando las integraciones <code>Autoconf</code>, <code>Kubernetes</code> o <code>Swarm</code>, puedes establecer la variable de entorno <code>BUNKERWEB_INSTANCES</code> en una cadena vac\u00eda (para que no intente enviar la configuraci\u00f3n a la predeterminada que es <code>127.0.0.1</code>).</p> <p>Las instancias ser\u00e1n obtenidas autom\u00e1ticamente por el controlador. Tambi\u00e9n puedes a\u00f1adir instancias personalizadas a la lista que pueden no ser recogidas por el controlador.</p> <p>Desde la versi\u00f3n <code>1.6</code>, el Programador tambi\u00e9n tiene un nuevo sistema de comprobaci\u00f3n de estado integrado, que comprobar\u00e1 la salud de las instancias. Si una instancia deja de estar saludable, el programador dejar\u00e1 de enviarle la configuraci\u00f3n. Si la instancia vuelve a estar saludable, el programador comenzar\u00e1 a enviarle la configuraci\u00f3n de nuevo.</p>"},{"location":"es/upgrading/#contenedor-de-bunkerweb","title":"Contenedor de BunkerWeb","text":"<p>Otro cambio importante es que las configuraciones que antes se declaraban en el contenedor de BunkerWeb ahora se declaran en el programador. Esto significa que tendr\u00e1s que mover tus configuraciones del contenedor de BunkerWeb al contenedor del Programador.</p> <p>Aunque las configuraciones se declaran ahora en el contenedor del Programador, todav\u00eda necesitar\u00e1s declarar las configuraciones obligatorias relacionadas con la API en el contenedor de BunkerWeb, como la configuraci\u00f3n <code>API_WHITELIST_IP</code>, que se utiliza para incluir en la lista blanca la direcci\u00f3n IP del Programador, para que pueda enviar la configuraci\u00f3n a la instancia. Si usas <code>API_TOKEN</code>, tambi\u00e9n debes establecerlo en el contenedor de BunkerWeb (y reflejarlo en el Programador) para permitir las llamadas a la API autenticadas.</p> <p>Configuraciones del contenedor de BunkerWeb</p> <p>Cada configuraci\u00f3n relacionada con la API que declares en el contenedor de BunkerWeb tiene que ser reflejada en el contenedor del Programador para que siga funcionando, ya que la configuraci\u00f3n ser\u00e1 sobrescrita por la configuraci\u00f3n generada por el Programador.</p>"},{"location":"es/upgrading/#valores-predeterminados-y-nuevas-configuraciones","title":"Valores predeterminados y nuevas configuraciones","text":"<p>Hicimos nuestro mejor esfuerzo para no cambiar el valor predeterminado, pero hemos a\u00f1adido muchas otras configuraciones. Se recomienda encarecidamente leer las secciones de ajuste de seguridad y configuraciones de la documentaci\u00f3n.</p>"},{"location":"es/upgrading/#plantillas","title":"Plantillas","text":"<p>Hemos a\u00f1adido una nueva caracter\u00edstica llamada plantillas. Las plantillas proporcionan un enfoque estructurado y estandarizado para definir configuraciones y configuraciones personalizadas, consulta la secci\u00f3n conceptos/plantillas para obtener m\u00e1s informaci\u00f3n.</p>"},{"location":"es/upgrading/#espacios-de-nombres-de-autoconf","title":"Espacios de nombres de Autoconf","text":"<p>Hemos a\u00f1adido una caracter\u00edstica de espacio de nombres a las integraciones de autoconfiguraci\u00f3n. Los espacios de nombres te permiten agrupar tus instancias y aplicarles configuraciones solo a ellas. Consulta las siguientes secciones seg\u00fan tu Integraci\u00f3n para obtener m\u00e1s informaci\u00f3n:</p> <ul> <li>Autoconf/espacios de nombres</li> <li>Kubernetes/espacios de nombres</li> <li>Swarm/espacios de nombres</li> </ul>"},{"location":"es/upgrading/#procedimiento_1","title":"Procedimiento","text":"<ol> <li> <p>Hacer copia de seguridad de la base de datos:</p> <ul> <li>Antes de proceder con la actualizaci\u00f3n de la base de datos, aseg\u00farate de realizar una copia de seguridad completa del estado actual de la base de datos.</li> <li>Utiliza las herramientas adecuadas para hacer una copia de seguridad de toda la base de datos, incluyendo datos, esquemas y configuraciones.</li> </ul> 1.5.7 y posteriores1.5.6 y anteriores DockerLinux <pre><code>docker exec -it -e BACKUP_DIRECTORY=/path/to/backup/directory &lt;scheduler_container&gt; bwcli plugin backup save\n</code></pre> <pre><code>docker cp &lt;scheduler_container&gt;:/path/to/backup/directory /path/to/backup/directory\n</code></pre> Informaci\u00f3n para usuarios de Red Hat Enterprise Linux (RHEL) 8.10 <p>Si est\u00e1s usando RHEL 8.10 y planeas usar una base de datos externa, necesitar\u00e1s instalar el paquete <code>mysql-community-client</code> para asegurar que el comando <code>mysqldump</code> est\u00e9 disponible. Puedes instalar el paquete ejecutando los siguientes comandos:</p> MySQL/MariaDBPostgreSQL <ol> <li> <p>Instalar el paquete de configuraci\u00f3n del repositorio de MySQL</p> <pre><code>sudo dnf install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm\n</code></pre> </li> <li> <p>Habilitar el repositorio de MySQL</p> <pre><code>sudo dnf config-manager --enable mysql80-community\n</code></pre> </li> <li> <p>Instalar el cliente de MySQL</p> <pre><code>sudo dnf install mysql-community-client\n</code></pre> </li> </ol> <ol> <li> <p>Instalar el paquete de configuraci\u00f3n del repositorio de PostgreSQL</p> <pre><code>dnf install \"https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-$(uname -m)/pgdg-redhat-repo-latest.noarch.rpm\"\n</code></pre> </li> <li> <p>Instalar el cliente de PostgreSQL</p> <pre><code>dnf install postgresql&lt;version&gt;\n</code></pre> </li> </ol> <pre><code>BACKUP_DIRECTORY=/path/to/backup/directory bwcli plugin backup save\n</code></pre> SQLiteMariaDBMySQLPostgreSQL DockerLinux <p>Primero necesitamos instalar el paquete <code>sqlite</code> en el contenedor.</p> <pre><code>docker exec -u 0 -it &lt;scheduler_container&gt; apk add sqlite\n</code></pre> <p>Luego, haz una copia de seguridad de la base de datos.</p> <pre><code>docker exec -it &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>sqlite3 /var/lib/bunkerweb/db.sqlite3 \".dump\" &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mariadb-dump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e MYSQL_PWD=&lt;database_password&gt; &lt;database_container&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>MYSQL_PWD=&lt;database_password&gt; mysqldump -u &lt;username&gt; &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> DockerLinux <pre><code>docker exec -it -e PGPASSWORD=&lt;database_password&gt; &lt;database_container&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> <pre><code>PGPASSWORD=&lt;database_password&gt; pg_dump -U &lt;username&gt; -d &lt;database_name&gt; &gt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Actualizar BunkerWeb:</p> <ul> <li> <p>Actualiza BunkerWeb a la \u00faltima versi\u00f3n.</p> DockerLinux <ol> <li> <p>Actualiza el archivo Docker Compose: Actualiza el archivo Docker Compose para usar la nueva versi\u00f3n de la imagen de BunkerWeb.     <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:testing\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:testing\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:testing\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:testing\n        ...\n</code></pre></p> </li> <li> <p>Reinicia los contenedores: Reinicia los contenedores para aplicar los cambios.     <pre><code>docker compose down\ndocker compose up -d\n</code></pre></p> </li> </ol> <ol> <li> <p>Det\u00e9n los servicios:     <pre><code>sudo systemctl stop bunkerweb\nsudo systemctl stop bunkerweb-ui\nsudo systemctl stop bunkerweb-scheduler\n</code></pre></p> </li> <li> <p>Actualiza BunkerWeb:</p> Debian/UbuntuFedora/RedHat <p>Primero, si has mantenido previamente el paquete de BunkerWeb, desm\u00e1rcalo:</p> <p>Puedes imprimir una lista de paquetes mantenidos con <code>apt-mark showhold</code></p> <pre><code>sudo apt-mark unhold bunkerweb nginx\n</code></pre> <p>Luego, puedes actualizar el paquete de BunkerWeb:</p> <pre><code>sudo apt update &amp;&amp; \\\nsudo apt install -y --allow-downgrades bunkerweb=testing\n</code></pre> <p>Para evitar que el paquete de BunkerWeb se actualice al ejecutar <code>apt upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo apt-mark hold bunkerweb nginx\n</code></pre> <p>M\u00e1s detalles en la p\u00e1gina de integraci\u00f3n con Linux.</p> <p>Primero, si has mantenido previamente el paquete de BunkerWeb, desm\u00e1rcalo:</p> <p>Puedes imprimir una lista de paquetes mantenidos con <code>dnf versionlock list</code></p> <pre><code>sudo dnf versionlock delete package bunkerweb &amp;&amp; \\\nsudo dnf versionlock delete package nginx\n</code></pre> <p>Luego, puedes actualizar el paquete de BunkerWeb:</p> <pre><code>sudo dnf makecache &amp;&amp; \\\nsudo dnf install -y --allowerasing bunkerweb-testing\n</code></pre> <p>Para evitar que el paquete de BunkerWeb se actualice al ejecutar <code>dnf upgrade</code>, puedes usar el siguiente comando:</p> <pre><code>sudo dnf versionlock add bunkerweb &amp;&amp; \\\nsudo dnf versionlock add nginx\n</code></pre> <p>M\u00e1s detalles en la p\u00e1gina de integraci\u00f3n con Linux.</p> </li> <li> <p>Inicia los servicios:         <pre><code>sudo systemctl start bunkerweb\nsudo systemctl start bunkerweb-ui\nsudo systemctl start bunkerweb-scheduler\n</code></pre>         O reinicia el sistema:         <pre><code>sudo reboot\n</code></pre></p> </li> </ol> </li> </ul> </li> <li> <p>Revisa los registros: Revisa los registros del servicio del programador para asegurarte de que la migraci\u00f3n fue exitosa.</p> DockerLinux <pre><code>docker compose logs &lt;scheduler_container&gt;\n</code></pre> <pre><code>journalctl -u bunkerweb --no-pager\n</code></pre> </li> <li> <p>Verifica la base de datos: Verifica que la actualizaci\u00f3n de la base de datos fue exitosa revisando los datos y las configuraciones en el nuevo contenedor de la base de datos.</p> </li> </ol>"},{"location":"es/upgrading/#reversion_1","title":"Reversi\u00f3n","text":"<p>En caso de problemas</p> <p>Si encuentras alg\u00fan problema durante la actualizaci\u00f3n, puedes volver a la versi\u00f3n anterior de la base de datos restaurando la copia de seguridad tomada en el paso 1.</p> <p>Obt\u00e9n soporte y m\u00e1s informaci\u00f3n:</p> <ul> <li>Solicitar soporte profesional</li> <li>Crear un issue en GitHub</li> <li>Unirse al servidor de Discord de BunkerWeb</li> </ul> DockerLinux <ol> <li> <p>Extrae la copia de seguridad si est\u00e1 comprimida.</p> <p>Primero extrae el archivo zip de la copia de seguridad:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> SQLiteMySQL/MariaDBPostgreSQL <ol> <li> <p>Elimina el archivo de la base de datos existente.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; rm -f /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> <pre><code>docker exec -i &lt;scheduler_container&gt; sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Corrige los permisos.</p> <pre><code>docker exec -u 0 -i &lt;scheduler_container&gt; chown root:nginx /var/lib/bunkerweb/db.sqlite3\ndocker exec -u 0 -i &lt;scheduler_container&gt; chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> </li> <li> <p>Det\u00e9n la pila.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Restaura la copia de seguridad.</p> <pre><code>docker exec -e MYSQL_PWD=&lt;your_password&gt; -i &lt;database_container&gt; mysql -u &lt;username&gt; &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Det\u00e9n la pila.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> <ol> <li> <p>Elimina la base de datos existente.</p> <pre><code>docker exec -i &lt;database_container&gt; dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Vuelve a crear la base de datos.</p> <pre><code>docker exec -i &lt;database_container&gt; createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> <pre><code>docker exec -i &lt;database_container&gt; psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> <li> <p>Det\u00e9n la pila.</p> <pre><code>docker compose down\n</code></pre> </li> </ol> </li> <li> <p>Retrocede la versi\u00f3n de BunkerWeb.</p> <pre><code>services:\n    bunkerweb:\n        image: bunkerity/bunkerweb:&lt;old_version&gt;\n        ...\n    bw-scheduler:\n        image: bunkerity/bunkerweb-scheduler:&lt;old_version&gt;\n        ...\n    bw-autoconf:\n        image: bunkerity/bunkerweb-autoconf:&lt;old_version&gt;\n        ...\n    bw-ui:\n        image: bunkerity/bunkerweb-ui:&lt;old_version&gt;\n        ...\n</code></pre> </li> <li> <p>Inicia los contenedores.</p> <pre><code>docker compose up -d\n</code></pre> </li> </ol> <ol> <li> <p>Extrae la copia de seguridad si est\u00e1 comprimida.</p> <p>Primero extrae el archivo zip de la copia de seguridad:</p> <pre><code>unzip /path/to/backup/directory/backup.zip -d /path/to/backup/directory/\n</code></pre> </li> <li> <p>Det\u00e9n los servicios.</p> <pre><code>sudo systemctl stop bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> SQLiteMySQL/MariaDBPostgreSQL <pre><code>sudo rm -f /var/lib/bunkerweb/db.sqlite3\nsudo sqlite3 /var/lib/bunkerweb/db.sqlite3 &lt; /path/to/backup/directory/backup.sql\nsudo chown root:nginx /var/lib/bunkerweb/db.sqlite3\nsudo chmod 770 /var/lib/bunkerweb/db.sqlite3\n</code></pre> <pre><code>mysql -u &lt;username&gt; -p &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> <ol> <li> <p>Elimina la base de datos existente.</p> <pre><code>dropdb -U &lt;username&gt; --force &lt;database_name&gt;\n</code></pre> </li> <li> <p>Vuelve a crear la base de datos.</p> <pre><code>createdb -U &lt;username&gt; &lt;database_name&gt;\n</code></pre> </li> <li> <p>Restaura la copia de seguridad.</p> <pre><code>psql -U &lt;username&gt; -d &lt;database_name&gt; &lt; /path/to/backup/directory/backup.sql\n</code></pre> </li> </ol> </li> <li> <p>Inicia los servicios.</p> <pre><code>sudo systemctl start bunkerweb bunkerweb-ui bunkerweb-scheduler\n</code></pre> </li> <li> <p>Retrocede la versi\u00f3n de BunkerWeb.</p> <ul> <li>Retrocede BunkerWeb a la versi\u00f3n anterior siguiendo los mismos pasos que al actualizar BunkerWeb en la p\u00e1gina de integraci\u00f3n con Linux</li> </ul> </li> </ol>"},{"location":"es/web-ui/","title":"Interfaz de usuario web","text":""},{"location":"es/web-ui/#descripcion-general","title":"Descripci\u00f3n general","text":"<p>La \"Interfaz de usuario web\" es una aplicaci\u00f3n web que te ayuda a gestionar tu instancia de BunkerWeb utilizando una interfaz f\u00e1cil de usar en lugar de depender \u00fanicamente de la l\u00ednea de comandos.</p> <p>Aqu\u00ed tienes una lista de las caracter\u00edsticas que ofrece la interfaz de usuario web:</p> <ul> <li>Obt\u00e9n una vista completa de los ataques bloqueados</li> <li>Inicia, det\u00e9n, reinicia y recarga tu instancia de BunkerWeb</li> <li>A\u00f1ade, edita y elimina configuraciones para tus aplicaciones web</li> <li>A\u00f1ade, edita y elimina configuraciones personalizadas para NGINX y ModSecurity</li> <li>Instala y desinstala plugins externos</li> <li>Explora los archivos en cach\u00e9</li> <li>Supervisa la ejecuci\u00f3n de los trabajos y rein\u00edcialos seg\u00fan sea necesario</li> <li>Visualiza los registros y busca patrones</li> </ul>"},{"location":"es/web-ui/#requisitos-previos","title":"Requisitos previos","text":"<p>Dado que la interfaz de usuario web es una aplicaci\u00f3n web, la arquitectura recomendada es ejecutar BunkerWeb delante de ella como un proxy inverso. El procedimiento de instalaci\u00f3n recomendado es utilizar el asistente de configuraci\u00f3n, que te guiar\u00e1 paso a paso como se describe en la gu\u00eda de inicio r\u00e1pido.</p> <p>Consideraciones de seguridad</p> <p>La seguridad de la interfaz de usuario web es extremadamente importante. Si una persona no autorizada obtiene acceso a la aplicaci\u00f3n, no solo podr\u00e1 editar tus configuraciones, sino que tambi\u00e9n podr\u00eda ejecutar c\u00f3digo en el contexto de BunkerWeb (por ejemplo, a trav\u00e9s de una configuraci\u00f3n personalizada que contenga c\u00f3digo LUA). Te recomendamos encarecidamente que sigas las mejores pr\u00e1cticas de seguridad m\u00ednimas, como:</p> <ul> <li>Elige una contrase\u00f1a segura para el inicio de sesi\u00f3n (al menos 8 caracteres, incluyendo 1 letra min\u00fascula, 1 letra may\u00fascula, 1 d\u00edgito y 1 car\u00e1cter especial)</li> <li>Coloca la interfaz de usuario web bajo una URI \"dif\u00edcil de adivinar\"</li> <li>Habilita la autenticaci\u00f3n de dos factores (2FA)</li> <li>No expongas la interfaz de usuario web a Internet sin restricciones adicionales</li> <li>Aplica las mejores pr\u00e1cticas enumeradas en la secci\u00f3n de usos avanzados de la documentaci\u00f3n seg\u00fan tu caso de uso</li> </ul>"},{"location":"es/web-ui/#actualizar-a-pro","title":"Actualizar a PRO","text":"<p>Prueba gratuita de BunkerWeb PRO</p> <p>\u00bfQuieres probar r\u00e1pidamente BunkerWeb PRO durante un mes? Usa el c\u00f3digo <code>freetrial</code> al realizar tu pedido en el panel de BunkerWeb o haciendo clic aqu\u00ed para aplicar directamente el c\u00f3digo de promoci\u00f3n (se har\u00e1 efectivo al finalizar la compra).</p> <p>Una vez que tengas tu clave de licencia PRO del panel de BunkerWeb, puedes pegarla en la p\u00e1gina PRO de la interfaz de usuario web.</p> <p> </p> Actualizar a PRO desde la interfaz de usuario web <p>Tiempo de actualizaci\u00f3n</p> <p>La versi\u00f3n PRO se descarga en segundo plano por el programador, puede tardar un tiempo en actualizarse.</p> <p>Cuando tu instancia de BunkerWeb se haya actualizado a la versi\u00f3n PRO, ver\u00e1s la fecha de caducidad de tu licencia y el n\u00famero m\u00e1ximo de servicios que puedes proteger.</p> <p> </p> Informaci\u00f3n de la licencia PRO"},{"location":"es/web-ui/#acceso-a-los-registros","title":"Acceso a los registros","text":"<p>A partir de la versi\u00f3n <code>1.6</code>, el m\u00e9todo de acceso a los registros ha cambiado. Esta actualizaci\u00f3n afecta espec\u00edficamente a las integraciones basadas en contenedores: la interfaz de usuario web ahora leer\u00e1 los archivos de registro del directorio <code>/var/log/bunkerweb</code>.</p> <p>Para mantener los registros accesibles desde la interfaz de usuario web, te recomendamos que utilices un servidor de syslog, como <code>syslog-ng</code>, para leer los registros y crear los archivos correspondientes en el directorio <code>/var/log/bunkerweb</code>.</p> <p>Uso de una carpeta local para los registros</p> <p>La interfaz de usuario web se ejecuta como un usuario sin privilegios con UID 101 y GID 101 dentro del contenedor por razones de seguridad: en caso de que se explote una vulnerabilidad, el atacante no tendr\u00e1 privilegios completos de root (UID/GID 0).</p> <p>Sin embargo, hay una desventaja: si utilizas una carpeta local para los registros, debes establecer los permisos correctos para que el usuario sin privilegios pueda leer los archivos de registro. Por ejemplo:</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nchown root:101 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>Alternativamente, si la carpeta ya existe:</p> <pre><code>chown -R root:101 bw-logs &amp;&amp; \\\nchmod -R 770 bw-logs\n</code></pre> <p>Si est\u00e1s utilizando Docker en modo sin ra\u00edz o podman, los UID y GID en el contenedor se mapear\u00e1n a diferentes en el host. Primero necesitar\u00e1s verificar tu subuid y subgid iniciales:</p> <pre><code>grep ^$(whoami): /etc/subuid &amp;&amp; \\\ngrep ^$(whoami): /etc/subgid\n</code></pre> <p>Por ejemplo, si tienes un valor de 100000, el UID/GID mapeado ser\u00e1 100100 (100000 + 100):</p> <pre><code>mkdir bw-logs &amp;&amp; \\\nsudo chgrp 100100 bw-logs &amp;&amp; \\\nchmod 770 bw-logs\n</code></pre> <p>O si la carpeta ya existe:</p> <pre><code>sudo chgrp -R 100100 bw-logs &amp;&amp; \\\nsudo chmod -R 770 bw-logs\n</code></pre>"},{"location":"es/web-ui/#plantillas-de-compose","title":"Plantillas de Compose","text":"DockerDocker Autoconf <p>Para reenviar los registros correctamente al directorio <code>/var/log/bunkerweb</code> en la integraci\u00f3n de Docker, necesitar\u00e1s transmitir los registros a un archivo usando <code>syslog-ng</code>. Aqu\u00ed hay un ejemplo de c\u00f3mo hacerlo:</p> <pre><code>x-bw-env: &amp;bw-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n  # Token de API opcional al asegurar el acceso a la API\n  API_TOKEN: \"\"\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      &lt;&lt;: *bw-env\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Aseg\u00farate de establecer el nombre de instancia correcto\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # C\u00e1mbialo a una URI dif\u00edcil de adivinar\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\"\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para el usuario administrador\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Este es el volumen utilizado para almacenar los registros\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Enlazar a puertos bajos\n      - NET_BROADCAST  # Enviar broadcasts\n      - NET_RAW  # Usar sockets raw\n      - DAC_READ_SEARCH  # Leer archivos omitiendo permisos\n      - DAC_OVERRIDE  # Omitir permisos de archivo\n      - CHOWN  # Cambiar propietario\n      - SYSLOG  # Escribir en los registros del sistema\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Este es el volumen utilizado para almacenar los registros\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # Este es el archivo de configuraci\u00f3n de syslog-ng\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Aseg\u00farate de establecer la direcci\u00f3n IP correcta\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>Para reenviar los registros correctamente al directorio <code>/var/log/bunkerweb</code> en la integraci\u00f3n de Autoconf, necesitar\u00e1s transmitir los registros a un archivo usando <code>syslog-ng</code>. Aqu\u00ed hay un ejemplo de c\u00f3mo hacerlo:</p> <pre><code>x-ui-env: &amp;bw-ui-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # QUIC\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-services\n    logging:\n      driver: syslog\n      options:\n        tag: \"bunkerweb\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      BUNKERWEB_INSTANCES: \"\" # No necesitamos especificar la instancia de BunkerWeb aqu\u00ed, ya que son detectadas autom\u00e1ticamente por el servicio de autoconfiguraci\u00f3n\n      SERVER_NAME: \"\" # El nombre del servidor se rellenar\u00e1 con las etiquetas de los servicios\n      MULTISITE: \"yes\" # Configuraci\u00f3n obligatoria para autoconfiguraci\u00f3n / ui\n      API_WHITELIST_IP: \"127.0.0.0/24 10.20.30.0/24\"\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-scheduler\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bunkerweb\n      - bw-docker\n    environment:\n      &lt;&lt;: *bw-ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\" # Esta es la direcci\u00f3n del socket de Docker\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-autoconf\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *bw-ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para el usuario administrador\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    volumes:\n      - bw-logs:/var/log/bunkerweb\n    restart: \"unless-stopped\"\n    networks:\n      - bw-universe\n      - bw-db\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\" # C\u00e1mbialo a una URI dif\u00edcil de adivinar\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    logging:\n      driver: syslog\n      options:\n        tag: \"bw-ui\" # Esta ser\u00e1 la etiqueta utilizada por syslog-ng para crear el archivo de registro\n        syslog-address: \"udp://10.20.30.254:514\" # Esta es la direcci\u00f3n del contenedor de syslog-ng\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    restart: \"unless-stopped\"\n    networks:\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    restart: \"unless-stopped\"\n    networks:\n      - bw-docker\n\n  bw-syslog:\n    image: balabit/syslog-ng:4.9.0\n    cap_add:\n      - NET_BIND_SERVICE  # Enlazar a puertos bajos\n      - NET_BROADCAST  # Enviar broadcasts\n      - NET_RAW  # Usar sockets raw\n      - DAC_READ_SEARCH  # Leer archivos omitiendo permisos\n      - DAC_OVERRIDE  # Omitir permisos de archivo\n      - CHOWN  # Cambiar propietario\n      - SYSLOG  # Escribir en los registros del sistema\n    volumes:\n      - bw-logs:/var/log/bunkerweb # Este es el volumen utilizado para almacenar los registros\n      - ./syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf # Este es el archivo de configuraci\u00f3n de syslog-ng\n    networks:\n      bw-universe:\n        ipv4_address: 10.20.30.254 # Aseg\u00farate de establecer la direcci\u00f3n IP correcta\n\nvolumes:\n  bw-data:\n  bw-storage:\n  bw-logs:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n  bw-docker:\n    name: bw-docker\n</code></pre>"},{"location":"es/web-ui/#configuracion-de-syslog-ng","title":"Configuraci\u00f3n de Syslog-ng","text":"<p>Aqu\u00ed hay un ejemplo de un archivo <code>syslog-ng.conf</code> que puedes usar para reenviar los registros a un archivo:</p> <pre><code>@version: 4.8\n\n# Configuraci\u00f3n de origen para recibir registros de contenedores de Docker\nsource s_net {\n  udp(\n    ip(\"0.0.0.0\")\n  );\n};\n\n# Plantilla para formatear mensajes de registro\ntemplate t_imp {\n  template(\"$MSG\\n\");\n  template_escape(no);\n};\n\n# Configuraci\u00f3n de destino para escribir registros en archivos con nombres din\u00e1micos\ndestination d_dyna_file {\n  file(\n    \"/var/log/bunkerweb/${PROGRAM}.log\"\n    template(t_imp)\n    owner(\"101\")\n    group(\"101\")\n    dir_owner(\"root\")\n    dir_group(\"101\")\n    perm(0440)\n    dir_perm(0770)\n    create_dirs(yes)\n  );\n};\n\n# Ruta de registro para dirigir los registros a archivos con nombres din\u00e1micos\nlog {\n  source(s_net);\n  destination(d_dyna_file);\n};\n</code></pre>"},{"location":"es/web-ui/#gestion-de-la-cuenta","title":"Gesti\u00f3n de la cuenta","text":"<p>Puedes acceder a la p\u00e1gina de gesti\u00f3n de la cuenta haciendo clic en la imagen de perfil en la esquina superior derecha:</p> <p> </p> Acceso a la p\u00e1gina de la cuenta desde la esquina superior derecha"},{"location":"es/web-ui/#nombre-de-usuario-contrasena","title":"Nombre de usuario / Contrase\u00f1a","text":"<p>Contrase\u00f1a/nombre de usuario perdido</p> <p>En caso de que hayas olvidado tus credenciales de la interfaz de usuario, puedes restablecerlas desde la CLI siguiendo los pasos descritos en la secci\u00f3n de soluci\u00f3n de problemas.</p> <p>Puedes actualizar tu nombre de usuario o contrase\u00f1a rellenando los formularios dedicados en la pesta\u00f1a Seguridad. Por razones de seguridad, debes introducir tu contrase\u00f1a actual incluso si est\u00e1s conectado.</p> <p>Ten en cuenta que cuando tu nombre de usuario o contrase\u00f1a se actualice, se cerrar\u00e1 la sesi\u00f3n de la interfaz de usuario web para que vuelvas a iniciarla.</p> <p> </p> Formulario de nombre de usuario / contrase\u00f1a"},{"location":"es/web-ui/#autenticacion-de-dos-factores","title":"Autenticaci\u00f3n de dos factores","text":"<p>Claves de cifrado obligatorias</p> <p>Al habilitar la 2FA, debes proporcionar al menos una clave de cifrado. Esta clave se utilizar\u00e1 para cifrar tus secretos TOTP.</p> <p>La forma recomendada de generar una clave v\u00e1lida es usar el paquete <code>passlib</code>:</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> <p>Establece la clave generada en la variable de entorno <code>TOTP_ENCRYPTION_KEYS</code> de la interfaz de usuario web. Tambi\u00e9n puedes establecer varias claves separadas por espacios o como un diccionario (por compatibilidad con versiones anteriores).</p> <p>Clave secreta perdida</p> <p>En caso de que hayas perdido tu clave secreta, hay dos opciones disponibles:</p> <ul> <li>Puedes recuperar tu cuenta usando uno de los c\u00f3digos de recuperaci\u00f3n proporcionados cuando habilitaste la 2FA (un c\u00f3digo de recuperaci\u00f3n solo se puede usar una vez).</li> <li>Puedes deshabilitar la 2FA desde la CLI siguiendo los pasos descritos en la secci\u00f3n de soluci\u00f3n de problemas.</li> </ul> <p>Puedes potenciar la seguridad de tu inicio de sesi\u00f3n a\u00f1adiendo la Autenticaci\u00f3n de Dos Factores (2FA) a tu cuenta. Al hacerlo, se necesitar\u00e1 un c\u00f3digo extra adem\u00e1s de tu contrase\u00f1a.</p> <p>La interfaz de usuario web utiliza la Contrase\u00f1a de un Solo Uso Basada en el Tiempo (TOTP) como implementaci\u00f3n de 2FA: usando una clave secreta, el algoritmo generar\u00e1 contrase\u00f1as de un solo uso solo v\u00e1lidas por un corto per\u00edodo de tiempo.</p> <p>Cualquier cliente TOTP como Google Authenticator, Authy, FreeOTP, ... puede ser utilizado para almacenar la clave secreta y generar los c\u00f3digos. Ten en cuenta que una vez que se habilita TOTP, no podr\u00e1s recuperarla desde la interfaz de usuario web.</p> <p>Los siguientes pasos son necesarios para habilitar la funci\u00f3n TOTP desde la interfaz de usuario web:</p> <ul> <li>Copia la clave secreta o usa el c\u00f3digo QR en tu aplicaci\u00f3n de autenticaci\u00f3n</li> <li>Introduce el c\u00f3digo TOTP actual en la entrada de 2FA</li> <li>Introduce tu contrase\u00f1a actual</li> </ul> <p>Actualizaci\u00f3n de la clave secreta</p> <p>Se genera una nueva clave secreta cada vez que visitas la p\u00e1gina o env\u00edas el formulario. En caso de que algo haya salido mal (p. ej.: c\u00f3digo TOTP caducado), necesitar\u00e1s copiar la nueva clave secreta en tu aplicaci\u00f3n de autenticaci\u00f3n hasta que la 2FA se habilite con \u00e9xito.</p> <p>C\u00f3digos de recuperaci\u00f3n</p> <p>Cuando habilites la 2FA, se te proporcionar\u00e1n 5 c\u00f3digos de recuperaci\u00f3n. Estos c\u00f3digos se pueden utilizar para recuperar tu cuenta en caso de que hayas perdido tu clave secreta TOTP. Cada c\u00f3digo solo se puede usar una vez. Estos c\u00f3digos solo se mostrar\u00e1n una vez, as\u00ed que aseg\u00farate de guardarlos en un lugar seguro.</p> <p>Si alguna vez pierdes tus c\u00f3digos de recuperaci\u00f3n, puedes actualizarlos a trav\u00e9s de la secci\u00f3n TOTP de la p\u00e1gina de gesti\u00f3n de la cuenta. Ten en cuenta que los antiguos c\u00f3digos de recuperaci\u00f3n se invalidar\u00e1n.</p> <p>Puedes habilitar o deshabilitar la 2FA y tambi\u00e9n actualizar los c\u00f3digos de recuperaci\u00f3n en la pesta\u00f1a Seguridad:</p> <p> </p> Formularios para habilitar / deshabilitar / actualizar los c\u00f3digos de recuperaci\u00f3n de TOTP <p>Despu\u00e9s de una combinaci\u00f3n exitosa de inicio de sesi\u00f3n/contrase\u00f1a, se te pedir\u00e1 que introduzcas tu c\u00f3digo TOTP:</p> <p> </p> 2FA en la p\u00e1gina de inicio de sesi\u00f3n"},{"location":"es/web-ui/#sesiones-actuales","title":"Sesiones actuales","text":"<p>En la pesta\u00f1a Sesi\u00f3n, podr\u00e1s listar y revocar las sesiones actuales:</p> <p> </p> Gestionar sesiones"},{"location":"es/web-ui/#instalacion-avanzada","title":"Instalaci\u00f3n avanzada","text":"<p>La interfaz de usuario web se puede desplegar y configurar sin pasar por el proceso del asistente de configuraci\u00f3n: la configuraci\u00f3n se realiza a trav\u00e9s de variables de entorno, que se pueden a\u00f1adir directamente a los contenedores o en el archivo <code>/etc/bunkerweb/ui.env</code> en el caso de una integraci\u00f3n con Linux.</p> <p>Variables de entorno espec\u00edficas de la interfaz de usuario web</p> <p>La interfaz de usuario web utiliza las siguientes variables de entorno:</p> <ul> <li><code>OVERRIDE_ADMIN_CREDS</code>: establ\u00e9celo en <code>yes</code> para habilitar la anulaci\u00f3n incluso si las credenciales de administrador ya est\u00e1n configuradas (el valor predeterminado es <code>no</code>).</li> <li><code>ADMIN_USERNAME</code>: nombre de usuario para acceder a la interfaz de usuario web.</li> <li><code>ADMIN_PASSWORD</code>: contrase\u00f1a para acceder a la interfaz de usuario web.</li> <li><code>FLASK_SECRET</code>: una clave secreta utilizada para cifrar la cookie de sesi\u00f3n (si no se establece, se generar\u00e1 una clave aleatoria).</li> <li><code>TOTP_ENCRYPTION_KEYS</code> (o <code>TOTP_SECRETS</code>): una lista de claves de cifrado TOTP separadas por espacios o un diccionario (p. ej.: <code>{\"1\": \"miclavesecreta\"}</code> o <code>miclavesecreta</code> o <code>miclavesecreta miclavesecreta1</code>). Te recomendamos encarecidamente que establezcas esta variable si quieres usar 2FA, ya que se utilizar\u00e1 para cifrar las claves secretas de TOTP (si no se establece, se generar\u00e1 un n\u00famero aleatorio de claves secretas). Consulta la documentaci\u00f3n de passlib para obtener m\u00e1s informaci\u00f3n.</li> <li><code>UI_LISTEN_ADDR</code> (preferido): la direcci\u00f3n en la que escuchar\u00e1 la interfaz de usuario web (el valor predeterminado es <code>0.0.0.0</code> en im\u00e1genes de Docker y <code>127.0.0.1</code> en instalaciones de Linux). Vuelve a <code>LISTEN_ADDR</code> si no se establece.</li> <li><code>UI_LISTEN_PORT</code> (preferido): el puerto en el que escuchar\u00e1 la interfaz de usuario web (el valor predeterminado es <code>7000</code>). Vuelve a <code>LISTEN_PORT</code> si no se establece.</li> <li><code>MAX_WORKERS</code>: el n\u00famero de trabajadores utilizados por la interfaz de usuario web (el valor predeterminado es el n\u00famero de CPU).</li> <li><code>MAX_THREADS</code>: el n\u00famero de hilos utilizados por la interfaz de usuario web (el valor predeterminado es <code>MAX_WORKERS</code> * 2).</li> <li><code>FORWARDED_ALLOW_IPS</code>: una lista de direcciones IP o redes que se pueden usar en la cabecera <code>X-Forwarded-For</code> (el valor predeterminado es <code>*</code> en im\u00e1genes de Docker y <code>127.0.0.1</code> en instalaciones de Linux).</li> <li><code>CHECK_PRIVATE_IP</code>: establ\u00e9celo en <code>yes</code> para no desconectar a los usuarios que hayan cambiado su direcci\u00f3n IP durante una sesi\u00f3n si est\u00e1n en una red privada (el valor predeterminado es <code>yes</code>). (Las direcciones IP no privadas siempre se comprueban).</li> <li><code>ENABLE_HEALTHCHECK</code>: establ\u00e9celo en <code>yes</code> para habilitar el punto final <code>/healthcheck</code> que devuelve una respuesta JSON simple con informaci\u00f3n de estado (el valor predeterminado es <code>no</code>).</li> </ul> <p>La interfaz de usuario web utilizar\u00e1 estas variables para autenticarte y gestionar la funci\u00f3n 2FA.</p> <p>Generaci\u00f3n de secretos recomendados</p> <p>Para generar una ADMIN_PASSWORD v\u00e1lida, te recomendamos que utilices un gestor de contrase\u00f1as o un generador de contrase\u00f1as.</p> <p>Puedes generar una FLASK_SECRET v\u00e1lida usando el siguiente comando:</p> <pre><code>python3 -c \"import secrets; print(secrets.token_hex(64))\"\n</code></pre> <p>Puedes generar TOTP_ENCRYPTION_KEYS v\u00e1lidas separadas por espacios usando el siguiente comando (necesitar\u00e1s el paquete <code>passlib</code>):</p> <pre><code>python3 -c \"from passlib import totp; print(totp.generate_secret())\"\n</code></pre> LinuxDockerDocker autoconfKubernetesSwarm <p>La instalaci\u00f3n de la interfaz de usuario web utilizando la integraci\u00f3n de Linux es bastante sencilla porque se instala con BunkerWeb.</p> <p>La interfaz de usuario web viene como un servicio systemd llamado <code>bunkerweb-ui</code>, aseg\u00farate de que est\u00e9 habilitado:</p> <pre><code>sudo systemctl enable bunkerweb-ui &amp;&amp; \\\nsudo systemctl status bunkerweb-ui\n</code></pre> <p>Un archivo de entorno dedicado ubicado en <code>/etc/bunkerweb/ui.env</code> se utiliza para configurar la interfaz de usuario web:</p> <pre><code>ADMIN_USERNAME=changeme\nADMIN_PASSWORD=changeme\nTOTP_ENCRYPTION_KEYS=mysecret\n</code></pre> <p>Reemplaza los datos de <code>changeme</code> con tus propios valores.</p> <p>Recuerda establecer una clave secreta m\u00e1s segura para <code>TOTP_ENCRYPTION_KEYS</code>.</p> <p>Cada vez que edites el archivo <code>/etc/bunkerweb/ui.env</code>, necesitar\u00e1s reiniciar el servicio:</p> <pre><code>systemctl restart bunkerweb-ui\n</code></pre> <p>Acceder a la interfaz de usuario web a trav\u00e9s de BunkerWeb es una configuraci\u00f3n de proxy inverso cl\u00e1sica. Ten en cuenta que la interfaz de usuario web est\u00e1 escuchando en el puerto <code>7000</code> y solo en la interfaz de bucle invertido.</p> <p>Aqu\u00ed est\u00e1 la plantilla de <code>/etc/bunkerweb/variables.env</code> que puedes usar:</p> <pre><code>HTTP_PORT=80\nHTTPS_PORT=443\nDNS_RESOLVERS=9.9.9.9 8.8.8.8 8.8.4.4\nAPI_LISTEN_IP=127.0.0.1\nSERVER_NAME=www.example.com\nMULTISITE=yes\nwww.example.com_USE_TEMPLATE=ui\nwww.example.com_USE_REVERSE_PROXY=yes\nwww.example.com_REVERSE_PROXY_URL=/changeme\nwww.example.com_REVERSE_PROXY_HOST=http://127.0.0.1:7000\n</code></pre> <p>No olvides recargar el servicio <code>bunkerweb</code>:</p> <pre><code>systemctl reload bunkerweb\n</code></pre> <p>La interfaz de usuario web se puede desplegar utilizando un contenedor dedicado que est\u00e1 disponible en Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativamente, tambi\u00e9n puedes construirla t\u00fa mismo:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Acceder a la interfaz de usuario web a trav\u00e9s de BunkerWeb es una configuraci\u00f3n de proxy inverso cl\u00e1sica. Te recomendamos que conectes BunkerWeb y la interfaz de usuario web utilizando una red dedicada (como <code>bw-universe</code>, tambi\u00e9n utilizada por el programador) para que no est\u00e9 en la misma red que tus servicios web por razones de seguridad obvias. Ten en cuenta que el contenedor de la interfaz de usuario web est\u00e1 escuchando en el puerto <code>7000</code>.</p> <p>Backend de la base de datos</p> <p>Si quieres otro backend de base de datos que no sea MariaDB, consulta los archivos docker-compose en la carpeta misc/integrations del repositorio.</p> <p>Aqu\u00ed est\u00e1 la plantilla de docker-compose que puedes usar (no olvides editar los datos de <code>changeme</code>):</p> <pre><code>x-ui-env: &amp;ui-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # Para soporte de QUIC / HTTP3\n    environment:\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Aseg\u00farate de establecer el rango de IP correcto para que el programador pueda enviar la configuraci\u00f3n a la instancia\n      API_TOKEN: \"\" # Refleja el API_TOKEN si lo usas\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"bunkerweb\" # Aseg\u00farate de establecer el nombre de instancia correcto\n      SERVER_NAME: \"www.example.com\"\n      MULTISITE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\" # Reflejamos el API_WHITELIST_IP del servicio bunkerweb\n      API_TOKEN: \"\" # Refleja el API_TOKEN si lo usas\n      SERVE_FILES: \"no\"\n      DISABLE_DEFAULT_SERVER: \"yes\"\n      USE_CLIENT_CACHE: \"yes\"\n      USE_GZIP: \"yes\"\n      www.example.com_USE_TEMPLATE: \"ui\"\n      www.example.com_USE_REVERSE_PROXY: \"yes\"\n      www.example.com_REVERSE_PROXY_URL: \"/changeme\" # Recuerda establecer una URI m\u00e1s segura\n      www.example.com_REVERSE_PROXY_HOST: \"http://bw-ui:7000\" # El contenedor de la interfaz de usuario web escucha en el puerto 7000 por defecto\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para el usuario changeme\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-db:\n    name: bw-db\n</code></pre> <p>La interfaz de usuario web se puede desplegar utilizando un contenedor dedicado que est\u00e1 disponible en Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativamente, tambi\u00e9n puedes construirla t\u00fa mismo:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Variables de entorno</p> <p>Por favor, lee la secci\u00f3n de Requisitos previos para ver todas las variables de entorno que puedes establecer para personalizar la interfaz de usuario web.</p> <p>Acceder a la interfaz de usuario web a trav\u00e9s de BunkerWeb es una configuraci\u00f3n de proxy inverso cl\u00e1sica. Te recomendamos que conectes BunkerWeb y la interfaz de usuario web utilizando una red dedicada (como <code>bw-universe</code>, tambi\u00e9n utilizada por el programador y la autoconfiguraci\u00f3n) para que no est\u00e9 en la misma red que tus servicios web por razones de seguridad obvias. Ten en cuenta que el contenedor de la interfaz de usuario web est\u00e1 escuchando en el puerto <code>7000</code>.</p> <p>Backend de la base de datos</p> <p>Si quieres otro backend de base de datos que no sea MariaDB, consulta los archivos docker-compose en la carpeta misc/integrations del repositorio.</p> <p>Aqu\u00ed est\u00e1 la plantilla de docker-compose que puedes usar (no olvides editar los datos de <code>changeme</code>):</p> <pre><code>x-ui-env: &amp;ui-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  AUTOCONF_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - \"80:8080/tcp\"\n      - \"443:8443/tcp\"\n      - \"443:8443/udp\" # Para soporte de QUIC / HTTP3\n    labels:\n      - \"bunkerweb.INSTANCE=yes\" # Establecemos la etiqueta de la instancia para permitir que la autoconfiguraci\u00f3n detecte la instancia\n    environment:\n      AUTOCONF_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    depends_on:\n      - bw-docker\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONTAINERS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para el usuario changeme\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    labels:\n      - \"bunkerweb.SERVER_NAME=www.example.com\"\n      - \"bunkerweb.USE_TEMPLATE=ui\"\n      - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n      - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n      - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n    networks:\n      - bw-universe\n      - bw-db\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    ipam:\n      driver: default\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n  bw-docker:\n    name: bw-docker\n  bw-db:\n    name: bw-db\n</code></pre> <p>La interfaz de usuario web se puede desplegar utilizando un contenedor dedicado que est\u00e1 disponible en Docker Hub y se puede desplegar como un Deployment est\u00e1ndar.</p> <p>Acceder a la interfaz de usuario web a trav\u00e9s de BunkerWeb es una configuraci\u00f3n de proxy inverso cl\u00e1sica. La segmentaci\u00f3n de la red entre la interfaz de usuario web y los servicios web no se cubre en esta documentaci\u00f3n. Ten en cuenta que el contenedor de la interfaz de usuario web est\u00e1 escuchando en el puerto <code>7000</code>.</p> <p>Backend de la base de datos</p> <p>Si quieres otro backend de base de datos que no sea MariaDB, consulta los archivos yaml en la carpeta misc/integrations del repositorio.</p> <p>Aqu\u00ed est\u00e1 la parte correspondiente de tu archivo values.yaml que puedes usar:</p> <pre><code>settings:\n  # Usa un secreto existente llamado bunkerweb y que contenga los siguientes valores:\n  # - admin-username\n  # - admin-password\n  # - flask-secret\n  # - totp-secrets\n  existingSecret: \"secret-bunkerweb\"\nui:\n  wizard: false\n  ingress:\n    enabled: true\n    serverName: \"www.example.com\"\n    serverPath: \"/admin\"\n  overrideAdminCreds: \"yes\"\n</code></pre> <p>Obsoleto</p> <p>La integraci\u00f3n de Swarm est\u00e1 obsoleta y se eliminar\u00e1 en una futura versi\u00f3n. Por favor, considera usar la integraci\u00f3n de Kubernetes en su lugar.</p> <p>Se puede encontrar m\u00e1s informaci\u00f3n en la documentaci\u00f3n de la integraci\u00f3n de Swarm.</p> <p>La interfaz de usuario web se puede desplegar utilizando un contenedor dedicado que est\u00e1 disponible en Docker Hub:</p> <pre><code>docker pull bunkerity/bunkerweb-ui\n</code></pre> <p>Alternativamente, tambi\u00e9n puedes construirla t\u00fa mismo:</p> <pre><code>git clone https://github.com/bunkerity/bunkerweb.git &amp;&amp; \\\ncd bunkerweb &amp;&amp; \\\ndocker build -t my-bunkerweb-ui -f src/ui/Dockerfile .\n</code></pre> <p>Acceder a la interfaz de usuario web a trav\u00e9s de BunkerWeb es una configuraci\u00f3n de proxy inverso cl\u00e1sica. Te recomendamos que conectes BunkerWeb y la interfaz de usuario web utilizando una red dedicada (como <code>bw-universe</code>, tambi\u00e9n utilizada por el programador y la autoconfiguraci\u00f3n) para que no est\u00e9 en la misma red que tus servicios web por razones de seguridad obvias. Ten en cuenta que el contenedor de la interfaz de usuario web est\u00e1 escuchando en el puerto <code>7000</code>.</p> <p>Backend de la base de datos</p> <p>Si quieres otro backend de base de datos que no sea MariaDB, consulta los archivos de la pila en la carpeta misc/integrations del repositorio.</p> <p>Aqu\u00ed est\u00e1 la plantilla de la pila que puedes usar (no olvides editar los datos de <code>changeme</code>):</p> <pre><code>x-ui-env: &amp;ui-env\n  # Anclamos las variables de entorno para evitar la duplicaci\u00f3n\n  SWARM_MODE: \"yes\"\n  DATABASE_URI: \"mariadb+pymysql://bunkerweb:changeme@bw-db:3306/db\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n\nservices:\n  bunkerweb:\n    image: bunkerity/bunkerweb:testing\n    ports:\n      - published: 80\n        target: 8080\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: tcp\n      - published: 443\n        target: 8443\n        mode: host\n        protocol: udp # Para soporte de QUIC / HTTP3\n    environment:\n      SWARM_MODE: \"yes\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n    networks:\n      - bw-universe\n      - bw-services\n    deploy:\n      mode: global\n      placement:\n        constraints:\n          - \"node.role == worker\"\n      labels:\n        - \"bunkerweb.INSTANCE=yes\"\n\n  bw-scheduler:\n    image: bunkerity/bunkerweb-scheduler:testing\n    environment:\n      &lt;&lt;: *ui-env\n      BUNKERWEB_INSTANCES: \"\"\n      SERVER_NAME: \"\"\n      API_WHITELIST_IP: \"127.0.0.0/8 10.20.30.0/24\"\n      MULTISITE: \"yes\"\n      USE_REDIS: \"yes\"\n      REDIS_HOST: \"bw-redis\"\n      UI_HOST: \"http://bw-ui:7000\" # C\u00e1mbialo si es necesario\n    volumes:\n      - bw-storage:/data # Se utiliza para persistir la cach\u00e9 y otros datos como las copias de seguridad\n    networks:\n      - bw-universe\n      - bw-db\n\n  bw-autoconf:\n    image: bunkerity/bunkerweb-autoconf:testing\n    environment:\n      &lt;&lt;: *ui-env\n      DOCKER_HOST: \"tcp://bw-docker:2375\"\n    networks:\n      - bw-universe\n      - bw-docker\n      - bw-db\n\n  bw-docker:\n    image: tecnativa/docker-socket-proxy:nightly\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    environment:\n      CONFIGS: \"1\"\n      CONTAINERS: \"1\"\n      SERVICES: \"1\"\n      SWARM: \"1\"\n      TASKS: \"1\"\n      LOG_LEVEL: \"warning\"\n    networks:\n      - bw-docker\n    deploy:\n      placement:\n        constraints:\n          - \"node.role == manager\"\n\n  bw-db:\n    image: mariadb:11\n    # Establecemos el tama\u00f1o m\u00e1ximo de paquete permitido para evitar problemas con consultas grandes\n    command: --max-allowed-packet=67108864\n    environment:\n      MYSQL_RANDOM_ROOT_PASSWORD: \"yes\"\n      MYSQL_DATABASE: \"db\"\n      MYSQL_USER: \"bunkerweb\"\n      MYSQL_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para la base de datos\n    volumes:\n      - bw-data:/var/lib/mysql\n    networks:\n      - bw-db\n\n  bw-redis:\n    image: redis:7-alpine\n    networks:\n      - bw-universe\n\n  bw-ui:\n    image: bunkerity/bunkerweb-ui:testing\n    environment:\n      &lt;&lt;: *ui-env\n      ADMIN_USERNAME: \"changeme\"\n      ADMIN_PASSWORD: \"changeme\" # Recuerda establecer una contrase\u00f1a m\u00e1s segura para el usuario changeme\n      TOTP_ENCRYPTION_KEYS: \"mysecret\" # Recuerda establecer una clave secreta m\u00e1s segura (consulta la secci\u00f3n de Requisitos previos)\n    networks:\n      - bw-universe\n      - bw-db\n    deploy:\n      labels:\n        - \"bunkerweb.SERVER_NAME=www.example.com\"\n        - \"bunkerweb.USE_TEMPLATE=ui\"\n        - \"bunkerweb.USE_REVERSE_PROXY=yes\"\n        - \"bunkerweb.REVERSE_PROXY_URL=/changeme\"\n        - \"bunkerweb.REVERSE_PROXY_HOST=http://bw-ui:7000\"\n\nvolumes:\n  bw-data:\n  bw-storage:\n\nnetworks:\n  bw-universe:\n    name: bw-universe\n    driver: overlay\n    attachable: true\n    ipam:\n      config:\n        - subnet: 10.20.30.0/24\n  bw-services:\n    name: bw-services\n    driver: overlay\n    attachable: true\n  bw-docker:\n    name: bw-docker\n    driver: overlay\n    attachable: true\n  bw-db:\n    name: bw-db\n    driver: overlay\n    attachable: true\n</code></pre>"},{"location":"es/web-ui/#soporte-de-idiomas-y-localizacion","title":"Soporte de idiomas y localizaci\u00f3n","text":"<p>La interfaz de usuario de BunkerWeb admite varios idiomas. Las traducciones se gestionan en el directorio <code>src/ui/app/static/locales</code>. Actualmente est\u00e1n disponibles los siguientes idiomas:</p> <ul> <li>Ingl\u00e9s (en)</li> <li>Franc\u00e9s (fr)</li> <li>\u00c1rabe (ar)</li> <li>Bengal\u00ed (bn)</li> <li>Espa\u00f1ol (es)</li> <li>Hindi (hi)</li> <li>Portugu\u00e9s (pt)</li> <li>Ruso (ru)</li> <li>Urdu (ur)</li> <li>Chino (zh)</li> <li>Alem\u00e1n (de)</li> <li>Italiano (it)</li> </ul> <p>Consulta el locales/README.md para obtener detalles sobre la procedencia de la traducci\u00f3n y el estado de la revisi\u00f3n.</p>"},{"location":"es/web-ui/#contribuir-con-traducciones","title":"Contribuir con traducciones","text":"<p>\u00a1Agradecemos las contribuciones para mejorar o a\u00f1adir nuevos archivos de localizaci\u00f3n!</p> <p>C\u00f3mo contribuir con una traducci\u00f3n:</p> <ol> <li>Edita el archivo <code>src/ui/app/lang_config.py</code> para a\u00f1adir tu idioma (c\u00f3digo, nombre, bandera, nombre en ingl\u00e9s).</li> <li>Copia <code>en.json</code> como plantilla en <code>src/ui/app/static/locales/</code>, ren\u00f3mbralo con el c\u00f3digo de tu idioma (p. ej., <code>de.json</code> para alem\u00e1n).</li> <li>Traduce los valores de tu nuevo archivo.</li> <li>Actualiza la tabla en <code>locales/README.md</code> para a\u00f1adir tu idioma e indicar qui\u00e9n lo cre\u00f3/revis\u00f3.</li> <li>Env\u00eda una solicitud de extracci\u00f3n.</li> </ol> <p>Para las actualizaciones, edita el archivo correspondiente y actualiza la tabla de procedencia seg\u00fan sea necesario.</p> <p>Consulta el locales/README.md para obtener las directrices completas. Genera una traducci\u00f3n limpia de este archivo</p>"}]}